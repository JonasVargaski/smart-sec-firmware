

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Jul 15 09:03:16 2020

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 1.44
   100                           ; Generated 14/09/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F4550 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataCOMRAM
   135  005C76                     __pidataCOMRAM:
   136                           	opt stack 0
   137                           
   138                           ;initializer for __led
   139  005C76  01                 	db	1
   140                           
   141                           ;initializer for _umid
   142  005C77  64                 	db	100
   143                           
   144                           ;initializer for _f_falta_energia
   145  005C78  01                 	db	1
   146                           
   147                           	psect	idataBANK0
   148  005C79                     __pidataBANK0:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _menu
   152  005C79  0F                 	db	15
   153                           
   154                           ;initializer for _temp
   155  005C7A  63                 	db	99
   156                           
   157                           ;initializer for _t_buzzer_religar
   158  005C7B  01                 	db	1
   159                           
   160                           	psect	idataBANK1
   161  005C2E                     __pidataBANK1:
   162                           	opt stack 0
   163                           
   164                           ;initializer for _wifi_MAC
   165  005C2E  3F                 	db	63
   166  005C2F  00                 	db	0
   167  005C30  00                 	db	0
   168  005C31  00                 	db	0
   169  005C32  00                 	db	0
   170  005C33  00                 	db	0
   171  005C34  00                 	db	0
   172  005C35  00                 	db	0
   173  005C36  00                 	db	0
   174  005C37  00                 	db	0
   175  005C38  00                 	db	0
   176  005C39  00                 	db	0
   177                           
   178                           	psect	mediumconst
   179  00782C                     __pmediumconst:
   180                           	opt stack 0
   181  00782C  00                 	db	0
   182  00782D                     criaCaracteresCGRAM@F3900:
   183                           	opt stack 0
   184  00782D  0E                 	db	14
   185  00782E  11                 	db	17
   186  00782F  11                 	db	17
   187  007830  1F                 	db	31
   188  007831  1B                 	db	27
   189  007832  1B                 	db	27
   190  007833  1F                 	db	31
   191  007834  1F                 	db	31
   192  007835  01                 	db	1
   193  007836  03                 	db	3
   194  007837  07                 	db	7
   195  007838  1D                 	db	29
   196  007839  1D                 	db	29
   197  00783A  07                 	db	7
   198  00783B  03                 	db	3
   199  00783C  01                 	db	1
   200  00783D  04                 	db	4
   201  00783E  04                 	db	4
   202  00783F  0E                 	db	14
   203  007840  0E                 	db	14
   204  007841  1F                 	db	31
   205  007842  1D                 	db	29
   206  007843  1B                 	db	27
   207  007844  0E                 	db	14
   208  007845  04                 	db	4
   209  007846  0A                 	db	10
   210  007847  0A                 	db	10
   211  007848  0A                 	db	10
   212  007849  0E                 	db	14
   213  00784A  1F                 	db	31
   214  00784B  1F                 	db	31
   215  00784C  0E                 	db	14
   216  00784D  00                 	db	0
   217  00784E  0E                 	db	14
   218  00784F  11                 	db	17
   219  007850  04                 	db	4
   220  007851  0A                 	db	10
   221  007852  00                 	db	0
   222  007853  04                 	db	4
   223  007854  00                 	db	0
   224  007855  00                 	db	0
   225  007856  00                 	db	0
   226  007857  00                 	db	0
   227  007858  00                 	db	0
   228  007859  00                 	db	0
   229  00785A  00                 	db	0
   230  00785B  00                 	db	0
   231  00785C  00                 	db	0
   232  00785D  00                 	db	0
   233  00785E  00                 	db	0
   234  00785F  00                 	db	0
   235  007860  00                 	db	0
   236  007861  00                 	db	0
   237  007862  00                 	db	0
   238  007863  00                 	db	0
   239  007864  00                 	db	0
   240  007865                     __end_ofcriaCaracteresCGRAM@F3900:
   241                           	opt stack 0
   242  007865                     _dpowers:
   243                           	opt stack 0
   244  007865  0001               	dw	1
   245  007867  000A               	dw	10
   246  007869  0064               	dw	100
   247  00786B  03E8               	dw	1000
   248  00786D  2710               	dw	10000
   249  00786F                     __end_of_dpowers:
   250                           	opt stack 0
   251  0000                     _SSPBUF	set	4041
   252  0000                     _SSPSTAT	set	4039
   253  0000                     _SSPADD	set	4040
   254  0000                     _SSPCON2	set	4037
   255  0000                     _SSPCON1	set	4038
   256  0000                     _ADCON2	set	4032
   257  0000                     _ADCON1	set	4033
   258  0000                     _INTCON	set	4082
   259  0000                     _T0CON	set	4053
   260  0000                     _INTCON3bits	set	4080
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _TRISBbits	set	3987
   263  0000                     _PORTEbits	set	3972
   264  0000                     _PORTCbits	set	3970
   265  0000                     _PORTAbits	set	3968
   266  0000                     _TRISEbits	set	3990
   267  0000                     _TRISAbits	set	3986
   268  0000                     _RCREG	set	4014
   269  0000                     _TMR0L	set	4054
   270  0000                     _TMR0H	set	4055
   271  0000                     _ADCON0bits	set	4034
   272  0000                     _ADCON0	set	4034
   273  0000                     _ADRESL	set	4035
   274  0000                     _ADRESH	set	4036
   275  0000                     _TXREG	set	4013
   276  0000                     _PIE1bits	set	3997
   277  0000                     _PIR1bits	set	3998
   278  0000                     _INTCONbits	set	4082
   279  0000                     _SPBRG	set	4015
   280  0000                     _RCSTAbits	set	4011
   281  0000                     _TXSTAbits	set	4012
   282  0000                     _TRISCbits	set	3988
   283  0000                     _LATDbits	set	3980
   284  0000                     _LATEbits	set	3981
   285  0000                     _LATBbits	set	3978
   286  0000                     _LATCbits	set	3979
   287  0000                     _LATAbits	set	3977
   288  0000                     _PORTBbits	set	3969
   289  0000                     _PORTDbits	set	3971
   290  0000                     _TRISDbits	set	3989
   291  0000                     _ACKEN	set	32300
   292  0000                     _ACKDT	set	32301
   293  0000                     _RCEN	set	32299
   294  0000                     _PEN	set	32298
   295  0000                     _RSEN	set	32297
   296  0000                     _SEN	set	32296
   297  0000                     _INT2IF	set	32641
   298  0000                     _RCIF	set	31989
   299  0000                     _TMR0IF	set	32658
   300  0000                     _GO	set	32273
   301  0000                     _ADON	set	32272
   302  00786F                     STR_36:
   303  00786F  3C                 	db	60	;'<'
   304  007870  68                 	db	104	;'h'
   305  007871  74                 	db	116	;'t'
   306  007872  6D                 	db	109	;'m'
   307  007873  6C                 	db	108	;'l'
   308  007874  3E                 	db	62	;'>'
   309  007875  3C                 	db	60	;'<'
   310  007876  73                 	db	115	;'s'
   311  007877  74                 	db	116	;'t'
   312  007878  79                 	db	121	;'y'
   313  007879  6C                 	db	108	;'l'
   314  00787A  65                 	db	101	;'e'
   315  00787B  3E                 	db	62	;'>'
   316  00787C  64                 	db	100	;'d'
   317  00787D  69                 	db	105	;'i'
   318  00787E  76                 	db	118	;'v'
   319  00787F  7B                 	db	123
   320  007880  6D                 	db	109	;'m'
   321  007881  61                 	db	97	;'a'
   322  007882  72                 	db	114	;'r'
   323  007883  67                 	db	103	;'g'
   324  007884  69                 	db	105	;'i'
   325  007885  6E                 	db	110	;'n'
   326  007886  3A                 	db	58	;':'
   327  007887  32                 	db	50	;'2'
   328  007888  35                 	db	53	;'5'
   329  007889  70                 	db	112	;'p'
   330  00788A  78                 	db	120	;'x'
   331  00788B  20                 	db	32
   332  00788C  61                 	db	97	;'a'
   333  00788D  75                 	db	117	;'u'
   334  00788E  74                 	db	116	;'t'
   335  00788F  6F                 	db	111	;'o'
   336  007890  3B                 	db	59	;';'
   337  007891  6D                 	db	109	;'m'
   338  007892  61                 	db	97	;'a'
   339  007893  78                 	db	120	;'x'
   340  007894  2D                 	db	45
   341  007895  77                 	db	119	;'w'
   342  007896  69                 	db	105	;'i'
   343  007897  64                 	db	100	;'d'
   344  007898  74                 	db	116	;'t'
   345  007899  68                 	db	104	;'h'
   346  00789A  3A                 	db	58	;':'
   347  00789B  33                 	db	51	;'3'
   348  00789C  35                 	db	53	;'5'
   349  00789D  30                 	db	48	;'0'
   350  00789E  70                 	db	112	;'p'
   351  00789F  78                 	db	120	;'x'
   352  0078A0  3B                 	db	59	;';'
   353  0078A1  64                 	db	100	;'d'
   354  0078A2  69                 	db	105	;'i'
   355  0078A3  73                 	db	115	;'s'
   356  0078A4  70                 	db	112	;'p'
   357  0078A5  6C                 	db	108	;'l'
   358  0078A6  61                 	db	97	;'a'
   359  0078A7  79                 	db	121	;'y'
   360  0078A8  3A                 	db	58	;':'
   361  0078A9  66                 	db	102	;'f'
   362  0078AA  6C                 	db	108	;'l'
   363  0078AB  65                 	db	101	;'e'
   364  0078AC  78                 	db	120	;'x'
   365  0078AD  3B                 	db	59	;';'
   366  0078AE  66                 	db	102	;'f'
   367  0078AF  6C                 	db	108	;'l'
   368  0078B0  65                 	db	101	;'e'
   369  0078B1  78                 	db	120	;'x'
   370  0078B2  2D                 	db	45
   371  0078B3  64                 	db	100	;'d'
   372  0078B4  69                 	db	105	;'i'
   373  0078B5  72                 	db	114	;'r'
   374  0078B6  65                 	db	101	;'e'
   375  0078B7  63                 	db	99	;'c'
   376  0078B8  74                 	db	116	;'t'
   377  0078B9  69                 	db	105	;'i'
   378  0078BA  6F                 	db	111	;'o'
   379  0078BB  6E                 	db	110	;'n'
   380  0078BC  3A                 	db	58	;':'
   381  0078BD  63                 	db	99	;'c'
   382  0078BE  6F                 	db	111	;'o'
   383  0078BF  6C                 	db	108	;'l'
   384  0078C0  75                 	db	117	;'u'
   385  0078C1  6D                 	db	109	;'m'
   386  0078C2  6E                 	db	110	;'n'
   387  0078C3  3B                 	db	59	;';'
   388  0078C4  7D                 	db	125
   389  0078C5  69                 	db	105	;'i'
   390  0078C6  6E                 	db	110	;'n'
   391  0078C7  70                 	db	112	;'p'
   392  0078C8  75                 	db	117	;'u'
   393  0078C9  74                 	db	116	;'t'
   394  0078CA  2C                 	db	44
   395  0078CB  62                 	db	98	;'b'
   396  0078CC  75                 	db	117	;'u'
   397  0078CD  74                 	db	116	;'t'
   398  0078CE  74                 	db	116	;'t'
   399  0078CF  6F                 	db	111	;'o'
   400  0078D0  6E                 	db	110	;'n'
   401  0078D1  7B                 	db	123
   402  0078D2  70                 	db	112	;'p'
   403  0078D3  61                 	db	97	;'a'
   404  0078D4  64                 	db	100	;'d'
   405  0078D5  64                 	db	100	;'d'
   406  0078D6  69                 	db	105	;'i'
   407  0078D7  6E                 	db	110	;'n'
   408  0078D8  67                 	db	103	;'g'
   409  0078D9  3A                 	db	58	;':'
   410  0078DA  37                 	db	55	;'7'
   411  0078DB  70                 	db	112	;'p'
   412  0078DC  78                 	db	120	;'x'
   413  0078DD  3B                 	db	59	;';'
   414  0078DE  6D                 	db	109	;'m'
   415  0078DF  61                 	db	97	;'a'
   416  0078E0  72                 	db	114	;'r'
   417  0078E1  67                 	db	103	;'g'
   418  0078E2  69                 	db	105	;'i'
   419  0078E3  6E                 	db	110	;'n'
   420  0078E4  2D                 	db	45
   421  0078E5  62                 	db	98	;'b'
   422  0078E6  6F                 	db	111	;'o'
   423  0078E7  74                 	db	116	;'t'
   424  0078E8  74                 	db	116	;'t'
   425  0078E9  6F                 	db	111	;'o'
   426  0078EA  6D                 	db	109	;'m'
   427  0078EB  3A                 	db	58	;':'
   428  0078EC  32                 	db	50	;'2'
   429  0078ED  35                 	db	53	;'5'
   430  0078EE  70                 	db	112	;'p'
   431  0078EF  78                 	db	120	;'x'
   432  0078F0  3B                 	db	59	;';'
   433  0078F1  62                 	db	98	;'b'
   434  0078F2  6F                 	db	111	;'o'
   435  0078F3  72                 	db	114	;'r'
   436  0078F4  64                 	db	100	;'d'
   437  0078F5  65                 	db	101	;'e'
   438  0078F6  72                 	db	114	;'r'
   439  0078F7  3A                 	db	58	;':'
   440  0078F8  31                 	db	49	;'1'
   441  0078F9  70                 	db	112	;'p'
   442  0078FA  78                 	db	120	;'x'
   443  0078FB  20                 	db	32
   444  0078FC  73                 	db	115	;'s'
   445  0078FD  6F                 	db	111	;'o'
   446  0078FE  6C                 	db	108	;'l'
   447  0078FF  69                 	db	105	;'i'
   448  007900  64                 	db	100	;'d'
   449  007901  20                 	db	32
   450  007902  23                 	db	35
   451  007903  38                 	db	56	;'8'
   452  007904  38                 	db	56	;'8'
   453  007905  38                 	db	56	;'8'
   454  007906  3B                 	db	59	;';'
   455  007907  62                 	db	98	;'b'
   456  007908  6F                 	db	111	;'o'
   457  007909  72                 	db	114	;'r'
   458  00790A  64                 	db	100	;'d'
   459  00790B  65                 	db	101	;'e'
   460  00790C  72                 	db	114	;'r'
   461  00790D  2D                 	db	45
   462  00790E  72                 	db	114	;'r'
   463  00790F  61                 	db	97	;'a'
   464  007910  64                 	db	100	;'d'
   465  007911  69                 	db	105	;'i'
   466  007912  75                 	db	117	;'u'
   467  007913  73                 	db	115	;'s'
   468  007914  3A                 	db	58	;':'
   469  007915  33                 	db	51	;'3'
   470  007916  70                 	db	112	;'p'
   471  007917  78                 	db	120	;'x'
   472  007918  3B                 	db	59	;';'
   473  007919  7D                 	db	125
   474  00791A  3C                 	db	60	;'<'
   475  00791B  2F                 	db	47
   476  00791C  73                 	db	115	;'s'
   477  00791D  74                 	db	116	;'t'
   478  00791E  79                 	db	121	;'y'
   479  00791F  6C                 	db	108	;'l'
   480  007920  65                 	db	101	;'e'
   481  007921  3E                 	db	62	;'>'
   482  007922  3C                 	db	60	;'<'
   483  007923  62                 	db	98	;'b'
   484  007924  6F                 	db	111	;'o'
   485  007925  64                 	db	100	;'d'
   486  007926  79                 	db	121	;'y'
   487  007927  3E                 	db	62	;'>'
   488  007928  3C                 	db	60	;'<'
   489  007929  64                 	db	100	;'d'
   490  00792A  69                 	db	105	;'i'
   491  00792B  76                 	db	118	;'v'
   492  00792C  3E                 	db	62	;'>'
   493  00792D  20                 	db	32
   494  00792E  3C                 	db	60	;'<'
   495  00792F  68                 	db	104	;'h'
   496  007930  32                 	db	50	;'2'
   497  007931  3E                 	db	62	;'>'
   498  007932  43                 	db	67	;'C'
   499  007933  6F                 	db	111	;'o'
   500  007934  6E                 	db	110	;'n'
   501  007935  66                 	db	102	;'f'
   502  007936  69                 	db	105	;'i'
   503  007937  67                 	db	103	;'g'
   504  007938  75                 	db	117	;'u'
   505  007939  72                 	db	114	;'r'
   506  00793A  61                 	db	97	;'a'
   507  00793B  E7                 	db	-25
   508  00793C  E3                 	db	-29
   509  00793D  6F                 	db	111	;'o'
   510  00793E  20                 	db	32
   511  00793F  57                 	db	87	;'W'
   512  007940  69                 	db	105	;'i'
   513  007941  66                 	db	102	;'f'
   514  007942  69                 	db	105	;'i'
   515  007943  3C                 	db	60	;'<'
   516  007944  2F                 	db	47
   517  007945  68                 	db	104	;'h'
   518  007946  32                 	db	50	;'2'
   519  007947  3E                 	db	62	;'>'
   520  007948  20                 	db	32
   521  007949  53                 	db	83	;'S'
   522  00794A  53                 	db	83	;'S'
   523  00794B  49                 	db	73	;'I'
   524  00794C  44                 	db	68	;'D'
   525  00794D  3A                 	db	58	;':'
   526  00794E  20                 	db	32
   527  00794F  3C                 	db	60	;'<'
   528  007950  69                 	db	105	;'i'
   529  007951  6E                 	db	110	;'n'
   530  007952  70                 	db	112	;'p'
   531  007953  75                 	db	117	;'u'
   532  007954  74                 	db	116	;'t'
   533  007955  20                 	db	32
   534  007956  69                 	db	105	;'i'
   535  007957  64                 	db	100	;'d'
   536  007958  3D                 	db	61	;'='
   537  007959  27                 	db	39
   538  00795A  73                 	db	115	;'s'
   539  00795B  27                 	db	39
   540  00795C  3E                 	db	62	;'>'
   541  00795D  20                 	db	32
   542  00795E  53                 	db	83	;'S'
   543  00795F  65                 	db	101	;'e'
   544  007960  6E                 	db	110	;'n'
   545  007961  68                 	db	104	;'h'
   546  007962  61                 	db	97	;'a'
   547  007963  3A                 	db	58	;':'
   548  007964  20                 	db	32
   549  007965  3C                 	db	60	;'<'
   550  007966  69                 	db	105	;'i'
   551  007967  6E                 	db	110	;'n'
   552  007968  70                 	db	112	;'p'
   553  007969  75                 	db	117	;'u'
   554  00796A  74                 	db	116	;'t'
   555  00796B  20                 	db	32
   556  00796C  69                 	db	105	;'i'
   557  00796D  64                 	db	100	;'d'
   558  00796E  3D                 	db	61	;'='
   559  00796F  27                 	db	39
   560  007970  70                 	db	112	;'p'
   561  007971  27                 	db	39
   562  007972  3E                 	db	62	;'>'
   563  007973  20                 	db	32
   564  007974  3C                 	db	60	;'<'
   565  007975  62                 	db	98	;'b'
   566  007976  75                 	db	117	;'u'
   567  007977  74                 	db	116	;'t'
   568  007978  74                 	db	116	;'t'
   569  007979  6F                 	db	111	;'o'
   570  00797A  6E                 	db	110	;'n'
   571  00797B  20                 	db	32
   572  00797C  6F                 	db	111	;'o'
   573  00797D  6E                 	db	110	;'n'
   574  00797E  63                 	db	99	;'c'
   575  00797F  6C                 	db	108	;'l'
   576  007980  69                 	db	105	;'i'
   577  007981  63                 	db	99	;'c'
   578  007982  6B                 	db	107	;'k'
   579  007983  3D                 	db	61	;'='
   580  007984  27                 	db	39
   581  007985  73                 	db	115	;'s'
   582  007986  28                 	db	40
   583  007987  29                 	db	41
   584  007988  27                 	db	39
   585  007989  3E                 	db	62	;'>'
   586  00798A  43                 	db	67	;'C'
   587  00798B  6F                 	db	111	;'o'
   588  00798C  6E                 	db	110	;'n'
   589  00798D  66                 	db	102	;'f'
   590  00798E  69                 	db	105	;'i'
   591  00798F  72                 	db	114	;'r'
   592  007990  6D                 	db	109	;'m'
   593  007991  61                 	db	97	;'a'
   594  007992  72                 	db	114	;'r'
   595  007993  3C                 	db	60	;'<'
   596  007994  2F                 	db	47
   597  007995  62                 	db	98	;'b'
   598  007996  75                 	db	117	;'u'
   599  007997  74                 	db	116	;'t'
   600  007998  74                 	db	116	;'t'
   601  007999  6F                 	db	111	;'o'
   602  00799A  6E                 	db	110	;'n'
   603  00799B  3E                 	db	62	;'>'
   604  00799C  20                 	db	32
   605  00799D  53                 	db	83	;'S'
   606  00799E  65                 	db	101	;'e'
   607  00799F  72                 	db	114	;'r'
   608  0079A0  76                 	db	118	;'v'
   609  0079A1  69                 	db	105	;'i'
   610  0079A2  64                 	db	100	;'d'
   611  0079A3  6F                 	db	111	;'o'
   612  0079A4  72                 	db	114	;'r'
   613  0079A5  3A                 	db	58	;':'
   614  0079A6  20                 	db	32
   615  0079A7  3C                 	db	60	;'<'
   616  0079A8  69                 	db	105	;'i'
   617  0079A9  6E                 	db	110	;'n'
   618  0079AA  70                 	db	112	;'p'
   619  0079AB  75                 	db	117	;'u'
   620  0079AC  74                 	db	116	;'t'
   621  0079AD  20                 	db	32
   622  0079AE  69                 	db	105	;'i'
   623  0079AF  64                 	db	100	;'d'
   624  0079B0  3D                 	db	61	;'='
   625  0079B1  27                 	db	39
   626  0079B2  74                 	db	116	;'t'
   627  0079B3  27                 	db	39
   628  0079B4  20                 	db	32
   629  0079B5  76                 	db	118	;'v'
   630  0079B6  61                 	db	97	;'a'
   631  0079B7  6C                 	db	108	;'l'
   632  0079B8  75                 	db	117	;'u'
   633  0079B9  65                 	db	101	;'e'
   634  0079BA  3D                 	db	61	;'='
   635  0079BB  27                 	db	39
   636  0079BC  25                 	db	37
   637  0079BD  73                 	db	115	;'s'
   638  0079BE  3A                 	db	58	;':'
   639  0079BF  25                 	db	37
   640  0079C0  73                 	db	115	;'s'
   641  0079C1  27                 	db	39
   642  0079C2  3E                 	db	62	;'>'
   643  0079C3  3C                 	db	60	;'<'
   644  0079C4  2F                 	db	47
   645  0079C5  64                 	db	100	;'d'
   646  0079C6  69                 	db	105	;'i'
   647  0079C7  76                 	db	118	;'v'
   648  0079C8  3E                 	db	62	;'>'
   649  0079C9  3C                 	db	60	;'<'
   650  0079CA  2F                 	db	47
   651  0079CB  62                 	db	98	;'b'
   652  0079CC  6F                 	db	111	;'o'
   653  0079CD  64                 	db	100	;'d'
   654  0079CE  79                 	db	121	;'y'
   655  0079CF  3E                 	db	62	;'>'
   656  0079D0  3C                 	db	60	;'<'
   657  0079D1  2F                 	db	47
   658  0079D2  68                 	db	104	;'h'
   659  0079D3  74                 	db	116	;'t'
   660  0079D4  6D                 	db	109	;'m'
   661  0079D5  6C                 	db	108	;'l'
   662  0079D6  3E                 	db	62	;'>'
   663  0079D7  3C                 	db	60	;'<'
   664  0079D8  73                 	db	115	;'s'
   665  0079D9  63                 	db	99	;'c'
   666  0079DA  72                 	db	114	;'r'
   667  0079DB  69                 	db	105	;'i'
   668  0079DC  70                 	db	112	;'p'
   669  0079DD  74                 	db	116	;'t'
   670  0079DE  3E                 	db	62	;'>'
   671  0079DF  66                 	db	102	;'f'
   672  0079E0  75                 	db	117	;'u'
   673  0079E1  6E                 	db	110	;'n'
   674  0079E2  63                 	db	99	;'c'
   675  0079E3  74                 	db	116	;'t'
   676  0079E4  69                 	db	105	;'i'
   677  0079E5  6F                 	db	111	;'o'
   678  0079E6  6E                 	db	110	;'n'
   679  0079E7  20                 	db	32
   680  0079E8  73                 	db	115	;'s'
   681  0079E9  28                 	db	40
   682  0079EA  29                 	db	41
   683  0079EB  7B                 	db	123
   684  0079EC  63                 	db	99	;'c'
   685  0079ED  6F                 	db	111	;'o'
   686  0079EE  6E                 	db	110	;'n'
   687  0079EF  73                 	db	115	;'s'
   688  0079F0  74                 	db	116	;'t'
   689  0079F1  20                 	db	32
   690  0079F2  67                 	db	103	;'g'
   691  0079F3  3D                 	db	61	;'='
   692  0079F4  69                 	db	105	;'i'
   693  0079F5  3D                 	db	61	;'='
   694  0079F6  3E                 	db	62	;'>'
   695  0079F7  64                 	db	100	;'d'
   696  0079F8  6F                 	db	111	;'o'
   697  0079F9  63                 	db	99	;'c'
   698  0079FA  75                 	db	117	;'u'
   699  0079FB  6D                 	db	109	;'m'
   700  0079FC  65                 	db	101	;'e'
   701  0079FD  6E                 	db	110	;'n'
   702  0079FE  74                 	db	116	;'t'
   703  0079FF  2E                 	db	46
   704  007A00  71                 	db	113	;'q'
   705  007A01  75                 	db	117	;'u'
   706  007A02  65                 	db	101	;'e'
   707  007A03  72                 	db	114	;'r'
   708  007A04  79                 	db	121	;'y'
   709  007A05  53                 	db	83	;'S'
   710  007A06  65                 	db	101	;'e'
   711  007A07  6C                 	db	108	;'l'
   712  007A08  65                 	db	101	;'e'
   713  007A09  63                 	db	99	;'c'
   714  007A0A  74                 	db	116	;'t'
   715  007A0B  6F                 	db	111	;'o'
   716  007A0C  72                 	db	114	;'r'
   717  007A0D  28                 	db	40
   718  007A0E  27                 	db	39
   719  007A0F  23                 	db	35
   720  007A10  27                 	db	39
   721  007A11  20                 	db	32
   722  007A12  2B                 	db	43
   723  007A13  20                 	db	32
   724  007A14  69                 	db	105	;'i'
   725  007A15  29                 	db	41
   726  007A16  2E                 	db	46
   727  007A17  76                 	db	118	;'v'
   728  007A18  61                 	db	97	;'a'
   729  007A19  6C                 	db	108	;'l'
   730  007A1A  75                 	db	117	;'u'
   731  007A1B  65                 	db	101	;'e'
   732  007A1C  20                 	db	32
   733  007A1D  6C                 	db	108	;'l'
   734  007A1E  65                 	db	101	;'e'
   735  007A1F  74                 	db	116	;'t'
   736  007A20  20                 	db	32
   737  007A21  73                 	db	115	;'s'
   738  007A22  76                 	db	118	;'v'
   739  007A23  3D                 	db	61	;'='
   740  007A24  69                 	db	105	;'i'
   741  007A25  28                 	db	40
   742  007A26  27                 	db	39
   743  007A27  74                 	db	116	;'t'
   744  007A28  27                 	db	39
   745  007A29  29                 	db	41
   746  007A2A  2E                 	db	46
   747  007A2B  73                 	db	115	;'s'
   748  007A2C  70                 	db	112	;'p'
   749  007A2D  6C                 	db	108	;'l'
   750  007A2E  69                 	db	105	;'i'
   751  007A2F  74                 	db	116	;'t'
   752  007A30  28                 	db	40
   753  007A31  27                 	db	39
   754  007A32  3A                 	db	58	;':'
   755  007A33  27                 	db	39
   756  007A34  29                 	db	41
   757  007A35  3B                 	db	59	;';'
   758  007A36  66                 	db	102	;'f'
   759  007A37  65                 	db	101	;'e'
   760  007A38  74                 	db	116	;'t'
   761  007A39  63                 	db	99	;'c'
   762  007A3A  68                 	db	104	;'h'
   763  007A3B  28                 	db	40
   764  007A3C  27                 	db	39
   765  007A3D  2F                 	db	47
   766  007A3E  27                 	db	39
   767  007A3F  2C                 	db	44
   768  007A40  7B                 	db	123
   769  007A41  6D                 	db	109	;'m'
   770  007A42  65                 	db	101	;'e'
   771  007A43  74                 	db	116	;'t'
   772  007A44  68                 	db	104	;'h'
   773  007A45  6F                 	db	111	;'o'
   774  007A46  64                 	db	100	;'d'
   775  007A47  3A                 	db	58	;':'
   776  007A48  27                 	db	39
   777  007A49  70                 	db	112	;'p'
   778  007A4A  6F                 	db	111	;'o'
   779  007A4B  73                 	db	115	;'s'
   780  007A4C  74                 	db	116	;'t'
   781  007A4D  27                 	db	39
   782  007A4E  2C                 	db	44
   783  007A4F  62                 	db	98	;'b'
   784  007A50  6F                 	db	111	;'o'
   785  007A51  64                 	db	100	;'d'
   786  007A52  79                 	db	121	;'y'
   787  007A53  3A                 	db	58	;':'
   788  007A54  4A                 	db	74	;'J'
   789  007A55  53                 	db	83	;'S'
   790  007A56  4F                 	db	79	;'O'
   791  007A57  4E                 	db	78	;'N'
   792  007A58  2E                 	db	46
   793  007A59  73                 	db	115	;'s'
   794  007A5A  74                 	db	116	;'t'
   795  007A5B  72                 	db	114	;'r'
   796  007A5C  69                 	db	105	;'i'
   797  007A5D  6E                 	db	110	;'n'
   798  007A5E  67                 	db	103	;'g'
   799  007A5F  69                 	db	105	;'i'
   800  007A60  66                 	db	102	;'f'
   801  007A61  79                 	db	121	;'y'
   802  007A62  28                 	db	40
   803  007A63  7B                 	db	123
   804  007A64  27                 	db	39
   805  007A65  24                 	db	36
   806  007A66  23                 	db	35
   807  007A67  27                 	db	39
   808  007A68  3A                 	db	58	;':'
   809  007A69  27                 	db	39
   810  007A6A  27                 	db	39
   811  007A6B  2C                 	db	44
   812  007A6C  73                 	db	115	;'s'
   813  007A6D  73                 	db	115	;'s'
   814  007A6E  3A                 	db	58	;':'
   815  007A6F  69                 	db	105	;'i'
   816  007A70  28                 	db	40
   817  007A71  27                 	db	39
   818  007A72  23                 	db	35
   819  007A73  73                 	db	115	;'s'
   820  007A74  27                 	db	39
   821  007A75  29                 	db	41
   822  007A76  2C                 	db	44
   823  007A77  70                 	db	112	;'p'
   824  007A78  77                 	db	119	;'w'
   825  007A79  3A                 	db	58	;':'
   826  007A7A  69                 	db	105	;'i'
   827  007A7B  28                 	db	40
   828  007A7C  27                 	db	39
   829  007A7D  23                 	db	35
   830  007A7E  70                 	db	112	;'p'
   831  007A7F  27                 	db	39
   832  007A80  29                 	db	41
   833  007A81  2C                 	db	44
   834  007A82  73                 	db	115	;'s'
   835  007A83  76                 	db	118	;'v'
   836  007A84  3A                 	db	58	;':'
   837  007A85  5B                 	db	91	;'['
   838  007A86  30                 	db	48	;'0'
   839  007A87  5D                 	db	93	;']'
   840  007A88  2C                 	db	44
   841  007A89  70                 	db	112	;'p'
   842  007A8A  74                 	db	116	;'t'
   843  007A8B  3A                 	db	58	;':'
   844  007A8C  73                 	db	115	;'s'
   845  007A8D  76                 	db	118	;'v'
   846  007A8E  5B                 	db	91	;'['
   847  007A8F  31                 	db	49	;'1'
   848  007A90  5D                 	db	93	;']'
   849  007A91  2C                 	db	44
   850  007A92  27                 	db	39
   851  007A93  27                 	db	39
   852  007A94  3A                 	db	58	;':'
   853  007A95  27                 	db	39
   854  007A96  23                 	db	35
   855  007A97  24                 	db	36
   856  007A98  27                 	db	39
   857  007A99  7D                 	db	125
   858  007A9A  29                 	db	41
   859  007A9B  7D                 	db	125
   860  007A9C  29                 	db	41
   861  007A9D  7D                 	db	125
   862  007A9E  3C                 	db	60	;'<'
   863  007A9F  2F                 	db	47
   864  007AA0  73                 	db	115	;'s'
   865  007AA1  63                 	db	99	;'c'
   866  007AA2  72                 	db	114	;'r'
   867  007AA3  69                 	db	105	;'i'
   868  007AA4  70                 	db	112	;'p'
   869  007AA5  74                 	db	116	;'t'
   870  007AA6  3E                 	db	62	;'>'
   871  007AA7  0D                 	db	13
   872  007AA8  0A                 	db	10
   873  007AA9  0D                 	db	13
   874  007AAA  0A                 	db	10
   875  007AAB  5C                 	db	92	;'\'
   876  007AAC  30                 	db	48	;'0'
   877  007AAD  00                 	db	0
   878  007AAE                     STR_71:
   879  007AAE  47                 	db	71	;'G'
   880  007AAF  45                 	db	69	;'E'
   881  007AB0  54                 	db	84	;'T'
   882  007AB1  20                 	db	32
   883  007AB2  2F                 	db	47
   884  007AB3  64                 	db	100	;'d'
   885  007AB4  65                 	db	101	;'e'
   886  007AB5  76                 	db	118	;'v'
   887  007AB6  69                 	db	105	;'i'
   888  007AB7  63                 	db	99	;'c'
   889  007AB8  65                 	db	101	;'e'
   890  007AB9  2F                 	db	47
   891  007ABA  69                 	db	105	;'i'
   892  007ABB  6E                 	db	110	;'n'
   893  007ABC  74                 	db	116	;'t'
   894  007ABD  65                 	db	101	;'e'
   895  007ABE  67                 	db	103	;'g'
   896  007ABF  72                 	db	114	;'r'
   897  007AC0  61                 	db	97	;'a'
   898  007AC1  74                 	db	116	;'t'
   899  007AC2  69                 	db	105	;'i'
   900  007AC3  6F                 	db	111	;'o'
   901  007AC4  6E                 	db	110	;'n'
   902  007AC5  3F                 	db	63	;'?'
   903  007AC6  69                 	db	105	;'i'
   904  007AC7  3D                 	db	61	;'='
   905  007AC8  25                 	db	37
   906  007AC9  64                 	db	100	;'d'
   907  007ACA  7C                 	db	124
   908  007ACB  25                 	db	37
   909  007ACC  64                 	db	100	;'d'
   910  007ACD  7C                 	db	124
   911  007ACE  25                 	db	37
   912  007ACF  64                 	db	100	;'d'
   913  007AD0  7C                 	db	124
   914  007AD1  25                 	db	37
   915  007AD2  64                 	db	100	;'d'
   916  007AD3  7C                 	db	124
   917  007AD4  25                 	db	37
   918  007AD5  64                 	db	100	;'d'
   919  007AD6  7C                 	db	124
   920  007AD7  25                 	db	37
   921  007AD8  64                 	db	100	;'d'
   922  007AD9  7C                 	db	124
   923  007ADA  25                 	db	37
   924  007ADB  64                 	db	100	;'d'
   925  007ADC  7C                 	db	124
   926  007ADD  25                 	db	37
   927  007ADE  64                 	db	100	;'d'
   928  007ADF  7C                 	db	124
   929  007AE0  25                 	db	37
   930  007AE1  64                 	db	100	;'d'
   931  007AE2  7C                 	db	124
   932  007AE3  25                 	db	37
   933  007AE4  64                 	db	100	;'d'
   934  007AE5  7C                 	db	124
   935  007AE6  25                 	db	37
   936  007AE7  64                 	db	100	;'d'
   937  007AE8  7C                 	db	124
   938  007AE9  25                 	db	37
   939  007AEA  73                 	db	115	;'s'
   940  007AEB  7C                 	db	124
   941  007AEC  25                 	db	37
   942  007AED  64                 	db	100	;'d'
   943  007AEE  7C                 	db	124
   944  007AEF  25                 	db	37
   945  007AF0  73                 	db	115	;'s'
   946  007AF1  7C                 	db	124
   947  007AF2  25                 	db	37
   948  007AF3  64                 	db	100	;'d'
   949  007AF4  26                 	db	38
   950  007AF5  70                 	db	112	;'p'
   951  007AF6  3D                 	db	61	;'='
   952  007AF7  25                 	db	37
   953  007AF8  64                 	db	100	;'d'
   954  007AF9  7C                 	db	124
   955  007AFA  25                 	db	37
   956  007AFB  64                 	db	100	;'d'
   957  007AFC  7C                 	db	124
   958  007AFD  25                 	db	37
   959  007AFE  64                 	db	100	;'d'
   960  007AFF  7C                 	db	124
   961  007B00  25                 	db	37
   962  007B01  64                 	db	100	;'d'
   963  007B02  7C                 	db	124
   964  007B03  25                 	db	37
   965  007B04  64                 	db	100	;'d'
   966  007B05  7C                 	db	124
   967  007B06  25                 	db	37
   968  007B07  64                 	db	100	;'d'
   969  007B08  7C                 	db	124
   970  007B09  25                 	db	37
   971  007B0A  64                 	db	100	;'d'
   972  007B0B  7C                 	db	124
   973  007B0C  25                 	db	37
   974  007B0D  64                 	db	100	;'d'
   975  007B0E  7C                 	db	124
   976  007B0F  25                 	db	37
   977  007B10  64                 	db	100	;'d'
   978  007B11  7C                 	db	124
   979  007B12  25                 	db	37
   980  007B13  64                 	db	100	;'d'
   981  007B14  7C                 	db	124
   982  007B15  25                 	db	37
   983  007B16  64                 	db	100	;'d'
   984  007B17  7C                 	db	124
   985  007B18  25                 	db	37
   986  007B19  64                 	db	100	;'d'
   987  007B1A  7C                 	db	124
   988  007B1B  25                 	db	37
   989  007B1C  64                 	db	100	;'d'
   990  007B1D  7C                 	db	124
   991  007B1E  25                 	db	37
   992  007B1F  64                 	db	100	;'d'
   993  007B20  26                 	db	38
   994  007B21  6B                 	db	107	;'k'
   995  007B22  3D                 	db	61	;'='
   996  007B23  31                 	db	49	;'1'
   997  007B24  7A                 	db	122	;'z'
   998  007B25  34                 	db	52	;'4'
   999  007B26  64                 	db	100	;'d'
  1000  007B27  66                 	db	102	;'f'
  1001  007B28  36                 	db	54	;'6'
  1002  007B29  38                 	db	56	;'8'
  1003  007B2A  69                 	db	105	;'i'
  1004  007B2B  77                 	db	119	;'w'
  1005  007B2C  31                 	db	49	;'1'
  1006  007B2D  66                 	db	102	;'f'
  1007  007B2E  70                 	db	112	;'p'
  1008  007B2F  35                 	db	53	;'5'
  1009  007B30  20                 	db	32
  1010  007B31  48                 	db	72	;'H'
  1011  007B32  54                 	db	84	;'T'
  1012  007B33  54                 	db	84	;'T'
  1013  007B34  50                 	db	80	;'P'
  1014  007B35  2F                 	db	47
  1015  007B36  31                 	db	49	;'1'
  1016  007B37  2E                 	db	46
  1017  007B38  31                 	db	49	;'1'
  1018  007B39  0D                 	db	13
  1019  007B3A  0A                 	db	10
  1020  007B3B  48                 	db	72	;'H'
  1021  007B3C  6F                 	db	111	;'o'
  1022  007B3D  73                 	db	115	;'s'
  1023  007B3E  74                 	db	116	;'t'
  1024  007B3F  3A                 	db	58	;':'
  1025  007B40  20                 	db	32
  1026  007B41  31                 	db	49	;'1'
  1027  007B42  38                 	db	56	;'8'
  1028  007B43  2E                 	db	46
  1029  007B44  32                 	db	50	;'2'
  1030  007B45  32                 	db	50	;'2'
  1031  007B46  38                 	db	56	;'8'
  1032  007B47  2E                 	db	46
  1033  007B48  31                 	db	49	;'1'
  1034  007B49  35                 	db	53	;'5'
  1035  007B4A  34                 	db	52	;'4'
  1036  007B4B  2E                 	db	46
  1037  007B4C  32                 	db	50	;'2'
  1038  007B4D  34                 	db	52	;'4'
  1039  007B4E  38                 	db	56	;'8'
  1040  007B4F  0D                 	db	13
  1041  007B50  0A                 	db	10
  1042  007B51  0D                 	db	13
  1043  007B52  0A                 	db	10
  1044  007B53  5C                 	db	92	;'\'
  1045  007B54  30                 	db	48	;'0'
  1046  007B55  00                 	db	0
  1047  007B56                     STR_35:
  1048  007B56  48                 	db	72	;'H'
  1049  007B57  54                 	db	84	;'T'
  1050  007B58  54                 	db	84	;'T'
  1051  007B59  50                 	db	80	;'P'
  1052  007B5A  20                 	db	32
  1053  007B5B  31                 	db	49	;'1'
  1054  007B5C  2E                 	db	46
  1055  007B5D  31                 	db	49	;'1'
  1056  007B5E  2F                 	db	47
  1057  007B5F  32                 	db	50	;'2'
  1058  007B60  30                 	db	48	;'0'
  1059  007B61  30                 	db	48	;'0'
  1060  007B62  20                 	db	32
  1061  007B63  4F                 	db	79	;'O'
  1062  007B64  4B                 	db	75	;'K'
  1063  007B65  0D                 	db	13
  1064  007B66  0A                 	db	10
  1065  007B67  43                 	db	67	;'C'
  1066  007B68  6F                 	db	111	;'o'
  1067  007B69  6E                 	db	110	;'n'
  1068  007B6A  74                 	db	116	;'t'
  1069  007B6B  65                 	db	101	;'e'
  1070  007B6C  6E                 	db	110	;'n'
  1071  007B6D  74                 	db	116	;'t'
  1072  007B6E  2D                 	db	45
  1073  007B6F  74                 	db	116	;'t'
  1074  007B70  79                 	db	121	;'y'
  1075  007B71  70                 	db	112	;'p'
  1076  007B72  65                 	db	101	;'e'
  1077  007B73  3A                 	db	58	;':'
  1078  007B74  20                 	db	32
  1079  007B75  74                 	db	116	;'t'
  1080  007B76  65                 	db	101	;'e'
  1081  007B77  78                 	db	120	;'x'
  1082  007B78  74                 	db	116	;'t'
  1083  007B79  2F                 	db	47
  1084  007B7A  68                 	db	104	;'h'
  1085  007B7B  74                 	db	116	;'t'
  1086  007B7C  6D                 	db	109	;'m'
  1087  007B7D  6C                 	db	108	;'l'
  1088  007B7E  0D                 	db	13
  1089  007B7F  0A                 	db	10
  1090  007B80  0D                 	db	13
  1091  007B81  0A                 	db	10
  1092  007B82  00                 	db	0
  1093  007B83                     STR_17:
  1094  007B83  41                 	db	65	;'A'
  1095  007B84  54                 	db	84	;'T'
  1096  007B85  2B                 	db	43
  1097  007B86  43                 	db	67	;'C'
  1098  007B87  57                 	db	87	;'W'
  1099  007B88  53                 	db	83	;'S'
  1100  007B89  41                 	db	65	;'A'
  1101  007B8A  50                 	db	80	;'P'
  1102  007B8B  3D                 	db	61	;'='
  1103  007B8C  22                 	db	34
  1104  007B8D  43                 	db	67	;'C'
  1105  007B8E  4F                 	db	79	;'O'
  1106  007B8F  4E                 	db	78	;'N'
  1107  007B90  54                 	db	84	;'T'
  1108  007B91  52                 	db	82	;'R'
  1109  007B92  4F                 	db	79	;'O'
  1110  007B93  4C                 	db	76	;'L'
  1111  007B94  41                 	db	65	;'A'
  1112  007B95  44                 	db	68	;'D'
  1113  007B96  4F                 	db	79	;'O'
  1114  007B97  52                 	db	82	;'R'
  1115  007B98  22                 	db	34
  1116  007B99  2C                 	db	44
  1117  007B9A  22                 	db	34
  1118  007B9B  22                 	db	34
  1119  007B9C  2C                 	db	44
  1120  007B9D  31                 	db	49	;'1'
  1121  007B9E  31                 	db	49	;'1'
  1122  007B9F  2C                 	db	44
  1123  007BA0  30                 	db	48	;'0'
  1124  007BA1  2C                 	db	44
  1125  007BA2  34                 	db	52	;'4'
  1126  007BA3  0D                 	db	13
  1127  007BA4  0A                 	db	10
  1128  007BA5  00                 	db	0
  1129  007BA6                     STR_63:
  1130  007BA6  41                 	db	65	;'A'
  1131  007BA7  54                 	db	84	;'T'
  1132  007BA8  2B                 	db	43
  1133  007BA9  43                 	db	67	;'C'
  1134  007BAA  49                 	db	73	;'I'
  1135  007BAB  50                 	db	80	;'P'
  1136  007BAC  53                 	db	83	;'S'
  1137  007BAD  54                 	db	84	;'T'
  1138  007BAE  41                 	db	65	;'A'
  1139  007BAF  52                 	db	82	;'R'
  1140  007BB0  54                 	db	84	;'T'
  1141  007BB1  3D                 	db	61	;'='
  1142  007BB2  22                 	db	34
  1143  007BB3  54                 	db	84	;'T'
  1144  007BB4  43                 	db	67	;'C'
  1145  007BB5  50                 	db	80	;'P'
  1146  007BB6  22                 	db	34
  1147  007BB7  2C                 	db	44
  1148  007BB8  22                 	db	34
  1149  007BB9  25                 	db	37
  1150  007BBA  73                 	db	115	;'s'
  1151  007BBB  22                 	db	34
  1152  007BBC  2C                 	db	44
  1153  007BBD  25                 	db	37
  1154  007BBE  64                 	db	100	;'d'
  1155  007BBF  0D                 	db	13
  1156  007BC0  0A                 	db	10
  1157  007BC1  00                 	db	0
  1158  007BC2                     STR_20:
  1159  007BC2  41                 	db	65	;'A'
  1160  007BC3  54                 	db	84	;'T'
  1161  007BC4  2B                 	db	43
  1162  007BC5  43                 	db	67	;'C'
  1163  007BC6  49                 	db	73	;'I'
  1164  007BC7  50                 	db	80	;'P'
  1165  007BC8  41                 	db	65	;'A'
  1166  007BC9  50                 	db	80	;'P'
  1167  007BCA  3D                 	db	61	;'='
  1168  007BCB  22                 	db	34
  1169  007BCC  31                 	db	49	;'1'
  1170  007BCD  30                 	db	48	;'0'
  1171  007BCE  2E                 	db	46
  1172  007BCF  31                 	db	49	;'1'
  1173  007BD0  2E                 	db	46
  1174  007BD1  31                 	db	49	;'1'
  1175  007BD2  2E                 	db	46
  1176  007BD3  31                 	db	49	;'1'
  1177  007BD4  22                 	db	34
  1178  007BD5  0D                 	db	13
  1179  007BD6  0A                 	db	10
  1180  007BD7  00                 	db	0
  1181  007BD8                     STR_88:
  1182  007BD8  55                 	db	85	;'U'
  1183  007BD9  4D                 	db	77	;'M'
  1184  007BDA  49                 	db	73	;'I'
  1185  007BDB  44                 	db	68	;'D'
  1186  007BDC  20                 	db	32
  1187  007BDD  20                 	db	32
  1188  007BDE  7C                 	db	124
  1189  007BDF  20                 	db	32
  1190  007BE0  20                 	db	32
  1191  007BE1  25                 	db	37
  1192  007BE2  33                 	db	51	;'3'
  1193  007BE3  64                 	db	100	;'d'
  1194  007BE4  20                 	db	32
  1195  007BE5  7C                 	db	124
  1196  007BE6  20                 	db	32
  1197  007BE7  25                 	db	37
  1198  007BE8  33                 	db	51	;'3'
  1199  007BE9  64                 	db	100	;'d'
  1200  007BEA  20                 	db	32
  1201  007BEB  25                 	db	37
  1202  007BEC  63                 	db	99	;'c'
  1203  007BED  00                 	db	0
  1204  007BEE                     STR_57:
  1205  007BEE  41                 	db	65	;'A'
  1206  007BEF  54                 	db	84	;'T'
  1207  007BF0  2B                 	db	43
  1208  007BF1  43                 	db	67	;'C'
  1209  007BF2  57                 	db	87	;'W'
  1210  007BF3  4A                 	db	74	;'J'
  1211  007BF4  41                 	db	65	;'A'
  1212  007BF5  50                 	db	80	;'P'
  1213  007BF6  3D                 	db	61	;'='
  1214  007BF7  22                 	db	34
  1215  007BF8  25                 	db	37
  1216  007BF9  73                 	db	115	;'s'
  1217  007BFA  22                 	db	34
  1218  007BFB  2C                 	db	44
  1219  007BFC  22                 	db	34
  1220  007BFD  25                 	db	37
  1221  007BFE  73                 	db	115	;'s'
  1222  007BFF  22                 	db	34
  1223  007C00  0D                 	db	13
  1224  007C01  0A                 	db	10
  1225  007C02  00                 	db	0
  1226  007C03                     STR_32:
  1227  007C03  41                 	db	65	;'A'
  1228  007C04  54                 	db	84	;'T'
  1229  007C05  2B                 	db	43
  1230  007C06  43                 	db	67	;'C'
  1231  007C07  49                 	db	73	;'I'
  1232  007C08  50                 	db	80	;'P'
  1233  007C09  53                 	db	83	;'S'
  1234  007C0A  45                 	db	69	;'E'
  1235  007C0B  4E                 	db	78	;'N'
  1236  007C0C  44                 	db	68	;'D'
  1237  007C0D  45                 	db	69	;'E'
  1238  007C0E  58                 	db	88	;'X'
  1239  007C0F  3D                 	db	61	;'='
  1240  007C10  30                 	db	48	;'0'
  1241  007C11  2C                 	db	44
  1242  007C12  38                 	db	56	;'8'
  1243  007C13  30                 	db	48	;'0'
  1244  007C14  30                 	db	48	;'0'
  1245  007C15  0D                 	db	13
  1246  007C16  0A                 	db	10
  1247  007C17  00                 	db	0
  1248  007C18                     STR_28:
  1249  007C18  63                 	db	99	;'c'
  1250  007C19  6F                 	db	111	;'o'
  1251  007C1A  6E                 	db	110	;'n'
  1252  007C1B  66                 	db	102	;'f'
  1253  007C1C  69                 	db	105	;'i'
  1254  007C1D  67                 	db	103	;'g'
  1255  007C1E  75                 	db	117	;'u'
  1256  007C1F  72                 	db	114	;'r'
  1257  007C20  61                 	db	97	;'a'
  1258  007C21  72                 	db	114	;'r'
  1259  007C22  20                 	db	32
  1260  007C23  6F                 	db	111	;'o'
  1261  007C24  20                 	db	32
  1262  007C25  57                 	db	87	;'W'
  1263  007C26  49                 	db	73	;'I'
  1264  007C27  46                 	db	70	;'F'
  1265  007C28  49                 	db	73	;'I'
  1266  007C29  2E                 	db	46
  1267  007C2A  2E                 	db	46
  1268  007C2B  2E                 	db	46
  1269  007C2C  00                 	db	0
  1270  007C2D                     STR_87:
  1271  007C2D  54                 	db	84	;'T'
  1272  007C2E  45                 	db	69	;'E'
  1273  007C2F  4D                 	db	77	;'M'
  1274  007C30  50                 	db	80	;'P'
  1275  007C31  20                 	db	32
  1276  007C32  20                 	db	32
  1277  007C33  7C                 	db	124
  1278  007C34  20                 	db	32
  1279  007C35  20                 	db	32
  1280  007C36  25                 	db	37
  1281  007C37  33                 	db	51	;'3'
  1282  007C38  64                 	db	100	;'d'
  1283  007C39  20                 	db	32
  1284  007C3A  7C                 	db	124
  1285  007C3B  20                 	db	32
  1286  007C3C  25                 	db	37
  1287  007C3D  33                 	db	51	;'3'
  1288  007C3E  64                 	db	100	;'d'
  1289  007C3F  20                 	db	32
  1290  007C40  46                 	db	70	;'F'
  1291  007C41  00                 	db	0
  1292  007C42                     STR_23:
  1293  007C42  41                 	db	65	;'A'
  1294  007C43  54                 	db	84	;'T'
  1295  007C44  2B                 	db	43
  1296  007C45  43                 	db	67	;'C'
  1297  007C46  49                 	db	73	;'I'
  1298  007C47  50                 	db	80	;'P'
  1299  007C48  53                 	db	83	;'S'
  1300  007C49  45                 	db	69	;'E'
  1301  007C4A  52                 	db	82	;'R'
  1302  007C4B  56                 	db	86	;'V'
  1303  007C4C  45                 	db	69	;'E'
  1304  007C4D  52                 	db	82	;'R'
  1305  007C4E  3D                 	db	61	;'='
  1306  007C4F  31                 	db	49	;'1'
  1307  007C50  2C                 	db	44
  1308  007C51  38                 	db	56	;'8'
  1309  007C52  30                 	db	48	;'0'
  1310  007C53  0D                 	db	13
  1311  007C54  0A                 	db	10
  1312  007C55  00                 	db	0
  1313  007C56                     STR_90:
  1314  007C56  20                 	db	32
  1315  007C57  2A                 	db	42
  1316  007C58  46                 	db	70	;'F'
  1317  007C59  41                 	db	65	;'A'
  1318  007C5A  4C                 	db	76	;'L'
  1319  007C5B  54                 	db	84	;'T'
  1320  007C5C  41                 	db	65	;'A'
  1321  007C5D  20                 	db	32
  1322  007C5E  44                 	db	68	;'D'
  1323  007C5F  45                 	db	69	;'E'
  1324  007C60  20                 	db	32
  1325  007C61  45                 	db	69	;'E'
  1326  007C62  4E                 	db	78	;'N'
  1327  007C63  45                 	db	69	;'E'
  1328  007C64  52                 	db	82	;'R'
  1329  007C65  47                 	db	71	;'G'
  1330  007C66  49                 	db	73	;'I'
  1331  007C67  41                 	db	65	;'A'
  1332  007C68  2A                 	db	42
  1333  007C69  00                 	db	0
  1334  007C6A                     STR_119:
  1335  007C6A  43                 	db	67	;'C'
  1336  007C6B  4F                 	db	79	;'O'
  1337  007C6C  4E                 	db	78	;'N'
  1338  007C6D  46                 	db	70	;'F'
  1339  007C6E  49                 	db	73	;'I'
  1340  007C6F  47                 	db	71	;'G'
  1341  007C70  55                 	db	85	;'U'
  1342  007C71  52                 	db	82	;'R'
  1343  007C72  41                 	db	65	;'A'
  1344  007C73  52                 	db	82	;'R'
  1345  007C74  20                 	db	32
  1346  007C75  20                 	db	32
  1347  007C76  20                 	db	32
  1348  007C77  20                 	db	32
  1349  007C78  20                 	db	32
  1350  007C79  20                 	db	32
  1351  007C7A  20                 	db	32
  1352  007C7B  3E                 	db	62	;'>'
  1353  007C7C  3E                 	db	62	;'>'
  1354  007C7D  00                 	db	0
  1355  007C7E                     STR_105:
  1356  007C7E  43                 	db	67	;'C'
  1357  007C7F  4F                 	db	79	;'O'
  1358  007C80  4E                 	db	78	;'N'
  1359  007C81  46                 	db	70	;'F'
  1360  007C82  49                 	db	73	;'I'
  1361  007C83  47                 	db	71	;'G'
  1362  007C84  20                 	db	32
  1363  007C85  57                 	db	87	;'W'
  1364  007C86  49                 	db	73	;'I'
  1365  007C87  46                 	db	70	;'F'
  1366  007C88  49                 	db	73	;'I'
  1367  007C89  20                 	db	32
  1368  007C8A  20                 	db	32
  1369  007C8B  20                 	db	32
  1370  007C8C  20                 	db	32
  1371  007C8D  20                 	db	32
  1372  007C8E  20                 	db	32
  1373  007C8F  3E                 	db	62	;'>'
  1374  007C90  3E                 	db	62	;'>'
  1375  007C91  00                 	db	0
  1376  007C92                     STR_104:
  1377  007C92  54                 	db	84	;'T'
  1378  007C93  45                 	db	69	;'E'
  1379  007C94  4D                 	db	77	;'M'
  1380  007C95  50                 	db	80	;'P'
  1381  007C96  4F                 	db	79	;'O'
  1382  007C97  20                 	db	32
  1383  007C98  46                 	db	70	;'F'
  1384  007C99  49                 	db	73	;'I'
  1385  007C9A  4D                 	db	77	;'M'
  1386  007C9B  20                 	db	32
  1387  007C9C  46                 	db	70	;'F'
  1388  007C9D  41                 	db	65	;'A'
  1389  007C9E  53                 	db	83	;'S'
  1390  007C9F  45                 	db	69	;'E'
  1391  007CA0  20                 	db	32
  1392  007CA1  20                 	db	32
  1393  007CA2  20                 	db	32
  1394  007CA3  3E                 	db	62	;'>'
  1395  007CA4  3E                 	db	62	;'>'
  1396  007CA5  00                 	db	0
  1397  007CA6                     STR_106:
  1398  007CA6  43                 	db	67	;'C'
  1399  007CA7  4F                 	db	79	;'O'
  1400  007CA8  4E                 	db	78	;'N'
  1401  007CA9  46                 	db	70	;'F'
  1402  007CAA  49                 	db	73	;'I'
  1403  007CAB  47                 	db	71	;'G'
  1404  007CAC  20                 	db	32
  1405  007CAD  41                 	db	65	;'A'
  1406  007CAE  56                 	db	86	;'V'
  1407  007CAF  41                 	db	65	;'A'
  1408  007CB0  4E                 	db	78	;'N'
  1409  007CB1  43                 	db	67	;'C'
  1410  007CB2  41                 	db	65	;'A'
  1411  007CB3  44                 	db	68	;'D'
  1412  007CB4  41                 	db	65	;'A'
  1413  007CB5  53                 	db	83	;'S'
  1414  007CB6  20                 	db	32
  1415  007CB7  3E                 	db	62	;'>'
  1416  007CB8  3E                 	db	62	;'>'
  1417  007CB9  00                 	db	0
  1418  007CBA                     STR_81:
  1419  007CBA  20                 	db	32
  1420  007CBB  54                 	db	84	;'T'
  1421  007CBC  45                 	db	69	;'E'
  1422  007CBD  43                 	db	67	;'C'
  1423  007CBE  48                 	db	72	;'H'
  1424  007CBF  4E                 	db	78	;'N'
  1425  007CC0  4F                 	db	79	;'O'
  1426  007CC1  57                 	db	87	;'W'
  1427  007CC2  20                 	db	32
  1428  007CC3  54                 	db	84	;'T'
  1429  007CC4  65                 	db	101	;'e'
  1430  007CC5  63                 	db	99	;'c'
  1431  007CC6  6E                 	db	110	;'n'
  1432  007CC7  6F                 	db	111	;'o'
  1433  007CC8  6C                 	db	108	;'l'
  1434  007CC9  6F                 	db	111	;'o'
  1435  007CCA  67                 	db	103	;'g'
  1436  007CCB  69                 	db	105	;'i'
  1437  007CCC  61                 	db	97	;'a'
  1438  007CCD  00                 	db	0
  1439  007CCE                     STR_26:
  1440  007CCE  43                 	db	67	;'C'
  1441  007CCF  6F                 	db	111	;'o'
  1442  007CD0  6E                 	db	110	;'n'
  1443  007CD1  65                 	db	101	;'e'
  1444  007CD2  63                 	db	99	;'c'
  1445  007CD3  74                 	db	116	;'t'
  1446  007CD4  65                 	db	101	;'e'
  1447  007CD5  2D                 	db	45
  1448  007CD6  73                 	db	115	;'s'
  1449  007CD7  65                 	db	101	;'e'
  1450  007CD8  20                 	db	32
  1451  007CD9  61                 	db	97	;'a'
  1452  007CDA  20                 	db	32
  1453  007CDB  72                 	db	114	;'r'
  1454  007CDC  65                 	db	101	;'e'
  1455  007CDD  64                 	db	100	;'d'
  1456  007CDE  65                 	db	101	;'e'
  1457  007CDF  20                 	db	32
  1458  007CE0  65                 	db	101	;'e'
  1459  007CE1  00                 	db	0
  1460  007CE2                     STR_66:
  1461  007CE2  41                 	db	65	;'A'
  1462  007CE3  54                 	db	84	;'T'
  1463  007CE4  2B                 	db	43
  1464  007CE5  43                 	db	67	;'C'
  1465  007CE6  49                 	db	73	;'I'
  1466  007CE7  50                 	db	80	;'P'
  1467  007CE8  53                 	db	83	;'S'
  1468  007CE9  45                 	db	69	;'E'
  1469  007CEA  4E                 	db	78	;'N'
  1470  007CEB  44                 	db	68	;'D'
  1471  007CEC  45                 	db	69	;'E'
  1472  007CED  58                 	db	88	;'X'
  1473  007CEE  3D                 	db	61	;'='
  1474  007CEF  32                 	db	50	;'2'
  1475  007CF0  36                 	db	54	;'6'
  1476  007CF1  30                 	db	48	;'0'
  1477  007CF2  0D                 	db	13
  1478  007CF3  0A                 	db	10
  1479  007CF4  00                 	db	0
  1480  007CF5                     STR_122:
  1481  007CF5  53                 	db	83	;'S'
  1482  007CF6  65                 	db	101	;'e'
  1483  007CF7  63                 	db	99	;'c'
  1484  007CF8  2E                 	db	46
  1485  007CF9  20                 	db	32
  1486  007CFA  46                 	db	70	;'F'
  1487  007CFB  6F                 	db	111	;'o'
  1488  007CFC  6C                 	db	108	;'l'
  1489  007CFD  68                 	db	104	;'h'
  1490  007CFE  61                 	db	97	;'a'
  1491  007CFF  20                 	db	32
  1492  007D00  3A                 	db	58	;':'
  1493  007D01  20                 	db	32
  1494  007D02  25                 	db	37
  1495  007D03  64                 	db	100	;'d'
  1496  007D04  20                 	db	32
  1497  007D05  68                 	db	104	;'h'
  1498  007D06  72                 	db	114	;'r'
  1499  007D07  00                 	db	0
  1500  007D08                     STR_120:
  1501  007D08  41                 	db	65	;'A'
  1502  007D09  6D                 	db	109	;'m'
  1503  007D0A  61                 	db	97	;'a'
  1504  007D0B  72                 	db	114	;'r'
  1505  007D0C  65                 	db	101	;'e'
  1506  007D0D  6C                 	db	108	;'l'
  1507  007D0E  61                 	db	97	;'a'
  1508  007D0F  63                 	db	99	;'c'
  1509  007D10  61                 	db	97	;'a'
  1510  007D11  6F                 	db	111	;'o'
  1511  007D12  20                 	db	32
  1512  007D13  3A                 	db	58	;':'
  1513  007D14  20                 	db	32
  1514  007D15  25                 	db	37
  1515  007D16  64                 	db	100	;'d'
  1516  007D17  20                 	db	32
  1517  007D18  68                 	db	104	;'h'
  1518  007D19  72                 	db	114	;'r'
  1519  007D1A  00                 	db	0
  1520  007D1B                     STR_121:
  1521  007D1B  4D                 	db	77	;'M'
  1522  007D1C  75                 	db	117	;'u'
  1523  007D1D  72                 	db	114	;'r'
  1524  007D1E  63                 	db	99	;'c'
  1525  007D1F  68                 	db	104	;'h'
  1526  007D20  61                 	db	97	;'a'
  1527  007D21  6D                 	db	109	;'m'
  1528  007D22  65                 	db	101	;'e'
  1529  007D23  6E                 	db	110	;'n'
  1530  007D24  74                 	db	116	;'t'
  1531  007D25  6F                 	db	111	;'o'
  1532  007D26  3A                 	db	58	;':'
  1533  007D27  20                 	db	32
  1534  007D28  25                 	db	37
  1535  007D29  64                 	db	100	;'d'
  1536  007D2A  20                 	db	32
  1537  007D2B  68                 	db	104	;'h'
  1538  007D2C  72                 	db	114	;'r'
  1539  007D2D  00                 	db	0
  1540  007D2E                     STR_48:
  1541  007D2E  4F                 	db	79	;'O'
  1542  007D2F  4B                 	db	75	;'K'
  1543  007D30  20                 	db	32
  1544  007D31  72                 	db	114	;'r'
  1545  007D32  65                 	db	101	;'e'
  1546  007D33  69                 	db	105	;'i'
  1547  007D34  6E                 	db	110	;'n'
  1548  007D35  69                 	db	105	;'i'
  1549  007D36  63                 	db	99	;'c'
  1550  007D37  69                 	db	105	;'i'
  1551  007D38  61                 	db	97	;'a'
  1552  007D39  6E                 	db	110	;'n'
  1553  007D3A  64                 	db	100	;'d'
  1554  007D3B  6F                 	db	111	;'o'
  1555  007D3C  2E                 	db	46
  1556  007D3D  2E                 	db	46
  1557  007D3E  2E                 	db	46
  1558  007D3F  00                 	db	0
  1559  007D40                     STR_91:
  1560  007D40  54                 	db	84	;'T'
  1561  007D41  45                 	db	69	;'E'
  1562  007D42  4D                 	db	77	;'M'
  1563  007D43  50                 	db	80	;'P'
  1564  007D44  45                 	db	69	;'E'
  1565  007D45  52                 	db	82	;'R'
  1566  007D46  41                 	db	65	;'A'
  1567  007D47  54                 	db	84	;'T'
  1568  007D48  55                 	db	85	;'U'
  1569  007D49  52                 	db	82	;'R'
  1570  007D4A  41                 	db	65	;'A'
  1571  007D4B  3A                 	db	58	;':'
  1572  007D4C  20                 	db	32
  1573  007D4D  25                 	db	37
  1574  007D4E  64                 	db	100	;'d'
  1575  007D4F  20                 	db	32
  1576  007D50  46                 	db	70	;'F'
  1577  007D51  00                 	db	0
  1578  007D52                     STR_111:
  1579  007D52  50                 	db	80	;'P'
  1580  007D53  39                 	db	57	;'9'
  1581  007D54  20                 	db	32
  1582  007D55  3A                 	db	58	;':'
  1583  007D56  25                 	db	37
  1584  007D57  34                 	db	52	;'4'
  1585  007D58  64                 	db	100	;'d'
  1586  007D59  20                 	db	32
  1587  007D5A  7C                 	db	124
  1588  007D5B  20                 	db	32
  1589  007D5C  50                 	db	80	;'P'
  1590  007D5D  31                 	db	49	;'1'
  1591  007D5E  33                 	db	51	;'3'
  1592  007D5F  3A                 	db	58	;':'
  1593  007D60  25                 	db	37
  1594  007D61  34                 	db	52	;'4'
  1595  007D62  64                 	db	100	;'d'
  1596  007D63  00                 	db	0
  1597  007D64                     STR_112:
  1598  007D64  50                 	db	80	;'P'
  1599  007D65  31                 	db	49	;'1'
  1600  007D66  30                 	db	48	;'0'
  1601  007D67  3A                 	db	58	;':'
  1602  007D68  25                 	db	37
  1603  007D69  34                 	db	52	;'4'
  1604  007D6A  64                 	db	100	;'d'
  1605  007D6B  20                 	db	32
  1606  007D6C  7C                 	db	124
  1607  007D6D  20                 	db	32
  1608  007D6E  50                 	db	80	;'P'
  1609  007D6F  31                 	db	49	;'1'
  1610  007D70  34                 	db	52	;'4'
  1611  007D71  3A                 	db	58	;':'
  1612  007D72  25                 	db	37
  1613  007D73  34                 	db	52	;'4'
  1614  007D74  64                 	db	100	;'d'
  1615  007D75  00                 	db	0
  1616  007D76                     STR_113:
  1617  007D76  50                 	db	80	;'P'
  1618  007D77  31                 	db	49	;'1'
  1619  007D78  31                 	db	49	;'1'
  1620  007D79  3A                 	db	58	;':'
  1621  007D7A  25                 	db	37
  1622  007D7B  34                 	db	52	;'4'
  1623  007D7C  64                 	db	100	;'d'
  1624  007D7D  20                 	db	32
  1625  007D7E  7C                 	db	124
  1626  007D7F  20                 	db	32
  1627  007D80  50                 	db	80	;'P'
  1628  007D81  31                 	db	49	;'1'
  1629  007D82  35                 	db	53	;'5'
  1630  007D83  3A                 	db	58	;':'
  1631  007D84  25                 	db	37
  1632  007D85  34                 	db	52	;'4'
  1633  007D86  64                 	db	100	;'d'
  1634  007D87  00                 	db	0
  1635  007D88                     STR_123:
  1636  007D88  2A                 	db	42
  1637  007D89  30                 	db	48	;'0'
  1638  007D8A  20                 	db	32
  1639  007D8B  6E                 	db	110	;'n'
  1640  007D8C  61                 	db	97	;'a'
  1641  007D8D  6F                 	db	111	;'o'
  1642  007D8E  20                 	db	32
  1643  007D8F  70                 	db	112	;'p'
  1644  007D90  61                 	db	97	;'a'
  1645  007D91  73                 	db	115	;'s'
  1646  007D92  73                 	db	115	;'s'
  1647  007D93  61                 	db	97	;'a'
  1648  007D94  20                 	db	32
  1649  007D95  66                 	db	102	;'f'
  1650  007D96  61                 	db	97	;'a'
  1651  007D97  73                 	db	115	;'s'
  1652  007D98  65                 	db	101	;'e'
  1653  007D99  00                 	db	0
  1654  007D9A                     STR_27:
  1655  007D9A  61                 	db	97	;'a'
  1656  007D9B  63                 	db	99	;'c'
  1657  007D9C  65                 	db	101	;'e'
  1658  007D9D  73                 	db	115	;'s'
  1659  007D9E  73                 	db	115	;'s'
  1660  007D9F  65                 	db	101	;'e'
  1661  007DA0  20                 	db	32
  1662  007DA1  6F                 	db	111	;'o'
  1663  007DA2  20                 	db	32
  1664  007DA3  49                 	db	73	;'I'
  1665  007DA4  50                 	db	80	;'P'
  1666  007DA5  20                 	db	32
  1667  007DA6  70                 	db	112	;'p'
  1668  007DA7  61                 	db	97	;'a'
  1669  007DA8  72                 	db	114	;'r'
  1670  007DA9  61                 	db	97	;'a'
  1671  007DAA  00                 	db	0
  1672  007DAB                     STR_107:
  1673  007DAB  50                 	db	80	;'P'
  1674  007DAC  31                 	db	49	;'1'
  1675  007DAD  3A                 	db	58	;':'
  1676  007DAE  25                 	db	37
  1677  007DAF  34                 	db	52	;'4'
  1678  007DB0  64                 	db	100	;'d'
  1679  007DB1  20                 	db	32
  1680  007DB2  7C                 	db	124
  1681  007DB3  20                 	db	32
  1682  007DB4  20                 	db	32
  1683  007DB5  50                 	db	80	;'P'
  1684  007DB6  35                 	db	53	;'5'
  1685  007DB7  3A                 	db	58	;':'
  1686  007DB8  25                 	db	37
  1687  007DB9  34                 	db	52	;'4'
  1688  007DBA  64                 	db	100	;'d'
  1689  007DBB  00                 	db	0
  1690  007DBC                     STR_108:
  1691  007DBC  50                 	db	80	;'P'
  1692  007DBD  32                 	db	50	;'2'
  1693  007DBE  3A                 	db	58	;':'
  1694  007DBF  25                 	db	37
  1695  007DC0  34                 	db	52	;'4'
  1696  007DC1  64                 	db	100	;'d'
  1697  007DC2  20                 	db	32
  1698  007DC3  7C                 	db	124
  1699  007DC4  20                 	db	32
  1700  007DC5  20                 	db	32
  1701  007DC6  50                 	db	80	;'P'
  1702  007DC7  36                 	db	54	;'6'
  1703  007DC8  3A                 	db	58	;':'
  1704  007DC9  25                 	db	37
  1705  007DCA  34                 	db	52	;'4'
  1706  007DCB  64                 	db	100	;'d'
  1707  007DCC  00                 	db	0
  1708  007DCD                     STR_109:
  1709  007DCD  50                 	db	80	;'P'
  1710  007DCE  33                 	db	51	;'3'
  1711  007DCF  3A                 	db	58	;':'
  1712  007DD0  25                 	db	37
  1713  007DD1  34                 	db	52	;'4'
  1714  007DD2  64                 	db	100	;'d'
  1715  007DD3  20                 	db	32
  1716  007DD4  7C                 	db	124
  1717  007DD5  20                 	db	32
  1718  007DD6  20                 	db	32
  1719  007DD7  50                 	db	80	;'P'
  1720  007DD8  37                 	db	55	;'7'
  1721  007DD9  3A                 	db	58	;':'
  1722  007DDA  25                 	db	37
  1723  007DDB  34                 	db	52	;'4'
  1724  007DDC  64                 	db	100	;'d'
  1725  007DDD  00                 	db	0
  1726  007DDE                     STR_110:
  1727  007DDE  50                 	db	80	;'P'
  1728  007DDF  34                 	db	52	;'4'
  1729  007DE0  3A                 	db	58	;':'
  1730  007DE1  25                 	db	37
  1731  007DE2  34                 	db	52	;'4'
  1732  007DE3  64                 	db	100	;'d'
  1733  007DE4  20                 	db	32
  1734  007DE5  7C                 	db	124
  1735  007DE6  20                 	db	32
  1736  007DE7  20                 	db	32
  1737  007DE8  50                 	db	80	;'P'
  1738  007DE9  38                 	db	56	;'8'
  1739  007DEA  3A                 	db	58	;':'
  1740  007DEB  25                 	db	37
  1741  007DEC  34                 	db	52	;'4'
  1742  007DED  64                 	db	100	;'d'
  1743  007DEE  00                 	db	0
  1744  007DEF                     STR_37:
  1745  007DEF  41                 	db	65	;'A'
  1746  007DF0  54                 	db	84	;'T'
  1747  007DF1  2B                 	db	43
  1748  007DF2  43                 	db	67	;'C'
  1749  007DF3  49                 	db	73	;'I'
  1750  007DF4  50                 	db	80	;'P'
  1751  007DF5  43                 	db	67	;'C'
  1752  007DF6  4C                 	db	76	;'L'
  1753  007DF7  4F                 	db	79	;'O'
  1754  007DF8  53                 	db	83	;'S'
  1755  007DF9  45                 	db	69	;'E'
  1756  007DFA  3D                 	db	61	;'='
  1757  007DFB  30                 	db	48	;'0'
  1758  007DFC  0D                 	db	13
  1759  007DFD  0A                 	db	10
  1760  007DFE  00                 	db	0
  1761  007DFF                     STR_59:
  1762  007DFF  41                 	db	65	;'A'
  1763  007E00  54                 	db	84	;'T'
  1764  007E01  2B                 	db	43
  1765  007E02  43                 	db	67	;'C'
  1766  007E03  49                 	db	73	;'I'
  1767  007E04  50                 	db	80	;'P'
  1768  007E05  53                 	db	83	;'S'
  1769  007E06  54                 	db	84	;'T'
  1770  007E07  41                 	db	65	;'A'
  1771  007E08  54                 	db	84	;'T'
  1772  007E09  55                 	db	85	;'U'
  1773  007E0A  53                 	db	83	;'S'
  1774  007E0B  0D                 	db	13
  1775  007E0C  0A                 	db	10
  1776  007E0D  00                 	db	0
  1777  007E0E                     STR_92:
  1778  007E0E  55                 	db	85	;'U'
  1779  007E0F  4D                 	db	77	;'M'
  1780  007E10  49                 	db	73	;'I'
  1781  007E11  44                 	db	68	;'D'
  1782  007E12  41                 	db	65	;'A'
  1783  007E13  44                 	db	68	;'D'
  1784  007E14  45                 	db	69	;'E'
  1785  007E15  3A                 	db	58	;':'
  1786  007E16  20                 	db	32
  1787  007E17  25                 	db	37
  1788  007E18  64                 	db	100	;'d'
  1789  007E19  20                 	db	32
  1790  007E1A  25                 	db	37
  1791  007E1B  63                 	db	99	;'c'
  1792  007E1C  00                 	db	0
  1793  007E1D                     STR_86:
  1794  007E1D  7C                 	db	124
  1795  007E1E  53                 	db	83	;'S'
  1796  007E1F  65                 	db	101	;'e'
  1797  007E20  6E                 	db	110	;'n'
  1798  007E21  73                 	db	115	;'s'
  1799  007E22  6F                 	db	111	;'o'
  1800  007E23  72                 	db	114	;'r'
  1801  007E24  7C                 	db	124
  1802  007E25  41                 	db	65	;'A'
  1803  007E26  6A                 	db	106	;'j'
  1804  007E27  75                 	db	117	;'u'
  1805  007E28  73                 	db	115	;'s'
  1806  007E29  74                 	db	116	;'t'
  1807  007E2A  65                 	db	101	;'e'
  1808  007E2B  00                 	db	0
  1809  007E2C                     STR_53:
  1810  007E2C  41                 	db	65	;'A'
  1811  007E2D  54                 	db	84	;'T'
  1812  007E2E  2B                 	db	43
  1813  007E2F  43                 	db	67	;'C'
  1814  007E30  49                 	db	73	;'I'
  1815  007E31  50                 	db	80	;'P'
  1816  007E32  4D                 	db	77	;'M'
  1817  007E33  55                 	db	85	;'U'
  1818  007E34  58                 	db	88	;'X'
  1819  007E35  3D                 	db	61	;'='
  1820  007E36  30                 	db	48	;'0'
  1821  007E37  0D                 	db	13
  1822  007E38  0A                 	db	10
  1823  007E39  00                 	db	0
  1824  007E3A                     STR_50:
  1825  007E3A  41                 	db	65	;'A'
  1826  007E3B  54                 	db	84	;'T'
  1827  007E3C  2B                 	db	43
  1828  007E3D  43                 	db	67	;'C'
  1829  007E3E  57                 	db	87	;'W'
  1830  007E3F  4D                 	db	77	;'M'
  1831  007E40  4F                 	db	79	;'O'
  1832  007E41  44                 	db	68	;'D'
  1833  007E42  45                 	db	69	;'E'
  1834  007E43  3D                 	db	61	;'='
  1835  007E44  31                 	db	49	;'1'
  1836  007E45  0D                 	db	13
  1837  007E46  0A                 	db	10
  1838  007E47  00                 	db	0
  1839  007E48                     STR_14:
  1840  007E48  41                 	db	65	;'A'
  1841  007E49  54                 	db	84	;'T'
  1842  007E4A  2B                 	db	43
  1843  007E4B  43                 	db	67	;'C'
  1844  007E4C  49                 	db	73	;'I'
  1845  007E4D  50                 	db	80	;'P'
  1846  007E4E  4D                 	db	77	;'M'
  1847  007E4F  55                 	db	85	;'U'
  1848  007E50  58                 	db	88	;'X'
  1849  007E51  3D                 	db	61	;'='
  1850  007E52  31                 	db	49	;'1'
  1851  007E53  0D                 	db	13
  1852  007E54  0A                 	db	10
  1853  007E55  00                 	db	0
  1854  007E56                     STR_11:
  1855  007E56  41                 	db	65	;'A'
  1856  007E57  54                 	db	84	;'T'
  1857  007E58  2B                 	db	43
  1858  007E59  43                 	db	67	;'C'
  1859  007E5A  57                 	db	87	;'W'
  1860  007E5B  4D                 	db	77	;'M'
  1861  007E5C  4F                 	db	79	;'O'
  1862  007E5D  44                 	db	68	;'D'
  1863  007E5E  45                 	db	69	;'E'
  1864  007E5F  3D                 	db	61	;'='
  1865  007E60  32                 	db	50	;'2'
  1866  007E61  0D                 	db	13
  1867  007E62  0A                 	db	10
  1868  007E63  00                 	db	0
  1869  007E64                     STR_74:
  1870  007E64  41                 	db	65	;'A'
  1871  007E65  54                 	db	84	;'T'
  1872  007E66  2B                 	db	43
  1873  007E67  43                 	db	67	;'C'
  1874  007E68  49                 	db	73	;'I'
  1875  007E69  50                 	db	80	;'P'
  1876  007E6A  43                 	db	67	;'C'
  1877  007E6B  4C                 	db	76	;'L'
  1878  007E6C  4F                 	db	79	;'O'
  1879  007E6D  53                 	db	83	;'S'
  1880  007E6E  45                 	db	69	;'E'
  1881  007E6F  0D                 	db	13
  1882  007E70  0A                 	db	10
  1883  007E71  00                 	db	0
  1884  007E72                     STR_39:
  1885  007E72  41                 	db	65	;'A'
  1886  007E73  67                 	db	103	;'g'
  1887  007E74  75                 	db	117	;'u'
  1888  007E75  61                 	db	97	;'a'
  1889  007E76  72                 	db	114	;'r'
  1890  007E77  64                 	db	100	;'d'
  1891  007E78  61                 	db	97	;'a'
  1892  007E79  6E                 	db	110	;'n'
  1893  007E7A  64                 	db	100	;'d'
  1894  007E7B  6F                 	db	111	;'o'
  1895  007E7C  2E                 	db	46
  1896  007E7D  2E                 	db	46
  1897  007E7E  2E                 	db	46
  1898  007E7F  00                 	db	0
  1899  007E80                     STR_82:
  1900  007E80  56                 	db	86	;'V'
  1901  007E81  65                 	db	101	;'e'
  1902  007E82  72                 	db	114	;'r'
  1903  007E83  73                 	db	115	;'s'
  1904  007E84  61                 	db	97	;'a'
  1905  007E85  6F                 	db	111	;'o'
  1906  007E86  20                 	db	32
  1907  007E87  53                 	db	83	;'S'
  1908  007E88  6F                 	db	111	;'o'
  1909  007E89  66                 	db	102	;'f'
  1910  007E8A  74                 	db	116	;'t'
  1911  007E8B  2E                 	db	46
  1912  007E8C  3A                 	db	58	;':'
  1913  007E8D  00                 	db	0
  1914  007E8E                     STR_70:
  1915  007E8E  4A                 	db	74	;'J'
  1916  007E8F  75                 	db	117	;'u'
  1917  007E90  6C                 	db	108	;'l'
  1918  007E91  20                 	db	32
  1919  007E92  31                 	db	49	;'1'
  1920  007E93  35                 	db	53	;'5'
  1921  007E94  20                 	db	32
  1922  007E95  32                 	db	50	;'2'
  1923  007E96  30                 	db	48	;'0'
  1924  007E97  32                 	db	50	;'2'
  1925  007E98  30                 	db	48	;'0'
  1926  007E99  00                 	db	0
  1927  007E9A                     STR_85:
  1928  007E9A  45                 	db	69	;'E'
  1929  007E9B  52                 	db	82	;'R'
  1930  007E9C  52                 	db	82	;'R'
  1931  007E9D  4F                 	db	79	;'O'
  1932  007E9E  20                 	db	32
  1933  007E9F  45                 	db	69	;'E'
  1934  007EA0  45                 	db	69	;'E'
  1935  007EA1  50                 	db	80	;'P'
  1936  007EA2  52                 	db	82	;'R'
  1937  007EA3  4F                 	db	79	;'O'
  1938  007EA4  4D                 	db	77	;'M'
  1939  007EA5  00                 	db	0
  1940  007EA6                     STR_2:
  1941  007EA6  4D                 	db	77	;'M'
  1942  007EA7  75                 	db	117	;'u'
  1943  007EA8  72                 	db	114	;'r'
  1944  007EA9  63                 	db	99	;'c'
  1945  007EAA  68                 	db	104	;'h'
  1946  007EAB  61                 	db	97	;'a'
  1947  007EAC  6D                 	db	109	;'m'
  1948  007EAD  65                 	db	101	;'e'
  1949  007EAE  6E                 	db	110	;'n'
  1950  007EAF  74                 	db	116	;'t'
  1951  007EB0  6F                 	db	111	;'o'
  1952  007EB1  00                 	db	0
  1953  007EB2                     STR_78:
  1954  007EB2  41                 	db	65	;'A'
  1955  007EB3  54                 	db	84	;'T'
  1956  007EB4  2B                 	db	43
  1957  007EB5  43                 	db	67	;'C'
  1958  007EB6  49                 	db	73	;'I'
  1959  007EB7  46                 	db	70	;'F'
  1960  007EB8  53                 	db	83	;'S'
  1961  007EB9  52                 	db	82	;'R'
  1962  007EBA  0D                 	db	13
  1963  007EBB  0A                 	db	10
  1964  007EBC  00                 	db	0
  1965  007EBD                     STR_3:
  1966  007EBD  53                 	db	83	;'S'
  1967  007EBE  65                 	db	101	;'e'
  1968  007EBF  63                 	db	99	;'c'
  1969  007EC0  2E                 	db	46
  1970  007EC1  20                 	db	32
  1971  007EC2  46                 	db	70	;'F'
  1972  007EC3  6F                 	db	111	;'o'
  1973  007EC4  6C                 	db	108	;'l'
  1974  007EC5  68                 	db	104	;'h'
  1975  007EC6  61                 	db	97	;'a'
  1976  007EC7  00                 	db	0
  1977  007EC8                     STR_1:
  1978  007EC8  41                 	db	65	;'A'
  1979  007EC9  6D                 	db	109	;'m'
  1980  007ECA  61                 	db	97	;'a'
  1981  007ECB  72                 	db	114	;'r'
  1982  007ECC  65                 	db	101	;'e'
  1983  007ECD  6C                 	db	108	;'l'
  1984  007ECE  61                 	db	97	;'a'
  1985  007ECF  63                 	db	99	;'c'
  1986  007ED0  61                 	db	97	;'a'
  1987  007ED1  6F                 	db	111	;'o'
  1988  007ED2  00                 	db	0
  1989  007ED3                     STR_97:
  1990  007ED3  41                 	db	65	;'A'
  1991  007ED4  75                 	db	117	;'u'
  1992  007ED5  74                 	db	116	;'t'
  1993  007ED6  6F                 	db	111	;'o'
  1994  007ED7  6D                 	db	109	;'m'
  1995  007ED8  61                 	db	97	;'a'
  1996  007ED9  74                 	db	116	;'t'
  1997  007EDA  69                 	db	105	;'i'
  1998  007EDB  63                 	db	99	;'c'
  1999  007EDC  6F                 	db	111	;'o'
  2000  007EDD  00                 	db	0
  2001  007EDE                     STR_100:
  2002  007EDE  44                 	db	68	;'D'
  2003  007EDF  65                 	db	101	;'e'
  2004  007EE0  73                 	db	115	;'s'
  2005  007EE1  74                 	db	116	;'t'
  2006  007EE2  72                 	db	114	;'r'
  2007  007EE3  61                 	db	97	;'a'
  2008  007EE4  76                 	db	118	;'v'
  2009  007EE5  61                 	db	97	;'a'
  2010  007EE6  64                 	db	100	;'d'
  2011  007EE7  6F                 	db	111	;'o'
  2012  007EE8  00                 	db	0
  2013  007EE9                     STR_101:
  2014  007EE9  41                 	db	65	;'A'
  2015  007EEA  4C                 	db	76	;'L'
  2016  007EEB  41                 	db	65	;'A'
  2017  007EEC  52                 	db	82	;'R'
  2018  007EED  4D                 	db	77	;'M'
  2019  007EEE  45                 	db	69	;'E'
  2020  007EEF  3A                 	db	58	;':'
  2021  007EF0  20                 	db	32
  2022  007EF1  25                 	db	37
  2023  007EF2  73                 	db	115	;'s'
  2024  007EF3  00                 	db	0
  2025  007EF4                     STR_103:
  2026  007EF4  44                 	db	68	;'D'
  2027  007EF5  65                 	db	101	;'e'
  2028  007EF6  73                 	db	115	;'s'
  2029  007EF7  6C                 	db	108	;'l'
  2030  007EF8  69                 	db	105	;'i'
  2031  007EF9  67                 	db	103	;'g'
  2032  007EFA  61                 	db	97	;'a'
  2033  007EFB  64                 	db	100	;'d'
  2034  007EFC  6F                 	db	111	;'o'
  2035  007EFD  00                 	db	0
  2036  007EFE                     STR_4:
  2037  007EFE  53                 	db	83	;'S'
  2038  007EFF  65                 	db	101	;'e'
  2039  007F00  63                 	db	99	;'c'
  2040  007F01  2E                 	db	46
  2041  007F02  20                 	db	32
  2042  007F03  54                 	db	84	;'T'
  2043  007F04  61                 	db	97	;'a'
  2044  007F05  6C                 	db	108	;'l'
  2045  007F06  6F                 	db	111	;'o'
  2046  007F07  00                 	db	0
  2047  007F08                     STR_94:
  2048  007F08  43                 	db	67	;'C'
  2049  007F09  4C                 	db	76	;'L'
  2050  007F0A  49                 	db	73	;'I'
  2051  007F0B  4D                 	db	77	;'M'
  2052  007F0C  41                 	db	65	;'A'
  2053  007F0D  3A                 	db	58	;':'
  2054  007F0E  20                 	db	32
  2055  007F0F  25                 	db	37
  2056  007F10  73                 	db	115	;'s'
  2057  007F11  00                 	db	0
  2058  007F12                     STR_98:
  2059  007F12  54                 	db	84	;'T'
  2060  007F13  52                 	db	82	;'R'
  2061  007F14  41                 	db	65	;'A'
  2062  007F15  56                 	db	86	;'V'
  2063  007F16  41                 	db	65	;'A'
  2064  007F17  3A                 	db	58	;':'
  2065  007F18  20                 	db	32
  2066  007F19  25                 	db	37
  2067  007F1A  73                 	db	115	;'s'
  2068  007F1B  00                 	db	0
  2069  007F1C                     STR_89:
  2070  007F1C  46                 	db	70	;'F'
  2071  007F1D  61                 	db	97	;'a'
  2072  007F1E  73                 	db	115	;'s'
  2073  007F1F  65                 	db	101	;'e'
  2074  007F20  20                 	db	32
  2075  007F21  7E                 	db	126
  2076  007F22  20                 	db	32
  2077  007F23  25                 	db	37
  2078  007F24  73                 	db	115	;'s'
  2079  007F25  00                 	db	0
  2080  007F26                     STR_114:
  2081  007F26  50                 	db	80	;'P'
  2082  007F27  31                 	db	49	;'1'
  2083  007F28  32                 	db	50	;'2'
  2084  007F29  3A                 	db	58	;':'
  2085  007F2A  25                 	db	37
  2086  007F2B  34                 	db	52	;'4'
  2087  007F2C  64                 	db	100	;'d'
  2088  007F2D  20                 	db	32
  2089  007F2E  7C                 	db	124
  2090  007F2F  00                 	db	0
  2091  007F30                     STR_80:
  2092  007F30  41                 	db	65	;'A'
  2093  007F31  54                 	db	84	;'T'
  2094  007F32  2B                 	db	43
  2095  007F33  52                 	db	82	;'R'
  2096  007F34  53                 	db	83	;'S'
  2097  007F35  54                 	db	84	;'T'
  2098  007F36  0D                 	db	13
  2099  007F37  0A                 	db	10
  2100  007F38  00                 	db	0
  2101  007F39                     STR_29:
  2102  007F39  31                 	db	49	;'1'
  2103  007F3A  30                 	db	48	;'0'
  2104  007F3B  2E                 	db	46
  2105  007F3C  31                 	db	49	;'1'
  2106  007F3D  2E                 	db	46
  2107  007F3E  31                 	db	49	;'1'
  2108  007F3F  2E                 	db	46
  2109  007F40  31                 	db	49	;'1'
  2110  007F41  00                 	db	0
  2111  007F42                     STR_118:
  2112  007F42  41                 	db	65	;'A'
  2113  007F43  55                 	db	85	;'U'
  2114  007F44  54                 	db	84	;'T'
  2115  007F45  48                 	db	72	;'H'
  2116  007F46  3A                 	db	58	;':'
  2117  007F47  20                 	db	32
  2118  007F48  25                 	db	37
  2119  007F49  64                 	db	100	;'d'
  2120  007F4A  00                 	db	0
  2121  007F4B                     STR_93:
  2122  007F4B  46                 	db	70	;'F'
  2123  007F4C  41                 	db	65	;'A'
  2124  007F4D  53                 	db	83	;'S'
  2125  007F4E  45                 	db	69	;'E'
  2126  007F4F  3A                 	db	58	;':'
  2127  007F50  20                 	db	32
  2128  007F51  25                 	db	37
  2129  007F52  73                 	db	115	;'s'
  2130  007F53  00                 	db	0
  2131  007F54                     STR_95:
  2132  007F54  4D                 	db	77	;'M'
  2133  007F55  4F                 	db	79	;'O'
  2134  007F56  44                 	db	68	;'D'
  2135  007F57  4F                 	db	79	;'O'
  2136  007F58  3A                 	db	58	;':'
  2137  007F59  20                 	db	32
  2138  007F5A  25                 	db	37
  2139  007F5B  73                 	db	115	;'s'
  2140  007F5C  00                 	db	0
  2141  007F5D                     STR_99:
  2142  007F5D  54                 	db	84	;'T'
  2143  007F5E  72                 	db	114	;'r'
  2144  007F5F  61                 	db	97	;'a'
  2145  007F60  76                 	db	118	;'v'
  2146  007F61  61                 	db	97	;'a'
  2147  007F62  64                 	db	100	;'d'
  2148  007F63  6F                 	db	111	;'o'
  2149  007F64  00                 	db	0
  2150  007F65                     STR_115:
  2151  007F65  53                 	db	83	;'S'
  2152  007F66  49                 	db	73	;'I'
  2153  007F67  44                 	db	68	;'D'
  2154  007F68  3A                 	db	58	;':'
  2155  007F69  20                 	db	32
  2156  007F6A  25                 	db	37
  2157  007F6B  73                 	db	115	;'s'
  2158  007F6C  00                 	db	0
  2159  007F6D                     STR_116:
  2160  007F6D  50                 	db	80	;'P'
  2161  007F6E  53                 	db	83	;'S'
  2162  007F6F  57                 	db	87	;'W'
  2163  007F70  3A                 	db	58	;':'
  2164  007F71  20                 	db	32
  2165  007F72  25                 	db	37
  2166  007F73  73                 	db	115	;'s'
  2167  007F74  00                 	db	0
  2168  007F75                     STR_134:
  2169  007F75  28                 	db	40
  2170  007F76  6E                 	db	110	;'n'
  2171  007F77  75                 	db	117	;'u'
  2172  007F78  6C                 	db	108	;'l'
  2173  007F79  6C                 	db	108	;'l'
  2174  007F7A  29                 	db	41
  2175  007F7B  00                 	db	0
  2176  007F7C                     STR_127:
  2177  007F7C  22                 	db	34
  2178  007F7D  25                 	db	37
  2179  007F7E  73                 	db	115	;'s'
  2180  007F7F  22                 	db	34
  2181  007F80  3A                 	db	58	;':'
  2182  007F81  22                 	db	34
  2183  007F82  00                 	db	0
  2184  007F83                     STR_77:
  2185  007F83  53                 	db	83	;'S'
  2186  007F84  54                 	db	84	;'T'
  2187  007F85  41                 	db	65	;'A'
  2188  007F86  4D                 	db	77	;'M'
  2189  007F87  41                 	db	65	;'A'
  2190  007F88  43                 	db	67	;'C'
  2191  007F89  00                 	db	0
  2192  007F8A                     STR_76:
  2193  007F8A  43                 	db	67	;'C'
  2194  007F8B  4C                 	db	76	;'L'
  2195  007F8C  4F                 	db	79	;'O'
  2196  007F8D  53                 	db	83	;'S'
  2197  007F8E  45                 	db	69	;'E'
  2198  007F8F  44                 	db	68	;'D'
  2199  007F90  00                 	db	0
  2200  007F91                     STR_7:
  2201  007F91  4E                 	db	78	;'N'
  2202  007F92  6F                 	db	111	;'o'
  2203  007F93  72                 	db	114	;'r'
  2204  007F94  6D                 	db	109	;'m'
  2205  007F95  61                 	db	97	;'a'
  2206  007F96  6C                 	db	108	;'l'
  2207  007F97  00                 	db	0
  2208  007F98                     STR_96:
  2209  007F98  4D                 	db	77	;'M'
  2210  007F99  61                 	db	97	;'a'
  2211  007F9A  6E                 	db	110	;'n'
  2212  007F9B  75                 	db	117	;'u'
  2213  007F9C  61                 	db	97	;'a'
  2214  007F9D  6C                 	db	108	;'l'
  2215  007F9E  00                 	db	0
  2216  007F9F                     STR_102:
  2217  007F9F  4C                 	db	76	;'L'
  2218  007FA0  69                 	db	105	;'i'
  2219  007FA1  67                 	db	103	;'g'
  2220  007FA2  61                 	db	97	;'a'
  2221  007FA3  64                 	db	100	;'d'
  2222  007FA4  6F                 	db	111	;'o'
  2223  007FA5  00                 	db	0
  2224  007FA6                     STR_117:
  2225  007FA6  4E                 	db	78	;'N'
  2226  007FA7  53                 	db	83	;'S'
  2227  007FA8  3A                 	db	58	;':'
  2228  007FA9  20                 	db	32
  2229  007FAA  25                 	db	37
  2230  007FAB  73                 	db	115	;'s'
  2231  007FAC  00                 	db	0
  2232  007FAD                     STR_25:
  2233  007FAD  41                 	db	65	;'A'
  2234  007FAE  63                 	db	99	;'c'
  2235  007FAF  63                 	db	99	;'c'
  2236  007FB0  65                 	db	101	;'e'
  2237  007FB1  70                 	db	112	;'p'
  2238  007FB2  74                 	db	116	;'t'
  2239  007FB3  00                 	db	0
  2240  007FB4  22                 	db	34
  2241  007FB5  25                 	db	37
  2242  007FB6  73                 	db	115	;'s'
  2243  007FB7  22                 	db	34
  2244  007FB8  3A                 	db	58	;':'
  2245  007FB9  00                 	db	0
  2246  007FBA                     STR_6:
  2247  007FBA  55                 	db	85	;'U'
  2248  007FBB  6D                 	db	109	;'m'
  2249  007FBC  69                 	db	105	;'i'
  2250  007FBD  64                 	db	100	;'d'
  2251  007FBE  6F                 	db	111	;'o'
  2252  007FBF  00                 	db	0
  2253  007FC0                     STR_47:
  2254  007FC0  25                 	db	37
  2255  007FC1  73                 	db	115	;'s'
  2256  007FC2  3A                 	db	58	;':'
  2257  007FC3  25                 	db	37
  2258  007FC4  73                 	db	115	;'s'
  2259  007FC5  00                 	db	0
  2260  007FC6                     STR_125:
  2261  007FC6  25                 	db	37
  2262  007FC7  73                 	db	115	;'s'
  2263  007FC8  25                 	db	37
  2264  007FC9  63                 	db	99	;'c'
  2265  007FCA  00                 	db	0
  2266  007FCB                     STR_72:
  2267  007FCB  73                 	db	115	;'s'
  2268  007FCC  61                 	db	97	;'a'
  2269  007FCD  76                 	db	118	;'v'
  2270  007FCE  65                 	db	101	;'e'
  2271  007FCF  00                 	db	0
  2272  007FD0                     STR_55:
  2273  007FD0  6C                 	db	108	;'l'
  2274  007FD1  69                 	db	105	;'i'
  2275  007FD2  6E                 	db	110	;'n'
  2276  007FD3  6B                 	db	107	;'k'
  2277  007FD4  00                 	db	0
  2278  007FD5                     STR_8:
  2279  007FD5  53                 	db	83	;'S'
  2280  007FD6  65                 	db	101	;'e'
  2281  007FD7  63                 	db	99	;'c'
  2282  007FD8  6F                 	db	111	;'o'
  2283  007FD9  00                 	db	0
  2284  007FDA                     STR_5:
  2285  007FDA  2D                 	db	45
  2286  007FDB  20                 	db	32
  2287  007FDC  2D                 	db	45
  2288  007FDD  00                 	db	0
  2289  007FDE                     STR_68:
  2290  007FDE  32                 	db	50	;'2'
  2291  007FDF  30                 	db	48	;'0'
  2292  007FE0  30                 	db	48	;'0'
  2293  007FE1  00                 	db	0
  2294  007FE2                     STR_10:
  2295  007FE2  41                 	db	65	;'A'
  2296  007FE3  4C                 	db	76	;'L'
  2297  007FE4  4C                 	db	76	;'L'
  2298  007FE5  00                 	db	0
  2299  007FE6                     STR_38:
  2300  007FE6  24                 	db	36
  2301  007FE7  23                 	db	35
  2302  007FE8  00                 	db	0
  2303  007FE9                     STR_40:
  2304  007FE9  23                 	db	35
  2305  007FEA  24                 	db	36
  2306  007FEB  00                 	db	0
  2307  007FEC                     STR_9:
  2308  007FEC  2D                 	db	45
  2309  007FED  2D                 	db	45
  2310  007FEE  00                 	db	0
  2311  007FEF                     STR_12:
  2312  007FEF  4F                 	db	79	;'O'
  2313  007FF0  4B                 	db	75	;'K'
  2314  007FF1  00                 	db	0
  2315  007FF2                     STR_43:
  2316  007FF2  69                 	db	105	;'i'
  2317  007FF3  70                 	db	112	;'p'
  2318  007FF4  00                 	db	0
  2319  007FF5                     STR_41:
  2320  007FF5  73                 	db	115	;'s'
  2321  007FF6  73                 	db	115	;'s'
  2322  007FF7  00                 	db	0
  2323  007FF8                     STR_42:
  2324  007FF8  70                 	db	112	;'p'
  2325  007FF9  77                 	db	119	;'w'
  2326  007FFA  00                 	db	0
  2327  007FFB                     STR_60:
  2328  007FFB  32                 	db	50	;'2'
  2329  007FFC  00                 	db	0
  2330  007FFD                     STR_61:
  2331  007FFD  34                 	db	52	;'4'
  2332  007FFE  00                 	db	0
  2333  0000                     
  2334                           ; #config settings
  2335  007FFF  00                 	db	0	; dummy byte at the end
  2336  0000                     
  2337                           	psect	cinit
  2338  005050                     __pcinit:
  2339                           	opt stack 0
  2340  005050                     start_initialization:
  2341                           	opt stack 0
  2342  005050                     __initialization:
  2343                           	opt stack 0
  2344                           
  2345                           ; Initialize objects allocated to BANK1 (12 bytes)
  2346                           ; load TBLPTR registers with __pidataBANK1
  2347  005050  0E2E               	movlw	low __pidataBANK1
  2348  005052  6EF6               	movwf	tblptrl,c
  2349  005054  0E5C               	movlw	high __pidataBANK1
  2350  005056  6EF7               	movwf	tblptrh,c
  2351  005058  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2352  00505A  6EF8               	movwf	tblptru,c
  2353  00505C  EE01  F0E6         	lfsr	0,__pdataBANK1
  2354  005060  EE10 F00C          	lfsr	1,12
  2355  005064                     copy_data0:
  2356  005064  0009               	tblrd		*+
  2357  005066  CFF5 FFEE          	movff	tablat,postinc0
  2358  00506A  50E5               	movf	postdec1,w,c
  2359  00506C  50E1               	movf	fsr1l,w,c
  2360  00506E  E1FA               	bnz	copy_data0
  2361                           
  2362                           ; Initialize objects allocated to BANK0 (3 bytes)
  2363                           ; load TBLPTR registers with __pidataBANK0
  2364  005070  0E79               	movlw	low __pidataBANK0
  2365  005072  6EF6               	movwf	tblptrl,c
  2366  005074  0E5C               	movlw	high __pidataBANK0
  2367  005076  6EF7               	movwf	tblptrh,c
  2368  005078  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2369  00507A  6EF8               	movwf	tblptru,c
  2370  00507C  0009               	tblrd		*+	;fetch initializer
  2371  00507E  CFF5 F0FD          	movff	tablat,__pdataBANK0
  2372  005082  0009               	tblrd		*+	;fetch initializer
  2373  005084  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
  2374  005088  0009               	tblrd		*+	;fetch initializer
  2375  00508A  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
  2376                           
  2377                           ; Initialize objects allocated to COMRAM (3 bytes)
  2378                           ; load TBLPTR registers with __pidataCOMRAM
  2379  00508E  0E76               	movlw	low __pidataCOMRAM
  2380  005090  6EF6               	movwf	tblptrl,c
  2381  005092  0E5C               	movlw	high __pidataCOMRAM
  2382  005094  6EF7               	movwf	tblptrh,c
  2383  005096  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2384  005098  6EF8               	movwf	tblptru,c
  2385  00509A  0009               	tblrd		*+	;fetch initializer
  2386  00509C  CFF5 F05C          	movff	tablat,__pdataCOMRAM
  2387  0050A0  0009               	tblrd		*+	;fetch initializer
  2388  0050A2  CFF5 F05D          	movff	tablat,__pdataCOMRAM+1
  2389  0050A6  0009               	tblrd		*+	;fetch initializer
  2390  0050A8  CFF5 F05E          	movff	tablat,__pdataCOMRAM+2
  2391                           
  2392                           ; Clear objects allocated to BANK2 (205 bytes)
  2393  0050AC  EE02  F000         	lfsr	0,__pbssBANK2
  2394  0050B0  0ECD               	movlw	205
  2395  0050B2                     clear_0:
  2396  0050B2  6AEE               	clrf	postinc0,c
  2397  0050B4  06E8               	decf	wreg,f,c
  2398  0050B6  E1FD               	bnz	clear_0
  2399                           
  2400                           ; Clear objects allocated to BANK1 (230 bytes)
  2401  0050B8  EE01  F000         	lfsr	0,__pbssBANK1
  2402  0050BC  0EE6               	movlw	230
  2403  0050BE                     clear_1:
  2404  0050BE  6AEE               	clrf	postinc0,c
  2405  0050C0  06E8               	decf	wreg,f,c
  2406  0050C2  E1FD               	bnz	clear_1
  2407                           
  2408                           ; Clear objects allocated to BANK0 (10 bytes)
  2409  0050C4  EE00  F0F3         	lfsr	0,__pbssBANK0
  2410  0050C8  0E0A               	movlw	10
  2411  0050CA                     clear_2:
  2412  0050CA  6AEE               	clrf	postinc0,c
  2413  0050CC  06E8               	decf	wreg,f,c
  2414  0050CE  E1FD               	bnz	clear_2
  2415                           
  2416                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  2417  0050D0  6A5B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  2418                           
  2419                           ; Clear objects allocated to COMRAM (42 bytes)
  2420  0050D2  EE00  F031         	lfsr	0,__pbssCOMRAM
  2421  0050D6  0E2A               	movlw	42
  2422  0050D8                     clear_3:
  2423  0050D8  6AEE               	clrf	postinc0,c
  2424  0050DA  06E8               	decf	wreg,f,c
  2425  0050DC  E1FD               	bnz	clear_3
  2426  0050DE                     end_of_initialization:
  2427                           	opt stack 0
  2428  0050DE                     __end_of__initialization:
  2429                           	opt stack 0
  2430  0050DE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2431  0050E0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2432  0050E2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2433  0050E4  6EF8               	movwf	tblptru,c
  2434  0050E6  0100               	movlb	0
  2435  0050E8  EF09  F000         	goto	_main	;jump to C main() function
  2436                           tblptru	equ	0xFF8
  2437                           tblptrh	equ	0xFF7
  2438                           tblptrl	equ	0xFF6
  2439                           tablat	equ	0xFF5
  2440                           postinc0	equ	0xFEE
  2441                           wreg	equ	0xFE8
  2442                           postdec1	equ	0xFE5
  2443                           fsr1l	equ	0xFE1
  2444                           
  2445                           	psect	bitbssCOMRAM
  2446  0002D8                     __pbitbssCOMRAM:
  2447                           	opt stack 0
  2448  0002D8                     _contador_fase_automatica:
  2449                           	opt stack 0
  2450  0002D8                     	ds	1
  2451  0002D9                     _md_seguranca:
  2452                           	opt stack 0
  2453  0002D9                     	ds	1
  2454  0002DA                     _blinkk:
  2455                           	opt stack 0
  2456  0002DA                     	ds	1
  2457                           tblptru	equ	0xFF8
  2458                           tblptrh	equ	0xFF7
  2459                           tblptrl	equ	0xFF6
  2460                           tablat	equ	0xFF5
  2461                           postinc0	equ	0xFEE
  2462                           wreg	equ	0xFE8
  2463                           postdec1	equ	0xFE5
  2464                           fsr1l	equ	0xFE1
  2465                           
  2466                           	psect	bssCOMRAM
  2467  000031                     __pbssCOMRAM:
  2468                           	opt stack 0
  2469  000031                     _t_controle_religar_buzzer:
  2470                           	opt stack 0
  2471  000031                     	ds	2
  2472  000033                     _t_controle_flap:
  2473                           	opt stack 0
  2474  000033                     	ds	2
  2475  000035                     _media_adc:
  2476                           	opt stack 0
  2477  000035                     	ds	1
  2478  000036                     _t_leitura_adc:
  2479                           	opt stack 0
  2480  000036                     	ds	1
  2481  000037                     _t_controle_temp_automatica:
  2482                           	opt stack 0
  2483  000037                     	ds	1
  2484  000038                     _t_controle_blink:
  2485                           	opt stack 0
  2486  000038                     	ds	1
  2487  000039                     _t_controle_buzzer:
  2488                           	opt stack 0
  2489  000039                     	ds	1
  2490  00003A                     _t_controle_fim_fases:
  2491                           	opt stack 0
  2492  00003A                     	ds	1
  2493  00003B                     _f_buzzer_falta_energia:
  2494                           	opt stack 0
  2495  00003B                     	ds	1
  2496  00003C                     __acao_flap:
  2497                           	opt stack 0
  2498  00003C                     	ds	1
  2499  00003D                     _f_wifi_processo:
  2500                           	opt stack 0
  2501  00003D                     	ds	1
  2502  00003E                     _t_wifi_restart:
  2503                           	opt stack 0
  2504  00003E                     	ds	1
  2505  00003F                     __BF_current:
  2506                           	opt stack 0
  2507  00003F                     	ds	1
  2508  000040                     __BF_i_count:
  2509                           	opt stack 0
  2510  000040                     	ds	1
  2511  000041                     __BF_enable_receive:
  2512                           	opt stack 0
  2513  000041                     	ds	1
  2514  000042                     _bt_flag:
  2515                           	opt stack 0
  2516  000042                     	ds	1
  2517  000043                     _leds:
  2518                           	opt stack 0
  2519  000043                     	ds	1
  2520  000044                     _ajuste_parametro:
  2521                           	opt stack 0
  2522  000044                     	ds	1
  2523  000045                     _opcaomenu:
  2524                           	opt stack 0
  2525  000045                     	ds	1
  2526  000046                     _hor:
  2527                           	opt stack 0
  2528  000046                     	ds	1
  2529  000047                     _min:
  2530                           	opt stack 0
  2531  000047                     	ds	1
  2532  000048                     _sec:
  2533                           	opt stack 0
  2534  000048                     	ds	1
  2535  000049                     _wifi_conectado:
  2536                           	opt stack 0
  2537  000049                     	ds	1
  2538  00004A                     _base_sec:
  2539                           	opt stack 0
  2540  00004A                     	ds	1
  2541  00004B                     _wifi_SENHA:
  2542                           	opt stack 0
  2543  00004B                     	ds	2
  2544  00004D                     _senha_desbloqueio_func:
  2545                           	opt stack 0
  2546  00004D                     	ds	1
  2547  00004E                     _wifi_habilita_alteracao:
  2548                           	opt stack 0
  2549  00004E                     	ds	1
  2550  00004F                     _h_subir_temp_automatica:
  2551                           	opt stack 0
  2552  00004F                     	ds	1
  2553  000050                     _h_buzzer:
  2554                           	opt stack 0
  2555  000050                     	ds	1
  2556  000051                     _h_flap:
  2557                           	opt stack 0
  2558  000051                     	ds	1
  2559  000052                     _h_abafador:
  2560                           	opt stack 0
  2561  000052                     	ds	1
  2562  000053                     _h_venotinha:
  2563                           	opt stack 0
  2564  000053                     	ds	1
  2565  000054                     _t_flap_intervalo:
  2566                           	opt stack 0
  2567  000054                     	ds	1
  2568  000055                     _t_flap_ligado:
  2569                           	opt stack 0
  2570  000055                     	ds	1
  2571  000056                     _t_fim_fase3:
  2572                           	opt stack 0
  2573  000056                     	ds	1
  2574  000057                     _t_fim_fase2:
  2575                           	opt stack 0
  2576  000057                     	ds	1
  2577  000058                     _t_fim_fase1:
  2578                           	opt stack 0
  2579  000058                     	ds	1
  2580  000059                     _tipo_modo_trabalho:
  2581                           	opt stack 0
  2582  000059                     	ds	1
  2583  00005A                     _fornalha:
  2584                           	opt stack 0
  2585  00005A                     	ds	1
  2586                           tblptru	equ	0xFF8
  2587                           tblptrh	equ	0xFF7
  2588                           tblptrl	equ	0xFF6
  2589                           tablat	equ	0xFF5
  2590                           postinc0	equ	0xFEE
  2591                           wreg	equ	0xFE8
  2592                           postdec1	equ	0xFE5
  2593                           fsr1l	equ	0xFE1
  2594                           
  2595                           	psect	dataCOMRAM
  2596  00005C                     __pdataCOMRAM:
  2597                           	opt stack 0
  2598  00005C                     __led:
  2599                           	opt stack 0
  2600  00005C                     	ds	1
  2601  00005D                     _umid:
  2602                           	opt stack 0
  2603  00005D                     	ds	1
  2604  00005E                     _f_falta_energia:
  2605                           	opt stack 0
  2606  00005E                     	ds	1
  2607                           tblptru	equ	0xFF8
  2608                           tblptrh	equ	0xFF7
  2609                           tblptrl	equ	0xFF6
  2610                           tablat	equ	0xFF5
  2611                           postinc0	equ	0xFEE
  2612                           wreg	equ	0xFE8
  2613                           postdec1	equ	0xFE5
  2614                           fsr1l	equ	0xFE1
  2615                           
  2616                           	psect	bssBANK0
  2617  0000F3                     __pbssBANK0:
  2618                           	opt stack 0
  2619  0000F3                     _umidajt:
  2620                           	opt stack 0
  2621  0000F3                     	ds	1
  2622  0000F4                     _tempajt:
  2623                           	opt stack 0
  2624  0000F4                     	ds	1
  2625  0000F5                     _clima:
  2626                           	opt stack 0
  2627  0000F5                     	ds	1
  2628  0000F6                     _fase:
  2629                           	opt stack 0
  2630  0000F6                     	ds	1
  2631  0000F7                     _h_modo_seguranca:
  2632                           	opt stack 0
  2633  0000F7                     	ds	1
  2634  0000F8                     _t_religar_ventoinha_automatica:
  2635                           	opt stack 0
  2636  0000F8                     	ds	1
  2637  0000F9                     _t_temp_automatica:
  2638                           	opt stack 0
  2639  0000F9                     	ds	1
  2640  0000FA                     _tipo_sensor_umidade:
  2641                           	opt stack 0
  2642  0000FA                     	ds	1
  2643  0000FB                     _trava_fase:
  2644                           	opt stack 0
  2645  0000FB                     	ds	1
  2646  0000FC                     _buzzer:
  2647                           	opt stack 0
  2648  0000FC                     	ds	1
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postdec1	equ	0xFE5
  2656                           fsr1l	equ	0xFE1
  2657                           
  2658                           	psect	dataBANK0
  2659  0000FD                     __pdataBANK0:
  2660                           	opt stack 0
  2661  0000FD                     _menu:
  2662                           	opt stack 0
  2663  0000FD                     	ds	1
  2664  0000FE                     _temp:
  2665                           	opt stack 0
  2666  0000FE                     	ds	1
  2667  0000FF                     _t_buzzer_religar:
  2668                           	opt stack 0
  2669  0000FF                     	ds	1
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           postinc0	equ	0xFEE
  2675                           wreg	equ	0xFE8
  2676                           postdec1	equ	0xFE5
  2677                           fsr1l	equ	0xFE1
  2678                           
  2679                           	psect	bssBANK1
  2680  000100                     __pbssBANK1:
  2681                           	opt stack 0
  2682  000100                     __umid:
  2683                           	opt stack 0
  2684  000100                     	ds	33
  2685  000121                     __temp:
  2686                           	opt stack 0
  2687  000121                     	ds	33
  2688  000142                     getIntJSON@F274:
  2689                           	opt stack 0
  2690  000142                     	ds	10
  2691  00014C                     _t_controle_modo_seguranca:
  2692                           	opt stack 0
  2693  00014C                     	ds	2
  2694  00014E                     _t_controle_religar_ventoinha:
  2695                           	opt stack 0
  2696  00014E                     	ds	2
  2697  000150                     __sec:
  2698                           	opt stack 0
  2699  000150                     	ds	1
  2700  000151                     _lcd_rfsh:
  2701                           	opt stack 0
  2702  000151                     	ds	1
  2703  000152                     _line4:
  2704                           	opt stack 0
  2705  000152                     	ds	21
  2706  000167                     _line3:
  2707                           	opt stack 0
  2708  000167                     	ds	21
  2709  00017C                     _line2:
  2710                           	opt stack 0
  2711  00017C                     	ds	21
  2712  000191                     _line1:
  2713                           	opt stack 0
  2714  000191                     	ds	21
  2715  0001A6                     _ipServer:
  2716                           	opt stack 0
  2717  0001A6                     	ds	20
  2718  0001BA                     _senha:
  2719                           	opt stack 0
  2720  0001BA                     	ds	15
  2721  0001C9                     _ssid:
  2722                           	opt stack 0
  2723  0001C9                     	ds	15
  2724  0001D8                     __BF_start:
  2725                           	opt stack 0
  2726  0001D8                     	ds	10
  2727  0001E2                     _portServer:
  2728                           	opt stack 0
  2729  0001E2                     	ds	4
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           postinc0	equ	0xFEE
  2735                           wreg	equ	0xFE8
  2736                           postdec1	equ	0xFE5
  2737                           fsr1l	equ	0xFE1
  2738                           
  2739                           	psect	dataBANK1
  2740  0001E6                     __pdataBANK1:
  2741                           	opt stack 0
  2742  0001E6                     _wifi_MAC:
  2743                           	opt stack 0
  2744  0001E6                     	ds	12
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           postdec1	equ	0xFE5
  2752                           fsr1l	equ	0xFE1
  2753                           
  2754                           	psect	bssBANK2
  2755  000200                     __pbssBANK2:
  2756                           	opt stack 0
  2757  000200                     getStringJSON@F288:
  2758                           	opt stack 0
  2759  000200                     	ds	25
  2760  000219                     getStringJSON@F292:
  2761                           	opt stack 0
  2762  000219                     	ds	20
  2763  00022D                     getStringJSON@F290:
  2764                           	opt stack 0
  2765  00022D                     	ds	20
  2766  000241                     getIntJSON@F278:
  2767                           	opt stack 0
  2768  000241                     	ds	20
  2769  000255                     getIntJSON@F276:
  2770                           	opt stack 0
  2771  000255                     	ds	20
  2772  000269                     _bufferSerial:
  2773                           	opt stack 0
  2774  000269                     	ds	100
  2775                           tblptru	equ	0xFF8
  2776                           tblptrh	equ	0xFF7
  2777                           tblptrl	equ	0xFF6
  2778                           tablat	equ	0xFF5
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           postdec1	equ	0xFE5
  2782                           fsr1l	equ	0xFE1
  2783                           
  2784                           	psect	cstackBANK0
  2785  000060                     __pcstackBANK0:
  2786                           	opt stack 0
  2787  000060                     ??_isdigit:
  2788  000060                     ??_I2C_Wait:
  2789  000060                     ?_strlen:
  2790                           	opt stack 0
  2791  000060                     ?_faseAtual:
  2792                           	opt stack 0
  2793  000060                     ?_climaAtual:
  2794                           	opt stack 0
  2795  000060                     ?_strchr:
  2796                           	opt stack 0
  2797  000060                     ?_tabelaUmidade:
  2798                           	opt stack 0
  2799  000060                     ?_readADC:
  2800                           	opt stack 0
  2801  000060                     ?___wmul:
  2802                           	opt stack 0
  2803  000060                     ?___lwdiv:
  2804                           	opt stack 0
  2805  000060                     ?___ftpack:
  2806                           	opt stack 0
  2807  000060                     ?___lldiv:
  2808                           	opt stack 0
  2809  000060                     setLed@acao:
  2810                           	opt stack 0
  2811  000060                     Lcd_Port@a:
  2812                           	opt stack 0
  2813  000060                     btPress@bt:
  2814                           	opt stack 0
  2815  000060                     putch@c:
  2816                           	opt stack 0
  2817  000060                     blink@line:
  2818                           	opt stack 0
  2819  000060                     tabelaUmidade@_tmp:
  2820                           	opt stack 0
  2821  000060                     faseAtual@_fase:
  2822                           	opt stack 0
  2823  000060                     delay@x:
  2824                           	opt stack 0
  2825  000060                     ___wmul@multiplier:
  2826                           	opt stack 0
  2827  000060                     ___lwdiv@dividend:
  2828                           	opt stack 0
  2829  000060                     memset@p1:
  2830                           	opt stack 0
  2831  000060                     strlen@s:
  2832                           	opt stack 0
  2833  000060                     strchr@ptr:
  2834                           	opt stack 0
  2835  000060                     ___ftpack@arg:
  2836                           	opt stack 0
  2837  000060                     ___ftge@ff1:
  2838                           	opt stack 0
  2839  000060                     ___lldiv@dividend:
  2840                           	opt stack 0
  2841                           
  2842                           ; 4 bytes @ 0x0
  2843  000060                     	ds	1
  2844  000061                     ??_Lcd_Cmd:
  2845  000061                     ?_I2C_Read:
  2846                           	opt stack 0
  2847  000061                     setLed@led:
  2848                           	opt stack 0
  2849  000061                     Lcd_Write_Char@tempp:
  2850                           	opt stack 0
  2851  000061                     _isdigit$2055:
  2852                           	opt stack 0
  2853  000061                     I2C_Write@d:
  2854                           	opt stack 0
  2855  000061                     I2C_Read@a:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x1
  2859  000061                     	ds	1
  2860  000062                     ??_delay:
  2861  000062                     ??_strlen:
  2862  000062                     ??_readADC:
  2863  000062                     Lcd_Cmd@a:
  2864                           	opt stack 0
  2865  000062                     Lcd_Write_Char@y:
  2866                           	opt stack 0
  2867  000062                     blink@start:
  2868                           	opt stack 0
  2869  000062                     climaAtual@c:
  2870                           	opt stack 0
  2871  000062                     isdigit@c:
  2872                           	opt stack 0
  2873  000062                     tabelaUmidade@_clima:
  2874                           	opt stack 0
  2875  000062                     faseAtual@_tempajt:
  2876                           	opt stack 0
  2877  000062                     acaoFlap@tempo_ativado:
  2878                           	opt stack 0
  2879  000062                     ___wmul@multiplicand:
  2880                           	opt stack 0
  2881  000062                     ___lwdiv@divisor:
  2882                           	opt stack 0
  2883  000062                     memset@c:
  2884                           	opt stack 0
  2885  000062                     strchr@chr:
  2886                           	opt stack 0
  2887                           
  2888                           ; 2 bytes @ 0x2
  2889  000062                     	ds	1
  2890  000063                     ??_Lcd_Init:
  2891  000063                     Lcd_Set_Cursor@b:
  2892                           	opt stack 0
  2893  000063                     Lcd_Write_Char@a:
  2894                           	opt stack 0
  2895  000063                     blink@end:
  2896                           	opt stack 0
  2897  000063                     writeEEPROM_ext@data:
  2898                           	opt stack 0
  2899  000063                     ___ftpack@exp:
  2900                           	opt stack 0
  2901  000063                     I2C_Read@temp:
  2902                           	opt stack 0
  2903  000063                     ___ftge@ff2:
  2904                           	opt stack 0
  2905                           
  2906                           ; 3 bytes @ 0x3
  2907  000063                     	ds	1
  2908  000064                     ??_strchr:
  2909  000064                     ??_criaCaracteresCGRAM:
  2910  000064                     Lcd_Set_Cursor@a:
  2911                           	opt stack 0
  2912  000064                     blink@i:
  2913                           	opt stack 0
  2914  000064                     tabelaUmidade@_tipo_sensor:
  2915                           	opt stack 0
  2916  000064                     writeEEPROM_ext@adress:
  2917                           	opt stack 0
  2918  000064                     faseAtual@_fasee:
  2919                           	opt stack 0
  2920  000064                     ___ftpack@sign:
  2921                           	opt stack 0
  2922  000064                     Lcd_Write_String@a:
  2923                           	opt stack 0
  2924  000064                     acaoFlap@tempo_aguardar:
  2925                           	opt stack 0
  2926  000064                     ___wmul@product:
  2927                           	opt stack 0
  2928  000064                     ___lwdiv@quotient:
  2929                           	opt stack 0
  2930  000064                     memset@n:
  2931                           	opt stack 0
  2932  000064                     strlen@cp:
  2933                           	opt stack 0
  2934  000064                     ___lldiv@divisor:
  2935                           	opt stack 0
  2936                           
  2937                           ; 4 bytes @ 0x4
  2938  000064                     	ds	1
  2939  000065                     ??___ftpack:
  2940  000065                     ??_tabelaUmidade:
  2941  000065                     Lcd_Set_Cursor@z:
  2942                           	opt stack 0
  2943  000065                     readEEPROM_ext@adress:
  2944                           	opt stack 0
  2945  000065                     faseAtual@tp:
  2946                           	opt stack 0
  2947  000065                     setRangeValor@_var_ajt:
  2948                           	opt stack 0
  2949                           
  2950                           ; 2 bytes @ 0x5
  2951  000065                     	ds	1
  2952  000066                     ??_acaoFlap:
  2953  000066                     ??___ftge:
  2954  000066                     ?_strncmp:
  2955                           	opt stack 0
  2956  000066                     Lcd_Set_Cursor@y:
  2957                           	opt stack 0
  2958  000066                     Lcd_Write_String@i:
  2959                           	opt stack 0
  2960  000066                     readEEPROM_ext@data:
  2961                           	opt stack 0
  2962  000066                     faseAtual@tmpajt:
  2963                           	opt stack 0
  2964  000066                     ___lwdiv@counter:
  2965                           	opt stack 0
  2966  000066                     readADC@digital:
  2967                           	opt stack 0
  2968  000066                     memset@p:
  2969                           	opt stack 0
  2970  000066                     strncmp@s1:
  2971                           	opt stack 0
  2972                           
  2973                           ; 2 bytes @ 0x6
  2974  000066                     	ds	1
  2975  000067                     ?___lwmod:
  2976                           	opt stack 0
  2977  000067                     Lcd_Set_Cursor@temp:
  2978                           	opt stack 0
  2979  000067                     tabelaUmidade@_umd:
  2980                           	opt stack 0
  2981  000067                     setRangeValor@_min:
  2982                           	opt stack 0
  2983  000067                     acaoFlap@acao:
  2984                           	opt stack 0
  2985  000067                     ___lwmod@dividend:
  2986                           	opt stack 0
  2987  000067                     criaCaracteresCGRAM@character:
  2988                           	opt stack 0
  2989                           
  2990                           ; 56 bytes @ 0x7
  2991  000067                     	ds	1
  2992  000068                     ??_controle:
  2993  000068                     setRangeValor@_max:
  2994                           	opt stack 0
  2995  000068                     readADC@canal:
  2996                           	opt stack 0
  2997  000068                     atualizaLCD@line1:
  2998                           	opt stack 0
  2999  000068                     setUmidade@_umdajt:
  3000                           	opt stack 0
  3001  000068                     strncmp@s2:
  3002                           	opt stack 0
  3003  000068                     ___lldiv@quotient:
  3004                           	opt stack 0
  3005                           
  3006                           ; 4 bytes @ 0x8
  3007  000068                     	ds	1
  3008  000069                     ?___lwtoft:
  3009                           	opt stack 0
  3010  000069                     setRangeValor@end_eeprom:
  3011                           	opt stack 0
  3012  000069                     ___lwmod@divisor:
  3013                           	opt stack 0
  3014  000069                     ___lwtoft@c:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x9
  3018  000069                     	ds	1
  3019  00006A                     ??_setRangeValor:
  3020  00006A                     atualizaLCD@line2:
  3021                           	opt stack 0
  3022  00006A                     setUmidade@_tempajt:
  3023                           	opt stack 0
  3024  00006A                     strncmp@len:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0xA
  3028  00006A                     	ds	1
  3029  00006B                     ___lwmod@counter:
  3030                           	opt stack 0
  3031                           
  3032                           ; 1 bytes @ 0xB
  3033  00006B                     	ds	1
  3034  00006C                     ??_strncmp:
  3035  00006C                     ?__doprnt:
  3036                           	opt stack 0
  3037  00006C                     ?___ftmul:
  3038                           	opt stack 0
  3039  00006C                     ___lldiv@counter:
  3040                           	opt stack 0
  3041  00006C                     atualizaLCD@line3:
  3042                           	opt stack 0
  3043  00006C                     setUmidade@_clima:
  3044                           	opt stack 0
  3045  00006C                     __doprnt@pb:
  3046                           	opt stack 0
  3047  00006C                     ___ftmul@f1:
  3048                           	opt stack 0
  3049                           
  3050                           ; 3 bytes @ 0xC
  3051  00006C                     	ds	1
  3052  00006D                     setRangeValor@_acao:
  3053                           	opt stack 0
  3054  00006D                     I2C_Master_Init@c:
  3055                           	opt stack 0
  3056                           
  3057                           ; 4 bytes @ 0xD
  3058  00006D                     	ds	1
  3059  00006E                     setUmidade@tp:
  3060                           	opt stack 0
  3061  00006E                     atualizaLCD@line4:
  3062                           	opt stack 0
  3063  00006E                     setRangeValor@_aux:
  3064                           	opt stack 0
  3065  00006E                     __doprnt@f:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0xE
  3069  00006E                     	ds	1
  3070  00006F                     ?_strstr:
  3071                           	opt stack 0
  3072  00006F                     _setUmidade$1297:
  3073                           	opt stack 0
  3074  00006F                     strstr@s1:
  3075                           	opt stack 0
  3076  00006F                     ___ftmul@f2:
  3077                           	opt stack 0
  3078                           
  3079                           ; 3 bytes @ 0xF
  3080  00006F                     	ds	1
  3081  000070                     atualizaLCD@i:
  3082                           	opt stack 0
  3083  000070                     __doprnt@ap:
  3084                           	opt stack 0
  3085                           
  3086                           ; 2 bytes @ 0x10
  3087  000070                     	ds	1
  3088  000071                     ??_I2C_Master_Init:
  3089  000071                     _setUmidade$1298:
  3090                           	opt stack 0
  3091  000071                     strstr@s2:
  3092                           	opt stack 0
  3093                           
  3094                           ; 2 bytes @ 0x11
  3095  000071                     	ds	1
  3096  000072                     ??___ftmul:
  3097  000072                     ??__doprnt:
  3098                           
  3099                           ; 1 bytes @ 0x12
  3100  000072                     	ds	1
  3101  000073                     ??_strstr:
  3102  000073                     _setUmidade$1299:
  3103                           	opt stack 0
  3104                           
  3105                           ; 2 bytes @ 0x13
  3106  000073                     	ds	1
  3107  000074                     findBufferSerial@key:
  3108                           	opt stack 0
  3109                           
  3110                           ; 2 bytes @ 0x14
  3111  000074                     	ds	1
  3112  000075                     ___ftmul@exp:
  3113                           	opt stack 0
  3114  000075                     _setUmidade$1300:
  3115                           	opt stack 0
  3116                           
  3117                           ; 2 bytes @ 0x15
  3118  000075                     	ds	1
  3119  000076                     __doprnt@prec:
  3120                           	opt stack 0
  3121  000076                     ___ftmul@f3_as_product:
  3122                           	opt stack 0
  3123                           
  3124                           ; 3 bytes @ 0x16
  3125  000076                     	ds	1
  3126  000077                     setUmidade@_tmpajt:
  3127                           	opt stack 0
  3128  000077                     __doprnt@flag:
  3129                           	opt stack 0
  3130                           
  3131                           ; 1 bytes @ 0x17
  3132  000077                     	ds	1
  3133  000078                     setUmidade@_clim:
  3134                           	opt stack 0
  3135  000078                     __doprnt@val:
  3136                           	opt stack 0
  3137                           
  3138                           ; 2 bytes @ 0x18
  3139  000078                     	ds	1
  3140  000079                     setUmidade@_umd:
  3141                           	opt stack 0
  3142  000079                     ___ftmul@cntr:
  3143                           	opt stack 0
  3144                           
  3145                           ; 1 bytes @ 0x19
  3146  000079                     	ds	1
  3147  00007A                     ___ftmul@sign:
  3148                           	opt stack 0
  3149  00007A                     __doprnt@len:
  3150                           	opt stack 0
  3151                           
  3152                           ; 2 bytes @ 0x1A
  3153  00007A                     	ds	1
  3154  00007B                     ?___ftadd:
  3155                           	opt stack 0
  3156  00007B                     ___ftadd@f1:
  3157                           	opt stack 0
  3158                           
  3159                           ; 3 bytes @ 0x1B
  3160  00007B                     	ds	1
  3161  00007C                     __doprnt@cp:
  3162                           	opt stack 0
  3163                           
  3164                           ; 2 bytes @ 0x1C
  3165  00007C                     	ds	2
  3166  00007E                     __doprnt@width:
  3167                           	opt stack 0
  3168  00007E                     ___ftadd@f2:
  3169                           	opt stack 0
  3170                           
  3171                           ; 3 bytes @ 0x1E
  3172  00007E                     	ds	2
  3173  000080                     __doprnt@c:
  3174                           	opt stack 0
  3175                           
  3176                           ; 1 bytes @ 0x20
  3177  000080                     	ds	1
  3178  000081                     ??___ftadd:
  3179  000081                     ?_printf:
  3180                           	opt stack 0
  3181  000081                     ?_sprintf:
  3182                           	opt stack 0
  3183  000081                     printf@f:
  3184                           	opt stack 0
  3185  000081                     sprintf@wh:
  3186                           	opt stack 0
  3187                           
  3188                           ; 2 bytes @ 0x21
  3189  000081                     	ds	2
  3190  000083                     sprintf@f:
  3191                           	opt stack 0
  3192                           
  3193                           ; 2 bytes @ 0x23
  3194  000083                     	ds	1
  3195  000084                     ___ftadd@sign:
  3196                           	opt stack 0
  3197                           
  3198                           ; 1 bytes @ 0x24
  3199  000084                     	ds	1
  3200  000085                     ___ftadd@exp2:
  3201                           	opt stack 0
  3202                           
  3203                           ; 1 bytes @ 0x25
  3204  000085                     	ds	1
  3205  000086                     ___ftadd@exp1:
  3206                           	opt stack 0
  3207                           
  3208                           ; 1 bytes @ 0x26
  3209  000086                     	ds	1
  3210  000087                     ?___ftdiv:
  3211                           	opt stack 0
  3212  000087                     ___ftdiv@f1:
  3213                           	opt stack 0
  3214                           
  3215                           ; 3 bytes @ 0x27
  3216  000087                     	ds	3
  3217  00008A                     ___ftdiv@f2:
  3218                           	opt stack 0
  3219                           
  3220                           ; 3 bytes @ 0x2A
  3221  00008A                     	ds	1
  3222  00008B                     sprintf@ap:
  3223                           	opt stack 0
  3224                           
  3225                           ; 2 bytes @ 0x2B
  3226  00008B                     	ds	2
  3227  00008D                     ??___ftdiv:
  3228  00008D                     sprintf@pb:
  3229                           	opt stack 0
  3230                           
  3231                           ; 4 bytes @ 0x2D
  3232  00008D                     	ds	3
  3233  000090                     ___ftdiv@cntr:
  3234                           	opt stack 0
  3235                           
  3236                           ; 1 bytes @ 0x30
  3237  000090                     	ds	1
  3238  000091                     getStringJSON@buff:
  3239                           	opt stack 0
  3240  000091                     setKeyStartReceiveSerial@start:
  3241                           	opt stack 0
  3242  000091                     ___ftdiv@f3:
  3243                           	opt stack 0
  3244                           
  3245                           ; 3 bytes @ 0x31
  3246  000091                     	ds	2
  3247  000093                     getStringJSON@key:
  3248                           	opt stack 0
  3249                           
  3250                           ; 2 bytes @ 0x33
  3251  000093                     	ds	1
  3252  000094                     ___ftdiv@exp:
  3253                           	opt stack 0
  3254                           
  3255                           ; 1 bytes @ 0x34
  3256  000094                     	ds	1
  3257  000095                     ___ftdiv@sign:
  3258                           	opt stack 0
  3259  000095                     getStringJSON@ret:
  3260                           	opt stack 0
  3261                           
  3262                           ; 2 bytes @ 0x35
  3263  000095                     	ds	1
  3264  000096                     ?___fttol:
  3265                           	opt stack 0
  3266  000096                     ___fttol@f1:
  3267                           	opt stack 0
  3268                           
  3269                           ; 3 bytes @ 0x36
  3270  000096                     	ds	1
  3271  000097                     ??_getStringJSON:
  3272                           
  3273                           ; 1 bytes @ 0x37
  3274  000097                     	ds	2
  3275  000099                     getStringJSON@res:
  3276                           	opt stack 0
  3277                           
  3278                           ; 25 bytes @ 0x39
  3279  000099                     	ds	1
  3280  00009A                     ??___fttol:
  3281                           
  3282                           ; 1 bytes @ 0x3A
  3283  00009A                     	ds	5
  3284  00009F                     ___fttol@sign1:
  3285                           	opt stack 0
  3286  00009F                     _criaCaracteresCGRAM$1229:
  3287                           	opt stack 0
  3288                           
  3289                           ; 2 bytes @ 0x3F
  3290  00009F                     	ds	1
  3291  0000A0                     ___fttol@lval:
  3292                           	opt stack 0
  3293                           
  3294                           ; 4 bytes @ 0x40
  3295  0000A0                     	ds	1
  3296  0000A1                     criaCaracteresCGRAM@k:
  3297                           	opt stack 0
  3298                           
  3299                           ; 1 bytes @ 0x41
  3300  0000A1                     	ds	1
  3301  0000A2                     criaCaracteresCGRAM@j:
  3302                           	opt stack 0
  3303                           
  3304                           ; 1 bytes @ 0x42
  3305  0000A2                     	ds	1
  3306  0000A3                     criaCaracteresCGRAM@i:
  3307                           	opt stack 0
  3308                           
  3309                           ; 1 bytes @ 0x43
  3310  0000A3                     	ds	1
  3311  0000A4                     ___fttol@exp1:
  3312                           	opt stack 0
  3313                           
  3314                           ; 1 bytes @ 0x44
  3315  0000A4                     	ds	1
  3316  0000A5                     _getSensors$1516:
  3317                           	opt stack 0
  3318                           
  3319                           ; 3 bytes @ 0x45
  3320  0000A5                     	ds	3
  3321  0000A8                     _getSensors$1518:
  3322                           	opt stack 0
  3323                           
  3324                           ; 3 bytes @ 0x48
  3325  0000A8                     	ds	3
  3326  0000AB                     _getSensors$1514:
  3327                           	opt stack 0
  3328                           
  3329                           ; 2 bytes @ 0x4B
  3330  0000AB                     	ds	2
  3331  0000AD                     getSensors@auxx:
  3332                           	opt stack 0
  3333                           
  3334                           ; 3 bytes @ 0x4D
  3335  0000AD                     	ds	3
  3336  0000B0                     _getSensors$2517:
  3337                           	opt stack 0
  3338                           
  3339                           ; 3 bytes @ 0x50
  3340  0000B0                     	ds	2
  3341  0000B2                     getStringJSON@expected:
  3342                           	opt stack 0
  3343                           
  3344                           ; 20 bytes @ 0x52
  3345  0000B2                     	ds	1
  3346  0000B3                     getSensors@i:
  3347                           	opt stack 0
  3348                           
  3349                           ; 1 bytes @ 0x53
  3350  0000B3                     	ds	1
  3351  0000B4                     getSensors@aux:
  3352                           	opt stack 0
  3353                           
  3354                           ; 3 bytes @ 0x54
  3355  0000B4                     	ds	9
  3356  0000BD                     printf@ap:
  3357                           	opt stack 0
  3358                           
  3359                           ; 2 bytes @ 0x5D
  3360  0000BD                     	ds	2
  3361  0000BF                     printf@pb:
  3362                           	opt stack 0
  3363                           
  3364                           ; 4 bytes @ 0x5F
  3365  0000BF                     	ds	4
  3366  0000C3                     ??_enviaDadosWifi:
  3367                           
  3368                           ; 1 bytes @ 0x63
  3369  0000C3                     	ds	2
  3370  0000C5                     enviaDadosWifi@AUX:
  3371                           	opt stack 0
  3372                           
  3373                           ; 15 bytes @ 0x65
  3374  0000C5                     	ds	1
  3375  0000C6                     getStringJSON@attr:
  3376                           	opt stack 0
  3377                           
  3378                           ; 20 bytes @ 0x66
  3379  0000C6                     	ds	14
  3380  0000D4                     _enviaDadosWifi$2516:
  3381                           	opt stack 0
  3382                           
  3383                           ; 2 bytes @ 0x74
  3384  0000D4                     	ds	2
  3385  0000D6                     enviaDadosWifi@j:
  3386                           	opt stack 0
  3387                           
  3388                           ; 1 bytes @ 0x76
  3389  0000D6                     	ds	1
  3390  0000D7                     enviaDadosWifi@men:
  3391                           	opt stack 0
  3392                           
  3393                           ; 1 bytes @ 0x77
  3394  0000D7                     	ds	1
  3395  0000D8                     enviaDadosWifi@i:
  3396                           	opt stack 0
  3397                           
  3398                           ; 1 bytes @ 0x78
  3399  0000D8                     	ds	1
  3400  0000D9                     enviaDadosWifi@i_1393:
  3401                           	opt stack 0
  3402                           
  3403                           ; 1 bytes @ 0x79
  3404  0000D9                     	ds	1
  3405  0000DA                     getStringJSON@isValid:
  3406                           	opt stack 0
  3407                           
  3408                           ; 1 bytes @ 0x7A
  3409  0000DA                     	ds	1
  3410  0000DB                     getStringJSON@j:
  3411                           	opt stack 0
  3412                           
  3413                           ; 2 bytes @ 0x7B
  3414  0000DB                     	ds	2
  3415  0000DD                     getStringJSON@find:
  3416                           	opt stack 0
  3417                           
  3418                           ; 1 bytes @ 0x7D
  3419  0000DD                     	ds	1
  3420  0000DE                     getStringJSON@i:
  3421                           	opt stack 0
  3422                           
  3423                           ; 2 bytes @ 0x7E
  3424  0000DE                     	ds	2
  3425  0000E0                     alterarDadosConexaoConfigWifi@i:
  3426                           	opt stack 0
  3427                           
  3428                           ; 1 bytes @ 0x80
  3429  0000E0                     	ds	1
  3430  0000E1                     ??_main:
  3431                           
  3432                           ; 1 bytes @ 0x81
  3433  0000E1                     	ds	1
  3434  0000E2                     _main$2518:
  3435                           	opt stack 0
  3436                           
  3437                           ; 2 bytes @ 0x82
  3438  0000E2                     	ds	2
  3439  0000E4                     _main$1626:
  3440                           	opt stack 0
  3441                           
  3442                           ; 2 bytes @ 0x84
  3443  0000E4                     	ds	2
  3444  0000E6                     _main$1627:
  3445                           	opt stack 0
  3446                           
  3447                           ; 2 bytes @ 0x86
  3448  0000E6                     	ds	2
  3449  0000E8                     _main$1630:
  3450                           	opt stack 0
  3451                           
  3452                           ; 2 bytes @ 0x88
  3453  0000E8                     	ds	2
  3454  0000EA                     _main$1635:
  3455                           	opt stack 0
  3456                           
  3457                           ; 2 bytes @ 0x8A
  3458  0000EA                     	ds	2
  3459  0000EC                     _main$1642:
  3460                           	opt stack 0
  3461                           
  3462                           ; 2 bytes @ 0x8C
  3463  0000EC                     	ds	2
  3464  0000EE                     _main$1647:
  3465                           	opt stack 0
  3466                           
  3467                           ; 2 bytes @ 0x8E
  3468  0000EE                     	ds	2
  3469  0000F0                     _main$1652:
  3470                           	opt stack 0
  3471                           
  3472                           ; 2 bytes @ 0x90
  3473  0000F0                     	ds	2
  3474  0000F2                     main@i:
  3475                           	opt stack 0
  3476                           
  3477                           ; 1 bytes @ 0x92
  3478  0000F2                     	ds	1
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           postinc0	equ	0xFEE
  3484                           wreg	equ	0xFE8
  3485                           postdec1	equ	0xFE5
  3486                           fsr1l	equ	0xFE1
  3487                           
  3488                           	psect	cstackCOMRAM
  3489  000001                     __pcstackCOMRAM:
  3490                           	opt stack 0
  3491  000001                     ??i2_I2C_Wait:
  3492  000001                     ?i2_strlen:
  3493                           	opt stack 0
  3494  000001                     i2delay@x:
  3495                           	opt stack 0
  3496  000001                     i2strlen@s:
  3497                           	opt stack 0
  3498                           
  3499                           ; 2 bytes @ 0x0
  3500  000001                     	ds	1
  3501  000002                     ?i2_I2C_Read:
  3502                           	opt stack 0
  3503  000002                     i2I2C_Write@d:
  3504                           	opt stack 0
  3505  000002                     i2I2C_Read@a:
  3506                           	opt stack 0
  3507                           
  3508                           ; 2 bytes @ 0x1
  3509  000002                     	ds	1
  3510  000003                     ??i2_delay:
  3511  000003                     ??i2_strlen:
  3512                           
  3513                           ; 1 bytes @ 0x2
  3514  000003                     	ds	1
  3515  000004                     i2writeEEPROM_ext@data:
  3516                           	opt stack 0
  3517  000004                     i2I2C_Read@temp:
  3518                           	opt stack 0
  3519                           
  3520                           ; 2 bytes @ 0x3
  3521  000004                     	ds	1
  3522  000005                     i2writeEEPROM_ext@adress:
  3523                           	opt stack 0
  3524  000005                     i2strlen@cp:
  3525                           	opt stack 0
  3526                           
  3527                           ; 2 bytes @ 0x4
  3528  000005                     	ds	1
  3529  000006                     i2setRangeValor@_var_ajt:
  3530                           	opt stack 0
  3531                           
  3532                           ; 2 bytes @ 0x5
  3533  000006                     	ds	1
  3534  000007                     ??_receiveByteSerial:
  3535                           
  3536                           ; 1 bytes @ 0x6
  3537  000007                     	ds	1
  3538  000008                     i2setRangeValor@_min:
  3539                           	opt stack 0
  3540                           
  3541                           ; 1 bytes @ 0x7
  3542  000008                     	ds	1
  3543  000009                     receiveByteSerial@byte:
  3544                           	opt stack 0
  3545  000009                     i2setRangeValor@_max:
  3546                           	opt stack 0
  3547                           
  3548                           ; 1 bytes @ 0x8
  3549  000009                     	ds	1
  3550  00000A                     i2setRangeValor@end_eeprom:
  3551                           	opt stack 0
  3552                           
  3553                           ; 1 bytes @ 0x9
  3554  00000A                     	ds	1
  3555  00000B                     ??i2_setRangeValor:
  3556                           
  3557                           ; 1 bytes @ 0xA
  3558  00000B                     	ds	3
  3559  00000E                     i2setRangeValor@_acao:
  3560                           	opt stack 0
  3561                           
  3562                           ; 1 bytes @ 0xD
  3563  00000E                     	ds	1
  3564  00000F                     i2setRangeValor@_aux:
  3565                           	opt stack 0
  3566                           
  3567                           ; 2 bytes @ 0xE
  3568  00000F                     	ds	2
  3569  000011                     ??_timer:
  3570                           
  3571                           ; 1 bytes @ 0x10
  3572  000011                     	ds	7
  3573  000018                     _timer$1410:
  3574                           	opt stack 0
  3575                           
  3576                           ; 2 bytes @ 0x17
  3577  000018                     	ds	2
  3578  00001A                     _timer$1411:
  3579                           	opt stack 0
  3580                           
  3581                           ; 2 bytes @ 0x19
  3582  00001A                     	ds	2
  3583  00001C                     _timer$1412:
  3584                           	opt stack 0
  3585                           
  3586                           ; 2 bytes @ 0x1B
  3587  00001C                     	ds	2
  3588  00001E                     ??_TIMER0:
  3589                           
  3590                           ; 1 bytes @ 0x1D
  3591  00001E                     	ds	18
  3592  000030                     TIMER0@c:
  3593                           	opt stack 0
  3594                           
  3595                           ; 1 bytes @ 0x2F
  3596  000030                     	ds	1
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1l	equ	0xFE1
  3605                           
  3606 ;;
  3607 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3608 ;;
  3609 ;; *************** function _main *****************
  3610 ;; Defined at:
  3611 ;;		line 33 in file "src/main.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  i               1  146[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0
  3626 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3627 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3628 ;;      Totals:         0      18       0       0       0       0       0       0       0
  3629 ;;Total ram usage:       18 bytes
  3630 ;; Hardware stack levels required when called:   11
  3631 ;; This function calls:
  3632 ;;		_I2C_Master_Init
  3633 ;;		_Lcd_Clear
  3634 ;;		_Lcd_Init
  3635 ;;		_UART_Init
  3636 ;;		___wmul
  3637 ;;		_alterarDadosConexaoConfigWifi
  3638 ;;		_atualizaLCD
  3639 ;;		_blink
  3640 ;;		_btPress
  3641 ;;		_climaAtual
  3642 ;;		_controle
  3643 ;;		_criaCaracteresCGRAM
  3644 ;;		_delay
  3645 ;;		_enviaDadosWifi
  3646 ;;		_faseAtual
  3647 ;;		_getSensors
  3648 ;;		_printf
  3649 ;;		_readEEPROM_ext
  3650 ;;		_setRangeValor
  3651 ;;		_setUmidade
  3652 ;;		_sprintf
  3653 ;;		_updateLeds
  3654 ;;		_writeEEPROM_ext
  3655 ;; This function is called by:
  3656 ;;		Startup code after reset
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text0
  3661  000012                     __ptext0:
  3662                           	opt stack 0
  3663  000012                     _main:
  3664                           	opt stack 20
  3665                           
  3666                           ;main.c: 36: TRISAbits.RA5 = 0;
  3667                           
  3668                           ;incstack = 0
  3669  000012  9A92               	bcf	3986,5,c	;volatile
  3670                           
  3671                           ;main.c: 37: TRISCbits.RC2 = 0;
  3672  000014  9494               	bcf	3988,2,c	;volatile
  3673                           
  3674                           ;main.c: 38: TRISEbits.RE0 = 0;
  3675  000016  9096               	bcf	3990,0,c	;volatile
  3676                           
  3677                           ;main.c: 39: TRISDbits.RD0 = 0;
  3678  000018  9095               	bcf	3989,0,c	;volatile
  3679                           
  3680                           ;main.c: 40: TRISCbits.RC1 = 0;
  3681  00001A  9294               	bcf	3988,1,c	;volatile
  3682                           
  3683                           ;main.c: 41: TRISDbits.RD1 = 0;
  3684  00001C  9295               	bcf	3989,1,c	;volatile
  3685                           
  3686                           ;main.c: 42: TRISCbits.RC0 = 1;
  3687  00001E  8094               	bsf	3988,0,c	;volatile
  3688                           
  3689                           ;main.c: 44: PORTAbits.RA5 = 0;
  3690  000020  9A80               	bcf	3968,5,c	;volatile
  3691                           
  3692                           ;main.c: 45: PORTCbits.RC2 = 0;
  3693  000022  9482               	bcf	3970,2,c	;volatile
  3694                           
  3695                           ;main.c: 46: PORTEbits.RE0 = 0;
  3696  000024  9084               	bcf	3972,0,c	;volatile
  3697                           
  3698                           ;main.c: 47: PORTDbits.RD0 = 0;
  3699  000026  9083               	bcf	3971,0,c	;volatile
  3700                           
  3701                           ;main.c: 48: PORTCbits.RC1 = 0;
  3702  000028  9282               	bcf	3970,1,c	;volatile
  3703                           
  3704                           ;main.c: 49: PORTDbits.RD1 = 0;
  3705  00002A  9283               	bcf	3971,1,c	;volatile
  3706                           
  3707                           ;main.c: 53: TRISAbits.RA4 = 0;
  3708  00002C  9892               	bcf	3986,4,c	;volatile
  3709                           
  3710                           ;main.c: 54: LATAbits.LATA4 = 0;
  3711  00002E  9889               	bcf	3977,4,c	;volatile
  3712                           
  3713                           ;main.c: 58: TRISBbits.RB5 = 0;
  3714  000030  9A93               	bcf	3987,5,c	;volatile
  3715                           
  3716                           ;main.c: 59: LATBbits.LATB5 = 0;
  3717  000032  9A8A               	bcf	3978,5,c	;volatile
  3718                           
  3719                           ;main.c: 63: TRISBbits.RB2 = 1;
  3720  000034  8493               	bsf	3987,2,c	;volatile
  3721                           
  3722                           ;main.c: 64: INTCON2bits.INTEDG2 = 0;
  3723  000036  98F1               	bcf	intcon2,4,c	;volatile
  3724                           
  3725                           ;main.c: 65: INTCON2bits.RBIP = 0;
  3726  000038  90F1               	bcf	intcon2,0,c	;volatile
  3727                           
  3728                           ;main.c: 66: INTCON3bits.INT2IE = 1;
  3729  00003A  88F0               	bsf	intcon3,4,c	;volatile
  3730                           
  3731                           ;main.c: 69: TRISAbits.RA0 = 1;
  3732  00003C  8092               	bsf	3986,0,c	;volatile
  3733                           
  3734                           ;main.c: 70: PORTAbits.AN0 = 0;
  3735  00003E  9080               	bcf	3968,0,c	;volatile
  3736                           
  3737                           ;main.c: 71: TRISAbits.RA1 = 1;
  3738  000040  8292               	bsf	3986,1,c	;volatile
  3739                           
  3740                           ;main.c: 72: PORTAbits.AN1 = 0;
  3741  000042  9280               	bcf	3968,1,c	;volatile
  3742                           
  3743                           ;main.c: 73: TRISAbits.RA2 = 1;
  3744  000044  8492               	bsf	3986,2,c	;volatile
  3745                           
  3746                           ;main.c: 74: PORTAbits.AN2 = 0;
  3747  000046  9480               	bcf	3968,2,c	;volatile
  3748                           
  3749                           ;main.c: 79: T0CON = 0x81;
  3750  000048  0E81               	movlw	129
  3751  00004A  6ED5               	movwf	4053,c	;volatile
  3752                           
  3753                           ;main.c: 80: INTCON = 0xE4;
  3754  00004C  0EE4               	movlw	228
  3755  00004E  6EF2               	movwf	intcon,c	;volatile
  3756                           
  3757                           ;main.c: 83: ADCON0 = 0x01;
  3758  000050  0E01               	movlw	1
  3759  000052  6EC2               	movwf	4034,c	;volatile
  3760                           
  3761                           ;main.c: 84: ADCON1 = 0x0C;
  3762  000054  0E0C               	movlw	12
  3763  000056  6EC1               	movwf	4033,c	;volatile
  3764                           
  3765                           ;main.c: 85: ADCON2 = 0xB5;
  3766  000058  0EB5               	movlw	181
  3767  00005A  6EC0               	movwf	4032,c	;volatile
  3768                           
  3769                           ;main.c: 88: UART_Init();
  3770  00005C  ECE8  F02D         	call	_UART_Init	;wreg free
  3771                           
  3772                           ;main.c: 89: printf("AT+RST\r\n");
  3773  000060  0E30               	movlw	low STR_80
  3774  000062  0100               	movlb	0	; () banked
  3775  000064  6F81               	movwf	printf@f& (0+255),b
  3776  000066  0E7F               	movlw	high STR_80
  3777  000068  6F82               	movwf	(printf@f+1)& (0+255),b
  3778  00006A  EC51  F02C         	call	_printf	;wreg free
  3779                           
  3780                           ;main.c: 90: delay(200);
  3781  00006E  0E00               	movlw	0
  3782  000070  0100               	movlb	0	; () banked
  3783  000072  6F61               	movwf	(delay@x+1)& (0+255),b
  3784  000074  0EC8               	movlw	200
  3785  000076  6F60               	movwf	delay@x& (0+255),b
  3786  000078  EC31  F02D         	call	_delay	;wreg free
  3787                           
  3788                           ;main.c: 92: Lcd_Init();
  3789  00007C  ECA0  F029         	call	_Lcd_Init	;wreg free
  3790                           
  3791                           ;main.c: 93: Lcd_Clear();
  3792  000080  EC10  F02E         	call	_Lcd_Clear	;wreg free
  3793                           
  3794                           ;main.c: 94: criaCaracteresCGRAM();
  3795  000084  EC83  F027         	call	_criaCaracteresCGRAM	;wreg free
  3796                           
  3797                           ;main.c: 95: I2C_Master_Init(1000000);
  3798  000088  0E40               	movlw	64
  3799  00008A  0100               	movlb	0	; () banked
  3800  00008C  6F6D               	movwf	I2C_Master_Init@c& (0+255),b
  3801  00008E  0E42               	movlw	66
  3802  000090  6F6E               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  3803  000092  0E0F               	movlw	15
  3804  000094  6F6F               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  3805  000096  0E00               	movlw	0
  3806  000098  6F70               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  3807  00009A  EC5C  F02A         	call	_I2C_Master_Init	;wreg free
  3808                           
  3809                           ;main.c: 96: delay(150);
  3810  00009E  0E00               	movlw	0
  3811  0000A0  0100               	movlb	0	; () banked
  3812  0000A2  6F61               	movwf	(delay@x+1)& (0+255),b
  3813  0000A4  0E96               	movlw	150
  3814  0000A6  6F60               	movwf	delay@x& (0+255),b
  3815  0000A8  EC31  F02D         	call	_delay	;wreg free
  3816                           
  3817                           ;main.c: 99: sprintf(line1, " TECHNOW Tecnologia");
  3818  0000AC  0E91               	movlw	low _line1
  3819  0000AE  0100               	movlb	0	; () banked
  3820  0000B0  6F81               	movwf	sprintf@wh& (0+255),b
  3821  0000B2  0E01               	movlw	high _line1
  3822  0000B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3823  0000B6  0EBA               	movlw	low STR_81
  3824  0000B8  6F83               	movwf	sprintf@f& (0+255),b
  3825  0000BA  0E7C               	movlw	high STR_81
  3826  0000BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3827  0000BE  ECCD  F02B         	call	_sprintf	;wreg free
  3828                           
  3829                           ;main.c: 100: sprintf(line3, "Versao Soft.:");
  3830  0000C2  0E67               	movlw	low _line3
  3831  0000C4  0100               	movlb	0	; () banked
  3832  0000C6  6F81               	movwf	sprintf@wh& (0+255),b
  3833  0000C8  0E01               	movlw	high _line3
  3834  0000CA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3835  0000CC  0E80               	movlw	low STR_82
  3836  0000CE  6F83               	movwf	sprintf@f& (0+255),b
  3837  0000D0  0E7E               	movlw	high STR_82
  3838  0000D2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3839  0000D4  ECCD  F02B         	call	_sprintf	;wreg free
  3840                           
  3841                           ;main.c: 101: sprintf(&line4[9], "%s", "Jul 15 2020");
  3842  0000D8  0E5B               	movlw	low (_line4+9)
  3843  0000DA  0100               	movlb	0	; () banked
  3844  0000DC  6F81               	movwf	sprintf@wh& (0+255),b
  3845  0000DE  0E01               	movlw	high (_line4+9)
  3846  0000E0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  3847  0000E2  0E0F               	movlw	low (STR_94+7)
  3848  0000E4  6F83               	movwf	sprintf@f& (0+255),b
  3849  0000E6  0E7F               	movlw	high (STR_94+7)
  3850  0000E8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  3851  0000EA  0E8E               	movlw	low STR_70
  3852  0000EC  6F85               	movwf	(?_sprintf+4)& (0+255),b
  3853  0000EE  0E7E               	movlw	high STR_70
  3854  0000F0  6F86               	movwf	(?_sprintf+5)& (0+255),b
  3855  0000F2  ECCD  F02B         	call	_sprintf	;wreg free
  3856                           
  3857                           ;main.c: 102: atualizaLCD(line1, line2, line3, line4);
  3858  0000F6  0E91               	movlw	low _line1
  3859  0000F8  0100               	movlb	0	; () banked
  3860  0000FA  6F68               	movwf	atualizaLCD@line1& (0+255),b
  3861  0000FC  0E01               	movlw	high _line1
  3862  0000FE  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  3863  000100  0E7C               	movlw	low _line2
  3864  000102  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  3865  000104  0E01               	movlw	high _line2
  3866  000106  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  3867  000108  0E67               	movlw	low _line3
  3868  00010A  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  3869  00010C  0E01               	movlw	high _line3
  3870  00010E  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  3871  000110  0E52               	movlw	low _line4
  3872  000112  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  3873  000114  0E01               	movlw	high _line4
  3874  000116  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  3875  000118  ECB0  F025         	call	_atualizaLCD	;wreg free
  3876                           
  3877                           ;main.c: 103: delay(300);
  3878  00011C  0E01               	movlw	1
  3879  00011E  0100               	movlb	0	; () banked
  3880  000120  6F61               	movwf	(delay@x+1)& (0+255),b
  3881  000122  0E2C               	movlw	44
  3882  000124  6F60               	movwf	delay@x& (0+255),b
  3883  000126  EC31  F02D         	call	_delay	;wreg free
  3884                           
  3885                           ;main.c: 104: LATBbits.LATB5 = 1;
  3886  00012A  8A8A               	bsf	3978,5,c	;volatile
  3887                           
  3888                           ;main.c: 105: delay(2450);
  3889  00012C  0E09               	movlw	9
  3890  00012E  0100               	movlb	0	; () banked
  3891  000130  6F61               	movwf	(delay@x+1)& (0+255),b
  3892  000132  0E92               	movlw	146
  3893  000134  6F60               	movwf	delay@x& (0+255),b
  3894  000136  EC31  F02D         	call	_delay	;wreg free
  3895                           
  3896                           ;main.c: 107: tempajt = readEEPROM_ext(1);
  3897  00013A  0E01               	movlw	1
  3898  00013C  EC57  F02B         	call	_readEEPROM_ext
  3899  000140  0100               	movlb	0	; () banked
  3900  000142  6FF4               	movwf	_tempajt& (0+255),b
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 108: umidajt = readEEPROM_ext(2);
  3904  000144  0E02               	movlw	2
  3905  000146  EC57  F02B         	call	_readEEPROM_ext
  3906  00014A  0100               	movlb	0	; () banked
  3907  00014C  6FF3               	movwf	_umidajt& (0+255),b
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;main.c: 109: trava_fase = readEEPROM_ext(3);
  3911  00014E  0E03               	movlw	3
  3912  000150  EC57  F02B         	call	_readEEPROM_ext
  3913  000154  0100               	movlb	0	; () banked
  3914  000156  6FFB               	movwf	_trava_fase& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;main.c: 110: fase = readEEPROM_ext(4);
  3918  000158  0E04               	movlw	4
  3919  00015A  EC57  F02B         	call	_readEEPROM_ext
  3920  00015E  0100               	movlb	0	; () banked
  3921  000160  6FF6               	movwf	_fase& (0+255),b
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;main.c: 111: clima = readEEPROM_ext(5);
  3925  000162  0E05               	movlw	5
  3926  000164  EC57  F02B         	call	_readEEPROM_ext
  3927  000168  0100               	movlb	0	; () banked
  3928  00016A  6FF5               	movwf	_clima& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;main.c: 112: tipo_modo_trabalho = readEEPROM_ext(6);
  3932  00016C  0E06               	movlw	6
  3933  00016E  EC57  F02B         	call	_readEEPROM_ext
  3934  000172  6E59               	movwf	_tipo_modo_trabalho,c
  3935                           
  3936                           ;main.c: 113: tipo_sensor_umidade = readEEPROM_ext(7);
  3937  000174  0E07               	movlw	7
  3938  000176  EC57  F02B         	call	_readEEPROM_ext
  3939  00017A  0100               	movlb	0	; () banked
  3940  00017C  6FFA               	movwf	_tipo_sensor_umidade& (0+255),b
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;main.c: 114: t_fim_fase1 = readEEPROM_ext(8);
  3944  00017E  0E08               	movlw	8
  3945  000180  EC57  F02B         	call	_readEEPROM_ext
  3946  000184  6E58               	movwf	_t_fim_fase1,c
  3947                           
  3948                           ;main.c: 115: t_fim_fase2 = readEEPROM_ext(9);
  3949  000186  0E09               	movlw	9
  3950  000188  EC57  F02B         	call	_readEEPROM_ext
  3951  00018C  6E57               	movwf	_t_fim_fase2,c
  3952                           
  3953                           ;main.c: 116: t_fim_fase3 = readEEPROM_ext(10);
  3954  00018E  0E0A               	movlw	10
  3955  000190  EC57  F02B         	call	_readEEPROM_ext
  3956  000194  6E56               	movwf	_t_fim_fase3,c
  3957                           
  3958                           ;main.c: 117: h_venotinha = readEEPROM_ext(11);
  3959  000196  0E0B               	movlw	11
  3960  000198  EC57  F02B         	call	_readEEPROM_ext
  3961  00019C  6E53               	movwf	_h_venotinha,c
  3962                           
  3963                           ;main.c: 118: h_abafador = readEEPROM_ext(12);
  3964  00019E  0E0C               	movlw	12
  3965  0001A0  EC57  F02B         	call	_readEEPROM_ext
  3966  0001A4  6E52               	movwf	_h_abafador,c
  3967                           
  3968                           ;main.c: 119: h_flap = readEEPROM_ext(13);
  3969  0001A6  0E0D               	movlw	13
  3970  0001A8  EC57  F02B         	call	_readEEPROM_ext
  3971  0001AC  6E51               	movwf	_h_flap,c
  3972                           
  3973                           ;main.c: 120: buzzer = readEEPROM_ext(14);
  3974  0001AE  0E0E               	movlw	14
  3975  0001B0  EC57  F02B         	call	_readEEPROM_ext
  3976  0001B4  0100               	movlb	0	; () banked
  3977  0001B6  6FFC               	movwf	_buzzer& (0+255),b
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;main.c: 121: fornalha = readEEPROM_ext(15);
  3981  0001B8  0E0F               	movlw	15
  3982  0001BA  EC57  F02B         	call	_readEEPROM_ext
  3983  0001BE  6E5A               	movwf	_fornalha,c
  3984                           
  3985                           ;main.c: 122: h_modo_seguranca = readEEPROM_ext(16);
  3986  0001C0  0E10               	movlw	16
  3987  0001C2  EC57  F02B         	call	_readEEPROM_ext
  3988  0001C6  0100               	movlb	0	; () banked
  3989  0001C8  6FF7               	movwf	_h_modo_seguranca& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;main.c: 123: h_buzzer = readEEPROM_ext(17);
  3993  0001CA  0E11               	movlw	17
  3994  0001CC  EC57  F02B         	call	_readEEPROM_ext
  3995  0001D0  6E50               	movwf	_h_buzzer,c
  3996                           
  3997                           ;main.c: 124: t_flap_ligado = readEEPROM_ext(18);
  3998  0001D2  0E12               	movlw	18
  3999  0001D4  EC57  F02B         	call	_readEEPROM_ext
  4000  0001D8  6E55               	movwf	_t_flap_ligado,c
  4001                           
  4002                           ;main.c: 125: t_flap_intervalo = readEEPROM_ext(20);
  4003  0001DA  0E14               	movlw	20
  4004  0001DC  EC57  F02B         	call	_readEEPROM_ext
  4005  0001E0  6E54               	movwf	_t_flap_intervalo,c
  4006                           
  4007                           ;main.c: 126: t_buzzer_religar = readEEPROM_ext(21);
  4008  0001E2  0E15               	movlw	21
  4009  0001E4  EC57  F02B         	call	_readEEPROM_ext
  4010  0001E8  0100               	movlb	0	; () banked
  4011  0001EA  6FFF               	movwf	_t_buzzer_religar& (0+255),b
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;main.c: 127: t_temp_automatica = readEEPROM_ext(22);
  4015  0001EC  0E16               	movlw	22
  4016  0001EE  EC57  F02B         	call	_readEEPROM_ext
  4017  0001F2  0100               	movlb	0	; () banked
  4018  0001F4  6FF9               	movwf	_t_temp_automatica& (0+255),b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;main.c: 128: wifi_habilita_alteracao = readEEPROM_ext(23);
  4022  0001F6  0E17               	movlw	23
  4023  0001F8  EC57  F02B         	call	_readEEPROM_ext
  4024  0001FC  6E4E               	movwf	_wifi_habilita_alteracao,c
  4025                           
  4026                           ;main.c: 129: wifi_SENHA = readEEPROM_ext(25);
  4027  0001FE  0E19               	movlw	25
  4028  000200  EC57  F02B         	call	_readEEPROM_ext
  4029  000204  0100               	movlb	0	; () banked
  4030  000206  6FE1               	movwf	??_main& (0+255),b
  4031  000208  51E1               	movf	??_main& (0+255),w,b
  4032  00020A  6E4B               	movwf	_wifi_SENHA,c
  4033  00020C  6A4C               	clrf	_wifi_SENHA+1,c
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;main.c: 130: h_subir_temp_automatica = readEEPROM_ext(27);
  4037  00020E  0E1B               	movlw	27
  4038  000210  EC57  F02B         	call	_readEEPROM_ext
  4039  000214  6E4F               	movwf	_h_subir_temp_automatica,c
  4040                           
  4041                           ;main.c: 131: t_religar_ventoinha_automatica = readEEPROM_ext(28);
  4042  000216  0E1C               	movlw	28
  4043  000218  EC57  F02B         	call	_readEEPROM_ext
  4044  00021C  0100               	movlb	0	; () banked
  4045  00021E  6FF8               	movwf	_t_religar_ventoinha_automatica& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;main.c: 133: char i = 0;
  4049  000220  0E00               	movlw	0
  4050  000222  6FF2               	movwf	main@i& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;main.c: 134: for (i = 0; i < 15; i++) {
  4054  000224  0E00               	movlw	0
  4055  000226  6FF2               	movwf	main@i& (0+255),b
  4056  000228                     l9384:
  4057                           
  4058                           ; BSR set to: 0
  4059  000228  0E0E               	movlw	14
  4060  00022A  65F2               	cpfsgt	main@i& (0+255),b
  4061  00022C  D001               	goto	l1269
  4062  00022E  D01E               	goto	u14200
  4063  000230                     l1269:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;main.c: 135: ssid[i] = (char) readEEPROM_ext(40 + i);
  4067                           
  4068                           ; BSR set to: 0
  4069  000230  51F2               	movf	main@i& (0+255),w,b
  4070  000232  0D01               	mullw	1
  4071  000234  0EC9               	movlw	low _ssid
  4072  000236  24F3               	addwf	prodl,w,c
  4073  000238  6ED9               	movwf	fsr2l,c
  4074  00023A  0E01               	movlw	high _ssid
  4075  00023C  20F4               	addwfc	prodh,w,c
  4076  00023E  6EDA               	movwf	fsr2h,c
  4077  000240  51F2               	movf	main@i& (0+255),w,b
  4078  000242  0F28               	addlw	40
  4079  000244  EC57  F02B         	call	_readEEPROM_ext
  4080  000248  6EDF               	movwf	indf2,c
  4081                           
  4082                           ;main.c: 136: senha[i] = (char) readEEPROM_ext(60 + i);
  4083  00024A  0100               	movlb	0	; () banked
  4084  00024C  51F2               	movf	main@i& (0+255),w,b
  4085  00024E  0D01               	mullw	1
  4086  000250  0EBA               	movlw	low _senha
  4087  000252  24F3               	addwf	prodl,w,c
  4088  000254  6ED9               	movwf	fsr2l,c
  4089  000256  0E01               	movlw	high _senha
  4090  000258  20F4               	addwfc	prodh,w,c
  4091  00025A  6EDA               	movwf	fsr2h,c
  4092  00025C  51F2               	movf	main@i& (0+255),w,b
  4093  00025E  0F3C               	addlw	60
  4094  000260  EC57  F02B         	call	_readEEPROM_ext
  4095  000264  6EDF               	movwf	indf2,c
  4096  000266  0100               	movlb	0	; () banked
  4097  000268  2BF2               	incf	main@i& (0+255),f,b
  4098  00026A  D7DE               	goto	l9384
  4099  00026C                     u14200:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;main.c: 137: }
  4103                           ;main.c: 138: for (i = 0; i < 20; i++) {
  4104                           
  4105                           ; BSR set to: 0
  4106  00026C  0E00               	movlw	0
  4107  00026E  6FF2               	movwf	main@i& (0+255),b
  4108  000270                     l9396:
  4109                           
  4110                           ; BSR set to: 0
  4111  000270  0E13               	movlw	19
  4112  000272  65F2               	cpfsgt	main@i& (0+255),b
  4113  000274  D001               	goto	l1271
  4114  000276  D010               	goto	u14220
  4115  000278                     l1271:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;main.c: 139: ipServer[i] = (char) readEEPROM_ext(80 + i);
  4119                           
  4120                           ; BSR set to: 0
  4121  000278  51F2               	movf	main@i& (0+255),w,b
  4122  00027A  0D01               	mullw	1
  4123  00027C  0EA6               	movlw	low _ipServer
  4124  00027E  24F3               	addwf	prodl,w,c
  4125  000280  6ED9               	movwf	fsr2l,c
  4126  000282  0E01               	movlw	high _ipServer
  4127  000284  20F4               	addwfc	prodh,w,c
  4128  000286  6EDA               	movwf	fsr2h,c
  4129  000288  51F2               	movf	main@i& (0+255),w,b
  4130  00028A  0F50               	addlw	80
  4131  00028C  EC57  F02B         	call	_readEEPROM_ext
  4132  000290  6EDF               	movwf	indf2,c
  4133  000292  0100               	movlb	0	; () banked
  4134  000294  2BF2               	incf	main@i& (0+255),f,b
  4135  000296  D7EC               	goto	l9396
  4136  000298                     u14220:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;main.c: 140: }
  4140                           ;main.c: 141: for (i = 0; i < 4; i++) {
  4141                           
  4142                           ; BSR set to: 0
  4143  000298  0E00               	movlw	0
  4144  00029A  6FF2               	movwf	main@i& (0+255),b
  4145  00029C                     l9408:
  4146                           
  4147                           ; BSR set to: 0
  4148  00029C  0E03               	movlw	3
  4149  00029E  65F2               	cpfsgt	main@i& (0+255),b
  4150  0002A0  D001               	goto	l1273
  4151  0002A2  D010               	goto	u14240
  4152  0002A4                     l1273:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;main.c: 142: portServer[i] = (char) readEEPROM_ext(105 + i);
  4156                           
  4157                           ; BSR set to: 0
  4158  0002A4  51F2               	movf	main@i& (0+255),w,b
  4159  0002A6  0D01               	mullw	1
  4160  0002A8  0EE2               	movlw	low _portServer
  4161  0002AA  24F3               	addwf	prodl,w,c
  4162  0002AC  6ED9               	movwf	fsr2l,c
  4163  0002AE  0E01               	movlw	high _portServer
  4164  0002B0  20F4               	addwfc	prodh,w,c
  4165  0002B2  6EDA               	movwf	fsr2h,c
  4166  0002B4  51F2               	movf	main@i& (0+255),w,b
  4167  0002B6  0F69               	addlw	105
  4168  0002B8  EC57  F02B         	call	_readEEPROM_ext
  4169  0002BC  6EDF               	movwf	indf2,c
  4170  0002BE  0100               	movlb	0	; () banked
  4171  0002C0  2BF2               	incf	main@i& (0+255),f,b
  4172  0002C2  D7EC               	goto	l9408
  4173  0002C4                     u14240:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;main.c: 143: }
  4177                           ;main.c: 145: i = readEEPROM_ext(30);
  4178                           
  4179                           ; BSR set to: 0
  4180  0002C4  0E1E               	movlw	30
  4181  0002C6  EC57  F02B         	call	_readEEPROM_ext
  4182  0002CA  0100               	movlb	0	; () banked
  4183  0002CC  6FF2               	movwf	main@i& (0+255),b
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;main.c: 146: if (i != 187) {
  4187  0002CE  0EBB               	movlw	187
  4188  0002D0  19F2               	xorwf	main@i& (0+255),w,b
  4189  0002D2  B4D8               	btfsc	status,2,c
  4190  0002D4  D02C               	goto	l1278
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;main.c: 147: writeEEPROM_ext(30, 187);
  4194  0002D6  0EBB               	movlw	187
  4195  0002D8  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
  4196  0002DA  0E1E               	movlw	30
  4197  0002DC  EC11  F02C         	call	_writeEEPROM_ext
  4198  0002E0                     l1276:
  4199  0002E0  0004               	clrwdt		;# 
  4200                           
  4201                           ;main.c: 150: sprintf(line4, "ERRO EEPROM");
  4202  0002E2  0E52               	movlw	low _line4
  4203  0002E4  0100               	movlb	0	; () banked
  4204  0002E6  6F81               	movwf	sprintf@wh& (0+255),b
  4205  0002E8  0E01               	movlw	high _line4
  4206  0002EA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4207  0002EC  0E9A               	movlw	low STR_85
  4208  0002EE  6F83               	movwf	sprintf@f& (0+255),b
  4209  0002F0  0E7E               	movlw	high STR_85
  4210  0002F2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4211  0002F4  ECCD  F02B         	call	_sprintf	;wreg free
  4212                           
  4213                           ;main.c: 151: atualizaLCD(line1, line2, line3, line4);
  4214  0002F8  0E91               	movlw	low _line1
  4215  0002FA  0100               	movlb	0	; () banked
  4216  0002FC  6F68               	movwf	atualizaLCD@line1& (0+255),b
  4217  0002FE  0E01               	movlw	high _line1
  4218  000300  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  4219  000302  0E7C               	movlw	low _line2
  4220  000304  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  4221  000306  0E01               	movlw	high _line2
  4222  000308  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  4223  00030A  0E67               	movlw	low _line3
  4224  00030C  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  4225  00030E  0E01               	movlw	high _line3
  4226  000310  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  4227  000312  0E52               	movlw	low _line4
  4228  000314  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  4229  000316  0E01               	movlw	high _line4
  4230  000318  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  4231  00031A  ECB0  F025         	call	_atualizaLCD	;wreg free
  4232                           
  4233                           ;main.c: 152: delay(3000);
  4234  00031E  0E0B               	movlw	11
  4235  000320  0100               	movlb	0	; () banked
  4236  000322  6F61               	movwf	(delay@x+1)& (0+255),b
  4237  000324  0EB8               	movlw	184
  4238  000326  6F60               	movwf	delay@x& (0+255),b
  4239  000328  EC31  F02D         	call	_delay	;wreg free
  4240  00032C  D7D9               	goto	l1276
  4241  00032E                     l1278:
  4242                           
  4243                           ;main.c: 163: if (RCSTAbits.OERR) {
  4244                           
  4245                           ;main.c: 153: }
  4246                           ;main.c: 154: }
  4247                           ;main.c: 156: while (1) {
  4248  00032E  A2AB               	btfss	4011,1,c	;volatile
  4249  000330  D002               	goto	l1280
  4250                           
  4251                           ;main.c: 164: RCSTAbits.CREN = 0;
  4252  000332  98AB               	bcf	4011,4,c	;volatile
  4253                           
  4254                           ;main.c: 165: RCSTAbits.CREN = 1;
  4255  000334  88AB               	bsf	4011,4,c	;volatile
  4256  000336                     l1280:
  4257  000336  0004               	clrwdt		;# 
  4258                           
  4259                           ;main.c: 169: getSensors();
  4260  000338  EC73  F018         	call	_getSensors	;wreg free
  4261                           
  4262                           ;main.c: 170: controle();
  4263  00033C  EC83  F01D         	call	_controle	;wreg free
  4264                           
  4265                           ;main.c: 173: if (tipo_modo_trabalho == 1) {
  4266  000340  0459               	decf	_tipo_modo_trabalho,w,c
  4267  000342  A4D8               	btfss	status,2,c
  4268  000344  D010               	goto	l1281
  4269                           
  4270                           ;main.c: 174: setUmidade('A', &umidajt, &tempajt, &clima);
  4271  000346  0EF3               	movlw	low _umidajt
  4272  000348  0100               	movlb	0	; () banked
  4273  00034A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4274  00034C  0E00               	movlw	high _umidajt
  4275  00034E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4276  000350  0EF4               	movlw	low _tempajt
  4277  000352  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4278  000354  0E00               	movlw	high _tempajt
  4279  000356  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4280  000358  0EF5               	movlw	low _clima
  4281  00035A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4282  00035C  0E00               	movlw	high _clima
  4283  00035E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4284  000360  0E41               	movlw	65
  4285  000362  EC46  F023         	call	_setUmidade
  4286  000366                     l1281:
  4287                           
  4288                           ;main.c: 175: }
  4289                           ;main.c: 177: faseAtual('F', &fase, &tempajt);
  4290  000366  0EF6               	movlw	low _fase
  4291  000368  0100               	movlb	0	; () banked
  4292  00036A  6F60               	movwf	faseAtual@_fase& (0+255),b
  4293  00036C  0E00               	movlw	high _fase
  4294  00036E  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4295  000370  0EF4               	movlw	low _tempajt
  4296  000372  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4297  000374  0E00               	movlw	high _tempajt
  4298  000376  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4299  000378  0E46               	movlw	70
  4300  00037A  ECA7  F022         	call	_faseAtual
  4301                           
  4302                           ;main.c: 179: if (menu != 10) {
  4303  00037E  0E0A               	movlw	10
  4304  000380  0100               	movlb	0	; () banked
  4305  000382  19FD               	xorwf	_menu& (0+255),w,b
  4306  000384  A4D8               	btfss	status,2,c
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;main.c: 180: enviaDadosWifi();
  4310  000386  ECDB  F015         	call	_enviaDadosWifi	;wreg free
  4311                           
  4312                           ;main.c: 181: }
  4313                           ;main.c: 185: if (btPress(4)) setRangeValor('+', &fornalha, 0, 1, 15);
  4314  00038A  0E04               	movlw	4
  4315  00038C  ECDA  F02D         	call	_btPress
  4316  000390  0900               	iorlw	0
  4317  000392  B4D8               	btfsc	status,2,c
  4318  000394  D351               	goto	l1284
  4319  000396  0E5A               	movlw	low _fornalha
  4320  000398  0100               	movlb	0	; () banked
  4321  00039A  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4322  00039C  0E00               	movlw	high _fornalha
  4323  00039E  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4324  0003A0  0E00               	movlw	0
  4325  0003A2  6F67               	movwf	setRangeValor@_min& (0+255),b
  4326  0003A4  0E01               	movlw	1
  4327  0003A6  6F68               	movwf	setRangeValor@_max& (0+255),b
  4328  0003A8  0E0F               	movlw	15
  4329  0003AA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4330  0003AC  0E2B               	movlw	43
  4331  0003AE  ECD9  F027         	call	_setRangeValor
  4332                           
  4333                           ;main.c: 187: switch (menu) {
  4334  0003B2  D342               	goto	l1284
  4335  0003B4                     
  4336                           ;main.c: 189: sprintf(&line1[6], "|Sensor|Ajuste");
  4337  0003B4  0E97               	movlw	low (_line1+6)
  4338  0003B6  0100               	movlb	0	; () banked
  4339  0003B8  6F81               	movwf	sprintf@wh& (0+255),b
  4340  0003BA  0E01               	movlw	high (_line1+6)
  4341  0003BC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4342  0003BE  0E1D               	movlw	low STR_86
  4343  0003C0  6F83               	movwf	sprintf@f& (0+255),b
  4344  0003C2  0E7E               	movlw	high STR_86
  4345  0003C4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4346  0003C6  ECCD  F02B         	call	_sprintf	;wreg free
  4347                           
  4348                           ;main.c: 190: line1[0] = 0x02;
  4349  0003CA  0E02               	movlw	2
  4350  0003CC  0101               	movlb	1	; () banked
  4351  0003CE  6F91               	movwf	_line1& (0+255),b
  4352                           
  4353                           ; BSR set to: 1
  4354                           ;main.c: 191: if (!buzzer) blink(line1, 1, 2);
  4355  0003D0  0100               	movlb	0	; () banked
  4356  0003D2  51FC               	movf	_buzzer& (0+255),w,b
  4357  0003D4  A4D8               	btfss	status,2,c
  4358  0003D6  D00A               	goto	l1286
  4359                           
  4360                           ; BSR set to: 0
  4361  0003D8  0E91               	movlw	low _line1
  4362  0003DA  6F60               	movwf	blink@line& (0+255),b
  4363  0003DC  0E01               	movlw	high _line1
  4364  0003DE  6F61               	movwf	(blink@line+1)& (0+255),b
  4365  0003E0  0E01               	movlw	1
  4366  0003E2  6F62               	movwf	blink@start& (0+255),b
  4367  0003E4  0E02               	movlw	2
  4368  0003E6  6F63               	movwf	blink@end& (0+255),b
  4369  0003E8  ECA2  F02C         	call	_blink	;wreg free
  4370  0003EC                     l1286:
  4371                           
  4372                           ;main.c: 192: line1[2] = 'F';
  4373  0003EC  0E46               	movlw	70
  4374  0003EE  0101               	movlb	1	; () banked
  4375  0003F0  6F93               	movwf	(_line1+2)& (0+255),b
  4376                           
  4377                           ; BSR set to: 1
  4378                           ;main.c: 193: if (!fornalha) blink(line1, 2, 3);
  4379  0003F2  505A               	movf	_fornalha,w,c
  4380  0003F4  A4D8               	btfss	status,2,c
  4381  0003F6  D00B               	goto	l1287
  4382                           
  4383                           ; BSR set to: 1
  4384  0003F8  0E91               	movlw	low _line1
  4385  0003FA  0100               	movlb	0	; () banked
  4386  0003FC  6F60               	movwf	blink@line& (0+255),b
  4387  0003FE  0E01               	movlw	high _line1
  4388  000400  6F61               	movwf	(blink@line+1)& (0+255),b
  4389  000402  0E02               	movlw	2
  4390  000404  6F62               	movwf	blink@start& (0+255),b
  4391  000406  0E03               	movlw	3
  4392  000408  6F63               	movwf	blink@end& (0+255),b
  4393  00040A  ECA2  F02C         	call	_blink	;wreg free
  4394  00040E                     l1287:
  4395                           
  4396                           ;main.c: 194: line1[4] = (wifi_conectado) ? 0x05 : ' ';
  4397  00040E  5049               	movf	_wifi_conectado,w,c
  4398  000410  A4D8               	btfss	status,2,c
  4399  000412  D005               	goto	l1289
  4400  000414  0E00               	movlw	0
  4401  000416  0100               	movlb	0	; () banked
  4402  000418  6FE5               	movwf	(_main$1626+1)& (0+255),b
  4403  00041A  0E20               	movlw	32
  4404  00041C  D004               	goto	L1
  4405  00041E                     l1289:
  4406                           
  4407                           ; BSR set to: 0
  4408  00041E  0E00               	movlw	0
  4409  000420  0100               	movlb	0	; () banked
  4410  000422  6FE5               	movwf	(_main$1626+1)& (0+255),b
  4411  000424  0E05               	movlw	5
  4412  000426                     L1:
  4413  000426  6FE4               	movwf	_main$1626& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           
  4417                           ; BSR set to: 0
  4418  000428  C0E4  F195         	movff	_main$1626,_line1+4
  4419                           
  4420                           ;main.c: 195: line1[5] = (trava_fase) ? 0x01 : ' ';
  4421  00042C  51FB               	movf	_trava_fase& (0+255),w,b
  4422  00042E  A4D8               	btfss	status,2,c
  4423  000430  D004               	goto	l1293
  4424                           
  4425                           ; BSR set to: 0
  4426  000432  0E00               	movlw	0
  4427  000434  6FE7               	movwf	(_main$1627+1)& (0+255),b
  4428  000436  0E20               	movlw	32
  4429  000438  D003               	goto	L2
  4430  00043A                     l1293:
  4431                           
  4432                           ; BSR set to: 0
  4433                           
  4434                           ; BSR set to: 0
  4435  00043A  0E00               	movlw	0
  4436  00043C  6FE7               	movwf	(_main$1627+1)& (0+255),b
  4437  00043E  0E01               	movlw	1
  4438  000440                     L2:
  4439  000440  6FE6               	movwf	_main$1627& (0+255),b
  4440                           
  4441                           ; BSR set to: 0
  4442                           
  4443                           ; BSR set to: 0
  4444  000442  C0E6  F196         	movff	_main$1627,_line1+5
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;main.c: 196: sprintf(line2, "TEMP  |  %3d | %3d F", temp, tempajt);
  4448  000446  0E7C               	movlw	low _line2
  4449  000448  6F81               	movwf	sprintf@wh& (0+255),b
  4450  00044A  0E01               	movlw	high _line2
  4451  00044C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4452  00044E  0E2D               	movlw	low STR_87
  4453  000450  6F83               	movwf	sprintf@f& (0+255),b
  4454  000452  0E7C               	movlw	high STR_87
  4455  000454  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4456  000456  C0FE  F085         	movff	_temp,?_sprintf+4
  4457  00045A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4458  00045C  C0F4  F087         	movff	_tempajt,?_sprintf+6
  4459  000460  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4460  000462  ECCD  F02B         	call	_sprintf	;wreg free
  4461                           
  4462                           ;main.c: 197: line2[5] = 0x04;
  4463  000466  0E04               	movlw	4
  4464  000468  0101               	movlb	1	; () banked
  4465  00046A  6F81               	movwf	(_line2+5)& (0+255),b
  4466                           
  4467                           ; BSR set to: 1
  4468                           ;main.c: 198: sprintf(line3, "UMID  |  %3d | %3d %c", umid, umidajt, (tipo_sensor_umidad
      +                          e) ? '%' : 'F');
  4469  00046C  0100               	movlb	0	; () banked
  4470  00046E  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4471  000470  A4D8               	btfss	status,2,c
  4472  000472  D004               	goto	l1297
  4473                           
  4474                           ; BSR set to: 0
  4475  000474  0E00               	movlw	0
  4476  000476  6FE9               	movwf	(_main$1630+1)& (0+255),b
  4477  000478  0E46               	movlw	70
  4478  00047A  D003               	goto	L3
  4479  00047C                     l1297:
  4480                           
  4481                           ; BSR set to: 0
  4482                           
  4483                           ; BSR set to: 0
  4484  00047C  0E00               	movlw	0
  4485  00047E  6FE9               	movwf	(_main$1630+1)& (0+255),b
  4486  000480  0E25               	movlw	37
  4487  000482                     L3:
  4488  000482  6FE8               	movwf	_main$1630& (0+255),b
  4489                           
  4490                           ; BSR set to: 0
  4491                           
  4492                           ; BSR set to: 0
  4493  000484  0E67               	movlw	low _line3
  4494  000486  6F81               	movwf	sprintf@wh& (0+255),b
  4495  000488  0E01               	movlw	high _line3
  4496  00048A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4497  00048C  0ED8               	movlw	low STR_88
  4498  00048E  6F83               	movwf	sprintf@f& (0+255),b
  4499  000490  0E7B               	movlw	high STR_88
  4500  000492  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4501  000494  C05D  F085         	movff	_umid,?_sprintf+4
  4502  000498  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4503  00049A  C0F3  F087         	movff	_umidajt,?_sprintf+6
  4504  00049E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  4505  0004A0  C0E8  F089         	movff	_main$1630,?_sprintf+8
  4506  0004A4  C0E9  F08A         	movff	_main$1630+1,?_sprintf+9
  4507  0004A8  ECCD  F02B         	call	_sprintf	;wreg free
  4508                           
  4509                           ;main.c: 199: line3[5] = 0x03;
  4510  0004AC  0E03               	movlw	3
  4511  0004AE  0101               	movlb	1	; () banked
  4512  0004B0  6F6C               	movwf	(_line3+5)& (0+255),b
  4513                           
  4514                           ;main.c: 200: sprintf(line4, "Fase ~ %s", faseAtual('?', &fase, &tempajt));
  4515  0004B2  0E52               	movlw	low _line4
  4516  0004B4  0100               	movlb	0	; () banked
  4517  0004B6  6F81               	movwf	sprintf@wh& (0+255),b
  4518  0004B8  0E01               	movlw	high _line4
  4519  0004BA  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4520  0004BC  0E1C               	movlw	low STR_89
  4521  0004BE  6F83               	movwf	sprintf@f& (0+255),b
  4522  0004C0  0E7F               	movlw	high STR_89
  4523  0004C2  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4524  0004C4  0EF6               	movlw	low _fase
  4525  0004C6  6F60               	movwf	faseAtual@_fase& (0+255),b
  4526  0004C8  0E00               	movlw	high _fase
  4527  0004CA  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4528  0004CC  0EF4               	movlw	low _tempajt
  4529  0004CE  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4530  0004D0  0E00               	movlw	high _tempajt
  4531  0004D2  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4532  0004D4  0E3F               	movlw	63
  4533  0004D6  ECA7  F022         	call	_faseAtual
  4534  0004DA  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4535  0004DE  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4536  0004E2  ECCD  F02B         	call	_sprintf	;wreg free
  4537                           
  4538                           ;main.c: 201: if (!f_falta_energia) {
  4539  0004E6  505E               	movf	_f_falta_energia,w,c
  4540  0004E8  A4D8               	btfss	status,2,c
  4541  0004EA  D00B               	goto	l1300
  4542                           
  4543                           ;main.c: 202: sprintf(line4, " *FALTA DE ENERGIA*");
  4544  0004EC  0E52               	movlw	low _line4
  4545  0004EE  0100               	movlb	0	; () banked
  4546  0004F0  6F81               	movwf	sprintf@wh& (0+255),b
  4547  0004F2  0E01               	movlw	high _line4
  4548  0004F4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4549  0004F6  0E56               	movlw	low STR_90
  4550  0004F8  6F83               	movwf	sprintf@f& (0+255),b
  4551  0004FA  0E7C               	movlw	high STR_90
  4552  0004FC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4553  0004FE  ECCD  F02B         	call	_sprintf	;wreg free
  4554  000502                     l1300:
  4555                           
  4556                           ;main.c: 203: };
  4557                           ;main.c: 205: if (btPress(8)) {
  4558  000502  0E08               	movlw	8
  4559  000504  ECDA  F02D         	call	_btPress
  4560  000508  0900               	iorlw	0
  4561  00050A  B4D8               	btfsc	status,2,c
  4562  00050C  D005               	goto	l1301
  4563                           
  4564                           ;main.c: 206: menu = 1;
  4565  00050E  0E01               	movlw	1
  4566  000510  0100               	movlb	0	; () banked
  4567  000512  6FFD               	movwf	_menu& (0+255),b
  4568                           
  4569                           ;main.c: 207: opcaomenu = 1;
  4570  000514  0E01               	movlw	1
  4571  000516  6E45               	movwf	_opcaomenu,c
  4572  000518                     l1301:
  4573                           
  4574                           ;main.c: 208: }
  4575                           ;main.c: 209: if (btPress(2)) {
  4576                           
  4577                           ; BSR set to: 0
  4578  000518  0E02               	movlw	2
  4579  00051A  ECDA  F02D         	call	_btPress
  4580  00051E  0900               	iorlw	0
  4581  000520  A4D8               	btfss	status,2,c
  4582                           
  4583                           ;main.c: 210: ajuste_parametro++;
  4584  000522  2A44               	incf	_ajuste_parametro,f,c
  4585                           
  4586                           ;main.c: 211: }
  4587                           ;main.c: 212: if (btPress(1)) setRangeValor('+', &buzzer, 1, 1, 14);
  4588  000524  0E01               	movlw	1
  4589  000526  ECDA  F02D         	call	_btPress
  4590  00052A  0900               	iorlw	0
  4591  00052C  B4D8               	btfsc	status,2,c
  4592  00052E  D00E               	goto	l1303
  4593  000530  0EFC               	movlw	low _buzzer
  4594  000532  0100               	movlb	0	; () banked
  4595  000534  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4596  000536  0E00               	movlw	high _buzzer
  4597  000538  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4598  00053A  0E01               	movlw	1
  4599  00053C  6F67               	movwf	setRangeValor@_min& (0+255),b
  4600  00053E  0E01               	movlw	1
  4601  000540  6F68               	movwf	setRangeValor@_max& (0+255),b
  4602  000542  0E0E               	movlw	14
  4603  000544  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4604  000546  0E2B               	movlw	43
  4605  000548  ECD9  F027         	call	_setRangeValor
  4606  00054C                     l1303:
  4607                           
  4608                           ;main.c: 213: if (btPress(16)) setRangeValor('+', &buzzer, 0, 0, 14);
  4609  00054C  0E10               	movlw	16
  4610  00054E  ECDA  F02D         	call	_btPress
  4611  000552  0900               	iorlw	0
  4612  000554  B4D8               	btfsc	status,2,c
  4613  000556  D081               	goto	l1305
  4614  000558  0EFC               	movlw	low _buzzer
  4615  00055A  0100               	movlb	0	; () banked
  4616  00055C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4617  00055E  0E00               	movlw	high _buzzer
  4618  000560  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4619  000562  0E00               	movlw	0
  4620  000564  6F67               	movwf	setRangeValor@_min& (0+255),b
  4621  000566  0E00               	movlw	0
  4622  000568  6F68               	movwf	setRangeValor@_max& (0+255),b
  4623  00056A  0E0E               	movlw	14
  4624  00056C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4625  00056E  0E2B               	movlw	43
  4626  000570  ECD9  F027         	call	_setRangeValor
  4627                           
  4628                           ;main.c: 216: switch (ajuste_parametro) {
  4629  000574  D072               	goto	l1305
  4630  000576                     
  4631                           ;main.c: 218: blink(line2, 15, 20);
  4632  000576  0E7C               	movlw	low _line2
  4633  000578  0100               	movlb	0	; () banked
  4634  00057A  6F60               	movwf	blink@line& (0+255),b
  4635  00057C  0E01               	movlw	high _line2
  4636  00057E  6F61               	movwf	(blink@line+1)& (0+255),b
  4637  000580  0E0F               	movlw	15
  4638  000582  6F62               	movwf	blink@start& (0+255),b
  4639  000584  0E14               	movlw	20
  4640  000586  6F63               	movwf	blink@end& (0+255),b
  4641  000588  ECA2  F02C         	call	_blink	;wreg free
  4642                           
  4643                           ;main.c: 219: if (btPress(64)) setRangeValor('+', &tempajt, 85, 160, 1);
  4644  00058C  0E40               	movlw	64
  4645  00058E  ECDA  F02D         	call	_btPress
  4646  000592  0900               	iorlw	0
  4647  000594  B4D8               	btfsc	status,2,c
  4648  000596  D00E               	goto	l1307
  4649  000598  0EF4               	movlw	low _tempajt
  4650  00059A  0100               	movlb	0	; () banked
  4651  00059C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4652  00059E  0E00               	movlw	high _tempajt
  4653  0005A0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4654  0005A2  0E55               	movlw	85
  4655  0005A4  6F67               	movwf	setRangeValor@_min& (0+255),b
  4656  0005A6  0EA0               	movlw	160
  4657  0005A8  6F68               	movwf	setRangeValor@_max& (0+255),b
  4658  0005AA  0E01               	movlw	1
  4659  0005AC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4660  0005AE  0E2B               	movlw	43
  4661  0005B0  ECD9  F027         	call	_setRangeValor
  4662  0005B4                     l1307:
  4663                           
  4664                           ;main.c: 220: if (btPress(32)) setRangeValor('-', &tempajt, 85, 160, 1);
  4665  0005B4  0E20               	movlw	32
  4666  0005B6  ECDA  F02D         	call	_btPress
  4667  0005BA  0900               	iorlw	0
  4668  0005BC  B4D8               	btfsc	status,2,c
  4669  0005BE  D25D               	goto	l1316
  4670  0005C0  0EF4               	movlw	low _tempajt
  4671  0005C2  0100               	movlb	0	; () banked
  4672  0005C4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  4673  0005C6  0E00               	movlw	high _tempajt
  4674  0005C8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  4675  0005CA  0E55               	movlw	85
  4676  0005CC  6F67               	movwf	setRangeValor@_min& (0+255),b
  4677  0005CE  0EA0               	movlw	160
  4678  0005D0  6F68               	movwf	setRangeValor@_max& (0+255),b
  4679  0005D2  0E01               	movlw	1
  4680  0005D4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  4681  0005D6  0E2D               	movlw	45
  4682  0005D8  ECD9  F027         	call	_setRangeValor
  4683                           
  4684                           ;main.c: 221: break;
  4685  0005DC  D24E               	goto	l1316
  4686  0005DE                     
  4687                           ;main.c: 223: if (tipo_modo_trabalho == 0) {
  4688  0005DE  5059               	movf	_tipo_modo_trabalho,w,c
  4689  0005E0  A4D8               	btfss	status,2,c
  4690  0005E2  D038               	goto	l1311
  4691                           
  4692                           ;main.c: 224: blink(line3, 15, 20);
  4693  0005E4  0E67               	movlw	low _line3
  4694  0005E6  0100               	movlb	0	; () banked
  4695  0005E8  6F60               	movwf	blink@line& (0+255),b
  4696  0005EA  0E01               	movlw	high _line3
  4697  0005EC  6F61               	movwf	(blink@line+1)& (0+255),b
  4698  0005EE  0E0F               	movlw	15
  4699  0005F0  6F62               	movwf	blink@start& (0+255),b
  4700  0005F2  0E14               	movlw	20
  4701  0005F4  6F63               	movwf	blink@end& (0+255),b
  4702  0005F6  ECA2  F02C         	call	_blink	;wreg free
  4703                           
  4704                           ;main.c: 225: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  4705  0005FA  0E40               	movlw	64
  4706  0005FC  ECDA  F02D         	call	_btPress
  4707  000600  0900               	iorlw	0
  4708  000602  B4D8               	btfsc	status,2,c
  4709  000604  D010               	goto	l1312
  4710  000606  0EF3               	movlw	low _umidajt
  4711  000608  0100               	movlb	0	; () banked
  4712  00060A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4713  00060C  0E00               	movlw	high _umidajt
  4714  00060E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4715  000610  0EF4               	movlw	low _tempajt
  4716  000612  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4717  000614  0E00               	movlw	high _tempajt
  4718  000616  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4719  000618  0EF5               	movlw	low _clima
  4720  00061A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4721  00061C  0E00               	movlw	high _clima
  4722  00061E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4723  000620  0E2B               	movlw	43
  4724  000622  EC46  F023         	call	_setUmidade
  4725  000626                     l1312:
  4726                           
  4727                           ;main.c: 226: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  4728  000626  0E20               	movlw	32
  4729  000628  ECDA  F02D         	call	_btPress
  4730  00062C  0900               	iorlw	0
  4731  00062E  B4D8               	btfsc	status,2,c
  4732  000630  D224               	goto	l1316
  4733  000632  0EF3               	movlw	low _umidajt
  4734  000634  0100               	movlb	0	; () banked
  4735  000636  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  4736  000638  0E00               	movlw	high _umidajt
  4737  00063A  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  4738  00063C  0EF4               	movlw	low _tempajt
  4739  00063E  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  4740  000640  0E00               	movlw	high _tempajt
  4741  000642  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  4742  000644  0EF5               	movlw	low _clima
  4743  000646  6F6C               	movwf	setUmidade@_clima& (0+255),b
  4744  000648  0E00               	movlw	high _clima
  4745  00064A  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  4746  00064C  0E2D               	movlw	45
  4747  00064E  EC46  F023         	call	_setUmidade
  4748                           
  4749                           ;main.c: 227: } else {
  4750  000652  D213               	goto	l1316
  4751  000654                     l1311:
  4752                           
  4753                           ;main.c: 232: ajuste_parametro = 0;
  4754                           
  4755                           ;main.c: 231: default:
  4756                           
  4757                           ;main.c: 229: }
  4758                           ;main.c: 230: break;
  4759                           
  4760                           ;main.c: 228: ajuste_parametro = 0;
  4761  000654  0E00               	movlw	0
  4762  000656  6E44               	movwf	_ajuste_parametro,c
  4763                           
  4764                           ;main.c: 233: }
  4765  000658  D210               	goto	l1316
  4766  00065A                     l1305:
  4767  00065A  5044               	movf	_ajuste_parametro,w,c
  4768                           
  4769                           ; Switch size 1, requested type "space"
  4770                           ; Number of cases is 2, Range of values is 1 to 2
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; simple_byte            7     4 (average)
  4774                           ;	Chosen strategy is simple_byte
  4775  00065C  0A01               	xorlw	1	; case 1
  4776  00065E  B4D8               	btfsc	status,2,c
  4777  000660  D78A               	goto	l1306
  4778  000662  0A03               	xorlw	3	; case 2
  4779  000664  B4D8               	btfsc	status,2,c
  4780  000666  D7BB               	goto	l1310
  4781  000668  D7F5               	goto	l1311
  4782  00066A                     
  4783                           ;main.c: 236: sprintf(&line1[1], "TEMPERATURA: %d F", tempajt);
  4784  00066A  0E92               	movlw	low (_line1+1)
  4785  00066C  0100               	movlb	0	; () banked
  4786  00066E  6F81               	movwf	sprintf@wh& (0+255),b
  4787  000670  0E01               	movlw	high (_line1+1)
  4788  000672  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4789  000674  0E40               	movlw	low STR_91
  4790  000676  6F83               	movwf	sprintf@f& (0+255),b
  4791  000678  0E7D               	movlw	high STR_91
  4792  00067A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4793  00067C  C0F4  F085         	movff	_tempajt,?_sprintf+4
  4794  000680  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4795  000682  ECCD  F02B         	call	_sprintf	;wreg free
  4796                           
  4797                           ;main.c: 237: sprintf(&line2[1], "UMIDADE: %d %c", umidajt, (tipo_sensor_umidade) ? '%' 
      +                          : 'F');
  4798  000686  0100               	movlb	0	; () banked
  4799  000688  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
  4800  00068A  A4D8               	btfss	status,2,c
  4801  00068C  D004               	goto	l1319
  4802                           
  4803                           ; BSR set to: 0
  4804  00068E  0E00               	movlw	0
  4805  000690  6FEB               	movwf	(_main$1635+1)& (0+255),b
  4806  000692  0E46               	movlw	70
  4807  000694  D003               	goto	L4
  4808  000696                     l1319:
  4809                           
  4810                           ; BSR set to: 0
  4811                           
  4812                           ; BSR set to: 0
  4813  000696  0E00               	movlw	0
  4814  000698  6FEB               	movwf	(_main$1635+1)& (0+255),b
  4815  00069A  0E25               	movlw	37
  4816  00069C                     L4:
  4817  00069C  6FEA               	movwf	_main$1635& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820                           
  4821                           ; BSR set to: 0
  4822  00069E  0E7D               	movlw	low (_line2+1)
  4823  0006A0  6F81               	movwf	sprintf@wh& (0+255),b
  4824  0006A2  0E01               	movlw	high (_line2+1)
  4825  0006A4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4826  0006A6  0E0E               	movlw	low STR_92
  4827  0006A8  6F83               	movwf	sprintf@f& (0+255),b
  4828  0006AA  0E7E               	movlw	high STR_92
  4829  0006AC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4830  0006AE  C0F3  F085         	movff	_umidajt,?_sprintf+4
  4831  0006B2  6B86               	clrf	(?_sprintf+5)& (0+255),b
  4832  0006B4  C0EA  F087         	movff	_main$1635,?_sprintf+6
  4833  0006B8  C0EB  F088         	movff	_main$1635+1,?_sprintf+7
  4834  0006BC  ECCD  F02B         	call	_sprintf	;wreg free
  4835                           
  4836                           ;main.c: 238: sprintf(&line3[1], "FASE: %s", faseAtual('?', &fase, &tempajt));
  4837  0006C0  0E68               	movlw	low (_line3+1)
  4838  0006C2  0100               	movlb	0	; () banked
  4839  0006C4  6F81               	movwf	sprintf@wh& (0+255),b
  4840  0006C6  0E01               	movlw	high (_line3+1)
  4841  0006C8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4842  0006CA  0E4B               	movlw	low STR_93
  4843  0006CC  6F83               	movwf	sprintf@f& (0+255),b
  4844  0006CE  0E7F               	movlw	high STR_93
  4845  0006D0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4846  0006D2  0EF6               	movlw	low _fase
  4847  0006D4  6F60               	movwf	faseAtual@_fase& (0+255),b
  4848  0006D6  0E00               	movlw	high _fase
  4849  0006D8  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  4850  0006DA  0EF4               	movlw	low _tempajt
  4851  0006DC  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  4852  0006DE  0E00               	movlw	high _tempajt
  4853  0006E0  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  4854  0006E2  0E3F               	movlw	63
  4855  0006E4  ECA7  F022         	call	_faseAtual
  4856  0006E8  C060  F085         	movff	?_faseAtual,?_sprintf+4
  4857  0006EC  C061  F086         	movff	?_faseAtual+1,?_sprintf+5
  4858  0006F0  ECCD  F02B         	call	_sprintf	;wreg free
  4859                           
  4860                           ;main.c: 239: sprintf(&line4[1], "CLIMA: %s", climaAtual(clima));
  4861  0006F4  0E53               	movlw	low (_line4+1)
  4862  0006F6  0100               	movlb	0	; () banked
  4863  0006F8  6F81               	movwf	sprintf@wh& (0+255),b
  4864  0006FA  0E01               	movlw	high (_line4+1)
  4865  0006FC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4866  0006FE  0E08               	movlw	low STR_94
  4867  000700  6F83               	movwf	sprintf@f& (0+255),b
  4868  000702  0E7F               	movlw	high STR_94
  4869  000704  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4870  000706  51F5               	movf	_clima& (0+255),w,b
  4871  000708  ECA9  F02B         	call	_climaAtual
  4872  00070C  C060  F085         	movff	?_climaAtual,?_sprintf+4
  4873  000710  C061  F086         	movff	?_climaAtual+1,?_sprintf+5
  4874  000714  ECCD  F02B         	call	_sprintf	;wreg free
  4875                           
  4876                           ;main.c: 240: break;
  4877  000718  D1B0               	goto	l1316
  4878  00071A                     
  4879                           ;main.c: 242: sprintf(&line1[1], "MODO: %s", (!tipo_modo_trabalho) ? "Manual" : "Automat
      +                          ico");
  4880  00071A  5059               	movf	_tipo_modo_trabalho,w,c
  4881  00071C  B4D8               	btfsc	status,2,c
  4882  00071E  D005               	goto	l1324
  4883  000720  0ED3               	movlw	low STR_97
  4884  000722  0100               	movlb	0	; () banked
  4885  000724  6FEC               	movwf	_main$1642& (0+255),b
  4886  000726  0E7E               	movlw	high STR_97
  4887  000728  D004               	goto	L5
  4888  00072A                     l1324:
  4889                           
  4890                           ; BSR set to: 0
  4891  00072A  0E98               	movlw	low STR_96
  4892  00072C  0100               	movlb	0	; () banked
  4893  00072E  6FEC               	movwf	_main$1642& (0+255),b
  4894  000730  0E7F               	movlw	high STR_96
  4895  000732                     L5:
  4896  000732  6FED               	movwf	(_main$1642+1)& (0+255),b
  4897                           
  4898                           ; BSR set to: 0
  4899                           
  4900                           ; BSR set to: 0
  4901  000734  0E92               	movlw	low (_line1+1)
  4902  000736  6F81               	movwf	sprintf@wh& (0+255),b
  4903  000738  0E01               	movlw	high (_line1+1)
  4904  00073A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4905  00073C  0E54               	movlw	low STR_95
  4906  00073E  6F83               	movwf	sprintf@f& (0+255),b
  4907  000740  0E7F               	movlw	high STR_95
  4908  000742  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4909  000744  C0EC  F085         	movff	_main$1642,?_sprintf+4
  4910  000748  C0ED  F086         	movff	_main$1642+1,?_sprintf+5
  4911  00074C  ECCD  F02B         	call	_sprintf	;wreg free
  4912                           
  4913                           ;main.c: 243: sprintf(&line2[1], "TRAVA: %s", (trava_fase) ? "Travado" : "Destravado");
  4914  000750  0100               	movlb	0	; () banked
  4915  000752  51FB               	movf	_trava_fase& (0+255),w,b
  4916  000754  A4D8               	btfss	status,2,c
  4917  000756  D004               	goto	l1328
  4918                           
  4919                           ; BSR set to: 0
  4920  000758  0EDE               	movlw	low STR_100
  4921  00075A  6FEE               	movwf	_main$1647& (0+255),b
  4922  00075C  0E7E               	movlw	high STR_100
  4923  00075E  D003               	goto	L6
  4924  000760                     l1328:
  4925                           
  4926                           ; BSR set to: 0
  4927                           
  4928                           ; BSR set to: 0
  4929  000760  0E5D               	movlw	low STR_99
  4930  000762  6FEE               	movwf	_main$1647& (0+255),b
  4931  000764  0E7F               	movlw	high STR_99
  4932  000766                     L6:
  4933  000766  6FEF               	movwf	(_main$1647+1)& (0+255),b
  4934                           
  4935                           ; BSR set to: 0
  4936                           
  4937                           ; BSR set to: 0
  4938  000768  0E7D               	movlw	low (_line2+1)
  4939  00076A  6F81               	movwf	sprintf@wh& (0+255),b
  4940  00076C  0E01               	movlw	high (_line2+1)
  4941  00076E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4942  000770  0E12               	movlw	low STR_98
  4943  000772  6F83               	movwf	sprintf@f& (0+255),b
  4944  000774  0E7F               	movlw	high STR_98
  4945  000776  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4946  000778  C0EE  F085         	movff	_main$1647,?_sprintf+4
  4947  00077C  C0EF  F086         	movff	_main$1647+1,?_sprintf+5
  4948  000780  ECCD  F02B         	call	_sprintf	;wreg free
  4949                           
  4950                           ;main.c: 244: sprintf(&line3[1], "ALARME: %s", (buzzer) ? "Ligado" : "Desligado");
  4951  000784  0100               	movlb	0	; () banked
  4952  000786  51FC               	movf	_buzzer& (0+255),w,b
  4953  000788  A4D8               	btfss	status,2,c
  4954  00078A  D004               	goto	l1332
  4955                           
  4956                           ; BSR set to: 0
  4957  00078C  0EF4               	movlw	low STR_103
  4958  00078E  6FF0               	movwf	_main$1652& (0+255),b
  4959  000790  0E7E               	movlw	high STR_103
  4960  000792  D003               	goto	L7
  4961  000794                     l1332:
  4962                           
  4963                           ; BSR set to: 0
  4964                           
  4965                           ; BSR set to: 0
  4966  000794  0E9F               	movlw	low STR_102
  4967  000796  6FF0               	movwf	_main$1652& (0+255),b
  4968  000798  0E7F               	movlw	high STR_102
  4969  00079A                     L7:
  4970  00079A  6FF1               	movwf	(_main$1652+1)& (0+255),b
  4971                           
  4972                           ; BSR set to: 0
  4973                           
  4974                           ; BSR set to: 0
  4975  00079C  0E68               	movlw	low (_line3+1)
  4976  00079E  6F81               	movwf	sprintf@wh& (0+255),b
  4977  0007A0  0E01               	movlw	high (_line3+1)
  4978  0007A2  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4979  0007A4  0EE9               	movlw	low STR_101
  4980  0007A6  6F83               	movwf	sprintf@f& (0+255),b
  4981  0007A8  0E7E               	movlw	high STR_101
  4982  0007AA  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4983  0007AC  C0F0  F085         	movff	_main$1652,?_sprintf+4
  4984  0007B0  C0F1  F086         	movff	_main$1652+1,?_sprintf+5
  4985  0007B4  ECCD  F02B         	call	_sprintf	;wreg free
  4986                           
  4987                           ;main.c: 245: sprintf(&line4[1], "TEMPO FIM FASE   >>");
  4988  0007B8  0E53               	movlw	low (_line4+1)
  4989  0007BA  0100               	movlb	0	; () banked
  4990  0007BC  6F81               	movwf	sprintf@wh& (0+255),b
  4991  0007BE  0E01               	movlw	high (_line4+1)
  4992  0007C0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  4993  0007C2  0E92               	movlw	low STR_104
  4994  0007C4  6F83               	movwf	sprintf@f& (0+255),b
  4995  0007C6  0E7C               	movlw	high STR_104
  4996  0007C8  6F84               	movwf	(sprintf@f+1)& (0+255),b
  4997  0007CA  ECCD  F02B         	call	_sprintf	;wreg free
  4998                           
  4999                           ;main.c: 246: break;
  5000  0007CE  D155               	goto	l1316
  5001  0007D0                     
  5002                           ;main.c: 248: sprintf(&line1[1], "CONFIG WIFI      >>");
  5003  0007D0  0E92               	movlw	low (_line1+1)
  5004  0007D2  0100               	movlb	0	; () banked
  5005  0007D4  6F81               	movwf	sprintf@wh& (0+255),b
  5006  0007D6  0E01               	movlw	high (_line1+1)
  5007  0007D8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5008  0007DA  0E7E               	movlw	low STR_105
  5009  0007DC  6F83               	movwf	sprintf@f& (0+255),b
  5010  0007DE  0E7C               	movlw	high STR_105
  5011  0007E0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5012  0007E2  ECCD  F02B         	call	_sprintf	;wreg free
  5013                           
  5014                           ;main.c: 249: sprintf(&line2[1], "CONFIG AVANCADAS >>");
  5015  0007E6  0E7D               	movlw	low (_line2+1)
  5016  0007E8  0100               	movlb	0	; () banked
  5017  0007EA  6F81               	movwf	sprintf@wh& (0+255),b
  5018  0007EC  0E01               	movlw	high (_line2+1)
  5019  0007EE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5020  0007F0  0EA6               	movlw	low STR_106
  5021  0007F2  6F83               	movwf	sprintf@f& (0+255),b
  5022  0007F4  0E7C               	movlw	high STR_106
  5023  0007F6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5024  0007F8  ECCD  F02B         	call	_sprintf	;wreg free
  5025                           
  5026                           ;main.c: 250: break;
  5027  0007FC  D13E               	goto	l1316
  5028  0007FE                     
  5029                           ;main.c: 252: sprintf(&line1[1], "P1:%4d |  P5:%4d", senha_desbloqueio_func, h_venotinha
      +                          );
  5030  0007FE  0E92               	movlw	low (_line1+1)
  5031  000800  0100               	movlb	0	; () banked
  5032  000802  6F81               	movwf	sprintf@wh& (0+255),b
  5033  000804  0E01               	movlw	high (_line1+1)
  5034  000806  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5035  000808  0EAB               	movlw	low STR_107
  5036  00080A  6F83               	movwf	sprintf@f& (0+255),b
  5037  00080C  0E7D               	movlw	high STR_107
  5038  00080E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5039  000810  C04D  F085         	movff	_senha_desbloqueio_func,?_sprintf+4
  5040  000814  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5041  000816  C053  F087         	movff	_h_venotinha,?_sprintf+6
  5042  00081A  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5043  00081C  ECCD  F02B         	call	_sprintf	;wreg free
  5044                           
  5045                           ;main.c: 253: sprintf(&line2[1], "P2:%4d |  P6:%4d", tipo_sensor_umidade, h_modo_seguran
      +                          ca);
  5046  000820  0E7D               	movlw	low (_line2+1)
  5047  000822  0100               	movlb	0	; () banked
  5048  000824  6F81               	movwf	sprintf@wh& (0+255),b
  5049  000826  0E01               	movlw	high (_line2+1)
  5050  000828  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5051  00082A  0EBC               	movlw	low STR_108
  5052  00082C  6F83               	movwf	sprintf@f& (0+255),b
  5053  00082E  0E7D               	movlw	high STR_108
  5054  000830  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5055  000832  C0FA  F085         	movff	_tipo_sensor_umidade,?_sprintf+4
  5056  000836  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5057  000838  C0F7  F087         	movff	_h_modo_seguranca,?_sprintf+6
  5058  00083C  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5059  00083E  ECCD  F02B         	call	_sprintf	;wreg free
  5060                           
  5061                           ;main.c: 254: sprintf(&line3[1], "P3:%4d |  P7:%4d", h_abafador, h_buzzer);
  5062  000842  0E68               	movlw	low (_line3+1)
  5063  000844  0100               	movlb	0	; () banked
  5064  000846  6F81               	movwf	sprintf@wh& (0+255),b
  5065  000848  0E01               	movlw	high (_line3+1)
  5066  00084A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5067  00084C  0ECD               	movlw	low STR_109
  5068  00084E  6F83               	movwf	sprintf@f& (0+255),b
  5069  000850  0E7D               	movlw	high STR_109
  5070  000852  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5071  000854  C052  F085         	movff	_h_abafador,?_sprintf+4
  5072  000858  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5073  00085A  C050  F087         	movff	_h_buzzer,?_sprintf+6
  5074  00085E  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5075  000860  ECCD  F02B         	call	_sprintf	;wreg free
  5076                           
  5077                           ;main.c: 255: sprintf(&line4[1], "P4:%4d |  P8:%4d", h_flap, t_flap_ligado);
  5078  000864  0E53               	movlw	low (_line4+1)
  5079  000866  0100               	movlb	0	; () banked
  5080  000868  6F81               	movwf	sprintf@wh& (0+255),b
  5081  00086A  0E01               	movlw	high (_line4+1)
  5082  00086C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5083  00086E  0EDE               	movlw	low STR_110
  5084  000870  6F83               	movwf	sprintf@f& (0+255),b
  5085  000872  0E7D               	movlw	high STR_110
  5086  000874  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5087  000876  C051  F085         	movff	_h_flap,?_sprintf+4
  5088  00087A  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5089  00087C  C055  F087         	movff	_t_flap_ligado,?_sprintf+6
  5090  000880  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5091  000882  ECCD  F02B         	call	_sprintf	;wreg free
  5092                           
  5093                           ;main.c: 256: break;
  5094  000886  D0F9               	goto	l1316
  5095  000888                     
  5096                           ;main.c: 258: sprintf(&line1[1], "P9 :%4d | P13:%4d", t_flap_intervalo, wifi_SENHA);
  5097  000888  0E92               	movlw	low (_line1+1)
  5098  00088A  0100               	movlb	0	; () banked
  5099  00088C  6F81               	movwf	sprintf@wh& (0+255),b
  5100  00088E  0E01               	movlw	high (_line1+1)
  5101  000890  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5102  000892  0E52               	movlw	low STR_111
  5103  000894  6F83               	movwf	sprintf@f& (0+255),b
  5104  000896  0E7D               	movlw	high STR_111
  5105  000898  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5106  00089A  C054  F085         	movff	_t_flap_intervalo,?_sprintf+4
  5107  00089E  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5108  0008A0  C04B  F087         	movff	_wifi_SENHA,?_sprintf+6
  5109  0008A4  C04C  F088         	movff	_wifi_SENHA+1,?_sprintf+7
  5110  0008A8  ECCD  F02B         	call	_sprintf	;wreg free
  5111                           
  5112                           ;main.c: 259: sprintf(&line2[1], "P10:%4d | P14:%4d", t_buzzer_religar, h_subir_temp_aut
      +                          omatica);
  5113  0008AC  0E7D               	movlw	low (_line2+1)
  5114  0008AE  0100               	movlb	0	; () banked
  5115  0008B0  6F81               	movwf	sprintf@wh& (0+255),b
  5116  0008B2  0E01               	movlw	high (_line2+1)
  5117  0008B4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5118  0008B6  0E64               	movlw	low STR_112
  5119  0008B8  6F83               	movwf	sprintf@f& (0+255),b
  5120  0008BA  0E7D               	movlw	high STR_112
  5121  0008BC  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5122  0008BE  C0FF  F085         	movff	_t_buzzer_religar,?_sprintf+4
  5123  0008C2  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5124  0008C4  C04F  F087         	movff	_h_subir_temp_automatica,?_sprintf+6
  5125  0008C8  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5126  0008CA  ECCD  F02B         	call	_sprintf	;wreg free
  5127                           
  5128                           ;main.c: 260: sprintf(&line3[1], "P11:%4d | P15:%4d", t_temp_automatica, t_religar_vento
      +                          inha_automatica);
  5129  0008CE  0E68               	movlw	low (_line3+1)
  5130  0008D0  0100               	movlb	0	; () banked
  5131  0008D2  6F81               	movwf	sprintf@wh& (0+255),b
  5132  0008D4  0E01               	movlw	high (_line3+1)
  5133  0008D6  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5134  0008D8  0E76               	movlw	low STR_113
  5135  0008DA  6F83               	movwf	sprintf@f& (0+255),b
  5136  0008DC  0E7D               	movlw	high STR_113
  5137  0008DE  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5138  0008E0  C0F9  F085         	movff	_t_temp_automatica,?_sprintf+4
  5139  0008E4  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5140  0008E6  C0F8  F087         	movff	_t_religar_ventoinha_automatica,?_sprintf+6
  5141  0008EA  6B88               	clrf	(?_sprintf+7)& (0+255),b
  5142  0008EC  ECCD  F02B         	call	_sprintf	;wreg free
  5143                           
  5144                           ;main.c: 261: sprintf(&line4[1], "P12:%4d |", wifi_habilita_alteracao);
  5145  0008F0  0E53               	movlw	low (_line4+1)
  5146  0008F2  0100               	movlb	0	; () banked
  5147  0008F4  6F81               	movwf	sprintf@wh& (0+255),b
  5148  0008F6  0E01               	movlw	high (_line4+1)
  5149  0008F8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5150  0008FA  0E26               	movlw	low STR_114
  5151  0008FC  6F83               	movwf	sprintf@f& (0+255),b
  5152  0008FE  0E7F               	movlw	high STR_114
  5153  000900  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5154  000902  C04E  F085         	movff	_wifi_habilita_alteracao,?_sprintf+4
  5155  000906  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5156  000908  ECCD  F02B         	call	_sprintf	;wreg free
  5157                           
  5158                           ;main.c: 262: break;
  5159  00090C  D0B6               	goto	l1316
  5160  00090E                     
  5161                           ;main.c: 264: sprintf(line1, "SID: %s", ssid);
  5162  00090E  0E91               	movlw	low _line1
  5163  000910  0100               	movlb	0	; () banked
  5164  000912  6F81               	movwf	sprintf@wh& (0+255),b
  5165  000914  0E01               	movlw	high _line1
  5166  000916  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5167  000918  0E65               	movlw	low STR_115
  5168  00091A  6F83               	movwf	sprintf@f& (0+255),b
  5169  00091C  0E7F               	movlw	high STR_115
  5170  00091E  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5171  000920  0EC9               	movlw	low _ssid
  5172  000922  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5173  000924  0E01               	movlw	high _ssid
  5174  000926  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5175  000928  ECCD  F02B         	call	_sprintf	;wreg free
  5176                           
  5177                           ;main.c: 265: sprintf(line2, "PSW: %s", senha);
  5178  00092C  0E7C               	movlw	low _line2
  5179  00092E  0100               	movlb	0	; () banked
  5180  000930  6F81               	movwf	sprintf@wh& (0+255),b
  5181  000932  0E01               	movlw	high _line2
  5182  000934  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5183  000936  0E6D               	movlw	low STR_116
  5184  000938  6F83               	movwf	sprintf@f& (0+255),b
  5185  00093A  0E7F               	movlw	high STR_116
  5186  00093C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5187  00093E  0EBA               	movlw	low _senha
  5188  000940  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5189  000942  0E01               	movlw	high _senha
  5190  000944  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5191  000946  ECCD  F02B         	call	_sprintf	;wreg free
  5192                           
  5193                           ;main.c: 266: sprintf(line3, "NS: %s", wifi_MAC);
  5194  00094A  0E67               	movlw	low _line3
  5195  00094C  0100               	movlb	0	; () banked
  5196  00094E  6F81               	movwf	sprintf@wh& (0+255),b
  5197  000950  0E01               	movlw	high _line3
  5198  000952  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5199  000954  0EA6               	movlw	low STR_117
  5200  000956  6F83               	movwf	sprintf@f& (0+255),b
  5201  000958  0E7F               	movlw	high STR_117
  5202  00095A  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5203  00095C  0EE6               	movlw	low _wifi_MAC
  5204  00095E  6F85               	movwf	(?_sprintf+4)& (0+255),b
  5205  000960  0E01               	movlw	high _wifi_MAC
  5206  000962  6F86               	movwf	(?_sprintf+5)& (0+255),b
  5207  000964  ECCD  F02B         	call	_sprintf	;wreg free
  5208                           
  5209                           ;main.c: 267: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5210  000968  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
  5211  00096C  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
  5212  000970  0E00               	movlw	0
  5213  000972  0100               	movlb	0	; () banked
  5214  000974  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5215  000976  0E27               	movlw	39
  5216  000978  6F62               	movwf	___wmul@multiplicand& (0+255),b
  5217  00097A  EC46  F02D         	call	___wmul	;wreg free
  5218  00097E  C060  F0E2         	movff	?___wmul,_main$2518
  5219  000982  C061  F0E3         	movff	?___wmul+1,_main$2518+1
  5220                           
  5221                           ;main.c: 267: sprintf(line4, "AUTH: %d", (int) (wifi_SENHA * 39));
  5222  000986  0E52               	movlw	low _line4
  5223  000988  0100               	movlb	0	; () banked
  5224  00098A  6F81               	movwf	sprintf@wh& (0+255),b
  5225  00098C  0E01               	movlw	high _line4
  5226  00098E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5227  000990  0E42               	movlw	low STR_118
  5228  000992  6F83               	movwf	sprintf@f& (0+255),b
  5229  000994  0E7F               	movlw	high STR_118
  5230  000996  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5231  000998  C0E2  F085         	movff	_main$2518,?_sprintf+4
  5232  00099C  C0E3  F086         	movff	_main$2518+1,?_sprintf+5
  5233  0009A0  ECCD  F02B         	call	_sprintf	;wreg free
  5234                           
  5235                           ;main.c: 268: break;
  5236  0009A4  D06A               	goto	l1316
  5237  0009A6                     
  5238                           ;main.c: 270: sprintf(&line1[1], "CONFIGURAR       >>");
  5239  0009A6  0E92               	movlw	low (_line1+1)
  5240  0009A8  0100               	movlb	0	; () banked
  5241  0009AA  6F81               	movwf	sprintf@wh& (0+255),b
  5242  0009AC  0E01               	movlw	high (_line1+1)
  5243  0009AE  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5244  0009B0  0E6A               	movlw	low STR_119
  5245  0009B2  6F83               	movwf	sprintf@f& (0+255),b
  5246  0009B4  0E7C               	movlw	high STR_119
  5247  0009B6  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5248  0009B8  ECCD  F02B         	call	_sprintf	;wreg free
  5249                           
  5250                           ;main.c: 271: break;
  5251  0009BC  D05E               	goto	l1316
  5252  0009BE                     
  5253                           ;main.c: 273: alterarDadosConexaoConfigWifi();
  5254  0009BE  ECFF  F01A         	call	_alterarDadosConexaoConfigWifi	;wreg free
  5255                           
  5256                           ;main.c: 274: break;
  5257  0009C2  D05B               	goto	l1316
  5258  0009C4                     
  5259                           ;main.c: 276: sprintf(&line1[1], "Amarelacao : %d hr", t_fim_fase1);
  5260  0009C4  0E92               	movlw	low (_line1+1)
  5261  0009C6  0100               	movlb	0	; () banked
  5262  0009C8  6F81               	movwf	sprintf@wh& (0+255),b
  5263  0009CA  0E01               	movlw	high (_line1+1)
  5264  0009CC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5265  0009CE  0E08               	movlw	low STR_120
  5266  0009D0  6F83               	movwf	sprintf@f& (0+255),b
  5267  0009D2  0E7D               	movlw	high STR_120
  5268  0009D4  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5269  0009D6  C058  F085         	movff	_t_fim_fase1,?_sprintf+4
  5270  0009DA  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5271  0009DC  ECCD  F02B         	call	_sprintf	;wreg free
  5272                           
  5273                           ;main.c: 277: sprintf(&line2[1], "Murchamento: %d hr", t_fim_fase2);
  5274  0009E0  0E7D               	movlw	low (_line2+1)
  5275  0009E2  0100               	movlb	0	; () banked
  5276  0009E4  6F81               	movwf	sprintf@wh& (0+255),b
  5277  0009E6  0E01               	movlw	high (_line2+1)
  5278  0009E8  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5279  0009EA  0E1B               	movlw	low STR_121
  5280  0009EC  6F83               	movwf	sprintf@f& (0+255),b
  5281  0009EE  0E7D               	movlw	high STR_121
  5282  0009F0  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5283  0009F2  C057  F085         	movff	_t_fim_fase2,?_sprintf+4
  5284  0009F6  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5285  0009F8  ECCD  F02B         	call	_sprintf	;wreg free
  5286                           
  5287                           ;main.c: 278: sprintf(&line3[1], "Sec. Folha : %d hr", t_fim_fase3);
  5288  0009FC  0E68               	movlw	low (_line3+1)
  5289  0009FE  0100               	movlb	0	; () banked
  5290  000A00  6F81               	movwf	sprintf@wh& (0+255),b
  5291  000A02  0E01               	movlw	high (_line3+1)
  5292  000A04  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5293  000A06  0EF5               	movlw	low STR_122
  5294  000A08  6F83               	movwf	sprintf@f& (0+255),b
  5295  000A0A  0E7C               	movlw	high STR_122
  5296  000A0C  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5297  000A0E  C056  F085         	movff	_t_fim_fase3,?_sprintf+4
  5298  000A12  6B86               	clrf	(?_sprintf+5)& (0+255),b
  5299  000A14  ECCD  F02B         	call	_sprintf	;wreg free
  5300                           
  5301                           ;main.c: 279: sprintf(line4, "*0 nao passa fase");
  5302  000A18  0E52               	movlw	low _line4
  5303  000A1A  0100               	movlb	0	; () banked
  5304  000A1C  6F81               	movwf	sprintf@wh& (0+255),b
  5305  000A1E  0E01               	movlw	high _line4
  5306  000A20  6F82               	movwf	(sprintf@wh+1)& (0+255),b
  5307  000A22  0E88               	movlw	low STR_123
  5308  000A24  6F83               	movwf	sprintf@f& (0+255),b
  5309  000A26  0E7D               	movlw	high STR_123
  5310  000A28  6F84               	movwf	(sprintf@f+1)& (0+255),b
  5311  000A2A  ECCD  F02B         	call	_sprintf	;wreg free
  5312                           
  5313                           ;main.c: 280: break;
  5314  000A2E  D025               	goto	l1316
  5315  000A30  0E00               	movlw	0
  5316  000A32  0100               	movlb	0	; () banked
  5317  000A34  6FFD               	movwf	_menu& (0+255),b
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;main.c: 283: }
  5321                           
  5322                           ;main.c: 282: break;
  5323  000A36  D021               	goto	l1316
  5324  000A38                     l1284:
  5325                           
  5326                           ; BSR set to: 0
  5327  000A38  0100               	movlb	0	; () banked
  5328  000A3A  51FD               	movf	_menu& (0+255),w,b
  5329                           
  5330                           ; Switch size 1, requested type "space"
  5331                           ; Number of cases is 10, Range of values is 0 to 11
  5332                           ; switch strategies available:
  5333                           ; Name         Instructions Cycles
  5334                           ; simple_byte           31    16 (average)
  5335                           ;	Chosen strategy is simple_byte
  5336  000A3C  0A00               	xorlw	0	; case 0
  5337  000A3E  B4D8               	btfsc	status,2,c
  5338  000A40  D4B9               	goto	l1285
  5339  000A42  0A01               	xorlw	1	; case 1
  5340  000A44  B4D8               	btfsc	status,2,c
  5341  000A46  D611               	goto	l1317
  5342  000A48  0A03               	xorlw	3	; case 2
  5343  000A4A  B4D8               	btfsc	status,2,c
  5344  000A4C  D666               	goto	l1322
  5345  000A4E  0A01               	xorlw	1	; case 3
  5346  000A50  B4D8               	btfsc	status,2,c
  5347  000A52  D6BE               	goto	l1335
  5348  000A54  0A06               	xorlw	6	; case 5
  5349  000A56  B4D8               	btfsc	status,2,c
  5350  000A58  D6D2               	goto	l1336
  5351  000A5A  0A03               	xorlw	3	; case 6
  5352  000A5C  B4D8               	btfsc	status,2,c
  5353  000A5E  D714               	goto	l1337
  5354  000A60  0A0E               	xorlw	14	; case 8
  5355  000A62  B4D8               	btfsc	status,2,c
  5356  000A64  D754               	goto	l1338
  5357  000A66  0A01               	xorlw	1	; case 9
  5358  000A68  B4D8               	btfsc	status,2,c
  5359  000A6A  D79D               	goto	l1339
  5360  000A6C  0A03               	xorlw	3	; case 10
  5361  000A6E  B4D8               	btfsc	status,2,c
  5362  000A70  D7A6               	goto	l1340
  5363  000A72  0A01               	xorlw	1	; case 11
  5364  000A74  B4D8               	btfsc	status,2,c
  5365  000A76  D7A6               	goto	l1341
  5366  000A78  D7DB               	goto	l1342
  5367  000A7A                     l1316:
  5368                           
  5369                           ;main.c: 287: if (menu == 1 | menu == 2 | menu == 3) {
  5370                           
  5371                           ; BSR set to: 0
  5372  000A7A  0100               	movlb	0	; () banked
  5373  000A7C  05FD               	decf	_menu& (0+255),w,b
  5374  000A7E  B4D8               	btfsc	status,2,c
  5375  000A80  D008               	goto	u14510
  5376                           
  5377                           ; BSR set to: 0
  5378  000A82  0E02               	movlw	2
  5379  000A84  19FD               	xorwf	_menu& (0+255),w,b
  5380  000A86  B4D8               	btfsc	status,2,c
  5381  000A88  D004               	goto	u14510
  5382                           
  5383                           ; BSR set to: 0
  5384  000A8A  0E03               	movlw	3
  5385  000A8C  19FD               	xorwf	_menu& (0+255),w,b
  5386  000A8E  A4D8               	btfss	status,2,c
  5387  000A90  D1C0               	goto	l1343
  5388  000A92                     u14510:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;main.c: 288: ajuste_parametro = 0;
  5392                           
  5393                           ; BSR set to: 0
  5394  000A92  0E00               	movlw	0
  5395  000A94  6E44               	movwf	_ajuste_parametro,c
  5396                           
  5397                           ;main.c: 290: switch (opcaomenu) {
  5398  000A96  D186               	goto	l1346
  5399  000A98                     
  5400                           ;main.c: 292: opcaomenu = 10;
  5401                           
  5402                           ; BSR set to: 0
  5403  000A98  0E0A               	movlw	10
  5404  000A9A  D180               	goto	L8
  5405  000A9C                     
  5406                           ;main.c: 295: menu = 1;
  5407  000A9C  0E01               	movlw	1
  5408  000A9E  0100               	movlb	0	; () banked
  5409  000AA0  6FFD               	movwf	_menu& (0+255),b
  5410                           
  5411                           ;main.c: 296: line1[0] = '>';
  5412  000AA2  0E3E               	movlw	62
  5413  000AA4  0101               	movlb	1	; () banked
  5414  000AA6  6F91               	movwf	_line1& (0+255),b
  5415                           
  5416                           ; BSR set to: 1
  5417                           ;main.c: 297: if (btPress(64)) setRangeValor('+', &tempajt, 60, 160, 1);
  5418  000AA8  0E40               	movlw	64
  5419  000AAA  ECDA  F02D         	call	_btPress
  5420  000AAE  0900               	iorlw	0
  5421  000AB0  B4D8               	btfsc	status,2,c
  5422  000AB2  D00E               	goto	l1350
  5423  000AB4  0EF4               	movlw	low _tempajt
  5424  000AB6  0100               	movlb	0	; () banked
  5425  000AB8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5426  000ABA  0E00               	movlw	high _tempajt
  5427  000ABC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5428  000ABE  0E3C               	movlw	60
  5429  000AC0  6F67               	movwf	setRangeValor@_min& (0+255),b
  5430  000AC2  0EA0               	movlw	160
  5431  000AC4  6F68               	movwf	setRangeValor@_max& (0+255),b
  5432  000AC6  0E01               	movlw	1
  5433  000AC8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5434  000ACA  0E2B               	movlw	43
  5435  000ACC  ECD9  F027         	call	_setRangeValor
  5436  000AD0                     l1350:
  5437                           
  5438                           ;main.c: 298: if (btPress(32)) setRangeValor('-', &tempajt, 60, 160, 1);
  5439  000AD0  0E20               	movlw	32
  5440  000AD2  ECDA  F02D         	call	_btPress
  5441  000AD6  0900               	iorlw	0
  5442  000AD8  B4D8               	btfsc	status,2,c
  5443  000ADA  D187               	goto	l1348
  5444  000ADC  0EF4               	movlw	low _tempajt
  5445  000ADE  0100               	movlb	0	; () banked
  5446  000AE0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5447  000AE2  0E00               	movlw	high _tempajt
  5448  000AE4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5449  000AE6  0E3C               	movlw	60
  5450  000AE8  6F67               	movwf	setRangeValor@_min& (0+255),b
  5451  000AEA  0EA0               	movlw	160
  5452  000AEC  6F68               	movwf	setRangeValor@_max& (0+255),b
  5453  000AEE  0E01               	movlw	1
  5454  000AF0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5455  000AF2  0E2D               	movlw	45
  5456  000AF4  ECD9  F027         	call	_setRangeValor
  5457                           
  5458                           ;main.c: 299: break;
  5459  000AF8  D178               	goto	l1348
  5460  000AFA                     
  5461                           ;main.c: 301: line2[0] = '>';
  5462  000AFA  0E3E               	movlw	62
  5463  000AFC  0101               	movlb	1	; () banked
  5464  000AFE  6F7C               	movwf	_line2& (0+255),b
  5465                           
  5466                           ;main.c: 302: if (tipo_modo_trabalho == 0) {
  5467  000B00  5059               	movf	_tipo_modo_trabalho,w,c
  5468  000B02  A4D8               	btfss	status,2,c
  5469  000B04  D172               	goto	l1348
  5470                           
  5471                           ; BSR set to: 1
  5472                           ;main.c: 303: if (btPress(64)) setUmidade('+', &umidajt, &tempajt, &clima);
  5473  000B06  0E40               	movlw	64
  5474  000B08  ECDA  F02D         	call	_btPress
  5475  000B0C  0900               	iorlw	0
  5476  000B0E  B4D8               	btfsc	status,2,c
  5477  000B10  D010               	goto	l1354
  5478  000B12  0EF3               	movlw	low _umidajt
  5479  000B14  0100               	movlb	0	; () banked
  5480  000B16  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5481  000B18  0E00               	movlw	high _umidajt
  5482  000B1A  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5483  000B1C  0EF4               	movlw	low _tempajt
  5484  000B1E  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5485  000B20  0E00               	movlw	high _tempajt
  5486  000B22  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5487  000B24  0EF5               	movlw	low _clima
  5488  000B26  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5489  000B28  0E00               	movlw	high _clima
  5490  000B2A  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5491  000B2C  0E2B               	movlw	43
  5492  000B2E  EC46  F023         	call	_setUmidade
  5493  000B32                     l1354:
  5494                           
  5495                           ;main.c: 304: if (btPress(32)) setUmidade('-', &umidajt, &tempajt, &clima);
  5496  000B32  0E20               	movlw	32
  5497  000B34  ECDA  F02D         	call	_btPress
  5498  000B38  0900               	iorlw	0
  5499  000B3A  B4D8               	btfsc	status,2,c
  5500  000B3C  D156               	goto	l1348
  5501  000B3E  0EF3               	movlw	low _umidajt
  5502  000B40  0100               	movlb	0	; () banked
  5503  000B42  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5504  000B44  0E00               	movlw	high _umidajt
  5505  000B46  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5506  000B48  0EF4               	movlw	low _tempajt
  5507  000B4A  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5508  000B4C  0E00               	movlw	high _tempajt
  5509  000B4E  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5510  000B50  0EF5               	movlw	low _clima
  5511  000B52  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5512  000B54  0E00               	movlw	high _clima
  5513  000B56  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5514  000B58  0E2D               	movlw	45
  5515  000B5A  EC46  F023         	call	_setUmidade
  5516                           
  5517                           ;main.c: 305: }
  5518                           ;main.c: 306: break;
  5519  000B5E  D145               	goto	l1348
  5520  000B60                     
  5521                           ;main.c: 308: line3[0] = '>';
  5522  000B60  0E3E               	movlw	62
  5523  000B62  0101               	movlb	1	; () banked
  5524  000B64  6F67               	movwf	_line3& (0+255),b
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;main.c: 309: if (btPress(64)) {
  5528  000B66  0E40               	movlw	64
  5529  000B68  ECDA  F02D         	call	_btPress
  5530  000B6C  0900               	iorlw	0
  5531  000B6E  B4D8               	btfsc	status,2,c
  5532  000B70  D02A               	goto	l1357
  5533                           
  5534                           ;main.c: 310: setRangeValor('+', &fase, 1, 4, 4);
  5535  000B72  0EF6               	movlw	low _fase
  5536  000B74  0100               	movlb	0	; () banked
  5537  000B76  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5538  000B78  0E00               	movlw	high _fase
  5539  000B7A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5540  000B7C  0E01               	movlw	1
  5541  000B7E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5542  000B80  0E04               	movlw	4
  5543  000B82  6F68               	movwf	setRangeValor@_max& (0+255),b
  5544  000B84  0E04               	movlw	4
  5545  000B86  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5546  000B88  0E2B               	movlw	43
  5547  000B8A  ECD9  F027         	call	_setRangeValor
  5548                           
  5549                           ;main.c: 311: faseAtual('A', &fase, &tempajt);
  5550  000B8E  0EF6               	movlw	low _fase
  5551  000B90  0100               	movlb	0	; () banked
  5552  000B92  6F60               	movwf	faseAtual@_fase& (0+255),b
  5553  000B94  0E00               	movlw	high _fase
  5554  000B96  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5555  000B98  0EF4               	movlw	low _tempajt
  5556  000B9A  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5557  000B9C  0E00               	movlw	high _tempajt
  5558  000B9E  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5559  000BA0  0E41               	movlw	65
  5560  000BA2  ECA7  F022         	call	_faseAtual
  5561                           
  5562                           ;main.c: 312: setUmidade('A', &umidajt, &tempajt, &clima);
  5563  000BA6  0EF3               	movlw	low _umidajt
  5564  000BA8  0100               	movlb	0	; () banked
  5565  000BAA  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5566  000BAC  0E00               	movlw	high _umidajt
  5567  000BAE  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5568  000BB0  0EF4               	movlw	low _tempajt
  5569  000BB2  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5570  000BB4  0E00               	movlw	high _tempajt
  5571  000BB6  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5572  000BB8  0EF5               	movlw	low _clima
  5573  000BBA  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5574  000BBC  0E00               	movlw	high _clima
  5575  000BBE  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5576  000BC0  0E41               	movlw	65
  5577  000BC2  EC46  F023         	call	_setUmidade
  5578  000BC6                     l1357:
  5579                           
  5580                           ;main.c: 313: }
  5581                           ;main.c: 314: if (btPress(32)) {
  5582  000BC6  0E20               	movlw	32
  5583  000BC8  ECDA  F02D         	call	_btPress
  5584  000BCC  0900               	iorlw	0
  5585  000BCE  B4D8               	btfsc	status,2,c
  5586  000BD0  D10C               	goto	l1348
  5587                           
  5588                           ;main.c: 315: setRangeValor('-', &fase, 1, 4, 4);
  5589  000BD2  0EF6               	movlw	low _fase
  5590  000BD4  0100               	movlb	0	; () banked
  5591  000BD6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5592  000BD8  0E00               	movlw	high _fase
  5593  000BDA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5594  000BDC  0E01               	movlw	1
  5595  000BDE  6F67               	movwf	setRangeValor@_min& (0+255),b
  5596  000BE0  0E04               	movlw	4
  5597  000BE2  6F68               	movwf	setRangeValor@_max& (0+255),b
  5598  000BE4  0E04               	movlw	4
  5599  000BE6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5600  000BE8  0E2D               	movlw	45
  5601  000BEA  ECD9  F027         	call	_setRangeValor
  5602                           
  5603                           ;main.c: 316: faseAtual('A', &fase, &tempajt);
  5604  000BEE  0EF6               	movlw	low _fase
  5605  000BF0  0100               	movlb	0	; () banked
  5606  000BF2  6F60               	movwf	faseAtual@_fase& (0+255),b
  5607  000BF4  0E00               	movlw	high _fase
  5608  000BF6  6F61               	movwf	(faseAtual@_fase+1)& (0+255),b
  5609  000BF8  0EF4               	movlw	low _tempajt
  5610  000BFA  6F62               	movwf	faseAtual@_tempajt& (0+255),b
  5611  000BFC  0E00               	movlw	high _tempajt
  5612  000BFE  6F63               	movwf	(faseAtual@_tempajt+1)& (0+255),b
  5613  000C00  0E41               	movlw	65
  5614  000C02  ECA7  F022         	call	_faseAtual
  5615                           
  5616                           ;main.c: 317: setUmidade('A', &umidajt, &tempajt, &clima);
  5617  000C06  0EF3               	movlw	low _umidajt
  5618  000C08  0100               	movlb	0	; () banked
  5619  000C0A  6F68               	movwf	setUmidade@_umdajt& (0+255),b
  5620  000C0C  0E00               	movlw	high _umidajt
  5621  000C0E  6F69               	movwf	(setUmidade@_umdajt+1)& (0+255),b
  5622  000C10  0EF4               	movlw	low _tempajt
  5623  000C12  6F6A               	movwf	setUmidade@_tempajt& (0+255),b
  5624  000C14  0E00               	movlw	high _tempajt
  5625  000C16  6F6B               	movwf	(setUmidade@_tempajt+1)& (0+255),b
  5626  000C18  0EF5               	movlw	low _clima
  5627  000C1A  6F6C               	movwf	setUmidade@_clima& (0+255),b
  5628  000C1C  0E00               	movlw	high _clima
  5629  000C1E  6F6D               	movwf	(setUmidade@_clima+1)& (0+255),b
  5630  000C20  0E41               	movlw	65
  5631  000C22  EC46  F023         	call	_setUmidade
  5632                           
  5633                           ;main.c: 318: }
  5634                           ;main.c: 319: break;
  5635  000C26  D0E1               	goto	l1348
  5636  000C28                     
  5637                           ;main.c: 321: menu = 1;
  5638  000C28  0E01               	movlw	1
  5639  000C2A  0100               	movlb	0	; () banked
  5640  000C2C  6FFD               	movwf	_menu& (0+255),b
  5641                           
  5642                           ;main.c: 322: line4[0] = '>';
  5643  000C2E  0E3E               	movlw	62
  5644  000C30  0101               	movlb	1	; () banked
  5645  000C32  6F52               	movwf	_line4& (0+255),b
  5646                           
  5647                           ; BSR set to: 1
  5648                           ;main.c: 323: if (btPress(64))setRangeValor('+', &clima, 1, 3, 5);
  5649  000C34  0E40               	movlw	64
  5650  000C36  ECDA  F02D         	call	_btPress
  5651  000C3A  0900               	iorlw	0
  5652  000C3C  B4D8               	btfsc	status,2,c
  5653  000C3E  D00E               	goto	l1360
  5654  000C40  0EF5               	movlw	low _clima
  5655  000C42  0100               	movlb	0	; () banked
  5656  000C44  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5657  000C46  0E00               	movlw	high _clima
  5658  000C48  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5659  000C4A  0E01               	movlw	1
  5660  000C4C  6F67               	movwf	setRangeValor@_min& (0+255),b
  5661  000C4E  0E03               	movlw	3
  5662  000C50  6F68               	movwf	setRangeValor@_max& (0+255),b
  5663  000C52  0E05               	movlw	5
  5664  000C54  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5665  000C56  0E2B               	movlw	43
  5666  000C58  ECD9  F027         	call	_setRangeValor
  5667  000C5C                     l1360:
  5668                           
  5669                           ;main.c: 324: if (btPress(32))setRangeValor('-', &clima, 1, 3, 5);
  5670  000C5C  0E20               	movlw	32
  5671  000C5E  ECDA  F02D         	call	_btPress
  5672  000C62  0900               	iorlw	0
  5673  000C64  B4D8               	btfsc	status,2,c
  5674  000C66  D0C1               	goto	l1348
  5675  000C68  0EF5               	movlw	low _clima
  5676  000C6A  0100               	movlb	0	; () banked
  5677  000C6C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5678  000C6E  0E00               	movlw	high _clima
  5679  000C70  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5680  000C72  0E01               	movlw	1
  5681  000C74  6F67               	movwf	setRangeValor@_min& (0+255),b
  5682  000C76  0E03               	movlw	3
  5683  000C78  6F68               	movwf	setRangeValor@_max& (0+255),b
  5684  000C7A  0E05               	movlw	5
  5685  000C7C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5686  000C7E  0E2D               	movlw	45
  5687  000C80  ECD9  F027         	call	_setRangeValor
  5688                           
  5689                           ;main.c: 325: break;
  5690  000C84  D0B2               	goto	l1348
  5691  000C86                     
  5692                           ;main.c: 327: menu = 2;
  5693  000C86  0E02               	movlw	2
  5694  000C88  0100               	movlb	0	; () banked
  5695  000C8A  6FFD               	movwf	_menu& (0+255),b
  5696                           
  5697                           ;main.c: 328: line1[0] = '>';
  5698  000C8C  0E3E               	movlw	62
  5699  000C8E  0101               	movlb	1	; () banked
  5700  000C90  6F91               	movwf	_line1& (0+255),b
  5701                           
  5702                           ; BSR set to: 1
  5703                           ;main.c: 329: if (btPress(64) || btPress(32)) setRangeValor('+', &tipo_modo_trabalho, 0,
      +                           1, 6);
  5704  000C92  0E40               	movlw	64
  5705  000C94  ECDA  F02D         	call	_btPress
  5706  000C98  0900               	iorlw	0
  5707  000C9A  A4D8               	btfss	status,2,c
  5708  000C9C  D006               	goto	u14620
  5709  000C9E  0E20               	movlw	32
  5710  000CA0  ECDA  F02D         	call	_btPress
  5711  000CA4  0900               	iorlw	0
  5712  000CA6  B4D8               	btfsc	status,2,c
  5713  000CA8  D0A0               	goto	l1348
  5714  000CAA                     u14620:
  5715  000CAA  0E59               	movlw	low _tipo_modo_trabalho
  5716  000CAC  0100               	movlb	0	; () banked
  5717  000CAE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5718  000CB0  0E00               	movlw	high _tipo_modo_trabalho
  5719  000CB2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5720  000CB4  0E00               	movlw	0
  5721  000CB6  6F67               	movwf	setRangeValor@_min& (0+255),b
  5722  000CB8  0E01               	movlw	1
  5723  000CBA  6F68               	movwf	setRangeValor@_max& (0+255),b
  5724  000CBC  0E06               	movlw	6
  5725  000CBE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5726  000CC0  0E2B               	movlw	43
  5727  000CC2  ECD9  F027         	call	_setRangeValor
  5728                           
  5729                           ;main.c: 330: break;
  5730  000CC6  D091               	goto	l1348
  5731  000CC8                     
  5732                           ;main.c: 332: line2[0] = '>';
  5733  000CC8  0E3E               	movlw	62
  5734  000CCA  0101               	movlb	1	; () banked
  5735  000CCC  6F7C               	movwf	_line2& (0+255),b
  5736                           
  5737                           ; BSR set to: 1
  5738                           ;main.c: 333: if (btPress(64) || btPress(32)) setRangeValor('+', &trava_fase, 0, 1, 3);
  5739  000CCE  0E40               	movlw	64
  5740  000CD0  ECDA  F02D         	call	_btPress
  5741  000CD4  0900               	iorlw	0
  5742  000CD6  A4D8               	btfss	status,2,c
  5743  000CD8  D006               	goto	u14640
  5744  000CDA  0E20               	movlw	32
  5745  000CDC  ECDA  F02D         	call	_btPress
  5746  000CE0  0900               	iorlw	0
  5747  000CE2  B4D8               	btfsc	status,2,c
  5748  000CE4  D082               	goto	l1348
  5749  000CE6                     u14640:
  5750  000CE6  0EFB               	movlw	low _trava_fase
  5751  000CE8  0100               	movlb	0	; () banked
  5752  000CEA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5753  000CEC  0E00               	movlw	high _trava_fase
  5754  000CEE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5755  000CF0  0E00               	movlw	0
  5756  000CF2  6F67               	movwf	setRangeValor@_min& (0+255),b
  5757  000CF4  0E01               	movlw	1
  5758  000CF6  6F68               	movwf	setRangeValor@_max& (0+255),b
  5759  000CF8  0E03               	movlw	3
  5760  000CFA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5761  000CFC  0E2B               	movlw	43
  5762  000CFE  ECD9  F027         	call	_setRangeValor
  5763                           
  5764                           ;main.c: 334: break;
  5765  000D02  D073               	goto	l1348
  5766  000D04                     
  5767                           ;main.c: 336: line3[0] = '>';
  5768  000D04  0E3E               	movlw	62
  5769  000D06  0101               	movlb	1	; () banked
  5770  000D08  6F67               	movwf	_line3& (0+255),b
  5771                           
  5772                           ; BSR set to: 1
  5773                           ;main.c: 337: if (btPress(64) || btPress(32)) setRangeValor('+', &buzzer, 0, 1, 14);
  5774  000D0A  0E40               	movlw	64
  5775  000D0C  ECDA  F02D         	call	_btPress
  5776  000D10  0900               	iorlw	0
  5777  000D12  A4D8               	btfss	status,2,c
  5778  000D14  D006               	goto	u14660
  5779  000D16  0E20               	movlw	32
  5780  000D18  ECDA  F02D         	call	_btPress
  5781  000D1C  0900               	iorlw	0
  5782  000D1E  B4D8               	btfsc	status,2,c
  5783  000D20  D064               	goto	l1348
  5784  000D22                     u14660:
  5785  000D22  0EFC               	movlw	low _buzzer
  5786  000D24  0100               	movlb	0	; () banked
  5787  000D26  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  5788  000D28  0E00               	movlw	high _buzzer
  5789  000D2A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  5790  000D2C  0E00               	movlw	0
  5791  000D2E  6F67               	movwf	setRangeValor@_min& (0+255),b
  5792  000D30  0E01               	movlw	1
  5793  000D32  6F68               	movwf	setRangeValor@_max& (0+255),b
  5794  000D34  0E0E               	movlw	14
  5795  000D36  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  5796  000D38  0E2B               	movlw	43
  5797  000D3A  ECD9  F027         	call	_setRangeValor
  5798                           
  5799                           ;main.c: 338: break;
  5800  000D3E  D055               	goto	l1348
  5801  000D40                     
  5802                           ;main.c: 340: menu = 2;
  5803  000D40  0E02               	movlw	2
  5804  000D42  0100               	movlb	0	; () banked
  5805  000D44  6FFD               	movwf	_menu& (0+255),b
  5806                           
  5807                           ;main.c: 341: line4[0] = '>';
  5808  000D46  0E3E               	movlw	62
  5809  000D48  0101               	movlb	1	; () banked
  5810  000D4A  6F52               	movwf	_line4& (0+255),b
  5811                           
  5812                           ; BSR set to: 1
  5813                           ;main.c: 342: if (btPress(2)) menu = 11;
  5814  000D4C  0E02               	movlw	2
  5815  000D4E  ECDA  F02D         	call	_btPress
  5816  000D52  0900               	iorlw	0
  5817  000D54  B4D8               	btfsc	status,2,c
  5818  000D56  D049               	goto	l1348
  5819  000D58  0E0B               	movlw	11
  5820  000D5A  D00D               	goto	L9
  5821  000D5C                     
  5822                           ;main.c: 345: menu = 3;
  5823                           
  5824                           ; BSR set to: 0
  5825  000D5C  0E03               	movlw	3
  5826  000D5E  0100               	movlb	0	; () banked
  5827  000D60  6FFD               	movwf	_menu& (0+255),b
  5828                           
  5829                           ;main.c: 346: line1[0] = '>';
  5830  000D62  0E3E               	movlw	62
  5831  000D64  0101               	movlb	1	; () banked
  5832  000D66  6F91               	movwf	_line1& (0+255),b
  5833                           
  5834                           ; BSR set to: 1
  5835                           ;main.c: 347: if (btPress(2)) menu = 8;
  5836  000D68  0E02               	movlw	2
  5837  000D6A  ECDA  F02D         	call	_btPress
  5838  000D6E  0900               	iorlw	0
  5839  000D70  B4D8               	btfsc	status,2,c
  5840  000D72  D03B               	goto	l1348
  5841  000D74  0E08               	movlw	8
  5842  000D76                     L9:
  5843  000D76  0100               	movlb	0	; () banked
  5844  000D78  6FFD               	movwf	_menu& (0+255),b
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;main.c: 348: break;
  5848  000D7A  D037               	goto	l1348
  5849  000D7C                     
  5850                           ;main.c: 350: menu = 3;
  5851                           
  5852                           ; BSR set to: 0
  5853  000D7C  0E03               	movlw	3
  5854  000D7E  0100               	movlb	0	; () banked
  5855  000D80  6FFD               	movwf	_menu& (0+255),b
  5856                           
  5857                           ;main.c: 351: line2[0] = '>';
  5858  000D82  0E3E               	movlw	62
  5859  000D84  0101               	movlb	1	; () banked
  5860  000D86  6F7C               	movwf	_line2& (0+255),b
  5861                           
  5862                           ; BSR set to: 1
  5863                           ;main.c: 352: if (btPress(2)) {
  5864  000D88  0E02               	movlw	2
  5865  000D8A  ECDA  F02D         	call	_btPress
  5866  000D8E  0900               	iorlw	0
  5867  000D90  B4D8               	btfsc	status,2,c
  5868  000D92  D02B               	goto	l1348
  5869                           
  5870                           ;main.c: 353: menu = 5;
  5871  000D94  0E05               	movlw	5
  5872  000D96  0100               	movlb	0	; () banked
  5873  000D98  6FFD               	movwf	_menu& (0+255),b
  5874  000D9A  D002               	goto	l1380
  5875  000D9C                     L8:
  5876  000D9C  6E45               	movwf	_opcaomenu,c
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;main.c: 355: }
  5880                           ;main.c: 356: break;
  5881  000D9E  D025               	goto	l1348
  5882  000DA0                     l1380:
  5883                           
  5884                           ;main.c: 358: opcaomenu = 1;
  5885                           
  5886                           ; BSR set to: 0
  5887  000DA0  0E01               	movlw	1
  5888  000DA2  D7FC               	goto	L8
  5889  000DA4                     l1346:
  5890  000DA4  5045               	movf	_opcaomenu,w,c
  5891                           
  5892                           ; Switch size 1, requested type "space"
  5893                           ; Number of cases is 11, Range of values is 0 to 10
  5894                           ; switch strategies available:
  5895                           ; Name         Instructions Cycles
  5896                           ; simple_byte           34    18 (average)
  5897                           ;	Chosen strategy is simple_byte
  5898  000DA6  0A00               	xorlw	0	; case 0
  5899  000DA8  B4D8               	btfsc	status,2,c
  5900  000DAA  D676               	goto	l1347
  5901  000DAC  0A01               	xorlw	1	; case 1
  5902  000DAE  B4D8               	btfsc	status,2,c
  5903  000DB0  D675               	goto	l1349
  5904  000DB2  0A03               	xorlw	3	; case 2
  5905  000DB4  B4D8               	btfsc	status,2,c
  5906  000DB6  D6A1               	goto	l1352
  5907  000DB8  0A01               	xorlw	1	; case 3
  5908  000DBA  B4D8               	btfsc	status,2,c
  5909  000DBC  D6D1               	goto	l1356
  5910  000DBE  0A07               	xorlw	7	; case 4
  5911  000DC0  B4D8               	btfsc	status,2,c
  5912  000DC2  D732               	goto	l1359
  5913  000DC4  0A01               	xorlw	1	; case 5
  5914  000DC6  B4D8               	btfsc	status,2,c
  5915  000DC8  D75E               	goto	l1362
  5916  000DCA  0A03               	xorlw	3	; case 6
  5917  000DCC  B4D8               	btfsc	status,2,c
  5918  000DCE  D77C               	goto	l1366
  5919  000DD0  0A01               	xorlw	1	; case 7
  5920  000DD2  B4D8               	btfsc	status,2,c
  5921  000DD4  D797               	goto	l1370
  5922  000DD6  0A0F               	xorlw	15	; case 8
  5923  000DD8  B4D8               	btfsc	status,2,c
  5924  000DDA  D7B2               	goto	l1374
  5925  000DDC  0A01               	xorlw	1	; case 9
  5926  000DDE  B4D8               	btfsc	status,2,c
  5927  000DE0  D7BD               	goto	l1376
  5928  000DE2  0A03               	xorlw	3	; case 10
  5929  000DE4  B4D8               	btfsc	status,2,c
  5930  000DE6  D7CA               	goto	l1378
  5931  000DE8  D7DB               	goto	l1380
  5932  000DEA                     l1348:
  5933                           
  5934                           ;main.c: 362: if (btPress(16)) opcaomenu++;
  5935  000DEA  0E10               	movlw	16
  5936  000DEC  ECDA  F02D         	call	_btPress
  5937  000DF0  0900               	iorlw	0
  5938  000DF2  A4D8               	btfss	status,2,c
  5939  000DF4  2A45               	incf	_opcaomenu,f,c
  5940                           
  5941                           ;main.c: 363: if (btPress(1)) opcaomenu--;
  5942  000DF6  0E01               	movlw	1
  5943  000DF8  ECDA  F02D         	call	_btPress
  5944  000DFC  0900               	iorlw	0
  5945  000DFE  A4D8               	btfss	status,2,c
  5946  000E00  0645               	decf	_opcaomenu,f,c
  5947                           
  5948                           ;main.c: 364: if (btPress(8)) menu = 0;
  5949  000E02  0E08               	movlw	8
  5950  000E04  ECDA  F02D         	call	_btPress
  5951  000E08  0900               	iorlw	0
  5952  000E0A  B4D8               	btfsc	status,2,c
  5953  000E0C  D3F4               	goto	l1469
  5954  000E0E  0E00               	movlw	0
  5955  000E10  D3F0               	goto	L11
  5956  000E12                     l1343:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;main.c: 369: if (menu == 5 | menu == 6) {
  5960                           
  5961                           ; BSR set to: 0
  5962  000E12  0E05               	movlw	5
  5963  000E14  19FD               	xorwf	_menu& (0+255),w,b
  5964  000E16  B4D8               	btfsc	status,2,c
  5965  000E18  D004               	goto	u14740
  5966                           
  5967                           ; BSR set to: 0
  5968  000E1A  0E06               	movlw	6
  5969  000E1C  19FD               	xorwf	_menu& (0+255),w,b
  5970  000E1E  A4D8               	btfss	status,2,c
  5971  000E20  D2EE               	goto	l1385
  5972  000E22                     u14740:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;main.c: 370: if (senha_desbloqueio_func != 48) opcaomenu = 1;
  5976                           
  5977                           ; BSR set to: 0
  5978  000E22  0E30               	movlw	48
  5979  000E24  184D               	xorwf	_senha_desbloqueio_func,w,c
  5980  000E26  B4D8               	btfsc	status,2,c
  5981  000E28  D2A3               	goto	l1389
  5982                           
  5983                           ; BSR set to: 0
  5984  000E2A  0E01               	movlw	1
  5985  000E2C  6E45               	movwf	_opcaomenu,c
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;main.c: 371: switch (opcaomenu) {
  5989  000E2E  D2A0               	goto	l1389
  5990  000E30                     
  5991                           ;main.c: 373: menu = 5;
  5992                           
  5993                           ; BSR set to: 0
  5994  000E30  0E05               	movlw	5
  5995  000E32  0100               	movlb	0	; () banked
  5996  000E34  6FFD               	movwf	_menu& (0+255),b
  5997                           
  5998                           ;main.c: 374: line1[0] = '>';
  5999  000E36  0E3E               	movlw	62
  6000  000E38  0101               	movlb	1	; () banked
  6001  000E3A  6F91               	movwf	_line1& (0+255),b
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;main.c: 375: if (btPress(64)) setRangeValor('+', &senha_desbloqueio_func, 0, 50, 0);
  6005  000E3C  0E40               	movlw	64
  6006  000E3E  ECDA  F02D         	call	_btPress
  6007  000E42  0900               	iorlw	0
  6008  000E44  B4D8               	btfsc	status,2,c
  6009  000E46  D00E               	goto	l1391
  6010  000E48  0E4D               	movlw	low _senha_desbloqueio_func
  6011  000E4A  0100               	movlb	0	; () banked
  6012  000E4C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6013  000E4E  0E00               	movlw	high _senha_desbloqueio_func
  6014  000E50  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6015  000E52  0E00               	movlw	0
  6016  000E54  6F67               	movwf	setRangeValor@_min& (0+255),b
  6017  000E56  0E32               	movlw	50
  6018  000E58  6F68               	movwf	setRangeValor@_max& (0+255),b
  6019  000E5A  0E00               	movlw	0
  6020  000E5C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6021  000E5E  0E2B               	movlw	43
  6022  000E60  ECD9  F027         	call	_setRangeValor
  6023  000E64                     l1391:
  6024                           
  6025                           ;main.c: 376: if (btPress(32)) setRangeValor('-', &senha_desbloqueio_func, 0, 50, 0);
  6026  000E64  0E20               	movlw	32
  6027  000E66  ECDA  F02D         	call	_btPress
  6028  000E6A  0900               	iorlw	0
  6029  000E6C  B4D8               	btfsc	status,2,c
  6030  000E6E  D2AF               	goto	l1393
  6031  000E70  0E4D               	movlw	low _senha_desbloqueio_func
  6032  000E72  0100               	movlb	0	; () banked
  6033  000E74  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6034  000E76  0E00               	movlw	high _senha_desbloqueio_func
  6035  000E78  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6036  000E7A  0E00               	movlw	0
  6037  000E7C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6038  000E7E  0E32               	movlw	50
  6039  000E80  6F68               	movwf	setRangeValor@_max& (0+255),b
  6040  000E82  0E00               	movlw	0
  6041  000E84  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6042  000E86  0E2D               	movlw	45
  6043  000E88  ECD9  F027         	call	_setRangeValor
  6044                           
  6045                           ;main.c: 377: break;
  6046  000E8C  D2A0               	goto	l1393
  6047  000E8E                     
  6048                           ;main.c: 379: line2[0] = '>';
  6049  000E8E  0E3E               	movlw	62
  6050  000E90  0101               	movlb	1	; () banked
  6051  000E92  6F7C               	movwf	_line2& (0+255),b
  6052                           
  6053                           ; BSR set to: 1
  6054                           ;main.c: 380: if (btPress(64)) setRangeValor('+', &tipo_sensor_umidade, 0, 1, 7);
  6055  000E94  0E40               	movlw	64
  6056  000E96  ECDA  F02D         	call	_btPress
  6057  000E9A  0900               	iorlw	0
  6058  000E9C  B4D8               	btfsc	status,2,c
  6059  000E9E  D00E               	goto	l1395
  6060  000EA0  0EFA               	movlw	low _tipo_sensor_umidade
  6061  000EA2  0100               	movlb	0	; () banked
  6062  000EA4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6063  000EA6  0E00               	movlw	high _tipo_sensor_umidade
  6064  000EA8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6065  000EAA  0E00               	movlw	0
  6066  000EAC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6067  000EAE  0E01               	movlw	1
  6068  000EB0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6069  000EB2  0E07               	movlw	7
  6070  000EB4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6071  000EB6  0E2B               	movlw	43
  6072  000EB8  ECD9  F027         	call	_setRangeValor
  6073  000EBC                     l1395:
  6074                           
  6075                           ;main.c: 381: if (btPress(32)) setRangeValor('-', &tipo_sensor_umidade, 0, 1, 7);
  6076  000EBC  0E20               	movlw	32
  6077  000EBE  ECDA  F02D         	call	_btPress
  6078  000EC2  0900               	iorlw	0
  6079  000EC4  B4D8               	btfsc	status,2,c
  6080  000EC6  D283               	goto	l1393
  6081  000EC8  0EFA               	movlw	low _tipo_sensor_umidade
  6082  000ECA  0100               	movlb	0	; () banked
  6083  000ECC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6084  000ECE  0E00               	movlw	high _tipo_sensor_umidade
  6085  000ED0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6086  000ED2  0E00               	movlw	0
  6087  000ED4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6088  000ED6  0E01               	movlw	1
  6089  000ED8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6090  000EDA  0E07               	movlw	7
  6091  000EDC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6092  000EDE  0E2D               	movlw	45
  6093  000EE0  ECD9  F027         	call	_setRangeValor
  6094                           
  6095                           ;main.c: 382: break;
  6096  000EE4  D274               	goto	l1393
  6097  000EE6                     
  6098                           ;main.c: 384: line3[0] = '>';
  6099  000EE6  0E3E               	movlw	62
  6100  000EE8  0101               	movlb	1	; () banked
  6101  000EEA  6F67               	movwf	_line3& (0+255),b
  6102                           
  6103                           ; BSR set to: 1
  6104                           ;main.c: 385: if (btPress(64)) setRangeValor('+', &h_abafador, 1, 10, 12);
  6105  000EEC  0E40               	movlw	64
  6106  000EEE  ECDA  F02D         	call	_btPress
  6107  000EF2  0900               	iorlw	0
  6108  000EF4  B4D8               	btfsc	status,2,c
  6109  000EF6  D00E               	goto	l1398
  6110  000EF8  0E52               	movlw	low _h_abafador
  6111  000EFA  0100               	movlb	0	; () banked
  6112  000EFC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6113  000EFE  0E00               	movlw	high _h_abafador
  6114  000F00  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6115  000F02  0E01               	movlw	1
  6116  000F04  6F67               	movwf	setRangeValor@_min& (0+255),b
  6117  000F06  0E0A               	movlw	10
  6118  000F08  6F68               	movwf	setRangeValor@_max& (0+255),b
  6119  000F0A  0E0C               	movlw	12
  6120  000F0C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6121  000F0E  0E2B               	movlw	43
  6122  000F10  ECD9  F027         	call	_setRangeValor
  6123  000F14                     l1398:
  6124                           
  6125                           ;main.c: 386: if (btPress(32)) setRangeValor('-', &h_abafador, 1, 10, 12);
  6126  000F14  0E20               	movlw	32
  6127  000F16  ECDA  F02D         	call	_btPress
  6128  000F1A  0900               	iorlw	0
  6129  000F1C  B4D8               	btfsc	status,2,c
  6130  000F1E  D257               	goto	l1393
  6131  000F20  0E52               	movlw	low _h_abafador
  6132  000F22  0100               	movlb	0	; () banked
  6133  000F24  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6134  000F26  0E00               	movlw	high _h_abafador
  6135  000F28  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6136  000F2A  0E01               	movlw	1
  6137  000F2C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6138  000F2E  0E0A               	movlw	10
  6139  000F30  6F68               	movwf	setRangeValor@_max& (0+255),b
  6140  000F32  0E0C               	movlw	12
  6141  000F34  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6142  000F36  0E2D               	movlw	45
  6143  000F38  ECD9  F027         	call	_setRangeValor
  6144                           
  6145                           ;main.c: 387: break;
  6146  000F3C  D248               	goto	l1393
  6147  000F3E                     
  6148                           ;main.c: 389: line4[0] = '>';
  6149  000F3E  0E3E               	movlw	62
  6150  000F40  0101               	movlb	1	; () banked
  6151  000F42  6F52               	movwf	_line4& (0+255),b
  6152                           
  6153                           ; BSR set to: 1
  6154                           ;main.c: 390: if (btPress(64)) setRangeValor('+', &h_flap, 1, 10, 13);
  6155  000F44  0E40               	movlw	64
  6156  000F46  ECDA  F02D         	call	_btPress
  6157  000F4A  0900               	iorlw	0
  6158  000F4C  B4D8               	btfsc	status,2,c
  6159  000F4E  D00E               	goto	l1401
  6160  000F50  0E51               	movlw	low _h_flap
  6161  000F52  0100               	movlb	0	; () banked
  6162  000F54  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6163  000F56  0E00               	movlw	high _h_flap
  6164  000F58  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6165  000F5A  0E01               	movlw	1
  6166  000F5C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6167  000F5E  0E0A               	movlw	10
  6168  000F60  6F68               	movwf	setRangeValor@_max& (0+255),b
  6169  000F62  0E0D               	movlw	13
  6170  000F64  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6171  000F66  0E2B               	movlw	43
  6172  000F68  ECD9  F027         	call	_setRangeValor
  6173  000F6C                     l1401:
  6174                           
  6175                           ;main.c: 391: if (btPress(32)) setRangeValor('-', &h_flap, 1, 10, 13);
  6176  000F6C  0E20               	movlw	32
  6177  000F6E  ECDA  F02D         	call	_btPress
  6178  000F72  0900               	iorlw	0
  6179  000F74  B4D8               	btfsc	status,2,c
  6180  000F76  D22B               	goto	l1393
  6181  000F78  0E51               	movlw	low _h_flap
  6182  000F7A  0100               	movlb	0	; () banked
  6183  000F7C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6184  000F7E  0E00               	movlw	high _h_flap
  6185  000F80  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6186  000F82  0E01               	movlw	1
  6187  000F84  6F67               	movwf	setRangeValor@_min& (0+255),b
  6188  000F86  0E0A               	movlw	10
  6189  000F88  6F68               	movwf	setRangeValor@_max& (0+255),b
  6190  000F8A  0E0D               	movlw	13
  6191  000F8C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6192  000F8E  0E2D               	movlw	45
  6193  000F90  ECD9  F027         	call	_setRangeValor
  6194                           
  6195                           ;main.c: 392: break;
  6196  000F94  D21C               	goto	l1393
  6197  000F96                     
  6198                           ;main.c: 394: line1[11] = '>';
  6199  000F96  0E3E               	movlw	62
  6200  000F98  0101               	movlb	1	; () banked
  6201  000F9A  6F9C               	movwf	(_line1+11)& (0+255),b
  6202                           
  6203                           ; BSR set to: 1
  6204                           ;main.c: 395: if (btPress(64)) setRangeValor('+', &h_venotinha, 1, 10, 11);
  6205  000F9C  0E40               	movlw	64
  6206  000F9E  ECDA  F02D         	call	_btPress
  6207  000FA2  0900               	iorlw	0
  6208  000FA4  B4D8               	btfsc	status,2,c
  6209  000FA6  D00E               	goto	l1404
  6210  000FA8  0E53               	movlw	low _h_venotinha
  6211  000FAA  0100               	movlb	0	; () banked
  6212  000FAC  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6213  000FAE  0E00               	movlw	high _h_venotinha
  6214  000FB0  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6215  000FB2  0E01               	movlw	1
  6216  000FB4  6F67               	movwf	setRangeValor@_min& (0+255),b
  6217  000FB6  0E0A               	movlw	10
  6218  000FB8  6F68               	movwf	setRangeValor@_max& (0+255),b
  6219  000FBA  0E0B               	movlw	11
  6220  000FBC  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6221  000FBE  0E2B               	movlw	43
  6222  000FC0  ECD9  F027         	call	_setRangeValor
  6223  000FC4                     l1404:
  6224                           
  6225                           ;main.c: 396: if (btPress(32)) setRangeValor('-', &h_venotinha, 1, 10, 11);
  6226  000FC4  0E20               	movlw	32
  6227  000FC6  ECDA  F02D         	call	_btPress
  6228  000FCA  0900               	iorlw	0
  6229  000FCC  B4D8               	btfsc	status,2,c
  6230  000FCE  D1FF               	goto	l1393
  6231  000FD0  0E53               	movlw	low _h_venotinha
  6232  000FD2  0100               	movlb	0	; () banked
  6233  000FD4  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6234  000FD6  0E00               	movlw	high _h_venotinha
  6235  000FD8  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6236  000FDA  0E01               	movlw	1
  6237  000FDC  6F67               	movwf	setRangeValor@_min& (0+255),b
  6238  000FDE  0E0A               	movlw	10
  6239  000FE0  6F68               	movwf	setRangeValor@_max& (0+255),b
  6240  000FE2  0E0B               	movlw	11
  6241  000FE4  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6242  000FE6  0E2D               	movlw	45
  6243  000FE8  ECD9  F027         	call	_setRangeValor
  6244                           
  6245                           ;main.c: 397: break;
  6246  000FEC  D1F0               	goto	l1393
  6247  000FEE                     
  6248                           ;main.c: 399: line2[11] = '>';
  6249  000FEE  0E3E               	movlw	62
  6250  000FF0  0101               	movlb	1	; () banked
  6251  000FF2  6F87               	movwf	(_line2+11)& (0+255),b
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;main.c: 400: if (btPress(64)) setRangeValor('+', &h_modo_seguranca, 0, 15, 16);
  6255  000FF4  0E40               	movlw	64
  6256  000FF6  ECDA  F02D         	call	_btPress
  6257  000FFA  0900               	iorlw	0
  6258  000FFC  B4D8               	btfsc	status,2,c
  6259  000FFE  D00E               	goto	l1407
  6260  001000  0EF7               	movlw	low _h_modo_seguranca
  6261  001002  0100               	movlb	0	; () banked
  6262  001004  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6263  001006  0E00               	movlw	high _h_modo_seguranca
  6264  001008  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6265  00100A  0E00               	movlw	0
  6266  00100C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6267  00100E  0E0F               	movlw	15
  6268  001010  6F68               	movwf	setRangeValor@_max& (0+255),b
  6269  001012  0E10               	movlw	16
  6270  001014  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6271  001016  0E2B               	movlw	43
  6272  001018  ECD9  F027         	call	_setRangeValor
  6273  00101C                     l1407:
  6274                           
  6275                           ;main.c: 401: if (btPress(32)) setRangeValor('-', &h_modo_seguranca, 0, 15, 16);
  6276  00101C  0E20               	movlw	32
  6277  00101E  ECDA  F02D         	call	_btPress
  6278  001022  0900               	iorlw	0
  6279  001024  B4D8               	btfsc	status,2,c
  6280  001026  D1D3               	goto	l1393
  6281  001028  0EF7               	movlw	low _h_modo_seguranca
  6282  00102A  0100               	movlb	0	; () banked
  6283  00102C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6284  00102E  0E00               	movlw	high _h_modo_seguranca
  6285  001030  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6286  001032  0E00               	movlw	0
  6287  001034  6F67               	movwf	setRangeValor@_min& (0+255),b
  6288  001036  0E0F               	movlw	15
  6289  001038  6F68               	movwf	setRangeValor@_max& (0+255),b
  6290  00103A  0E10               	movlw	16
  6291  00103C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6292  00103E  0E2D               	movlw	45
  6293  001040  ECD9  F027         	call	_setRangeValor
  6294                           
  6295                           ;main.c: 402: break;
  6296  001044  D1C4               	goto	l1393
  6297  001046                     
  6298                           ;main.c: 404: line3[11] = '>';
  6299  001046  0E3E               	movlw	62
  6300  001048  0101               	movlb	1	; () banked
  6301  00104A  6F72               	movwf	(_line3+11)& (0+255),b
  6302                           
  6303                           ; BSR set to: 1
  6304                           ;main.c: 405: if (btPress(64)) setRangeValor('+', &h_buzzer, 1, 15, 17);
  6305  00104C  0E40               	movlw	64
  6306  00104E  ECDA  F02D         	call	_btPress
  6307  001052  0900               	iorlw	0
  6308  001054  B4D8               	btfsc	status,2,c
  6309  001056  D00E               	goto	l1410
  6310  001058  0E50               	movlw	low _h_buzzer
  6311  00105A  0100               	movlb	0	; () banked
  6312  00105C  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6313  00105E  0E00               	movlw	high _h_buzzer
  6314  001060  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6315  001062  0E01               	movlw	1
  6316  001064  6F67               	movwf	setRangeValor@_min& (0+255),b
  6317  001066  0E0F               	movlw	15
  6318  001068  6F68               	movwf	setRangeValor@_max& (0+255),b
  6319  00106A  0E11               	movlw	17
  6320  00106C  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6321  00106E  0E2B               	movlw	43
  6322  001070  ECD9  F027         	call	_setRangeValor
  6323  001074                     l1410:
  6324                           
  6325                           ;main.c: 406: if (btPress(32)) setRangeValor('-', &h_buzzer, 1, 15, 17);
  6326  001074  0E20               	movlw	32
  6327  001076  ECDA  F02D         	call	_btPress
  6328  00107A  0900               	iorlw	0
  6329  00107C  B4D8               	btfsc	status,2,c
  6330  00107E  D1A7               	goto	l1393
  6331  001080  0E50               	movlw	low _h_buzzer
  6332  001082  0100               	movlb	0	; () banked
  6333  001084  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6334  001086  0E00               	movlw	high _h_buzzer
  6335  001088  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6336  00108A  0E01               	movlw	1
  6337  00108C  6F67               	movwf	setRangeValor@_min& (0+255),b
  6338  00108E  0E0F               	movlw	15
  6339  001090  6F68               	movwf	setRangeValor@_max& (0+255),b
  6340  001092  0E11               	movlw	17
  6341  001094  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6342  001096  0E2D               	movlw	45
  6343  001098  ECD9  F027         	call	_setRangeValor
  6344                           
  6345                           ;main.c: 407: break;
  6346  00109C  D198               	goto	l1393
  6347  00109E                     
  6348                           ;main.c: 409: menu = 5;
  6349  00109E  0E05               	movlw	5
  6350  0010A0  0100               	movlb	0	; () banked
  6351  0010A2  6FFD               	movwf	_menu& (0+255),b
  6352                           
  6353                           ;main.c: 410: line4[11] = '>';
  6354  0010A4  0E3E               	movlw	62
  6355  0010A6  0101               	movlb	1	; () banked
  6356  0010A8  6F5D               	movwf	(_line4+11)& (0+255),b
  6357                           
  6358                           ; BSR set to: 1
  6359                           ;main.c: 411: if (btPress(64)) setRangeValor('+', &t_flap_ligado, 1, 250, 18);
  6360  0010AA  0E40               	movlw	64
  6361  0010AC  ECDA  F02D         	call	_btPress
  6362  0010B0  0900               	iorlw	0
  6363  0010B2  B4D8               	btfsc	status,2,c
  6364  0010B4  D00E               	goto	l1413
  6365  0010B6  0E55               	movlw	low _t_flap_ligado
  6366  0010B8  0100               	movlb	0	; () banked
  6367  0010BA  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6368  0010BC  0E00               	movlw	high _t_flap_ligado
  6369  0010BE  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6370  0010C0  0E01               	movlw	1
  6371  0010C2  6F67               	movwf	setRangeValor@_min& (0+255),b
  6372  0010C4  0EFA               	movlw	250
  6373  0010C6  6F68               	movwf	setRangeValor@_max& (0+255),b
  6374  0010C8  0E12               	movlw	18
  6375  0010CA  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6376  0010CC  0E2B               	movlw	43
  6377  0010CE  ECD9  F027         	call	_setRangeValor
  6378  0010D2                     l1413:
  6379                           
  6380                           ;main.c: 412: if (btPress(32)) setRangeValor('-', &t_flap_ligado, 1, 250, 18);
  6381  0010D2  0E20               	movlw	32
  6382  0010D4  ECDA  F02D         	call	_btPress
  6383  0010D8  0900               	iorlw	0
  6384  0010DA  B4D8               	btfsc	status,2,c
  6385  0010DC  D178               	goto	l1393
  6386  0010DE  0E55               	movlw	low _t_flap_ligado
  6387  0010E0  0100               	movlb	0	; () banked
  6388  0010E2  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6389  0010E4  0E00               	movlw	high _t_flap_ligado
  6390  0010E6  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6391  0010E8  0E01               	movlw	1
  6392  0010EA  6F67               	movwf	setRangeValor@_min& (0+255),b
  6393  0010EC  0EFA               	movlw	250
  6394  0010EE  6F68               	movwf	setRangeValor@_max& (0+255),b
  6395  0010F0  0E12               	movlw	18
  6396  0010F2  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6397  0010F4  0E2D               	movlw	45
  6398  0010F6  ECD9  F027         	call	_setRangeValor
  6399                           
  6400                           ;main.c: 413: break;
  6401  0010FA  D169               	goto	l1393
  6402  0010FC                     
  6403                           ;main.c: 415: menu = 6;
  6404  0010FC  0E06               	movlw	6
  6405  0010FE  0100               	movlb	0	; () banked
  6406  001100  6FFD               	movwf	_menu& (0+255),b
  6407                           
  6408                           ;main.c: 416: line1[0] = '>';
  6409  001102  0E3E               	movlw	62
  6410  001104  0101               	movlb	1	; () banked
  6411  001106  6F91               	movwf	_line1& (0+255),b
  6412                           
  6413                           ; BSR set to: 1
  6414                           ;main.c: 417: if (btPress(64)) setRangeValor('+', &t_flap_intervalo, 0, 250, 20);
  6415  001108  0E40               	movlw	64
  6416  00110A  ECDA  F02D         	call	_btPress
  6417  00110E  0900               	iorlw	0
  6418  001110  B4D8               	btfsc	status,2,c
  6419  001112  D00E               	goto	l1416
  6420  001114  0E54               	movlw	low _t_flap_intervalo
  6421  001116  0100               	movlb	0	; () banked
  6422  001118  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6423  00111A  0E00               	movlw	high _t_flap_intervalo
  6424  00111C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6425  00111E  0E00               	movlw	0
  6426  001120  6F67               	movwf	setRangeValor@_min& (0+255),b
  6427  001122  0EFA               	movlw	250
  6428  001124  6F68               	movwf	setRangeValor@_max& (0+255),b
  6429  001126  0E14               	movlw	20
  6430  001128  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6431  00112A  0E2B               	movlw	43
  6432  00112C  ECD9  F027         	call	_setRangeValor
  6433  001130                     l1416:
  6434                           
  6435                           ;main.c: 418: if (btPress(32)) setRangeValor('-', &t_flap_intervalo, 0, 250, 20);
  6436  001130  0E20               	movlw	32
  6437  001132  ECDA  F02D         	call	_btPress
  6438  001136  0900               	iorlw	0
  6439  001138  B4D8               	btfsc	status,2,c
  6440  00113A  D149               	goto	l1393
  6441  00113C  0E54               	movlw	low _t_flap_intervalo
  6442  00113E  0100               	movlb	0	; () banked
  6443  001140  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6444  001142  0E00               	movlw	high _t_flap_intervalo
  6445  001144  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6446  001146  0E00               	movlw	0
  6447  001148  6F67               	movwf	setRangeValor@_min& (0+255),b
  6448  00114A  0EFA               	movlw	250
  6449  00114C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6450  00114E  0E14               	movlw	20
  6451  001150  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6452  001152  0E2D               	movlw	45
  6453  001154  ECD9  F027         	call	_setRangeValor
  6454                           
  6455                           ;main.c: 419: break;
  6456  001158  D13A               	goto	l1393
  6457  00115A                     
  6458                           ;main.c: 421: line2[0] = '>';
  6459  00115A  0E3E               	movlw	62
  6460  00115C  0101               	movlb	1	; () banked
  6461  00115E  6F7C               	movwf	_line2& (0+255),b
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;main.c: 422: if (btPress(64)) setRangeValor('+', &t_buzzer_religar, 0, 30, 21);
  6465  001160  0E40               	movlw	64
  6466  001162  ECDA  F02D         	call	_btPress
  6467  001166  0900               	iorlw	0
  6468  001168  B4D8               	btfsc	status,2,c
  6469  00116A  D00E               	goto	l1419
  6470  00116C  0EFF               	movlw	low _t_buzzer_religar
  6471  00116E  0100               	movlb	0	; () banked
  6472  001170  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6473  001172  0E00               	movlw	high _t_buzzer_religar
  6474  001174  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6475  001176  0E00               	movlw	0
  6476  001178  6F67               	movwf	setRangeValor@_min& (0+255),b
  6477  00117A  0E1E               	movlw	30
  6478  00117C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6479  00117E  0E15               	movlw	21
  6480  001180  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6481  001182  0E2B               	movlw	43
  6482  001184  ECD9  F027         	call	_setRangeValor
  6483  001188                     l1419:
  6484                           
  6485                           ;main.c: 423: if (btPress(32)) setRangeValor('-', &t_buzzer_religar, 0, 30, 21);
  6486  001188  0E20               	movlw	32
  6487  00118A  ECDA  F02D         	call	_btPress
  6488  00118E  0900               	iorlw	0
  6489  001190  B4D8               	btfsc	status,2,c
  6490  001192  D11D               	goto	l1393
  6491  001194  0EFF               	movlw	low _t_buzzer_religar
  6492  001196  0100               	movlb	0	; () banked
  6493  001198  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6494  00119A  0E00               	movlw	high _t_buzzer_religar
  6495  00119C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6496  00119E  0E00               	movlw	0
  6497  0011A0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6498  0011A2  0E1E               	movlw	30
  6499  0011A4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6500  0011A6  0E15               	movlw	21
  6501  0011A8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6502  0011AA  0E2D               	movlw	45
  6503  0011AC  ECD9  F027         	call	_setRangeValor
  6504                           
  6505                           ;main.c: 424: break;
  6506  0011B0  D10E               	goto	l1393
  6507  0011B2                     
  6508                           ;main.c: 426: line3[0] = '>';
  6509  0011B2  0E3E               	movlw	62
  6510  0011B4  0101               	movlb	1	; () banked
  6511  0011B6  6F67               	movwf	_line3& (0+255),b
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;main.c: 427: if (btPress(64)) setRangeValor('+', &t_temp_automatica, 0, 250, 22);
  6515  0011B8  0E40               	movlw	64
  6516  0011BA  ECDA  F02D         	call	_btPress
  6517  0011BE  0900               	iorlw	0
  6518  0011C0  B4D8               	btfsc	status,2,c
  6519  0011C2  D00E               	goto	l1422
  6520  0011C4  0EF9               	movlw	low _t_temp_automatica
  6521  0011C6  0100               	movlb	0	; () banked
  6522  0011C8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6523  0011CA  0E00               	movlw	high _t_temp_automatica
  6524  0011CC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6525  0011CE  0E00               	movlw	0
  6526  0011D0  6F67               	movwf	setRangeValor@_min& (0+255),b
  6527  0011D2  0EFA               	movlw	250
  6528  0011D4  6F68               	movwf	setRangeValor@_max& (0+255),b
  6529  0011D6  0E16               	movlw	22
  6530  0011D8  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6531  0011DA  0E2B               	movlw	43
  6532  0011DC  ECD9  F027         	call	_setRangeValor
  6533  0011E0                     l1422:
  6534                           
  6535                           ;main.c: 428: if (btPress(32)) setRangeValor('-', &t_temp_automatica, 0, 250, 22);
  6536  0011E0  0E20               	movlw	32
  6537  0011E2  ECDA  F02D         	call	_btPress
  6538  0011E6  0900               	iorlw	0
  6539  0011E8  B4D8               	btfsc	status,2,c
  6540  0011EA  D0F1               	goto	l1393
  6541  0011EC  0EF9               	movlw	low _t_temp_automatica
  6542  0011EE  0100               	movlb	0	; () banked
  6543  0011F0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6544  0011F2  0E00               	movlw	high _t_temp_automatica
  6545  0011F4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6546  0011F6  0E00               	movlw	0
  6547  0011F8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6548  0011FA  0EFA               	movlw	250
  6549  0011FC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6550  0011FE  0E16               	movlw	22
  6551  001200  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6552  001202  0E2D               	movlw	45
  6553  001204  ECD9  F027         	call	_setRangeValor
  6554                           
  6555                           ;main.c: 429: break;
  6556  001208  D0E2               	goto	l1393
  6557  00120A                     
  6558                           ;main.c: 431: line4[0] = '>';
  6559  00120A  0E3E               	movlw	62
  6560  00120C  0101               	movlb	1	; () banked
  6561  00120E  6F52               	movwf	_line4& (0+255),b
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;main.c: 432: if (btPress(64)) setRangeValor('+', (&wifi_habilita_alteracao), 0, 1, 23);
  6565  001210  0E40               	movlw	64
  6566  001212  ECDA  F02D         	call	_btPress
  6567  001216  0900               	iorlw	0
  6568  001218  B4D8               	btfsc	status,2,c
  6569  00121A  D00E               	goto	l1425
  6570  00121C  0E4E               	movlw	low _wifi_habilita_alteracao
  6571  00121E  0100               	movlb	0	; () banked
  6572  001220  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6573  001222  0E00               	movlw	high _wifi_habilita_alteracao
  6574  001224  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6575  001226  0E00               	movlw	0
  6576  001228  6F67               	movwf	setRangeValor@_min& (0+255),b
  6577  00122A  0E01               	movlw	1
  6578  00122C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6579  00122E  0E17               	movlw	23
  6580  001230  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6581  001232  0E2B               	movlw	43
  6582  001234  ECD9  F027         	call	_setRangeValor
  6583  001238                     l1425:
  6584                           
  6585                           ;main.c: 433: if (btPress(32)) setRangeValor('-', &wifi_habilita_alteracao, 0, 1, 23);
  6586  001238  0E20               	movlw	32
  6587  00123A  ECDA  F02D         	call	_btPress
  6588  00123E  0900               	iorlw	0
  6589  001240  B4D8               	btfsc	status,2,c
  6590  001242  D0C5               	goto	l1393
  6591  001244  0E4E               	movlw	low _wifi_habilita_alteracao
  6592  001246  0100               	movlb	0	; () banked
  6593  001248  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6594  00124A  0E00               	movlw	high _wifi_habilita_alteracao
  6595  00124C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6596  00124E  0E00               	movlw	0
  6597  001250  6F67               	movwf	setRangeValor@_min& (0+255),b
  6598  001252  0E01               	movlw	1
  6599  001254  6F68               	movwf	setRangeValor@_max& (0+255),b
  6600  001256  0E17               	movlw	23
  6601  001258  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6602  00125A  0E2D               	movlw	45
  6603  00125C  ECD9  F027         	call	_setRangeValor
  6604                           
  6605                           ;main.c: 434: break;
  6606  001260  D0B6               	goto	l1393
  6607  001262                     
  6608                           ;main.c: 436: line1[11] = '>';
  6609  001262  0E3E               	movlw	62
  6610  001264  0101               	movlb	1	; () banked
  6611  001266  6F9C               	movwf	(_line1+11)& (0+255),b
  6612                           
  6613                           ; BSR set to: 1
  6614                           ;main.c: 437: if (btPress(64)) setRangeValor('+', &wifi_SENHA, 1, 250, 25);
  6615  001268  0E40               	movlw	64
  6616  00126A  ECDA  F02D         	call	_btPress
  6617  00126E  0900               	iorlw	0
  6618  001270  B4D8               	btfsc	status,2,c
  6619  001272  D00E               	goto	l1428
  6620  001274  0E4B               	movlw	low _wifi_SENHA
  6621  001276  0100               	movlb	0	; () banked
  6622  001278  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6623  00127A  0E00               	movlw	high _wifi_SENHA
  6624  00127C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6625  00127E  0E01               	movlw	1
  6626  001280  6F67               	movwf	setRangeValor@_min& (0+255),b
  6627  001282  0EFA               	movlw	250
  6628  001284  6F68               	movwf	setRangeValor@_max& (0+255),b
  6629  001286  0E19               	movlw	25
  6630  001288  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6631  00128A  0E2B               	movlw	43
  6632  00128C  ECD9  F027         	call	_setRangeValor
  6633  001290                     l1428:
  6634                           
  6635                           ;main.c: 438: if (btPress(32)) setRangeValor('-', &wifi_SENHA, 1, 250, 25);
  6636  001290  0E20               	movlw	32
  6637  001292  ECDA  F02D         	call	_btPress
  6638  001296  0900               	iorlw	0
  6639  001298  B4D8               	btfsc	status,2,c
  6640  00129A  D099               	goto	l1393
  6641  00129C  0E4B               	movlw	low _wifi_SENHA
  6642  00129E  0100               	movlb	0	; () banked
  6643  0012A0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6644  0012A2  0E00               	movlw	high _wifi_SENHA
  6645  0012A4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6646  0012A6  0E01               	movlw	1
  6647  0012A8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6648  0012AA  0EFA               	movlw	250
  6649  0012AC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6650  0012AE  0E19               	movlw	25
  6651  0012B0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6652  0012B2  0E2D               	movlw	45
  6653  0012B4  ECD9  F027         	call	_setRangeValor
  6654                           
  6655                           ;main.c: 439: break;
  6656  0012B8  D08A               	goto	l1393
  6657  0012BA                     
  6658                           ;main.c: 441: line2[11] = '>';
  6659  0012BA  0E3E               	movlw	62
  6660  0012BC  0101               	movlb	1	; () banked
  6661  0012BE  6F87               	movwf	(_line2+11)& (0+255),b
  6662                           
  6663                           ; BSR set to: 1
  6664                           ;main.c: 442: if (btPress(64)) setRangeValor('+', &h_subir_temp_automatica, 0, 15, 27);
  6665  0012C0  0E40               	movlw	64
  6666  0012C2  ECDA  F02D         	call	_btPress
  6667  0012C6  0900               	iorlw	0
  6668  0012C8  B4D8               	btfsc	status,2,c
  6669  0012CA  D00E               	goto	l1431
  6670  0012CC  0E4F               	movlw	low _h_subir_temp_automatica
  6671  0012CE  0100               	movlb	0	; () banked
  6672  0012D0  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6673  0012D2  0E00               	movlw	high _h_subir_temp_automatica
  6674  0012D4  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6675  0012D6  0E00               	movlw	0
  6676  0012D8  6F67               	movwf	setRangeValor@_min& (0+255),b
  6677  0012DA  0E0F               	movlw	15
  6678  0012DC  6F68               	movwf	setRangeValor@_max& (0+255),b
  6679  0012DE  0E1B               	movlw	27
  6680  0012E0  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6681  0012E2  0E2B               	movlw	43
  6682  0012E4  ECD9  F027         	call	_setRangeValor
  6683  0012E8                     l1431:
  6684                           
  6685                           ;main.c: 443: if (btPress(32)) setRangeValor('-', &h_subir_temp_automatica, 0, 15, 27);
  6686  0012E8  0E20               	movlw	32
  6687  0012EA  ECDA  F02D         	call	_btPress
  6688  0012EE  0900               	iorlw	0
  6689  0012F0  B4D8               	btfsc	status,2,c
  6690  0012F2  D06D               	goto	l1393
  6691  0012F4  0E4F               	movlw	low _h_subir_temp_automatica
  6692  0012F6  0100               	movlb	0	; () banked
  6693  0012F8  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6694  0012FA  0E00               	movlw	high _h_subir_temp_automatica
  6695  0012FC  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6696  0012FE  0E00               	movlw	0
  6697  001300  6F67               	movwf	setRangeValor@_min& (0+255),b
  6698  001302  0E0F               	movlw	15
  6699  001304  6F68               	movwf	setRangeValor@_max& (0+255),b
  6700  001306  0E1B               	movlw	27
  6701  001308  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6702  00130A  0E2D               	movlw	45
  6703  00130C  ECD9  F027         	call	_setRangeValor
  6704                           
  6705                           ;main.c: 444: break;
  6706  001310  D05E               	goto	l1393
  6707  001312                     
  6708                           ;main.c: 446: line3[11] = '>';
  6709  001312  0E3E               	movlw	62
  6710  001314  0101               	movlb	1	; () banked
  6711  001316  6F72               	movwf	(_line3+11)& (0+255),b
  6712                           
  6713                           ; BSR set to: 1
  6714                           ;main.c: 447: if (btPress(64)) setRangeValor('+', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6715  001318  0E40               	movlw	64
  6716  00131A  ECDA  F02D         	call	_btPress
  6717  00131E  0900               	iorlw	0
  6718  001320  B4D8               	btfsc	status,2,c
  6719  001322  D00E               	goto	l1434
  6720  001324  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6721  001326  0100               	movlb	0	; () banked
  6722  001328  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6723  00132A  0E00               	movlw	high _t_religar_ventoinha_automatica
  6724  00132C  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6725  00132E  0E00               	movlw	0
  6726  001330  6F67               	movwf	setRangeValor@_min& (0+255),b
  6727  001332  0E3C               	movlw	60
  6728  001334  6F68               	movwf	setRangeValor@_max& (0+255),b
  6729  001336  0E1C               	movlw	28
  6730  001338  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6731  00133A  0E2B               	movlw	43
  6732  00133C  ECD9  F027         	call	_setRangeValor
  6733  001340                     l1434:
  6734                           
  6735                           ;main.c: 448: if (btPress(32)) setRangeValor('-', &t_religar_ventoinha_automatica, 0, 60
      +                          , 28);
  6736  001340  0E20               	movlw	32
  6737  001342  ECDA  F02D         	call	_btPress
  6738  001346  0900               	iorlw	0
  6739  001348  B4D8               	btfsc	status,2,c
  6740  00134A  D041               	goto	l1393
  6741  00134C  0EF8               	movlw	low _t_religar_ventoinha_automatica
  6742  00134E  0100               	movlb	0	; () banked
  6743  001350  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  6744  001352  0E00               	movlw	high _t_religar_ventoinha_automatica
  6745  001354  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  6746  001356  0E00               	movlw	0
  6747  001358  6F67               	movwf	setRangeValor@_min& (0+255),b
  6748  00135A  0E3C               	movlw	60
  6749  00135C  6F68               	movwf	setRangeValor@_max& (0+255),b
  6750  00135E  0E1C               	movlw	28
  6751  001360  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  6752  001362  0E2D               	movlw	45
  6753  001364  ECD9  F027         	call	_setRangeValor
  6754                           
  6755                           ;main.c: 449: break;
  6756  001368  D032               	goto	l1393
  6757  00136A  0E01               	movlw	1
  6758  00136C  6E45               	movwf	_opcaomenu,c
  6759                           
  6760                           ;main.c: 451: }
  6761  00136E  D02F               	goto	l1393
  6762  001370                     l1389:
  6763  001370  5045               	movf	_opcaomenu,w,c
  6764                           
  6765                           ; Switch size 1, requested type "space"
  6766                           ; Number of cases is 15, Range of values is 1 to 15
  6767                           ; switch strategies available:
  6768                           ; Name         Instructions Cycles
  6769                           ; simple_byte           46    24 (average)
  6770                           ;	Chosen strategy is simple_byte
  6771  001372  0A01               	xorlw	1	; case 1
  6772  001374  B4D8               	btfsc	status,2,c
  6773  001376  D55C               	goto	l1390
  6774  001378  0A03               	xorlw	3	; case 2
  6775  00137A  B4D8               	btfsc	status,2,c
  6776  00137C  D588               	goto	l1394
  6777  00137E  0A01               	xorlw	1	; case 3
  6778  001380  B4D8               	btfsc	status,2,c
  6779  001382  D5B1               	goto	l1397
  6780  001384  0A07               	xorlw	7	; case 4
  6781  001386  B4D8               	btfsc	status,2,c
  6782  001388  D5DA               	goto	l1400
  6783  00138A  0A01               	xorlw	1	; case 5
  6784  00138C  B4D8               	btfsc	status,2,c
  6785  00138E  D603               	goto	l1403
  6786  001390  0A03               	xorlw	3	; case 6
  6787  001392  B4D8               	btfsc	status,2,c
  6788  001394  D62C               	goto	l1406
  6789  001396  0A01               	xorlw	1	; case 7
  6790  001398  B4D8               	btfsc	status,2,c
  6791  00139A  D655               	goto	l1409
  6792  00139C  0A0F               	xorlw	15	; case 8
  6793  00139E  B4D8               	btfsc	status,2,c
  6794  0013A0  D67E               	goto	l1412
  6795  0013A2  0A01               	xorlw	1	; case 9
  6796  0013A4  B4D8               	btfsc	status,2,c
  6797  0013A6  D6AA               	goto	l1415
  6798  0013A8  0A03               	xorlw	3	; case 10
  6799  0013AA  B4D8               	btfsc	status,2,c
  6800  0013AC  D6D6               	goto	l1418
  6801  0013AE  0A01               	xorlw	1	; case 11
  6802  0013B0  B4D8               	btfsc	status,2,c
  6803  0013B2  D6FF               	goto	l1421
  6804  0013B4  0A07               	xorlw	7	; case 12
  6805  0013B6  B4D8               	btfsc	status,2,c
  6806  0013B8  D728               	goto	l1424
  6807  0013BA  0A01               	xorlw	1	; case 13
  6808  0013BC  B4D8               	btfsc	status,2,c
  6809  0013BE  D751               	goto	l1427
  6810  0013C0  0A03               	xorlw	3	; case 14
  6811  0013C2  B4D8               	btfsc	status,2,c
  6812  0013C4  D77A               	goto	l1430
  6813  0013C6  0A01               	xorlw	1	; case 15
  6814  0013C8  B4D8               	btfsc	status,2,c
  6815  0013CA  D7A3               	goto	l1433
  6816  0013CC  D7CE               	goto	l1436
  6817  0013CE                     l1393:
  6818                           
  6819                           ;main.c: 452: if (btPress(16)) opcaomenu++;
  6820  0013CE  0E10               	movlw	16
  6821  0013D0  ECDA  F02D         	call	_btPress
  6822  0013D4  0900               	iorlw	0
  6823  0013D6  A4D8               	btfss	status,2,c
  6824  0013D8  2A45               	incf	_opcaomenu,f,c
  6825                           
  6826                           ;main.c: 453: if (btPress(1)) opcaomenu--;
  6827  0013DA  0E01               	movlw	1
  6828  0013DC  ECDA  F02D         	call	_btPress
  6829  0013E0  0900               	iorlw	0
  6830  0013E2  A4D8               	btfss	status,2,c
  6831  0013E4  0645               	decf	_opcaomenu,f,c
  6832                           
  6833                           ;main.c: 454: if (btPress(8)) {
  6834  0013E6  0E08               	movlw	8
  6835  0013E8  ECDA  F02D         	call	_btPress
  6836  0013EC  0900               	iorlw	0
  6837  0013EE  B4D8               	btfsc	status,2,c
  6838  0013F0  D102               	goto	l1469
  6839                           
  6840                           ;main.c: 455: menu = 0;
  6841  0013F2  0E00               	movlw	0
  6842  0013F4  0100               	movlb	0	; () banked
  6843  0013F6  6FFD               	movwf	_menu& (0+255),b
  6844                           
  6845                           ;main.c: 456: senha_desbloqueio_func = 0;
  6846  0013F8  0E00               	movlw	0
  6847  0013FA  6E4D               	movwf	_senha_desbloqueio_func,c
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;main.c: 457: }
  6851                           ;main.c: 458: } else
  6852  0013FC  D0FC               	goto	l1469
  6853  0013FE                     l1385:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;main.c: 462: if (menu == 8 || menu == 9) {
  6857                           
  6858                           ; BSR set to: 0
  6859  0013FE  0E08               	movlw	8
  6860  001400  19FD               	xorwf	_menu& (0+255),w,b
  6861  001402  B4D8               	btfsc	status,2,c
  6862  001404  D030               	goto	l1444
  6863                           
  6864                           ; BSR set to: 0
  6865  001406  0E09               	movlw	9
  6866  001408  19FD               	xorwf	_menu& (0+255),w,b
  6867  00140A  B4D8               	btfsc	status,2,c
  6868  00140C  D02C               	goto	l1444
  6869  00140E  D047               	goto	l1441
  6870  001410                     
  6871                           ;main.c: 465: menu = 8;
  6872                           
  6873                           ; BSR set to: 0
  6874  001410  0E08               	movlw	8
  6875  001412  0100               	movlb	0	; () banked
  6876  001414  6FFD               	movwf	_menu& (0+255),b
  6877                           
  6878                           ;main.c: 466: break;
  6879  001416  D02F               	goto	l1446
  6880  001418                     
  6881                           ;main.c: 468: menu = 9;
  6882                           
  6883                           ; BSR set to: 0
  6884  001418  0E09               	movlw	9
  6885  00141A  0100               	movlb	0	; () banked
  6886  00141C  6FFD               	movwf	_menu& (0+255),b
  6887                           
  6888                           ;main.c: 469: line1[0] = '>';
  6889  00141E  0E3E               	movlw	62
  6890  001420  0101               	movlb	1	; () banked
  6891  001422  6F91               	movwf	_line1& (0+255),b
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;main.c: 470: if (btPress(2)) {
  6895  001424  0E02               	movlw	2
  6896  001426  ECDA  F02D         	call	_btPress
  6897  00142A  0900               	iorlw	0
  6898  00142C  B4D8               	btfsc	status,2,c
  6899  00142E  D023               	goto	l1446
  6900                           
  6901                           ;main.c: 471: LATAbits.LATA4 = 1;
  6902  001430  8889               	bsf	3977,4,c	;volatile
  6903                           
  6904                           ;main.c: 472: delay(100);
  6905  001432  0E00               	movlw	0
  6906  001434  0100               	movlb	0	; () banked
  6907  001436  6F61               	movwf	(delay@x+1)& (0+255),b
  6908  001438  0E64               	movlw	100
  6909  00143A  6F60               	movwf	delay@x& (0+255),b
  6910  00143C  EC31  F02D         	call	_delay	;wreg free
  6911                           
  6912                           ;main.c: 473: LATAbits.LATA4 = 0;
  6913  001440  9889               	bcf	3977,4,c	;volatile
  6914                           
  6915                           ;main.c: 474: delay(800);
  6916  001442  0E03               	movlw	3
  6917  001444  0100               	movlb	0	; () banked
  6918  001446  6F61               	movwf	(delay@x+1)& (0+255),b
  6919  001448  0E20               	movlw	32
  6920  00144A  6F60               	movwf	delay@x& (0+255),b
  6921  00144C  EC31  F02D         	call	_delay	;wreg free
  6922                           
  6923                           ;main.c: 475: menu = 10;
  6924  001450  0E0A               	movlw	10
  6925  001452  0100               	movlb	0	; () banked
  6926  001454  6FFD               	movwf	_menu& (0+255),b
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;main.c: 476: f_wifi_processo = 0;
  6930  001456  0E00               	movlw	0
  6931  001458  6E3D               	movwf	_f_wifi_processo,c
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;main.c: 477: t_wifi_restart = 15;
  6935  00145A  0E0F               	movlw	15
  6936  00145C  6E3E               	movwf	_t_wifi_restart,c
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;main.c: 478: }
  6940                           ;main.c: 479: break;
  6941  00145E  D00B               	goto	l1446
  6942  001460                     
  6943                           ;main.c: 481: opcaomenu = 1;
  6944                           
  6945                           ; BSR set to: 0
  6946  001460  0E01               	movlw	1
  6947  001462  6E45               	movwf	_opcaomenu,c
  6948                           
  6949                           ;main.c: 484: }
  6950                           
  6951                           ;main.c: 483: break;
  6952  001464  D008               	goto	l1446
  6953  001466                     l1444:
  6954  001466  5045               	movf	_opcaomenu,w,c
  6955                           
  6956                           ; Switch size 1, requested type "space"
  6957                           ; Number of cases is 2, Range of values is 1 to 2
  6958                           ; switch strategies available:
  6959                           ; Name         Instructions Cycles
  6960                           ; simple_byte            7     4 (average)
  6961                           ;	Chosen strategy is simple_byte
  6962  001468  0A01               	xorlw	1	; case 1
  6963  00146A  B4D8               	btfsc	status,2,c
  6964  00146C  D7D1               	goto	l1445
  6965  00146E  0A03               	xorlw	3	; case 2
  6966  001470  B4D8               	btfsc	status,2,c
  6967  001472  D7D2               	goto	l1447
  6968  001474  D7F5               	goto	l1449
  6969  001476                     l1446:
  6970                           
  6971                           ;main.c: 485: if (btPress(16)) opcaomenu++;
  6972  001476  0E10               	movlw	16
  6973  001478  ECDA  F02D         	call	_btPress
  6974  00147C  0900               	iorlw	0
  6975  00147E  A4D8               	btfss	status,2,c
  6976  001480  2A45               	incf	_opcaomenu,f,c
  6977                           
  6978                           ;main.c: 486: if (btPress(1)) opcaomenu--;
  6979  001482  0E01               	movlw	1
  6980  001484  ECDA  F02D         	call	_btPress
  6981  001488  0900               	iorlw	0
  6982  00148A  A4D8               	btfss	status,2,c
  6983  00148C  0645               	decf	_opcaomenu,f,c
  6984                           
  6985                           ;main.c: 487: if (btPress(8)) {
  6986  00148E  0E08               	movlw	8
  6987  001490  ECDA  F02D         	call	_btPress
  6988  001494  0900               	iorlw	0
  6989  001496  B4D8               	btfsc	status,2,c
  6990  001498  D0AE               	goto	l1469
  6991                           
  6992                           ;main.c: 488: menu = 3;
  6993  00149A  0E03               	movlw	3
  6994  00149C  D0AA               	goto	L11
  6995  00149E                     l1441:
  6996                           
  6997                           ; BSR set to: 0
  6998                           ;main.c: 494: if (menu == 11) {
  6999                           
  7000                           ; BSR set to: 0
  7001  00149E  0E0B               	movlw	11
  7002  0014A0  19FD               	xorwf	_menu& (0+255),w,b
  7003  0014A2  B4D8               	btfsc	status,2,c
  7004  0014A4  D088               	goto	l1455
  7005  0014A6  D0A7               	goto	l1469
  7006  0014A8                     
  7007                           ;main.c: 497: line1[0] = '>';
  7008                           
  7009                           ; BSR set to: 0
  7010  0014A8  0E3E               	movlw	62
  7011  0014AA  0101               	movlb	1	; () banked
  7012  0014AC  6F91               	movwf	_line1& (0+255),b
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;main.c: 498: if (btPress(64)) setRangeValor('+', &t_fim_fase1, 0, 30, 8);
  7016  0014AE  0E40               	movlw	64
  7017  0014B0  ECDA  F02D         	call	_btPress
  7018  0014B4  0900               	iorlw	0
  7019  0014B6  B4D8               	btfsc	status,2,c
  7020  0014B8  D00E               	goto	l1457
  7021  0014BA  0E58               	movlw	low _t_fim_fase1
  7022  0014BC  0100               	movlb	0	; () banked
  7023  0014BE  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7024  0014C0  0E00               	movlw	high _t_fim_fase1
  7025  0014C2  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7026  0014C4  0E00               	movlw	0
  7027  0014C6  6F67               	movwf	setRangeValor@_min& (0+255),b
  7028  0014C8  0E1E               	movlw	30
  7029  0014CA  6F68               	movwf	setRangeValor@_max& (0+255),b
  7030  0014CC  0E08               	movlw	8
  7031  0014CE  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7032  0014D0  0E2B               	movlw	43
  7033  0014D2  ECD9  F027         	call	_setRangeValor
  7034  0014D6                     l1457:
  7035                           
  7036                           ;main.c: 499: if (btPress(32)) setRangeValor('-', &t_fim_fase1, 0, 30, 8);
  7037  0014D6  0E20               	movlw	32
  7038  0014D8  ECDA  F02D         	call	_btPress
  7039  0014DC  0900               	iorlw	0
  7040  0014DE  B4D8               	btfsc	status,2,c
  7041  0014E0  D075               	goto	l1459
  7042  0014E2  0E58               	movlw	low _t_fim_fase1
  7043  0014E4  0100               	movlb	0	; () banked
  7044  0014E6  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7045  0014E8  0E00               	movlw	high _t_fim_fase1
  7046  0014EA  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7047  0014EC  0E00               	movlw	0
  7048  0014EE  6F67               	movwf	setRangeValor@_min& (0+255),b
  7049  0014F0  0E1E               	movlw	30
  7050  0014F2  6F68               	movwf	setRangeValor@_max& (0+255),b
  7051  0014F4  0E08               	movlw	8
  7052  0014F6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7053  0014F8  0E2D               	movlw	45
  7054  0014FA  ECD9  F027         	call	_setRangeValor
  7055                           
  7056                           ;main.c: 500: break;
  7057  0014FE  D066               	goto	l1459
  7058  001500                     
  7059                           ;main.c: 502: line2[0] = '>';
  7060  001500  0E3E               	movlw	62
  7061  001502  0101               	movlb	1	; () banked
  7062  001504  6F7C               	movwf	_line2& (0+255),b
  7063                           
  7064                           ; BSR set to: 1
  7065                           ;main.c: 503: if (btPress(64)) setRangeValor('+', &t_fim_fase2, 0, 30, 9);
  7066  001506  0E40               	movlw	64
  7067  001508  ECDA  F02D         	call	_btPress
  7068  00150C  0900               	iorlw	0
  7069  00150E  B4D8               	btfsc	status,2,c
  7070  001510  D00E               	goto	l1461
  7071  001512  0E57               	movlw	low _t_fim_fase2
  7072  001514  0100               	movlb	0	; () banked
  7073  001516  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7074  001518  0E00               	movlw	high _t_fim_fase2
  7075  00151A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7076  00151C  0E00               	movlw	0
  7077  00151E  6F67               	movwf	setRangeValor@_min& (0+255),b
  7078  001520  0E1E               	movlw	30
  7079  001522  6F68               	movwf	setRangeValor@_max& (0+255),b
  7080  001524  0E09               	movlw	9
  7081  001526  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7082  001528  0E2B               	movlw	43
  7083  00152A  ECD9  F027         	call	_setRangeValor
  7084  00152E                     l1461:
  7085                           
  7086                           ;main.c: 504: if (btPress(32)) setRangeValor('-', &t_fim_fase2, 0, 30, 9);
  7087  00152E  0E20               	movlw	32
  7088  001530  ECDA  F02D         	call	_btPress
  7089  001534  0900               	iorlw	0
  7090  001536  B4D8               	btfsc	status,2,c
  7091  001538  D049               	goto	l1459
  7092  00153A  0E57               	movlw	low _t_fim_fase2
  7093  00153C  0100               	movlb	0	; () banked
  7094  00153E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7095  001540  0E00               	movlw	high _t_fim_fase2
  7096  001542  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7097  001544  0E00               	movlw	0
  7098  001546  6F67               	movwf	setRangeValor@_min& (0+255),b
  7099  001548  0E1E               	movlw	30
  7100  00154A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7101  00154C  0E09               	movlw	9
  7102  00154E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7103  001550  0E2D               	movlw	45
  7104  001552  ECD9  F027         	call	_setRangeValor
  7105                           
  7106                           ;main.c: 505: break;
  7107  001556  D03A               	goto	l1459
  7108  001558                     
  7109                           ;main.c: 507: line3[0] = '>';
  7110  001558  0E3E               	movlw	62
  7111  00155A  0101               	movlb	1	; () banked
  7112  00155C  6F67               	movwf	_line3& (0+255),b
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;main.c: 508: if (btPress(64)) setRangeValor('+', &t_fim_fase3, 0, 30, 10);
  7116  00155E  0E40               	movlw	64
  7117  001560  ECDA  F02D         	call	_btPress
  7118  001564  0900               	iorlw	0
  7119  001566  B4D8               	btfsc	status,2,c
  7120  001568  D00E               	goto	l1464
  7121  00156A  0E56               	movlw	low _t_fim_fase3
  7122  00156C  0100               	movlb	0	; () banked
  7123  00156E  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7124  001570  0E00               	movlw	high _t_fim_fase3
  7125  001572  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7126  001574  0E00               	movlw	0
  7127  001576  6F67               	movwf	setRangeValor@_min& (0+255),b
  7128  001578  0E1E               	movlw	30
  7129  00157A  6F68               	movwf	setRangeValor@_max& (0+255),b
  7130  00157C  0E0A               	movlw	10
  7131  00157E  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7132  001580  0E2B               	movlw	43
  7133  001582  ECD9  F027         	call	_setRangeValor
  7134  001586                     l1464:
  7135                           
  7136                           ;main.c: 509: if (btPress(32)) setRangeValor('-', &t_fim_fase3, 0, 30, 10);
  7137  001586  0E20               	movlw	32
  7138  001588  ECDA  F02D         	call	_btPress
  7139  00158C  0900               	iorlw	0
  7140  00158E  B4D8               	btfsc	status,2,c
  7141  001590  D01D               	goto	l1459
  7142  001592  0E56               	movlw	low _t_fim_fase3
  7143  001594  0100               	movlb	0	; () banked
  7144  001596  6F65               	movwf	setRangeValor@_var_ajt& (0+255),b
  7145  001598  0E00               	movlw	high _t_fim_fase3
  7146  00159A  6F66               	movwf	(setRangeValor@_var_ajt+1)& (0+255),b
  7147  00159C  0E00               	movlw	0
  7148  00159E  6F67               	movwf	setRangeValor@_min& (0+255),b
  7149  0015A0  0E1E               	movlw	30
  7150  0015A2  6F68               	movwf	setRangeValor@_max& (0+255),b
  7151  0015A4  0E0A               	movlw	10
  7152  0015A6  6F69               	movwf	setRangeValor@end_eeprom& (0+255),b
  7153  0015A8  0E2D               	movlw	45
  7154  0015AA  ECD9  F027         	call	_setRangeValor
  7155                           
  7156                           ;main.c: 510: break;
  7157  0015AE  D00E               	goto	l1459
  7158  0015B0  0E01               	movlw	1
  7159  0015B2  6E45               	movwf	_opcaomenu,c
  7160                           
  7161                           ;main.c: 512: }
  7162  0015B4  D00B               	goto	l1459
  7163  0015B6                     l1455:
  7164  0015B6  5045               	movf	_opcaomenu,w,c
  7165                           
  7166                           ; Switch size 1, requested type "space"
  7167                           ; Number of cases is 3, Range of values is 1 to 3
  7168                           ; switch strategies available:
  7169                           ; Name         Instructions Cycles
  7170                           ; simple_byte           10     6 (average)
  7171                           ;	Chosen strategy is simple_byte
  7172  0015B8  0A01               	xorlw	1	; case 1
  7173  0015BA  B4D8               	btfsc	status,2,c
  7174  0015BC  D775               	goto	l1456
  7175  0015BE  0A03               	xorlw	3	; case 2
  7176  0015C0  B4D8               	btfsc	status,2,c
  7177  0015C2  D79E               	goto	l1460
  7178  0015C4  0A01               	xorlw	1	; case 3
  7179  0015C6  B4D8               	btfsc	status,2,c
  7180  0015C8  D7C7               	goto	l1463
  7181  0015CA  D7F2               	goto	l1466
  7182  0015CC                     l1459:
  7183                           
  7184                           ;main.c: 513: if (btPress(16)) opcaomenu++;
  7185  0015CC  0E10               	movlw	16
  7186  0015CE  ECDA  F02D         	call	_btPress
  7187  0015D2  0900               	iorlw	0
  7188  0015D4  A4D8               	btfss	status,2,c
  7189  0015D6  2A45               	incf	_opcaomenu,f,c
  7190                           
  7191                           ;main.c: 514: if (btPress(1)) opcaomenu--;
  7192  0015D8  0E01               	movlw	1
  7193  0015DA  ECDA  F02D         	call	_btPress
  7194  0015DE  0900               	iorlw	0
  7195  0015E0  A4D8               	btfss	status,2,c
  7196  0015E2  0645               	decf	_opcaomenu,f,c
  7197                           
  7198                           ;main.c: 515: if (btPress(8)) {
  7199  0015E4  0E08               	movlw	8
  7200  0015E6  ECDA  F02D         	call	_btPress
  7201  0015EA  0900               	iorlw	0
  7202  0015EC  B4D8               	btfsc	status,2,c
  7203  0015EE  D003               	goto	l1469
  7204                           
  7205                           ;main.c: 516: menu = 2;
  7206  0015F0  0E02               	movlw	2
  7207  0015F2                     L11:
  7208  0015F2  0100               	movlb	0	; () banked
  7209  0015F4  6FFD               	movwf	_menu& (0+255),b
  7210  0015F6                     l1469:
  7211                           
  7212                           ;main.c: 517: }
  7213                           ;main.c: 518: }
  7214                           ;main.c: 519: updateLeds();
  7215                           
  7216                           ; BSR set to: 0
  7217                           
  7218                           ; BSR set to: 0
  7219                           
  7220                           ; BSR set to: 0
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225  0015F6  ECBB  F02C         	call	_updateLeds	;wreg free
  7226                           
  7227                           ;main.c: 520: atualizaLCD(line1, line2, line3, line4);
  7228  0015FA  0E91               	movlw	low _line1
  7229  0015FC  0100               	movlb	0	; () banked
  7230  0015FE  6F68               	movwf	atualizaLCD@line1& (0+255),b
  7231  001600  0E01               	movlw	high _line1
  7232  001602  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
  7233  001604  0E7C               	movlw	low _line2
  7234  001606  6F6A               	movwf	atualizaLCD@line2& (0+255),b
  7235  001608  0E01               	movlw	high _line2
  7236  00160A  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
  7237  00160C  0E67               	movlw	low _line3
  7238  00160E  6F6C               	movwf	atualizaLCD@line3& (0+255),b
  7239  001610  0E01               	movlw	high _line3
  7240  001612  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
  7241  001614  0E52               	movlw	low _line4
  7242  001616  6F6E               	movwf	atualizaLCD@line4& (0+255),b
  7243  001618  0E01               	movlw	high _line4
  7244  00161A  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
  7245  00161C  ECB0  F025         	call	_atualizaLCD	;wreg free
  7246  001620  EF97  F001         	goto	l1278
  7247  001624                     __end_of_main:
  7248                           	opt stack 0
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodh	equ	0xFF4
  7254                           prodl	equ	0xFF3
  7255                           intcon	equ	0xFF2
  7256                           intcon2	equ	0xFF1
  7257                           intcon3	equ	0xFF0
  7258                           postinc0	equ	0xFEE
  7259                           wreg	equ	0xFE8
  7260                           postdec1	equ	0xFE5
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           fsr2h	equ	0xFDA
  7264                           fsr2l	equ	0xFD9
  7265                           status	equ	0xFD8
  7266                           
  7267 ;; *************** function _updateLeds *****************
  7268 ;; Defined at:
  7269 ;;		line 27 in file "src/Led_display.h"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;		None
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;		None
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0
  7284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7287 ;;Total ram usage:        0 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    8
  7290 ;; This function calls:
  7291 ;;		_I2C_Start
  7292 ;;		_I2C_Stop
  7293 ;;		_I2C_Write
  7294 ;; This function is called by:
  7295 ;;		_main
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text1
  7300  005976                     __ptext1:
  7301                           	opt stack 0
  7302  005976                     _updateLeds:
  7303                           	opt stack 22
  7304                           
  7305                           ;Led_display.h: 29: if (_led != leds) {
  7306                           
  7307                           ;incstack = 0
  7308  005976  5043               	movf	_leds,w,c
  7309  005978  185C               	xorwf	__led,w,c
  7310  00597A  B4D8               	btfsc	status,2,c
  7311  00597C  0012               	return	
  7312                           
  7313                           ;Led_display.h: 30: I2C_Start();
  7314  00597E  EC2F  F02E         	call	_I2C_Start	;wreg free
  7315                           
  7316                           ;Led_display.h: 31: I2C_Write(0x46);
  7317  005982  0E00               	movlw	0
  7318  005984  0100               	movlb	0	; () banked
  7319  005986  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
  7320  005988  0E46               	movlw	70
  7321  00598A  6F61               	movwf	I2C_Write@d& (0+255),b
  7322  00598C  EC1D  F02E         	call	_I2C_Write	;wreg free
  7323                           
  7324                           ;Led_display.h: 32: I2C_Write(((char) leds));
  7325  005990  C043  F061         	movff	_leds,I2C_Write@d
  7326  005994  0100               	movlb	0	; () banked
  7327  005996  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
  7328  005998  EC1D  F02E         	call	_I2C_Write	;wreg free
  7329                           
  7330                           ;Led_display.h: 33: I2C_Stop();
  7331  00599C  EC2B  F02E         	call	_I2C_Stop	;wreg free
  7332                           
  7333                           ;Led_display.h: 34: _led = leds;
  7334  0059A0  C043  F05C         	movff	_leds,__led
  7335  0059A4  0012               	return	
  7336  0059A6                     __end_of_updateLeds:
  7337                           	opt stack 0
  7338                           tblptru	equ	0xFF8
  7339                           tblptrh	equ	0xFF7
  7340                           tblptrl	equ	0xFF6
  7341                           tablat	equ	0xFF5
  7342                           prodh	equ	0xFF4
  7343                           prodl	equ	0xFF3
  7344                           intcon	equ	0xFF2
  7345                           intcon2	equ	0xFF1
  7346                           intcon3	equ	0xFF0
  7347                           postinc0	equ	0xFEE
  7348                           wreg	equ	0xFE8
  7349                           postdec1	equ	0xFE5
  7350                           fsr1l	equ	0xFE1
  7351                           indf2	equ	0xFDF
  7352                           fsr2h	equ	0xFDA
  7353                           fsr2l	equ	0xFD9
  7354                           status	equ	0xFD8
  7355                           
  7356 ;; *************** function _setUmidade *****************
  7357 ;; Defined at:
  7358 ;;		line 44 in file "src/FuncoesControlador.h"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  tp              1    wreg     unsigned char 
  7361 ;;  _umdajt         2    8[BANK0 ] PTR unsigned char 
  7362 ;;		 -> umidajt(1), 
  7363 ;;  _tempajt        2   10[BANK0 ] PTR unsigned char 
  7364 ;;		 -> tempajt(1), 
  7365 ;;  _clima          2   12[BANK0 ] PTR unsigned char 
  7366 ;;		 -> clima(1), 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  tp              1   14[BANK0 ] unsigned char 
  7369 ;;  _umd            1   25[BANK0 ] unsigned char 
  7370 ;;  _clim           1   24[BANK0 ] unsigned char 
  7371 ;;  _tmpajt         1   23[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7381 ;;      Params:         0       6       0       0       0       0       0       0       0
  7382 ;;      Locals:         0      12       0       0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7384 ;;      Totals:         0      18       0       0       0       0       0       0       0
  7385 ;;Total ram usage:       18 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    9
  7388 ;; This function calls:
  7389 ;;		_tabelaUmidade
  7390 ;;		_writeEEPROM_ext
  7391 ;; This function is called by:
  7392 ;;		_main
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text2
  7397  00468C                     __ptext2:
  7398                           	opt stack 0
  7399  00468C                     _setUmidade:
  7400                           	opt stack 21
  7401                           
  7402                           ;incstack = 0
  7403                           ;setUmidade@tp stored from wreg
  7404  00468C  0100               	movlb	0	; () banked
  7405  00468E  6F6E               	movwf	setUmidade@tp& (0+255),b
  7406                           
  7407                           ;FuncoesControlador.h: 45: char _umd = *_umdajt;
  7408  004690  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7409  004694  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7410  004698  50DF               	movf	indf2,w,c
  7411  00469A  0100               	movlb	0	; () banked
  7412  00469C  6F79               	movwf	setUmidade@_umd& (0+255),b
  7413                           
  7414                           ;FuncoesControlador.h: 46: char _tmpajt = *_tempajt;
  7415  00469E  C06A  FFD9         	movff	setUmidade@_tempajt,fsr2l
  7416  0046A2  C06B  FFDA         	movff	setUmidade@_tempajt+1,fsr2h
  7417  0046A6  50DF               	movf	indf2,w,c
  7418  0046A8  6F77               	movwf	setUmidade@_tmpajt& (0+255),b
  7419                           
  7420                           ;FuncoesControlador.h: 47: char _clim = *_clima;
  7421  0046AA  C06C  FFD9         	movff	setUmidade@_clima,fsr2l
  7422  0046AE  C06D  FFDA         	movff	setUmidade@_clima+1,fsr2h
  7423  0046B2  50DF               	movf	indf2,w,c
  7424  0046B4  6F78               	movwf	setUmidade@_clim& (0+255),b
  7425                           
  7426                           ;FuncoesControlador.h: 49: switch (tp) {
  7427  0046B6  D05C               	goto	l914
  7428  0046B8                     
  7429                           ; BSR set to: 0
  7430                           ;FuncoesControlador.h: 51: if (tipo_sensor_umidade == 1) {
  7431                           
  7432                           ; BSR set to: 0
  7433  0046B8  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7434  0046BA  A4D8               	btfss	status,2,c
  7435  0046BC  D00F               	goto	l916
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;FuncoesControlador.h: 52: _umd = (_umd >= 100) ? 10 : ++_umd;
  7439  0046BE  0E64               	movlw	100
  7440  0046C0  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7441  0046C2  D005               	goto	l918
  7442                           
  7443                           ; BSR set to: 0
  7444  0046C4  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7445  0046C6  C079  F06F         	movff	setUmidade@_umd,_setUmidade$1297
  7446  0046CA  6B70               	clrf	(_setUmidade$1297+1)& (0+255),b
  7447  0046CC  D004               	goto	l920
  7448  0046CE                     l918:
  7449                           
  7450                           ; BSR set to: 0
  7451                           
  7452                           ; BSR set to: 0
  7453  0046CE  0E00               	movlw	0
  7454  0046D0  6F70               	movwf	(_setUmidade$1297+1)& (0+255),b
  7455  0046D2  0E0A               	movlw	10
  7456  0046D4  6F6F               	movwf	_setUmidade$1297& (0+255),b
  7457  0046D6                     l920:
  7458                           
  7459                           ; BSR set to: 0
  7460                           
  7461                           ; BSR set to: 0
  7462  0046D6  C06F  F079         	movff	_setUmidade$1297,setUmidade@_umd
  7463                           
  7464                           ;FuncoesControlador.h: 53: } else {
  7465  0046DA  D00E               	goto	l921
  7466  0046DC                     l916:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;FuncoesControlador.h: 54: _umd = (_umd >= 120) ? 60 : ++_umd;
  7470                           
  7471                           ; BSR set to: 0
  7472  0046DC  0E78               	movlw	120
  7473  0046DE  6179               	cpfslt	setUmidade@_umd& (0+255),b
  7474  0046E0  D005               	goto	l923
  7475                           
  7476                           ; BSR set to: 0
  7477  0046E2  2B79               	incf	setUmidade@_umd& (0+255),f,b
  7478  0046E4  C079  F071         	movff	setUmidade@_umd,_setUmidade$1298
  7479  0046E8  6B72               	clrf	(_setUmidade$1298+1)& (0+255),b
  7480  0046EA  D004               	goto	l925
  7481  0046EC                     l923:
  7482                           
  7483                           ; BSR set to: 0
  7484                           
  7485                           ; BSR set to: 0
  7486  0046EC  0E00               	movlw	0
  7487  0046EE  6F72               	movwf	(_setUmidade$1298+1)& (0+255),b
  7488  0046F0  0E3C               	movlw	60
  7489  0046F2  6F71               	movwf	_setUmidade$1298& (0+255),b
  7490  0046F4                     l925:
  7491                           
  7492                           ; BSR set to: 0
  7493                           
  7494                           ; BSR set to: 0
  7495  0046F4  C071  F079         	movff	_setUmidade$1298,setUmidade@_umd
  7496  0046F8                     l921:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;FuncoesControlador.h: 55: }
  7500                           ;FuncoesControlador.h: 56: writeEEPROM_ext(2, _umd);
  7501                           
  7502                           ; BSR set to: 0
  7503  0046F8  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7504  0046FC  0E02               	movlw	2
  7505  0046FE  EC11  F02C         	call	_writeEEPROM_ext
  7506                           
  7507                           ;FuncoesControlador.h: 58: break;
  7508  004702  D040               	goto	l926
  7509  004704                     
  7510                           ;FuncoesControlador.h: 60: if (tipo_sensor_umidade == 1) {
  7511  004704  0100               	movlb	0	; () banked
  7512  004706  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
  7513  004708  A4D8               	btfss	status,2,c
  7514  00470A  D00F               	goto	l928
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;FuncoesControlador.h: 61: _umd = (_umd <= 10) ? 100 : --_umd;
  7518  00470C  0E0A               	movlw	10
  7519  00470E  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7520  004710  D005               	goto	l930
  7521                           
  7522                           ; BSR set to: 0
  7523  004712  0779               	decf	setUmidade@_umd& (0+255),f,b
  7524  004714  C079  F073         	movff	setUmidade@_umd,_setUmidade$1299
  7525  004718  6B74               	clrf	(_setUmidade$1299+1)& (0+255),b
  7526  00471A  D004               	goto	l932
  7527  00471C                     l930:
  7528                           
  7529                           ; BSR set to: 0
  7530                           
  7531                           ; BSR set to: 0
  7532  00471C  0E00               	movlw	0
  7533  00471E  6F74               	movwf	(_setUmidade$1299+1)& (0+255),b
  7534  004720  0E64               	movlw	100
  7535  004722  6F73               	movwf	_setUmidade$1299& (0+255),b
  7536  004724                     l932:
  7537                           
  7538                           ; BSR set to: 0
  7539                           
  7540                           ; BSR set to: 0
  7541  004724  C073  F079         	movff	_setUmidade$1299,setUmidade@_umd
  7542                           
  7543                           ;FuncoesControlador.h: 62: } else {
  7544  004728  D00E               	goto	l933
  7545  00472A                     l928:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;FuncoesControlador.h: 63: _umd = (_umd <= 60) ? 120 : --_umd;
  7549                           
  7550                           ; BSR set to: 0
  7551  00472A  0E3C               	movlw	60
  7552  00472C  6579               	cpfsgt	setUmidade@_umd& (0+255),b
  7553  00472E  D005               	goto	l935
  7554                           
  7555                           ; BSR set to: 0
  7556  004730  0779               	decf	setUmidade@_umd& (0+255),f,b
  7557  004732  C079  F075         	movff	setUmidade@_umd,_setUmidade$1300
  7558  004736  6B76               	clrf	(_setUmidade$1300+1)& (0+255),b
  7559  004738  D004               	goto	l937
  7560  00473A                     l935:
  7561                           
  7562                           ; BSR set to: 0
  7563                           
  7564                           ; BSR set to: 0
  7565  00473A  0E00               	movlw	0
  7566  00473C  6F76               	movwf	(_setUmidade$1300+1)& (0+255),b
  7567  00473E  0E78               	movlw	120
  7568  004740  6F75               	movwf	_setUmidade$1300& (0+255),b
  7569  004742                     l937:
  7570                           
  7571                           ; BSR set to: 0
  7572                           
  7573                           ; BSR set to: 0
  7574  004742  C075  F079         	movff	_setUmidade$1300,setUmidade@_umd
  7575  004746                     l933:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;FuncoesControlador.h: 64: }
  7579                           ;FuncoesControlador.h: 65: writeEEPROM_ext(2, _umd);
  7580                           
  7581                           ; BSR set to: 0
  7582  004746  C079  F063         	movff	setUmidade@_umd,writeEEPROM_ext@data
  7583  00474A  0E02               	movlw	2
  7584  00474C  EC11  F02C         	call	_writeEEPROM_ext
  7585                           
  7586                           ;FuncoesControlador.h: 67: break;
  7587  004750  D019               	goto	l926
  7588  004752                     
  7589                           ;FuncoesControlador.h: 69: _umd = tabelaUmidade(_tmpajt, _clim, tipo_sensor_umidade);
  7590  004752  C077  F060         	movff	setUmidade@_tmpajt,tabelaUmidade@_tmp
  7591  004756  0100               	movlb	0	; () banked
  7592  004758  6B61               	clrf	(tabelaUmidade@_tmp+1)& (0+255),b
  7593  00475A  C078  F062         	movff	setUmidade@_clim,tabelaUmidade@_clima
  7594  00475E  6B63               	clrf	(tabelaUmidade@_clima+1)& (0+255),b
  7595  004760  C0FA  F064         	movff	_tipo_sensor_umidade,tabelaUmidade@_tipo_sensor
  7596  004764  EC12  F00B         	call	_tabelaUmidade	;wreg free
  7597  004768  0100               	movlb	0	; () banked
  7598  00476A  5160               	movf	?_tabelaUmidade& (0+255),w,b
  7599  00476C  6F79               	movwf	setUmidade@_umd& (0+255),b
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;FuncoesControlador.h: 71: }
  7603                           
  7604                           ;FuncoesControlador.h: 70: break;
  7605  00476E  D00A               	goto	l926
  7606  004770                     l914:
  7607                           
  7608                           ; BSR set to: 0
  7609                           
  7610                           ; BSR set to: 0
  7611  004770  516E               	movf	setUmidade@tp& (0+255),w,b
  7612                           
  7613                           ; Switch size 1, requested type "space"
  7614                           ; Number of cases is 3, Range of values is 43 to 65
  7615                           ; switch strategies available:
  7616                           ; Name         Instructions Cycles
  7617                           ; simple_byte           10     6 (average)
  7618                           ;	Chosen strategy is simple_byte
  7619  004772  0A2B               	xorlw	43	; case 43
  7620  004774  B4D8               	btfsc	status,2,c
  7621  004776  D7A0               	goto	l915
  7622  004778  0A06               	xorlw	6	; case 45
  7623  00477A  B4D8               	btfsc	status,2,c
  7624  00477C  D7C3               	goto	l927
  7625  00477E  0A6C               	xorlw	108	; case 65
  7626  004780  B4D8               	btfsc	status,2,c
  7627  004782  D7E7               	goto	l938
  7628  004784                     l926:
  7629                           
  7630                           ;FuncoesControlador.h: 73: *_umdajt = _umd;
  7631                           
  7632                           ; BSR set to: 0
  7633  004784  C068  FFD9         	movff	setUmidade@_umdajt,fsr2l
  7634  004788  C069  FFDA         	movff	setUmidade@_umdajt+1,fsr2h
  7635  00478C  C079  FFDF         	movff	setUmidade@_umd,indf2
  7636  004790  0012               	return		;funcret
  7637  004792                     __end_of_setUmidade:
  7638                           	opt stack 0
  7639                           tblptru	equ	0xFF8
  7640                           tblptrh	equ	0xFF7
  7641                           tblptrl	equ	0xFF6
  7642                           tablat	equ	0xFF5
  7643                           prodh	equ	0xFF4
  7644                           prodl	equ	0xFF3
  7645                           intcon	equ	0xFF2
  7646                           intcon2	equ	0xFF1
  7647                           intcon3	equ	0xFF0
  7648                           postinc0	equ	0xFEE
  7649                           wreg	equ	0xFE8
  7650                           postdec1	equ	0xFE5
  7651                           fsr1l	equ	0xFE1
  7652                           indf2	equ	0xFDF
  7653                           fsr2h	equ	0xFDA
  7654                           fsr2l	equ	0xFD9
  7655                           status	equ	0xFD8
  7656                           
  7657 ;; *************** function _tabelaUmidade *****************
  7658 ;; Defined at:
  7659 ;;		line 4 in file "src/TabelasUmidade.h"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  _tmp            2    0[BANK0 ] int 
  7662 ;;  _clima          2    2[BANK0 ] int 
  7663 ;;  _tipo_sensor    1    4[BANK0 ] unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  _umd            1    7[BANK0 ] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  2    0[BANK0 ] unsigned int 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7675 ;;      Params:         0       5       0       0       0       0       0       0       0
  7676 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7677 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7678 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7679 ;;Total ram usage:        8 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    6
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_setUmidade
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text3
  7690  001624                     __ptext3:
  7691                           	opt stack 0
  7692  001624                     _tabelaUmidade:
  7693                           	opt stack 23
  7694                           
  7695                           ;TabelasUmidade.h: 5: char _umd = 0;
  7696                           
  7697                           ;incstack = 0
  7698  001624  0E00               	movlw	0
  7699  001626  0100               	movlb	0	; () banked
  7700  001628  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7701                           
  7702                           ;TabelasUmidade.h: 6: if (_tipo_sensor == 0) {
  7703  00162A  5164               	movf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  7704  00162C  B4D8               	btfsc	status,2,c
  7705  00162E  D306               	goto	l305
  7706  001630  D31A               	goto	l304
  7707  001632                     
  7708                           ; BSR set to: 0
  7709                           ;TabelasUmidade.h: 9: if (_tmp <= 90) _umd = 85;
  7710                           
  7711                           ; BSR set to: 0
  7712  001632  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7713  001634  D006               	goto	u8580
  7714  001636  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7715  001638  E106               	bnz	l6736
  7716  00163A  0E5B               	movlw	91
  7717  00163C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7718  00163E  B0D8               	btfsc	status,0,c
  7719  001640  D002               	goto	l307
  7720  001642                     u8580:
  7721                           
  7722                           ; BSR set to: 0
  7723  001642  0E55               	movlw	85
  7724  001644  D04B               	goto	L22
  7725  001646                     l307:
  7726  001646                     l6736:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;TabelasUmidade.h: 10: else
  7730                           ;TabelasUmidade.h: 11: if (_tmp == 91) _umd = 86;
  7731  001646  0E5B               	movlw	91
  7732  001648  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7733  00164A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7734  00164C  A4D8               	btfss	status,2,c
  7735  00164E  D002               	goto	l309
  7736  001650                     u8590:
  7737                           
  7738                           ; BSR set to: 0
  7739  001650  0E56               	movlw	86
  7740  001652  D044               	goto	L22
  7741  001654                     l309:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;TabelasUmidade.h: 12: else
  7745                           ;TabelasUmidade.h: 13: if (_tmp == 92) _umd = 87;
  7746                           
  7747                           ; BSR set to: 0
  7748  001654  0E5C               	movlw	92
  7749  001656  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7750  001658  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7751  00165A  A4D8               	btfss	status,2,c
  7752  00165C  D002               	goto	l311
  7753                           
  7754                           ; BSR set to: 0
  7755  00165E  0E57               	movlw	87
  7756  001660  D03D               	goto	L22
  7757  001662                     l311:
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;TabelasUmidade.h: 14: else
  7761                           ;TabelasUmidade.h: 15: if (_tmp == 93) _umd = 88;
  7762                           
  7763                           ; BSR set to: 0
  7764  001662  0E5D               	movlw	93
  7765  001664  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7766  001666  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7767  001668  A4D8               	btfss	status,2,c
  7768  00166A  D002               	goto	l313
  7769  00166C                     u8610:
  7770                           
  7771                           ; BSR set to: 0
  7772  00166C  0E58               	movlw	88
  7773  00166E  D036               	goto	L22
  7774  001670                     l313:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;TabelasUmidade.h: 16: else
  7778                           ;TabelasUmidade.h: 17: if (_tmp == 94) _umd = 89;
  7779                           
  7780                           ; BSR set to: 0
  7781  001670  0E5E               	movlw	94
  7782  001672  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7783  001674  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7784  001676  A4D8               	btfss	status,2,c
  7785  001678  D002               	goto	l315
  7786  00167A                     u8620:
  7787                           
  7788                           ; BSR set to: 0
  7789  00167A  0E59               	movlw	89
  7790  00167C  D02F               	goto	L22
  7791  00167E                     l315:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;TabelasUmidade.h: 18: else
  7795                           ;TabelasUmidade.h: 19: if (_tmp == 95) _umd = 90;
  7796                           
  7797                           ; BSR set to: 0
  7798  00167E  0E5F               	movlw	95
  7799  001680  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7800  001682  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7801  001684  A4D8               	btfss	status,2,c
  7802  001686  D002               	goto	l317
  7803  001688                     u8630:
  7804                           
  7805                           ; BSR set to: 0
  7806  001688  0E5A               	movlw	90
  7807  00168A  D028               	goto	L22
  7808  00168C                     l317:
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;TabelasUmidade.h: 20: else
  7812                           ;TabelasUmidade.h: 21: if (_tmp == 96) _umd = 91;
  7813                           
  7814                           ; BSR set to: 0
  7815  00168C  0E60               	movlw	96
  7816  00168E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7817  001690  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7818  001692  A4D8               	btfss	status,2,c
  7819  001694  D002               	goto	l319
  7820  001696                     u8640:
  7821                           
  7822                           ; BSR set to: 0
  7823  001696  0E5B               	movlw	91
  7824  001698  D021               	goto	L22
  7825  00169A                     l319:
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;TabelasUmidade.h: 22: else
  7829                           ;TabelasUmidade.h: 23: if (_tmp == 97) _umd = 92;
  7830                           
  7831                           ; BSR set to: 0
  7832  00169A  0E61               	movlw	97
  7833  00169C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7834  00169E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7835  0016A0  A4D8               	btfss	status,2,c
  7836  0016A2  D002               	goto	l321
  7837  0016A4                     u8650:
  7838                           
  7839                           ; BSR set to: 0
  7840  0016A4  0E5C               	movlw	92
  7841  0016A6  D01A               	goto	L22
  7842  0016A8                     l321:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;TabelasUmidade.h: 24: else
  7846                           ;TabelasUmidade.h: 25: if (_tmp == 98) _umd = 93;
  7847                           
  7848                           ; BSR set to: 0
  7849  0016A8  0E62               	movlw	98
  7850  0016AA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7851  0016AC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7852  0016AE  A4D8               	btfss	status,2,c
  7853  0016B0  D002               	goto	l323
  7854  0016B2                     u8660:
  7855                           
  7856                           ; BSR set to: 0
  7857  0016B2  0E5D               	movlw	93
  7858  0016B4  D013               	goto	L22
  7859  0016B6                     l323:
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;TabelasUmidade.h: 26: else
  7863                           ;TabelasUmidade.h: 27: if (_tmp == 99) _umd = 94;
  7864                           
  7865                           ; BSR set to: 0
  7866  0016B6  0E63               	movlw	99
  7867  0016B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7868  0016BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7869  0016BC  A4D8               	btfss	status,2,c
  7870  0016BE  D002               	goto	l325
  7871  0016C0                     u8670:
  7872                           
  7873                           ; BSR set to: 0
  7874  0016C0  0E5E               	movlw	94
  7875  0016C2  D00C               	goto	L22
  7876  0016C4                     l325:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;TabelasUmidade.h: 28: else
  7880                           ;TabelasUmidade.h: 29: if (_tmp == 100)_umd = 95;
  7881                           
  7882                           ; BSR set to: 0
  7883  0016C4  0E64               	movlw	100
  7884  0016C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7885  0016C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7886  0016CA  B4D8               	btfsc	status,2,c
  7887  0016CC  EFA6  F00F         	goto	u10430
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;TabelasUmidade.h: 30: else
  7891                           ;TabelasUmidade.h: 31: if (_tmp == 101)_umd = 94;
  7892                           
  7893                           ; BSR set to: 0
  7894                           
  7895                           ; BSR set to: 0
  7896  0016D0  0E65               	movlw	101
  7897  0016D2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7898  0016D4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7899  0016D6  A4D8               	btfss	status,2,c
  7900  0016D8  D004               	goto	l329
  7901  0016DA  D7F2               	goto	u8670
  7902  0016DC                     L22:
  7903  0016DC  6F67               	movwf	tabelaUmidade@_umd& (0+255),b
  7904  0016DE  EFF7  F012         	goto	l638
  7905  0016E2                     l329:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;TabelasUmidade.h: 32: else
  7909                           ;TabelasUmidade.h: 33: if (_tmp >= 102 && _tmp <= 107) _umd = 94;
  7910                           
  7911                           ; BSR set to: 0
  7912  0016E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7913  0016E4  D00E               	goto	l331
  7914  0016E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7915  0016E8  E104               	bnz	u8700
  7916  0016EA  0E66               	movlw	102
  7917  0016EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7918  0016EE  A0D8               	btfss	status,0,c
  7919  0016F0  D008               	goto	l331
  7920  0016F2                     u8700:
  7921                           
  7922                           ; BSR set to: 0
  7923  0016F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7924  0016F4  D7E5               	goto	u8670
  7925  0016F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7926  0016F8  E104               	bnz	l6786
  7927  0016FA  0E6C               	movlw	108
  7928  0016FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7929  0016FE  A0D8               	btfss	status,0,c
  7930  001700  D7DF               	goto	u8670
  7931  001702                     l331:
  7932  001702                     l6786:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;TabelasUmidade.h: 34: else
  7936                           ;TabelasUmidade.h: 35: if (_tmp >= 108 && _tmp <= 118) _umd = 95;
  7937  001702  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7938  001704  D010               	goto	l333
  7939  001706  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7940  001708  E104               	bnz	u8720
  7941  00170A  0E6C               	movlw	108
  7942  00170C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7943  00170E  A0D8               	btfss	status,0,c
  7944  001710  D00A               	goto	l333
  7945  001712                     u8720:
  7946                           
  7947                           ; BSR set to: 0
  7948  001712  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  7949  001714  EFA6  F00F         	goto	u10430
  7950  001718  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7951  00171A  E105               	bnz	l6792
  7952  00171C  0E77               	movlw	119
  7953  00171E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  7954  001720  A0D8               	btfss	status,0,c
  7955  001722  EFA6  F00F         	goto	u10430
  7956  001726                     l333:
  7957  001726                     l6792:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;TabelasUmidade.h: 36: else
  7961                           ;TabelasUmidade.h: 37: if (_tmp == 119 | _tmp == 120) _umd = 96;
  7962  001726  0E77               	movlw	119
  7963  001728  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7964  00172A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7965  00172C  B4D8               	btfsc	status,2,c
  7966  00172E  EF99  F00F         	goto	u10410
  7967                           
  7968                           ; BSR set to: 0
  7969  001732  0E78               	movlw	120
  7970  001734  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7971  001736  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7972  001738  B4D8               	btfsc	status,2,c
  7973                           
  7974                           ; BSR set to: 0
  7975  00173A  D3FB               	goto	u10410
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;TabelasUmidade.h: 38: else
  7979                           ;TabelasUmidade.h: 39: if (_tmp == 121 | _tmp == 122) _umd = 97;
  7980                           
  7981                           ; BSR set to: 0
  7982                           
  7983                           ; BSR set to: 0
  7984  00173C  0E79               	movlw	121
  7985  00173E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7986  001740  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7987  001742  B4D8               	btfsc	status,2,c
  7988  001744  D3EE               	goto	u10400
  7989                           
  7990                           ; BSR set to: 0
  7991  001746  0E7A               	movlw	122
  7992  001748  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  7993  00174A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  7994  00174C  B4D8               	btfsc	status,2,c
  7995                           
  7996                           ; BSR set to: 0
  7997  00174E  D3E9               	goto	u10400
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;TabelasUmidade.h: 40: else
  8001                           ;TabelasUmidade.h: 41: if (_tmp == 123 | _tmp == 124) _umd = 98;
  8002                           
  8003                           ; BSR set to: 0
  8004                           
  8005                           ; BSR set to: 0
  8006  001750  0E7B               	movlw	123
  8007  001752  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8008  001754  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8009  001756  B4D8               	btfsc	status,2,c
  8010  001758  EF32  F011         	goto	u11040
  8011                           
  8012                           ; BSR set to: 0
  8013  00175C  0E7C               	movlw	124
  8014  00175E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8015  001760  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8016  001762  B4D8               	btfsc	status,2,c
  8017                           
  8018                           ; BSR set to: 0
  8019  001764  EF32  F011         	goto	u11040
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;TabelasUmidade.h: 42: else
  8023                           ;TabelasUmidade.h: 43: if (_tmp == 125 | _tmp == 126) _umd = 99;
  8024                           
  8025                           ; BSR set to: 0
  8026                           
  8027                           ; BSR set to: 0
  8028  001768  0E7D               	movlw	125
  8029  00176A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8030  00176C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8031  00176E  B4D8               	btfsc	status,2,c
  8032  001770  EF1F  F011         	goto	u11020
  8033                           
  8034                           ; BSR set to: 0
  8035  001774  0E7E               	movlw	126
  8036  001776  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8037  001778  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8038  00177A  B4D8               	btfsc	status,2,c
  8039                           
  8040                           ; BSR set to: 0
  8041  00177C  EF1F  F011         	goto	u11020
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;TabelasUmidade.h: 44: else
  8045                           ;TabelasUmidade.h: 45: if (_tmp == 127 | _tmp == 128) _umd = 100;
  8046                           
  8047                           ; BSR set to: 0
  8048                           
  8049                           ; BSR set to: 0
  8050  001780  0E7F               	movlw	127
  8051  001782  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8052  001784  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8053  001786  B4D8               	btfsc	status,2,c
  8054  001788  EF17  F011         	goto	u11010
  8055                           
  8056                           ; BSR set to: 0
  8057  00178C  0E80               	movlw	128
  8058  00178E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8059  001790  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8060  001792  B4D8               	btfsc	status,2,c
  8061                           
  8062                           ; BSR set to: 0
  8063  001794  EF17  F011         	goto	u11010
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;TabelasUmidade.h: 46: else
  8067                           ;TabelasUmidade.h: 47: if (_tmp == 129 | _tmp == 130) _umd = 101;
  8068                           
  8069                           ; BSR set to: 0
  8070                           
  8071                           ; BSR set to: 0
  8072  001798  0E81               	movlw	129
  8073  00179A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8074  00179C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8075  00179E  B4D8               	btfsc	status,2,c
  8076  0017A0  D1BB               	goto	u9570
  8077                           
  8078                           ; BSR set to: 0
  8079  0017A2  0E82               	movlw	130
  8080  0017A4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8081  0017A6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8082  0017A8  B4D8               	btfsc	status,2,c
  8083                           
  8084                           ; BSR set to: 0
  8085  0017AA  D1B6               	goto	u9570
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;TabelasUmidade.h: 48: else
  8089                           ;TabelasUmidade.h: 49: if (_tmp == 131 | _tmp == 132) _umd = 102;
  8090                           
  8091                           ; BSR set to: 0
  8092                           
  8093                           ; BSR set to: 0
  8094  0017AC  0E83               	movlw	131
  8095  0017AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8096  0017B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8097  0017B2  B4D8               	btfsc	status,2,c
  8098  0017B4  D1BD               	goto	u9590
  8099                           
  8100                           ; BSR set to: 0
  8101  0017B6  0E84               	movlw	132
  8102  0017B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8103  0017BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8104  0017BC  B4D8               	btfsc	status,2,c
  8105                           
  8106                           ; BSR set to: 0
  8107  0017BE  D1B8               	goto	u9590
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;TabelasUmidade.h: 50: else
  8111                           ;TabelasUmidade.h: 51: if (_tmp == 133 | _tmp == 134) _umd = 103;
  8112                           
  8113                           ; BSR set to: 0
  8114                           
  8115                           ; BSR set to: 0
  8116  0017C0  0E85               	movlw	133
  8117  0017C2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8118  0017C4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8119  0017C6  B4D8               	btfsc	status,2,c
  8120  0017C8  D1BF               	goto	u9610
  8121                           
  8122                           ; BSR set to: 0
  8123  0017CA  0E86               	movlw	134
  8124  0017CC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8125  0017CE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8126  0017D0  B4D8               	btfsc	status,2,c
  8127                           
  8128                           ; BSR set to: 0
  8129  0017D2  D1BA               	goto	u9610
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;TabelasUmidade.h: 52: else
  8133                           ;TabelasUmidade.h: 53: if (_tmp >= 135 && _tmp <= 146) _umd = 104;
  8134                           
  8135                           ; BSR set to: 0
  8136                           
  8137                           ; BSR set to: 0
  8138  0017D4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8139  0017D6  D00E               	goto	l367
  8140  0017D8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8141  0017DA  E104               	bnz	u8900
  8142  0017DC  0E87               	movlw	135
  8143  0017DE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8144  0017E0  A0D8               	btfss	status,0,c
  8145  0017E2  D008               	goto	l367
  8146  0017E4                     u8900:
  8147                           
  8148                           ; BSR set to: 0
  8149  0017E4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8150  0017E6  D0ED               	goto	u9290
  8151  0017E8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8152  0017EA  E104               	bnz	l6846
  8153  0017EC  0E93               	movlw	147
  8154  0017EE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8155  0017F0  A0D8               	btfss	status,0,c
  8156  0017F2  D0E7               	goto	u9290
  8157  0017F4                     l367:
  8158  0017F4                     l6846:
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;TabelasUmidade.h: 54: else
  8162                           ;TabelasUmidade.h: 55: if (_tmp >= 147 && _tmp <= 150) _umd = 105;
  8163  0017F4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8164  0017F6  D00E               	goto	l369
  8165  0017F8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8166  0017FA  E104               	bnz	u8920
  8167  0017FC  0E93               	movlw	147
  8168  0017FE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8169  001800  A0D8               	btfss	status,0,c
  8170  001802  D008               	goto	l369
  8171  001804                     u8920:
  8172                           
  8173                           ; BSR set to: 0
  8174  001804  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8175  001806  D1B2               	goto	u9630
  8176  001808  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8177  00180A  E104               	bnz	l6852
  8178  00180C  0E97               	movlw	151
  8179  00180E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8180  001810  A0D8               	btfss	status,0,c
  8181  001812  D1AC               	goto	u9630
  8182  001814                     l369:
  8183  001814                     l6852:
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;TabelasUmidade.h: 56: else
  8187                           ;TabelasUmidade.h: 57: if (_tmp == 151 | _tmp == 152) _umd = 106;
  8188  001814  0E97               	movlw	151
  8189  001816  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8190  001818  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8191  00181A  B4D8               	btfsc	status,2,c
  8192  00181C  D1B3               	goto	u9650
  8193                           
  8194                           ; BSR set to: 0
  8195  00181E  0E98               	movlw	152
  8196  001820  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8197  001822  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8198  001824  B4D8               	btfsc	status,2,c
  8199                           
  8200                           ; BSR set to: 0
  8201  001826  D1AE               	goto	u9650
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;TabelasUmidade.h: 58: else
  8205                           ;TabelasUmidade.h: 59: if (_tmp == 153) _umd = 107;
  8206                           
  8207                           ; BSR set to: 0
  8208                           
  8209                           ; BSR set to: 0
  8210  001828  0E99               	movlw	153
  8211  00182A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8212  00182C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8213  00182E  B4D8               	btfsc	status,2,c
  8214  001830  D1B5               	goto	u9670
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;TabelasUmidade.h: 60: else
  8218                           ;TabelasUmidade.h: 61: if (_tmp == 154 | _tmp == 155) _umd = 108;
  8219                           
  8220                           ; BSR set to: 0
  8221                           
  8222                           ; BSR set to: 0
  8223  001832  0E9A               	movlw	154
  8224  001834  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8225  001836  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8226  001838  B4D8               	btfsc	status,2,c
  8227  00183A  D1C2               	goto	u9690
  8228                           
  8229                           ; BSR set to: 0
  8230  00183C  0E9B               	movlw	155
  8231  00183E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8232  001840  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8233  001842  B4D8               	btfsc	status,2,c
  8234                           
  8235                           ; BSR set to: 0
  8236  001844  D1BD               	goto	u9690
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;TabelasUmidade.h: 62: else
  8240                           ;TabelasUmidade.h: 63: if (_tmp == 156 | _tmp == 157) _umd = 109;
  8241                           
  8242                           ; BSR set to: 0
  8243                           
  8244                           ; BSR set to: 0
  8245  001846  0E9C               	movlw	156
  8246  001848  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8247  00184A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8248  00184C  B4D8               	btfsc	status,2,c
  8249  00184E  D1C4               	goto	u9710
  8250                           
  8251                           ; BSR set to: 0
  8252  001850  0E9D               	movlw	157
  8253  001852  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8254  001854  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8255  001856  B4D8               	btfsc	status,2,c
  8256                           
  8257                           ; BSR set to: 0
  8258  001858  D1BF               	goto	u9710
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;TabelasUmidade.h: 64: else
  8262                           ;TabelasUmidade.h: 65: if (_tmp == 158 | _tmp == 159) _umd = 110;
  8263                           
  8264                           ; BSR set to: 0
  8265                           
  8266                           ; BSR set to: 0
  8267  00185A  0E9E               	movlw	158
  8268  00185C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8269  00185E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8270  001860  B4D8               	btfsc	status,2,c
  8271  001862  D0E4               	goto	u9380
  8272                           
  8273                           ; BSR set to: 0
  8274  001864  0E9F               	movlw	159
  8275  001866  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8276  001868  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8277  00186A  B4D8               	btfsc	status,2,c
  8278                           
  8279                           ; BSR set to: 0
  8280  00186C  D0DF               	goto	u9380
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;TabelasUmidade.h: 66: else
  8284                           ;TabelasUmidade.h: 67: if (_tmp >= 160) _umd = 112;
  8285                           
  8286                           ; BSR set to: 0
  8287                           
  8288                           ; BSR set to: 0
  8289  00186E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8290  001870  EFF7  F012         	goto	l638
  8291  001874  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8292  001876  E101               	bnz	u9030
  8293  001878  D0E0               	goto	L23
  8294  00187A                     u9030:
  8295  00187A  D1C6               	goto	u9750
  8296  00187C                     
  8297                           ; BSR set to: 0
  8298                           ;TabelasUmidade.h: 71: if (_tmp <= 90) _umd = 88;
  8299                           
  8300                           ; BSR set to: 0
  8301  00187C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8302  00187E  D6F6               	goto	u8610
  8303  001880  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8304  001882  E104               	bnz	l6888
  8305  001884  0E5B               	movlw	91
  8306  001886  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8307  001888  A0D8               	btfss	status,0,c
  8308  00188A  D6F0               	goto	u8610
  8309  00188C                     l6888:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;TabelasUmidade.h: 72: else
  8313                           ;TabelasUmidade.h: 73: if (_tmp == 91) _umd = 89;
  8314  00188C  0E5B               	movlw	91
  8315  00188E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8316  001890  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8317  001892  B4D8               	btfsc	status,2,c
  8318  001894  D6F2               	goto	u8620
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;TabelasUmidade.h: 74: else
  8322                           ;TabelasUmidade.h: 75: if (_tmp == 92) _umd = 90;
  8323                           
  8324                           ; BSR set to: 0
  8325                           
  8326                           ; BSR set to: 0
  8327  001896  0E5C               	movlw	92
  8328  001898  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8329  00189A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8330  00189C  B4D8               	btfsc	status,2,c
  8331  00189E  D6F4               	goto	u8630
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;TabelasUmidade.h: 76: else
  8335                           ;TabelasUmidade.h: 77: if (_tmp == 93) _umd = 91;
  8336                           
  8337                           ; BSR set to: 0
  8338                           
  8339                           ; BSR set to: 0
  8340  0018A0  0E5D               	movlw	93
  8341  0018A2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8342  0018A4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8343  0018A6  B4D8               	btfsc	status,2,c
  8344  0018A8  D6F6               	goto	u8640
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;TabelasUmidade.h: 78: else
  8348                           ;TabelasUmidade.h: 79: if (_tmp == 94) _umd = 92;
  8349                           
  8350                           ; BSR set to: 0
  8351                           
  8352                           ; BSR set to: 0
  8353  0018AA  0E5E               	movlw	94
  8354  0018AC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8355  0018AE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8356  0018B0  B4D8               	btfsc	status,2,c
  8357  0018B2  D6F8               	goto	u8650
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;TabelasUmidade.h: 80: else
  8361                           ;TabelasUmidade.h: 81: if (_tmp == 95) _umd = 93;
  8362                           
  8363                           ; BSR set to: 0
  8364                           
  8365                           ; BSR set to: 0
  8366  0018B4  0E5F               	movlw	95
  8367  0018B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8368  0018B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8369  0018BA  B4D8               	btfsc	status,2,c
  8370  0018BC  D6FA               	goto	u8660
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;TabelasUmidade.h: 82: else
  8374                           ;TabelasUmidade.h: 83: if (_tmp == 96) _umd = 94;
  8375                           
  8376                           ; BSR set to: 0
  8377                           
  8378                           ; BSR set to: 0
  8379  0018BE  0E60               	movlw	96
  8380  0018C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8381  0018C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8382  0018C4  B4D8               	btfsc	status,2,c
  8383  0018C6  D6FC               	goto	u8670
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;TabelasUmidade.h: 84: else
  8387                           ;TabelasUmidade.h: 85: if (_tmp == 97) _umd = 95;
  8388                           
  8389                           ; BSR set to: 0
  8390                           
  8391                           ; BSR set to: 0
  8392  0018C8  0E61               	movlw	97
  8393  0018CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8394  0018CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8395  0018CE  B4D8               	btfsc	status,2,c
  8396  0018D0  D33D               	goto	u10430
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;TabelasUmidade.h: 86: else
  8400                           ;TabelasUmidade.h: 87: if (_tmp >= 98 && _tmp <= 100) _umd = 96;
  8401                           
  8402                           ; BSR set to: 0
  8403                           
  8404                           ; BSR set to: 0
  8405  0018D2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8406  0018D4  D00E               	goto	l408
  8407  0018D6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8408  0018D8  E104               	bnz	u9120
  8409  0018DA  0E62               	movlw	98
  8410  0018DC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8411  0018DE  A0D8               	btfss	status,0,c
  8412  0018E0  D008               	goto	l408
  8413  0018E2                     u9120:
  8414                           
  8415                           ; BSR set to: 0
  8416  0018E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8417  0018E4  D326               	goto	u10410
  8418  0018E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8419  0018E8  E104               	bnz	l6922
  8420  0018EA  0E65               	movlw	101
  8421  0018EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8422  0018EE  A0D8               	btfss	status,0,c
  8423  0018F0  D320               	goto	u10410
  8424  0018F2                     l408:
  8425  0018F2                     l6922:
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;TabelasUmidade.h: 88: else
  8429                           ;TabelasUmidade.h: 89: if (_tmp >= 101 && _tmp <= 119)_umd = 97;
  8430  0018F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8431  0018F4  D00E               	goto	l410
  8432  0018F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8433  0018F8  E104               	bnz	u9140
  8434  0018FA  0E65               	movlw	101
  8435  0018FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8436  0018FE  A0D8               	btfss	status,0,c
  8437  001900  D008               	goto	l410
  8438  001902                     u9140:
  8439                           
  8440                           ; BSR set to: 0
  8441  001902  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8442  001904  D30E               	goto	u10400
  8443  001906  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8444  001908  E104               	bnz	l6928
  8445  00190A  0E78               	movlw	120
  8446  00190C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8447  00190E  A0D8               	btfss	status,0,c
  8448  001910  D308               	goto	u10400
  8449  001912                     l410:
  8450  001912                     l6928:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;TabelasUmidade.h: 90: else
  8454                           ;TabelasUmidade.h: 91: if (_tmp >= 120 && _tmp <= 122)_umd = 98;
  8455  001912  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8456  001914  D010               	goto	l412
  8457  001916  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8458  001918  E104               	bnz	u9160
  8459  00191A  0E78               	movlw	120
  8460  00191C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8461  00191E  A0D8               	btfss	status,0,c
  8462  001920  D00A               	goto	l412
  8463  001922                     u9160:
  8464                           
  8465                           ; BSR set to: 0
  8466  001922  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8467  001924  EF32  F011         	goto	u11040
  8468  001928  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8469  00192A  E105               	bnz	l6934
  8470  00192C  0E7B               	movlw	123
  8471  00192E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8472  001930  A0D8               	btfss	status,0,c
  8473  001932  EF32  F011         	goto	u11040
  8474  001936                     l412:
  8475  001936                     l6934:
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;TabelasUmidade.h: 92: else
  8479                           ;TabelasUmidade.h: 93: if (_tmp == 123 | _tmp == 124) _umd = 99;
  8480  001936  0E7B               	movlw	123
  8481  001938  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8482  00193A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8483  00193C  B4D8               	btfsc	status,2,c
  8484  00193E  EF1F  F011         	goto	u11020
  8485                           
  8486                           ; BSR set to: 0
  8487  001942  0E7C               	movlw	124
  8488  001944  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8489  001946  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8490  001948  B4D8               	btfsc	status,2,c
  8491                           
  8492                           ; BSR set to: 0
  8493  00194A  EF1F  F011         	goto	u11020
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;TabelasUmidade.h: 94: else
  8497                           ;TabelasUmidade.h: 95: if (_tmp == 125 | _tmp == 126) _umd = 100;
  8498                           
  8499                           ; BSR set to: 0
  8500                           
  8501                           ; BSR set to: 0
  8502  00194E  0E7D               	movlw	125
  8503  001950  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8504  001952  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8505  001954  B4D8               	btfsc	status,2,c
  8506  001956  EF17  F011         	goto	u11010
  8507                           
  8508                           ; BSR set to: 0
  8509  00195A  0E7E               	movlw	126
  8510  00195C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8511  00195E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8512  001960  B4D8               	btfsc	status,2,c
  8513                           
  8514                           ; BSR set to: 0
  8515  001962  EF17  F011         	goto	u11010
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;TabelasUmidade.h: 96: else
  8519                           ;TabelasUmidade.h: 97: if (_tmp == 127 | _tmp == 128) _umd = 101;
  8520                           
  8521                           ; BSR set to: 0
  8522                           
  8523                           ; BSR set to: 0
  8524  001966  0E7F               	movlw	127
  8525  001968  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8526  00196A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8527  00196C  B4D8               	btfsc	status,2,c
  8528  00196E  D0D4               	goto	u9570
  8529                           
  8530                           ; BSR set to: 0
  8531  001970  0E80               	movlw	128
  8532  001972  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8533  001974  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8534  001976  B4D8               	btfsc	status,2,c
  8535                           
  8536                           ; BSR set to: 0
  8537  001978  D0CF               	goto	u9570
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;TabelasUmidade.h: 98: else
  8541                           ;TabelasUmidade.h: 99: if (_tmp == 129 | _tmp == 130) _umd = 102;
  8542                           
  8543                           ; BSR set to: 0
  8544                           
  8545                           ; BSR set to: 0
  8546  00197A  0E81               	movlw	129
  8547  00197C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8548  00197E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8549  001980  B4D8               	btfsc	status,2,c
  8550  001982  D0D6               	goto	u9590
  8551                           
  8552                           ; BSR set to: 0
  8553  001984  0E82               	movlw	130
  8554  001986  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8555  001988  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8556  00198A  B4D8               	btfsc	status,2,c
  8557                           
  8558                           ; BSR set to: 0
  8559  00198C  D0D1               	goto	u9590
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;TabelasUmidade.h: 100: else
  8563                           ;TabelasUmidade.h: 101: if (_tmp == 131 | _tmp == 132) _umd = 103;
  8564                           
  8565                           ; BSR set to: 0
  8566                           
  8567                           ; BSR set to: 0
  8568  00198E  0E83               	movlw	131
  8569  001990  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8570  001992  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8571  001994  B4D8               	btfsc	status,2,c
  8572  001996  D0D8               	goto	u9610
  8573                           
  8574                           ; BSR set to: 0
  8575  001998  0E84               	movlw	132
  8576  00199A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8577  00199C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8578  00199E  B4D8               	btfsc	status,2,c
  8579                           
  8580                           ; BSR set to: 0
  8581  0019A0  D0D3               	goto	u9610
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;TabelasUmidade.h: 102: else
  8585                           ;TabelasUmidade.h: 103: if (_tmp >= 133 && _tmp <= 148)_umd = 104;
  8586                           
  8587                           ; BSR set to: 0
  8588                           
  8589                           ; BSR set to: 0
  8590  0019A2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8591  0019A4  D010               	goto	l434
  8592  0019A6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8593  0019A8  E104               	bnz	u9280
  8594  0019AA  0E85               	movlw	133
  8595  0019AC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8596  0019AE  A0D8               	btfss	status,0,c
  8597  0019B0  D00A               	goto	l434
  8598  0019B2                     u9280:
  8599                           
  8600                           ; BSR set to: 0
  8601  0019B2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8602  0019B4  D006               	goto	u9290
  8603  0019B6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8604  0019B8  E106               	bnz	l6970
  8605  0019BA  0E95               	movlw	149
  8606  0019BC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8607  0019BE  B0D8               	btfsc	status,0,c
  8608  0019C0  D002               	goto	l434
  8609  0019C2                     u9290:
  8610                           
  8611                           ; BSR set to: 0
  8612  0019C2  0E68               	movlw	104
  8613  0019C4  D68B               	goto	L22
  8614  0019C6                     l434:
  8615  0019C6                     l6970:
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;TabelasUmidade.h: 104: else
  8619                           ;TabelasUmidade.h: 105: if (_tmp >= 149 && _tmp <= 152)_umd = 105;
  8620  0019C6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8621  0019C8  D00E               	goto	l436
  8622  0019CA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8623  0019CC  E104               	bnz	u9300
  8624  0019CE  0E95               	movlw	149
  8625  0019D0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8626  0019D2  A0D8               	btfss	status,0,c
  8627  0019D4  D008               	goto	l436
  8628  0019D6                     u9300:
  8629                           
  8630                           ; BSR set to: 0
  8631  0019D6  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8632  0019D8  D0C9               	goto	u9630
  8633  0019DA  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8634  0019DC  E104               	bnz	l6976
  8635  0019DE  0E99               	movlw	153
  8636  0019E0  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8637  0019E2  A0D8               	btfss	status,0,c
  8638  0019E4  D0C3               	goto	u9630
  8639  0019E6                     l436:
  8640  0019E6                     l6976:
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;TabelasUmidade.h: 106: else
  8644                           ;TabelasUmidade.h: 107: if (_tmp == 153) _umd = 106;
  8645  0019E6  0E99               	movlw	153
  8646  0019E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8647  0019EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8648  0019EC  B4D8               	btfsc	status,2,c
  8649  0019EE  D0CA               	goto	u9650
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;TabelasUmidade.h: 108: else
  8653                           ;TabelasUmidade.h: 109: if (_tmp == 154) _umd = 107;
  8654                           
  8655                           ; BSR set to: 0
  8656                           
  8657                           ; BSR set to: 0
  8658  0019F0  0E9A               	movlw	154
  8659  0019F2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8660  0019F4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8661  0019F6  B4D8               	btfsc	status,2,c
  8662  0019F8  D0D1               	goto	u9670
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;TabelasUmidade.h: 110: else
  8666                           ;TabelasUmidade.h: 111: if (_tmp == 155 | _tmp == 156) _umd = 108;
  8667                           
  8668                           ; BSR set to: 0
  8669                           
  8670                           ; BSR set to: 0
  8671  0019FA  0E9B               	movlw	155
  8672  0019FC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8673  0019FE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8674  001A00  B4D8               	btfsc	status,2,c
  8675  001A02  D0DE               	goto	u9690
  8676                           
  8677                           ; BSR set to: 0
  8678  001A04  0E9C               	movlw	156
  8679  001A06  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8680  001A08  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8681  001A0A  B4D8               	btfsc	status,2,c
  8682                           
  8683                           ; BSR set to: 0
  8684  001A0C  D0D9               	goto	u9690
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;TabelasUmidade.h: 112: else
  8688                           ;TabelasUmidade.h: 113: if (_tmp == 157 | _tmp == 158) _umd = 109;
  8689                           
  8690                           ; BSR set to: 0
  8691                           
  8692                           ; BSR set to: 0
  8693  001A0E  0E9D               	movlw	157
  8694  001A10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8695  001A12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8696  001A14  B4D8               	btfsc	status,2,c
  8697  001A16  D0E0               	goto	u9710
  8698                           
  8699                           ; BSR set to: 0
  8700  001A18  0E9E               	movlw	158
  8701  001A1A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8702  001A1C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8703  001A1E  B4D8               	btfsc	status,2,c
  8704                           
  8705                           ; BSR set to: 0
  8706  001A20  D0DB               	goto	u9710
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;TabelasUmidade.h: 114: else
  8710                           ;TabelasUmidade.h: 115: if (_tmp == 159) _umd = 110;
  8711                           
  8712                           ; BSR set to: 0
  8713                           
  8714                           ; BSR set to: 0
  8715  001A22  0E9F               	movlw	159
  8716  001A24  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8717  001A26  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8718  001A28  A4D8               	btfss	status,2,c
  8719  001A2A  D002               	goto	l450
  8720  001A2C                     u9380:
  8721                           
  8722                           ; BSR set to: 0
  8723  001A2C  0E6E               	movlw	110
  8724  001A2E  D656               	goto	L22
  8725  001A30                     l450:
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;TabelasUmidade.h: 116: else
  8729                           ;TabelasUmidade.h: 117: if (_tmp >= 160) _umd = 112;
  8730                           
  8731                           ; BSR set to: 0
  8732  001A30  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8733  001A32  EFF7  F012         	goto	l638
  8734  001A36  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8735  001A38  E105               	bnz	u9390
  8736  001A3A                     L23:
  8737  001A3A  0EA0               	movlw	160
  8738  001A3C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8739  001A3E  A0D8               	btfss	status,0,c
  8740  001A40  EFF7  F012         	goto	l638
  8741  001A44                     u9390:
  8742  001A44  D0E1               	goto	u9750
  8743  001A46                     
  8744                           ; BSR set to: 0
  8745                           ;TabelasUmidade.h: 121: if (_tmp <= 90) _umd = 90;
  8746                           
  8747                           ; BSR set to: 0
  8748  001A46  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8749  001A48  D61F               	goto	u8630
  8750  001A4A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8751  001A4C  E104               	bnz	l7008
  8752  001A4E  0E5B               	movlw	91
  8753  001A50  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8754  001A52  A0D8               	btfss	status,0,c
  8755  001A54  D619               	goto	u8630
  8756  001A56                     l7008:
  8757                           
  8758                           ; BSR set to: 0
  8759                           ;TabelasUmidade.h: 122: else
  8760                           ;TabelasUmidade.h: 123: if (_tmp == 91) _umd = 91;
  8761  001A56  0E5B               	movlw	91
  8762  001A58  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8763  001A5A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8764  001A5C  B4D8               	btfsc	status,2,c
  8765  001A5E  D61B               	goto	u8640
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;TabelasUmidade.h: 124: else
  8769                           ;TabelasUmidade.h: 125: if (_tmp == 92) _umd = 92;
  8770                           
  8771                           ; BSR set to: 0
  8772                           
  8773                           ; BSR set to: 0
  8774  001A60  0E5C               	movlw	92
  8775  001A62  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8776  001A64  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8777  001A66  B4D8               	btfsc	status,2,c
  8778  001A68  D61D               	goto	u8650
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;TabelasUmidade.h: 126: else
  8782                           ;TabelasUmidade.h: 127: if (_tmp == 93) _umd = 93;
  8783                           
  8784                           ; BSR set to: 0
  8785                           
  8786                           ; BSR set to: 0
  8787  001A6A  0E5D               	movlw	93
  8788  001A6C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8789  001A6E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8790  001A70  B4D8               	btfsc	status,2,c
  8791  001A72  D61F               	goto	u8660
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;TabelasUmidade.h: 128: else
  8795                           ;TabelasUmidade.h: 129: if (_tmp == 94) _umd = 94;
  8796                           
  8797                           ; BSR set to: 0
  8798                           
  8799                           ; BSR set to: 0
  8800  001A74  0E5E               	movlw	94
  8801  001A76  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8802  001A78  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8803  001A7A  B4D8               	btfsc	status,2,c
  8804  001A7C  D621               	goto	u8670
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;TabelasUmidade.h: 130: else
  8808                           ;TabelasUmidade.h: 131: if (_tmp == 95) _umd = 95;
  8809                           
  8810                           ; BSR set to: 0
  8811                           
  8812                           ; BSR set to: 0
  8813  001A7E  0E5F               	movlw	95
  8814  001A80  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8815  001A82  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8816  001A84  B4D8               	btfsc	status,2,c
  8817  001A86  D262               	goto	u10430
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;TabelasUmidade.h: 132: else
  8821                           ;TabelasUmidade.h: 133: if (_tmp == 96) _umd = 95;
  8822                           
  8823                           ; BSR set to: 0
  8824                           
  8825                           ; BSR set to: 0
  8826  001A88  0E60               	movlw	96
  8827  001A8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8828  001A8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8829  001A8E  B4D8               	btfsc	status,2,c
  8830  001A90  D25D               	goto	u10430
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;TabelasUmidade.h: 134: else
  8834                           ;TabelasUmidade.h: 135: if (_tmp == 97) _umd = 96;
  8835                           
  8836                           ; BSR set to: 0
  8837                           
  8838                           ; BSR set to: 0
  8839  001A92  0E61               	movlw	97
  8840  001A94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8841  001A96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8842  001A98  B4D8               	btfsc	status,2,c
  8843  001A9A  D24B               	goto	u10410
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;TabelasUmidade.h: 136: else
  8847                           ;TabelasUmidade.h: 137: if (_tmp == 98) _umd = 96;
  8848                           
  8849                           ; BSR set to: 0
  8850                           
  8851                           ; BSR set to: 0
  8852  001A9C  0E62               	movlw	98
  8853  001A9E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8854  001AA0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8855  001AA2  B4D8               	btfsc	status,2,c
  8856  001AA4  D246               	goto	u10410
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;TabelasUmidade.h: 138: else
  8860                           ;TabelasUmidade.h: 139: if (_tmp == 99) _umd = 97;
  8861                           
  8862                           ; BSR set to: 0
  8863                           
  8864                           ; BSR set to: 0
  8865  001AA6  0E63               	movlw	99
  8866  001AA8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8867  001AAA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8868  001AAC  B4D8               	btfsc	status,2,c
  8869  001AAE  D239               	goto	u10400
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;TabelasUmidade.h: 140: else
  8873                           ;TabelasUmidade.h: 141: if (_tmp >= 100 && _tmp <= 103) _umd = 98;
  8874                           
  8875                           ; BSR set to: 0
  8876                           
  8877                           ; BSR set to: 0
  8878  001AB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8879  001AB2  D00E               	goto	l474
  8880  001AB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8881  001AB6  E104               	bnz	u9500
  8882  001AB8  0E64               	movlw	100
  8883  001ABA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8884  001ABC  A0D8               	btfss	status,0,c
  8885  001ABE  D008               	goto	l474
  8886  001AC0                     u9500:
  8887                           
  8888                           ; BSR set to: 0
  8889  001AC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8890  001AC2  D3D0               	goto	u11040
  8891  001AC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8892  001AC6  E104               	bnz	l7050
  8893  001AC8  0E68               	movlw	104
  8894  001ACA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8895  001ACC  A0D8               	btfss	status,0,c
  8896  001ACE  D3CA               	goto	u11040
  8897  001AD0                     l474:
  8898  001AD0                     l7050:
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;TabelasUmidade.h: 142: else
  8902                           ;TabelasUmidade.h: 143: if (_tmp == 104 | _tmp == 105) _umd = 99;
  8903  001AD0  0E68               	movlw	104
  8904  001AD2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8905  001AD4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8906  001AD6  B4D8               	btfsc	status,2,c
  8907  001AD8  D3B2               	goto	u11020
  8908                           
  8909                           ; BSR set to: 0
  8910  001ADA  0E69               	movlw	105
  8911  001ADC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8912  001ADE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8913  001AE0  B4D8               	btfsc	status,2,c
  8914                           
  8915                           ; BSR set to: 0
  8916  001AE2  D3AD               	goto	u11020
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;TabelasUmidade.h: 144: else
  8920                           ;TabelasUmidade.h: 145: if (_tmp >= 106 && _tmp <= 122) _umd = 100;
  8921                           
  8922                           ; BSR set to: 0
  8923                           
  8924                           ; BSR set to: 0
  8925  001AE4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8926  001AE6  D00E               	goto	l480
  8927  001AE8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8928  001AEA  E104               	bnz	u9540
  8929  001AEC  0E6A               	movlw	106
  8930  001AEE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8931  001AF0  A0D8               	btfss	status,0,c
  8932  001AF2  D008               	goto	l480
  8933  001AF4                     u9540:
  8934                           
  8935                           ; BSR set to: 0
  8936  001AF4  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  8937  001AF6  D39B               	goto	u11010
  8938  001AF8  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8939  001AFA  E104               	bnz	l7062
  8940  001AFC  0E7B               	movlw	123
  8941  001AFE  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  8942  001B00  A0D8               	btfss	status,0,c
  8943  001B02  D395               	goto	u11010
  8944  001B04                     l480:
  8945  001B04                     l7062:
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;TabelasUmidade.h: 146: else
  8949                           ;TabelasUmidade.h: 147: if (_tmp == 123 | _tmp == 124) _umd = 101;
  8950  001B04  0E7B               	movlw	123
  8951  001B06  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8952  001B08  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8953  001B0A  B4D8               	btfsc	status,2,c
  8954  001B0C  D005               	goto	u9570
  8955                           
  8956                           ; BSR set to: 0
  8957  001B0E  0E7C               	movlw	124
  8958  001B10  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8959  001B12  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8960  001B14  A4D8               	btfss	status,2,c
  8961  001B16  D002               	goto	l482
  8962  001B18                     u9570:
  8963                           
  8964                           ; BSR set to: 0
  8965                           
  8966                           ; BSR set to: 0
  8967  001B18  0E65               	movlw	101
  8968  001B1A  D5E0               	goto	L22
  8969  001B1C                     l482:
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;TabelasUmidade.h: 148: else
  8973                           ;TabelasUmidade.h: 149: if (_tmp == 125 | _tmp == 126) _umd = 102;
  8974                           
  8975                           ; BSR set to: 0
  8976  001B1C  0E7D               	movlw	125
  8977  001B1E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8978  001B20  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8979  001B22  B4D8               	btfsc	status,2,c
  8980  001B24  D005               	goto	u9590
  8981                           
  8982                           ; BSR set to: 0
  8983  001B26  0E7E               	movlw	126
  8984  001B28  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  8985  001B2A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  8986  001B2C  A4D8               	btfss	status,2,c
  8987  001B2E  D002               	goto	l486
  8988  001B30                     u9590:
  8989                           
  8990                           ; BSR set to: 0
  8991                           
  8992                           ; BSR set to: 0
  8993  001B30  0E66               	movlw	102
  8994  001B32  D5D4               	goto	L22
  8995  001B34                     l486:
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;TabelasUmidade.h: 150: else
  8999                           ;TabelasUmidade.h: 151: if (_tmp == 127 | _tmp == 128) _umd = 103;
  9000                           
  9001                           ; BSR set to: 0
  9002  001B34  0E7F               	movlw	127
  9003  001B36  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9004  001B38  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9005  001B3A  B4D8               	btfsc	status,2,c
  9006  001B3C  D005               	goto	u9610
  9007                           
  9008                           ; BSR set to: 0
  9009  001B3E  0E80               	movlw	128
  9010  001B40  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9011  001B42  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9012  001B44  A4D8               	btfss	status,2,c
  9013  001B46  D002               	goto	l490
  9014  001B48                     u9610:
  9015                           
  9016                           ; BSR set to: 0
  9017                           
  9018                           ; BSR set to: 0
  9019  001B48  0E67               	movlw	103
  9020  001B4A  D5C8               	goto	L22
  9021  001B4C                     l490:
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;TabelasUmidade.h: 152: else
  9025                           ;TabelasUmidade.h: 153: if (_tmp >= 129 && _tmp <= 138) _umd = 105;
  9026                           
  9027                           ; BSR set to: 0
  9028  001B4C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9029  001B4E  D010               	goto	l494
  9030  001B50  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9031  001B52  E104               	bnz	u9620
  9032  001B54  0E81               	movlw	129
  9033  001B56  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9034  001B58  A0D8               	btfss	status,0,c
  9035  001B5A  D00A               	goto	l494
  9036  001B5C                     u9620:
  9037                           
  9038                           ; BSR set to: 0
  9039  001B5C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9040  001B5E  D006               	goto	u9630
  9041  001B60  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9042  001B62  E106               	bnz	l7086
  9043  001B64  0E8B               	movlw	139
  9044  001B66  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9045  001B68  B0D8               	btfsc	status,0,c
  9046  001B6A  D002               	goto	l494
  9047  001B6C                     u9630:
  9048                           
  9049                           ; BSR set to: 0
  9050  001B6C  0E69               	movlw	105
  9051  001B6E  D5B6               	goto	L22
  9052  001B70                     l494:
  9053  001B70                     l7086:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;TabelasUmidade.h: 154: else
  9057                           ;TabelasUmidade.h: 155: if (_tmp == 139 | _tmp == 140) _umd = 106;
  9058  001B70  0E8B               	movlw	139
  9059  001B72  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9060  001B74  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9061  001B76  B4D8               	btfsc	status,2,c
  9062  001B78  D005               	goto	u9650
  9063                           
  9064                           ; BSR set to: 0
  9065  001B7A  0E8C               	movlw	140
  9066  001B7C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9067  001B7E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9068  001B80  A4D8               	btfss	status,2,c
  9069  001B82  D002               	goto	l496
  9070  001B84                     u9650:
  9071                           
  9072                           ; BSR set to: 0
  9073                           
  9074                           ; BSR set to: 0
  9075  001B84  0E6A               	movlw	106
  9076  001B86  D5AA               	goto	L22
  9077  001B88                     l496:
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;TabelasUmidade.h: 156: else
  9081                           ;TabelasUmidade.h: 157: if (_tmp == 141 | _tmp == 146) _umd = 107;
  9082                           
  9083                           ; BSR set to: 0
  9084  001B88  0E8D               	movlw	141
  9085  001B8A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9086  001B8C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9087  001B8E  B4D8               	btfsc	status,2,c
  9088  001B90  D005               	goto	u9670
  9089                           
  9090                           ; BSR set to: 0
  9091  001B92  0E92               	movlw	146
  9092  001B94  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9093  001B96  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9094  001B98  A4D8               	btfss	status,2,c
  9095  001B9A  D002               	goto	l500
  9096  001B9C                     u9670:
  9097                           
  9098                           ; BSR set to: 0
  9099                           
  9100                           ; BSR set to: 0
  9101  001B9C  0E6B               	movlw	107
  9102  001B9E  D59E               	goto	L22
  9103  001BA0                     l500:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;TabelasUmidade.h: 158: else
  9107                           ;TabelasUmidade.h: 159: if (_tmp >= 147 && _tmp <= 151) _umd = 108;
  9108                           
  9109                           ; BSR set to: 0
  9110  001BA0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9111  001BA2  D010               	goto	l504
  9112  001BA4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9113  001BA6  E104               	bnz	u9680
  9114  001BA8  0E93               	movlw	147
  9115  001BAA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9116  001BAC  A0D8               	btfss	status,0,c
  9117  001BAE  D00A               	goto	l504
  9118  001BB0                     u9680:
  9119                           
  9120                           ; BSR set to: 0
  9121  001BB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9122  001BB2  D006               	goto	u9690
  9123  001BB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9124  001BB6  E106               	bnz	l7104
  9125  001BB8  0E98               	movlw	152
  9126  001BBA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9127  001BBC  B0D8               	btfsc	status,0,c
  9128  001BBE  D002               	goto	l504
  9129  001BC0                     u9690:
  9130                           
  9131                           ; BSR set to: 0
  9132  001BC0  0E6C               	movlw	108
  9133  001BC2  D58C               	goto	L22
  9134  001BC4                     l504:
  9135  001BC4                     l7104:
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;TabelasUmidade.h: 160: else
  9139                           ;TabelasUmidade.h: 161: if (_tmp == 153 | _tmp == 152) _umd = 109;
  9140  001BC4  0E99               	movlw	153
  9141  001BC6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9142  001BC8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9143  001BCA  B4D8               	btfsc	status,2,c
  9144  001BCC  D005               	goto	u9710
  9145                           
  9146                           ; BSR set to: 0
  9147  001BCE  0E98               	movlw	152
  9148  001BD0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9149  001BD2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9150  001BD4  A4D8               	btfss	status,2,c
  9151  001BD6  D002               	goto	l506
  9152  001BD8                     u9710:
  9153                           
  9154                           ; BSR set to: 0
  9155                           
  9156                           ; BSR set to: 0
  9157  001BD8  0E6D               	movlw	109
  9158  001BDA  D580               	goto	L22
  9159  001BDC                     l506:
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;TabelasUmidade.h: 162: else
  9163                           ;TabelasUmidade.h: 163: if (_tmp == 155 | _tmp == 154) _umd = 111;
  9164                           
  9165                           ; BSR set to: 0
  9166  001BDC  0E9B               	movlw	155
  9167  001BDE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9168  001BE0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9169  001BE2  B4D8               	btfsc	status,2,c
  9170  001BE4  D005               	goto	u9730
  9171                           
  9172                           ; BSR set to: 0
  9173  001BE6  0E9A               	movlw	154
  9174  001BE8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9175  001BEA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9176  001BEC  A4D8               	btfss	status,2,c
  9177  001BEE  D002               	goto	l510
  9178  001BF0                     u9730:
  9179                           
  9180                           ; BSR set to: 0
  9181                           
  9182                           ; BSR set to: 0
  9183  001BF0  0E6F               	movlw	111
  9184  001BF2  D574               	goto	L22
  9185  001BF4                     l510:
  9186                           
  9187                           ; BSR set to: 0
  9188                           ;TabelasUmidade.h: 164: else
  9189                           ;TabelasUmidade.h: 165: if (_tmp == 157 | _tmp == 156) _umd = 112;
  9190                           
  9191                           ; BSR set to: 0
  9192  001BF4  0E9D               	movlw	157
  9193  001BF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9194  001BF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9195  001BFA  B4D8               	btfsc	status,2,c
  9196  001BFC  D005               	goto	u9750
  9197                           
  9198                           ; BSR set to: 0
  9199  001BFE  0E9C               	movlw	156
  9200  001C00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9201  001C02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9202  001C04  A4D8               	btfss	status,2,c
  9203  001C06  D002               	goto	l514
  9204  001C08                     u9750:
  9205                           
  9206                           ; BSR set to: 0
  9207                           
  9208                           ; BSR set to: 0
  9209  001C08  0E70               	movlw	112
  9210  001C0A  D568               	goto	L22
  9211  001C0C                     l514:
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;TabelasUmidade.h: 166: else
  9215                           ;TabelasUmidade.h: 167: if (_tmp == 159 | _tmp == 158) _umd = 113;
  9216                           
  9217                           ; BSR set to: 0
  9218  001C0C  0E9F               	movlw	159
  9219  001C0E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9220  001C10  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9221  001C12  B4D8               	btfsc	status,2,c
  9222  001C14  D005               	goto	u9770
  9223                           
  9224                           ; BSR set to: 0
  9225  001C16  0E9E               	movlw	158
  9226  001C18  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9227  001C1A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9228  001C1C  A4D8               	btfss	status,2,c
  9229  001C1E  D002               	goto	l518
  9230  001C20                     u9770:
  9231                           
  9232                           ; BSR set to: 0
  9233                           
  9234                           ; BSR set to: 0
  9235  001C20  0E71               	movlw	113
  9236  001C22  D55C               	goto	L22
  9237  001C24                     l518:
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;TabelasUmidade.h: 168: else
  9241                           ;TabelasUmidade.h: 169: if (_tmp >= 160) _umd = 115;
  9242                           
  9243                           ; BSR set to: 0
  9244  001C24  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9245  001C26  EFF7  F012         	goto	l638
  9246  001C2A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9247  001C2C  E105               	bnz	u9780
  9248  001C2E  0EA0               	movlw	160
  9249  001C30  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9250  001C32  A0D8               	btfss	status,0,c
  9251  001C34  EFF7  F012         	goto	l638
  9252  001C38                     u9780:
  9253                           
  9254                           ; BSR set to: 0
  9255  001C38  0E73               	movlw	115
  9256  001C3A  D550               	goto	L22
  9257  001C3C                     l305:
  9258                           
  9259                           ; BSR set to: 0
  9260                           
  9261                           ; BSR set to: 0
  9262  001C3C  C062  F065         	movff	tabelaUmidade@_clima,??_tabelaUmidade
  9263  001C40  C063  F066         	movff	tabelaUmidade@_clima+1,??_tabelaUmidade+1
  9264                           
  9265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9266                           ; Switch size 1, requested type "space"
  9267                           ; Number of cases is 1, Range of values is 0 to 0
  9268                           ; switch strategies available:
  9269                           ; Name         Instructions Cycles
  9270                           ; simple_byte            4     3 (average)
  9271                           ;	Chosen strategy is simple_byte
  9272  001C44  5166               	movf	(??_tabelaUmidade+1)& (0+255),w,b
  9273  001C46  0A00               	xorlw	0	; case 0
  9274  001C48  A4D8               	btfss	status,2,c
  9275  001C4A  EFF7  F012         	goto	l638
  9276                           
  9277                           ; BSR set to: 0
  9278                           ; Switch size 1, requested type "space"
  9279                           ; Number of cases is 3, Range of values is 1 to 3
  9280                           ; switch strategies available:
  9281                           ; Name         Instructions Cycles
  9282                           ; simple_byte           10     6 (average)
  9283                           ;	Chosen strategy is simple_byte
  9284  001C4E  5165               	movf	??_tabelaUmidade& (0+255),w,b
  9285  001C50  0A01               	xorlw	1	; case 1
  9286  001C52  B4D8               	btfsc	status,2,c
  9287  001C54  D4EE               	goto	l306
  9288  001C56  0A03               	xorlw	3	; case 2
  9289  001C58  B4D8               	btfsc	status,2,c
  9290  001C5A  D610               	goto	l391
  9291  001C5C  0A01               	xorlw	1	; case 3
  9292  001C5E  B4D8               	btfsc	status,2,c
  9293  001C60  D6F2               	goto	l453
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;TabelasUmidade.h: 172: } else if (_tipo_sensor == 1) {
  9297  001C62  EFF7  F012         	goto	l638
  9298  001C66                     l304:
  9299                           
  9300                           ; BSR set to: 0
  9301                           
  9302                           ; BSR set to: 0
  9303  001C66  0564               	decf	tabelaUmidade@_tipo_sensor& (0+255),w,b
  9304  001C68  B4D8               	btfsc	status,2,c
  9305  001C6A  EFEC  F012         	goto	l525
  9306  001C6E  EFF7  F012         	goto	l638
  9307  001C72                     
  9308                           ; BSR set to: 0
  9309                           ;TabelasUmidade.h: 175: if (_tmp <= 90) _umd = 92;
  9310                           
  9311                           ; BSR set to: 0
  9312  001C72  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9313  001C74  D517               	goto	u8650
  9314  001C76  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9315  001C78  E104               	bnz	l7144
  9316  001C7A  0E5B               	movlw	91
  9317  001C7C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9318  001C7E  A0D8               	btfss	status,0,c
  9319  001C80  D511               	goto	u8650
  9320  001C82                     l7144:
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;TabelasUmidade.h: 176: else
  9324                           ;TabelasUmidade.h: 177: if (_tmp == 91) _umd = 92;
  9325  001C82  0E5B               	movlw	91
  9326  001C84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9327  001C86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9328  001C88  B4D8               	btfsc	status,2,c
  9329  001C8A  D50C               	goto	u8650
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;TabelasUmidade.h: 178: else
  9333                           ;TabelasUmidade.h: 179: if (_tmp == 92) _umd = 90;
  9334                           
  9335                           ; BSR set to: 0
  9336                           
  9337                           ; BSR set to: 0
  9338  001C8C  0E5C               	movlw	92
  9339  001C8E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9340  001C90  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9341  001C92  B4D8               	btfsc	status,2,c
  9342  001C94  D4F9               	goto	u8630
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;TabelasUmidade.h: 180: else
  9346                           ;TabelasUmidade.h: 181: if (_tmp == 93) _umd = 89;
  9347                           
  9348                           ; BSR set to: 0
  9349                           
  9350                           ; BSR set to: 0
  9351  001C96  0E5D               	movlw	93
  9352  001C98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9353  001C9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9354  001C9C  B4D8               	btfsc	status,2,c
  9355  001C9E  D4ED               	goto	u8620
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;TabelasUmidade.h: 182: else
  9359                           ;TabelasUmidade.h: 183: if (_tmp >= 94 && _tmp <= 100) _umd = 88;
  9360                           
  9361                           ; BSR set to: 0
  9362                           
  9363                           ; BSR set to: 0
  9364  001CA0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9365  001CA2  D00E               	goto	l535
  9366  001CA4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9367  001CA6  E104               	bnz	u9840
  9368  001CA8  0E5E               	movlw	94
  9369  001CAA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9370  001CAC  A0D8               	btfss	status,0,c
  9371  001CAE  D008               	goto	l535
  9372  001CB0                     u9840:
  9373                           
  9374                           ; BSR set to: 0
  9375  001CB0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9376  001CB2  D4DC               	goto	u8610
  9377  001CB4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9378  001CB6  E104               	bnz	l7162
  9379  001CB8  0E65               	movlw	101
  9380  001CBA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9381  001CBC  A0D8               	btfss	status,0,c
  9382  001CBE  D4D6               	goto	u8610
  9383  001CC0                     l535:
  9384  001CC0                     l7162:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;TabelasUmidade.h: 184: else
  9388                           ;TabelasUmidade.h: 185: if (_tmp >= 101 && _tmp <= 102) _umd = 78;
  9389  001CC0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9390  001CC2  D00E               	goto	l537
  9391  001CC4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9392  001CC6  E104               	bnz	u9860
  9393  001CC8  0E65               	movlw	101
  9394  001CCA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9395  001CCC  A0D8               	btfss	status,0,c
  9396  001CCE  D008               	goto	l537
  9397  001CD0                     u9860:
  9398                           
  9399                           ; BSR set to: 0
  9400  001CD0  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9401  001CD2  D2FE               	goto	u11110
  9402  001CD4  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9403  001CD6  E104               	bnz	l7168
  9404  001CD8  0E67               	movlw	103
  9405  001CDA  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9406  001CDC  A0D8               	btfss	status,0,c
  9407  001CDE  D2F8               	goto	u11110
  9408  001CE0                     l537:
  9409  001CE0                     l7168:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;TabelasUmidade.h: 186: else
  9413                           ;TabelasUmidade.h: 187: if (_tmp == 103) _umd = 76;
  9414  001CE0  0E67               	movlw	103
  9415  001CE2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9416  001CE4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9417  001CE6  B4D8               	btfsc	status,2,c
  9418  001CE8  D303               	goto	u11130
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;TabelasUmidade.h: 188: else
  9422                           ;TabelasUmidade.h: 189: if (_tmp == 104) _umd = 75;
  9423                           
  9424                           ; BSR set to: 0
  9425                           
  9426                           ; BSR set to: 0
  9427  001CEA  0E68               	movlw	104
  9428  001CEC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9429  001CEE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9430  001CF0  B4D8               	btfsc	status,2,c
  9431  001CF2  D306               	goto	u11140
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;TabelasUmidade.h: 190: else
  9435                           ;TabelasUmidade.h: 191: if (_tmp == 105) _umd = 72;
  9436                           
  9437                           ; BSR set to: 0
  9438                           
  9439                           ; BSR set to: 0
  9440  001CF4  0E69               	movlw	105
  9441  001CF6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9442  001CF8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9443  001CFA  B4D8               	btfsc	status,2,c
  9444  001CFC  D179               	goto	u10540
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;TabelasUmidade.h: 192: else
  9448                           ;TabelasUmidade.h: 193: if (_tmp == 106) _umd = 70;
  9449                           
  9450                           ; BSR set to: 0
  9451                           
  9452                           ; BSR set to: 0
  9453  001CFE  0E6A               	movlw	106
  9454  001D00  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9455  001D02  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9456  001D04  B4D8               	btfsc	status,2,c
  9457  001D06  D30F               	goto	u11160
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;TabelasUmidade.h: 194: else
  9461                           ;TabelasUmidade.h: 195: if (_tmp == 107) _umd = 68;
  9462                           
  9463                           ; BSR set to: 0
  9464                           
  9465                           ; BSR set to: 0
  9466  001D08  0E6B               	movlw	107
  9467  001D0A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9468  001D0C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9469  001D0E  B4D8               	btfsc	status,2,c
  9470  001D10  D312               	goto	u11170
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;TabelasUmidade.h: 196: else
  9474                           ;TabelasUmidade.h: 197: if (_tmp == 108) _umd = 67;
  9475                           
  9476                           ; BSR set to: 0
  9477                           
  9478                           ; BSR set to: 0
  9479  001D12  0E6C               	movlw	108
  9480  001D14  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9481  001D16  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9482  001D18  A4D8               	btfss	status,2,c
  9483  001D1A  D002               	goto	l549
  9484                           
  9485                           ; BSR set to: 0
  9486  001D1C  0E43               	movlw	67
  9487  001D1E  D4DE               	goto	L22
  9488  001D20                     l549:
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;TabelasUmidade.h: 198: else
  9492                           ;TabelasUmidade.h: 199: if (_tmp == 109) _umd = 66;
  9493                           
  9494                           ; BSR set to: 0
  9495  001D20  0E6D               	movlw	109
  9496  001D22  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9497  001D24  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9498  001D26  B4D8               	btfsc	status,2,c
  9499  001D28  D30E               	goto	u11180
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;TabelasUmidade.h: 200: else
  9503                           ;TabelasUmidade.h: 201: if (_tmp == 110) _umd = 65;
  9504                           
  9505                           ; BSR set to: 0
  9506                           
  9507                           ; BSR set to: 0
  9508  001D2A  0E6E               	movlw	110
  9509  001D2C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9510  001D2E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9511  001D30  B4D8               	btfsc	status,2,c
  9512  001D32  D17E               	goto	u10580
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;TabelasUmidade.h: 202: else
  9516                           ;TabelasUmidade.h: 203: if (_tmp >= 111 && _tmp <= 114) _umd = 60;
  9517                           
  9518                           ; BSR set to: 0
  9519                           
  9520                           ; BSR set to: 0
  9521  001D34  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9522  001D36  D00E               	goto	l555
  9523  001D38  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9524  001D3A  E104               	bnz	u9960
  9525  001D3C  0E6F               	movlw	111
  9526  001D3E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9527  001D40  A0D8               	btfss	status,0,c
  9528  001D42  D008               	goto	l555
  9529  001D44                     u9960:
  9530                           
  9531                           ; BSR set to: 0
  9532  001D44  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
  9533  001D46  D317               	goto	u11210
  9534  001D48  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9535  001D4A  E104               	bnz	l7206
  9536  001D4C  0E73               	movlw	115
  9537  001D4E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
  9538  001D50  A0D8               	btfss	status,0,c
  9539  001D52  D311               	goto	u11210
  9540  001D54                     l555:
  9541  001D54                     l7206:
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;TabelasUmidade.h: 204: else
  9545                           ;TabelasUmidade.h: 205: if (_tmp == 115) _umd = 58;
  9546  001D54  0E73               	movlw	115
  9547  001D56  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9548  001D58  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9549  001D5A  B4D8               	btfsc	status,2,c
  9550  001D5C  D314               	goto	u11220
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;TabelasUmidade.h: 206: else
  9554                           ;TabelasUmidade.h: 207: if (_tmp == 116) _umd = 56;
  9555                           
  9556                           ; BSR set to: 0
  9557                           
  9558                           ; BSR set to: 0
  9559  001D5E  0E74               	movlw	116
  9560  001D60  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9561  001D62  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9562  001D64  B4D8               	btfsc	status,2,c
  9563  001D66  D317               	goto	u11230
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;TabelasUmidade.h: 208: else
  9567                           ;TabelasUmidade.h: 209: if (_tmp == 117) _umd = 54;
  9568                           
  9569                           ; BSR set to: 0
  9570                           
  9571                           ; BSR set to: 0
  9572  001D68  0E75               	movlw	117
  9573  001D6A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9574  001D6C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9575  001D6E  A4D8               	btfss	status,2,c
  9576  001D70  D002               	goto	l561
  9577                           
  9578                           ; BSR set to: 0
  9579  001D72  0E36               	movlw	54
  9580  001D74  D4B3               	goto	L22
  9581  001D76                     l561:
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;TabelasUmidade.h: 210: else
  9585                           ;TabelasUmidade.h: 211: if (_tmp == 118) _umd = 52;
  9586                           
  9587                           ; BSR set to: 0
  9588  001D76  0E76               	movlw	118
  9589  001D78  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9590  001D7A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9591  001D7C  B4D8               	btfsc	status,2,c
  9592  001D7E  D323               	goto	u11260
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;TabelasUmidade.h: 212: else
  9596                           ;TabelasUmidade.h: 213: if (_tmp == 119) _umd = 50;
  9597                           
  9598                           ; BSR set to: 0
  9599                           
  9600                           ; BSR set to: 0
  9601  001D80  0E77               	movlw	119
  9602  001D82  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9603  001D84  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9604  001D86  B4D8               	btfsc	status,2,c
  9605  001D88  D326               	goto	u11270
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;TabelasUmidade.h: 214: else
  9609                           ;TabelasUmidade.h: 215: if (_tmp == 120) _umd = 48;
  9610                           
  9611                           ; BSR set to: 0
  9612                           
  9613                           ; BSR set to: 0
  9614  001D8A  0E78               	movlw	120
  9615  001D8C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9616  001D8E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9617  001D90  B4D8               	btfsc	status,2,c
  9618  001D92  D18D               	goto	u10670
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;TabelasUmidade.h: 216: else
  9622                           ;TabelasUmidade.h: 217: if (_tmp == 121) _umd = 47;
  9623                           
  9624                           ; BSR set to: 0
  9625                           
  9626                           ; BSR set to: 0
  9627  001D94  0E79               	movlw	121
  9628  001D96  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9629  001D98  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9630  001D9A  B4D8               	btfsc	status,2,c
  9631  001D9C  D32C               	goto	u11290
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;TabelasUmidade.h: 218: else
  9635                           ;TabelasUmidade.h: 219: if (_tmp == 122) _umd = 46;
  9636                           
  9637                           ; BSR set to: 0
  9638                           
  9639                           ; BSR set to: 0
  9640  001D9E  0E7A               	movlw	122
  9641  001DA0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9642  001DA2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9643  001DA4  A4D8               	btfss	status,2,c
  9644  001DA6  D002               	goto	l571
  9645                           
  9646                           ; BSR set to: 0
  9647  001DA8  0E2E               	movlw	46
  9648  001DAA  D498               	goto	L22
  9649  001DAC                     l571:
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;TabelasUmidade.h: 220: else
  9653                           ;TabelasUmidade.h: 221: if (_tmp == 123) _umd = 45;
  9654                           
  9655                           ; BSR set to: 0
  9656  001DAC  0E7B               	movlw	123
  9657  001DAE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9658  001DB0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9659  001DB2  B4D8               	btfsc	status,2,c
  9660  001DB4  D328               	goto	u11300
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;TabelasUmidade.h: 222: else
  9664                           ;TabelasUmidade.h: 223: if (_tmp == 124) _umd = 44;
  9665                           
  9666                           ; BSR set to: 0
  9667                           
  9668                           ; BSR set to: 0
  9669  001DB6  0E7C               	movlw	124
  9670  001DB8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9671  001DBA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9672  001DBC  B4D8               	btfsc	status,2,c
  9673  001DBE  D189               	goto	u10700
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;TabelasUmidade.h: 224: else
  9677                           ;TabelasUmidade.h: 225: if (_tmp == 125) _umd = 43;
  9678                           
  9679                           ; BSR set to: 0
  9680                           
  9681                           ; BSR set to: 0
  9682  001DC0  0E7D               	movlw	125
  9683  001DC2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9684  001DC4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9685  001DC6  B4D8               	btfsc	status,2,c
  9686  001DC8  D326               	goto	u11310
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;TabelasUmidade.h: 226: else
  9690                           ;TabelasUmidade.h: 227: if (_tmp == 126) _umd = 42;
  9691                           
  9692                           ; BSR set to: 0
  9693                           
  9694                           ; BSR set to: 0
  9695  001DCA  0E7E               	movlw	126
  9696  001DCC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9697  001DCE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9698  001DD0  B4D8               	btfsc	status,2,c
  9699  001DD2  D187               	goto	u10710
  9700                           
  9701                           ; BSR set to: 0
  9702                           ;TabelasUmidade.h: 228: else
  9703                           ;TabelasUmidade.h: 229: if (_tmp == 127) _umd = 40;
  9704                           
  9705                           ; BSR set to: 0
  9706                           
  9707                           ; BSR set to: 0
  9708  001DD4  0E7F               	movlw	127
  9709  001DD6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9710  001DD8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9711  001DDA  B4D8               	btfsc	status,2,c
  9712  001DDC  D32C               	goto	u11330
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;TabelasUmidade.h: 230: else
  9716                           ;TabelasUmidade.h: 231: if (_tmp == 128) _umd = 40;
  9717                           
  9718                           ; BSR set to: 0
  9719                           
  9720                           ; BSR set to: 0
  9721  001DDE  0E80               	movlw	128
  9722  001DE0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9723  001DE2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9724  001DE4  B4D8               	btfsc	status,2,c
  9725  001DE6  D327               	goto	u11330
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;TabelasUmidade.h: 232: else
  9729                           ;TabelasUmidade.h: 233: if (_tmp == 129) _umd = 39;
  9730                           
  9731                           ; BSR set to: 0
  9732                           
  9733                           ; BSR set to: 0
  9734  001DE8  0E81               	movlw	129
  9735  001DEA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9736  001DEC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9737  001DEE  B4D8               	btfsc	status,2,c
  9738  001DF0  D32A               	goto	u11340
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;TabelasUmidade.h: 234: else
  9742                           ;TabelasUmidade.h: 235: if (_tmp == 130) _umd = 38;
  9743                           
  9744                           ; BSR set to: 0
  9745                           
  9746                           ; BSR set to: 0
  9747  001DF2  0E82               	movlw	130
  9748  001DF4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9749  001DF6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9750  001DF8  A4D8               	btfss	status,2,c
  9751  001DFA  D002               	goto	l587
  9752                           
  9753                           ; BSR set to: 0
  9754  001DFC  0E26               	movlw	38
  9755  001DFE  D46E               	goto	L22
  9756  001E00                     l587:
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;TabelasUmidade.h: 236: else
  9760                           ;TabelasUmidade.h: 237: if (_tmp == 131) _umd = 37;
  9761                           
  9762                           ; BSR set to: 0
  9763  001E00  0E83               	movlw	131
  9764  001E02  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9765  001E04  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9766  001E06  B4D8               	btfsc	status,2,c
  9767  001E08  D326               	goto	u11350
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;TabelasUmidade.h: 238: else
  9771                           ;TabelasUmidade.h: 239: if (_tmp == 132) _umd = 36;
  9772                           
  9773                           ; BSR set to: 0
  9774                           
  9775                           ; BSR set to: 0
  9776  001E0A  0E84               	movlw	132
  9777  001E0C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9778  001E0E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9779  001E10  B4D8               	btfsc	status,2,c
  9780  001E12  D329               	goto	u11360
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;TabelasUmidade.h: 240: else
  9784                           ;TabelasUmidade.h: 241: if (_tmp == 133) _umd = 36;
  9785                           
  9786                           ; BSR set to: 0
  9787                           
  9788                           ; BSR set to: 0
  9789  001E14  0E85               	movlw	133
  9790  001E16  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9791  001E18  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9792  001E1A  B4D8               	btfsc	status,2,c
  9793  001E1C  D324               	goto	u11360
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;TabelasUmidade.h: 242: else
  9797                           ;TabelasUmidade.h: 243: if (_tmp == 134) _umd = 36;
  9798                           
  9799                           ; BSR set to: 0
  9800                           
  9801                           ; BSR set to: 0
  9802  001E1E  0E86               	movlw	134
  9803  001E20  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9804  001E22  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9805  001E24  B4D8               	btfsc	status,2,c
  9806  001E26  D31F               	goto	u11360
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;TabelasUmidade.h: 244: else
  9810                           ;TabelasUmidade.h: 245: if (_tmp == 135) _umd = 35;
  9811                           
  9812                           ; BSR set to: 0
  9813                           
  9814                           ; BSR set to: 0
  9815  001E28  0E87               	movlw	135
  9816  001E2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9817  001E2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9818  001E2E  B4D8               	btfsc	status,2,c
  9819  001E30  D322               	goto	u11370
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;TabelasUmidade.h: 246: else
  9823                           ;TabelasUmidade.h: 247: if (_tmp == 136) _umd = 34;
  9824                           
  9825                           ; BSR set to: 0
  9826                           
  9827                           ; BSR set to: 0
  9828  001E32  0E88               	movlw	136
  9829  001E34  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9830  001E36  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9831  001E38  B4D8               	btfsc	status,2,c
  9832  001E3A  D325               	goto	u11380
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;TabelasUmidade.h: 248: else
  9836                           ;TabelasUmidade.h: 249: if (_tmp == 137) _umd = 33;
  9837                           
  9838                           ; BSR set to: 0
  9839                           
  9840                           ; BSR set to: 0
  9841  001E3C  0E89               	movlw	137
  9842  001E3E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9843  001E40  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9844  001E42  B4D8               	btfsc	status,2,c
  9845  001E44  D328               	goto	u11390
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;TabelasUmidade.h: 250: else
  9849                           ;TabelasUmidade.h: 251: if (_tmp == 138) _umd = 32;
  9850                           
  9851                           ; BSR set to: 0
  9852                           
  9853                           ; BSR set to: 0
  9854  001E46  0E8A               	movlw	138
  9855  001E48  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9856  001E4A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9857  001E4C  B4D8               	btfsc	status,2,c
  9858  001E4E  D32B               	goto	u11400
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;TabelasUmidade.h: 252: else
  9862                           ;TabelasUmidade.h: 253: if (_tmp == 139) _umd = 31;
  9863                           
  9864                           ; BSR set to: 0
  9865                           
  9866                           ; BSR set to: 0
  9867  001E50  0E8B               	movlw	139
  9868  001E52  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9869  001E54  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9870  001E56  B4D8               	btfsc	status,2,c
  9871  001E58  D32E               	goto	u11410
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;TabelasUmidade.h: 254: else
  9875                           ;TabelasUmidade.h: 255: if (_tmp == 140) _umd = 30;
  9876                           
  9877                           ; BSR set to: 0
  9878                           
  9879                           ; BSR set to: 0
  9880  001E5A  0E8C               	movlw	140
  9881  001E5C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9882  001E5E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9883  001E60  B4D8               	btfsc	status,2,c
  9884  001E62  D331               	goto	u11420
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;TabelasUmidade.h: 256: else
  9888                           ;TabelasUmidade.h: 257: if (_tmp == 141) _umd = 29;
  9889                           
  9890                           ; BSR set to: 0
  9891                           
  9892                           ; BSR set to: 0
  9893  001E64  0E8D               	movlw	141
  9894  001E66  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9895  001E68  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9896  001E6A  B4D8               	btfsc	status,2,c
  9897  001E6C  D334               	goto	u11430
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;TabelasUmidade.h: 258: else
  9901                           ;TabelasUmidade.h: 259: if (_tmp == 142) _umd = 28;
  9902                           
  9903                           ; BSR set to: 0
  9904                           
  9905                           ; BSR set to: 0
  9906  001E6E  0E8E               	movlw	142
  9907  001E70  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9908  001E72  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9909  001E74  B4D8               	btfsc	status,2,c
  9910  001E76  D337               	goto	u11440
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;TabelasUmidade.h: 260: else
  9914                           ;TabelasUmidade.h: 261: if (_tmp == 143) _umd = 27;
  9915                           
  9916                           ; BSR set to: 0
  9917                           
  9918                           ; BSR set to: 0
  9919  001E78  0E8F               	movlw	143
  9920  001E7A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9921  001E7C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9922  001E7E  B4D8               	btfsc	status,2,c
  9923  001E80  D33A               	goto	u11450
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;TabelasUmidade.h: 262: else
  9927                           ;TabelasUmidade.h: 263: if (_tmp == 144) _umd = 26;
  9928                           
  9929                           ; BSR set to: 0
  9930                           
  9931                           ; BSR set to: 0
  9932  001E82  0E90               	movlw	144
  9933  001E84  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9934  001E86  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9935  001E88  B4D8               	btfsc	status,2,c
  9936  001E8A  D33D               	goto	u11460
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;TabelasUmidade.h: 264: else
  9940                           ;TabelasUmidade.h: 265: if (_tmp == 145) _umd = 25;
  9941                           
  9942                           ; BSR set to: 0
  9943                           
  9944                           ; BSR set to: 0
  9945  001E8C  0E91               	movlw	145
  9946  001E8E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9947  001E90  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9948  001E92  B4D8               	btfsc	status,2,c
  9949  001E94  D340               	goto	u11470
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;TabelasUmidade.h: 266: else
  9953                           ;TabelasUmidade.h: 267: if (_tmp == 146) _umd = 24;
  9954                           
  9955                           ; BSR set to: 0
  9956                           
  9957                           ; BSR set to: 0
  9958  001E96  0E92               	movlw	146
  9959  001E98  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9960  001E9A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9961  001E9C  B4D8               	btfsc	status,2,c
  9962  001E9E  D343               	goto	u11480
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;TabelasUmidade.h: 268: else
  9966                           ;TabelasUmidade.h: 269: if (_tmp == 147) _umd = 23;
  9967                           
  9968                           ; BSR set to: 0
  9969                           
  9970                           ; BSR set to: 0
  9971  001EA0  0E93               	movlw	147
  9972  001EA2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9973  001EA4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9974  001EA6  B4D8               	btfsc	status,2,c
  9975  001EA8  D346               	goto	u11490
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;TabelasUmidade.h: 270: else
  9979                           ;TabelasUmidade.h: 271: if (_tmp == 148) _umd = 22;
  9980                           
  9981                           ; BSR set to: 0
  9982                           
  9983                           ; BSR set to: 0
  9984  001EAA  0E94               	movlw	148
  9985  001EAC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9986  001EAE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
  9987  001EB0  B4D8               	btfsc	status,2,c
  9988  001EB2  D349               	goto	u11500
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;TabelasUmidade.h: 272: else
  9992                           ;TabelasUmidade.h: 273: if (_tmp == 149) _umd = 21;
  9993                           
  9994                           ; BSR set to: 0
  9995                           
  9996                           ; BSR set to: 0
  9997  001EB4  0E95               	movlw	149
  9998  001EB6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
  9999  001EB8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10000  001EBA  B4D8               	btfsc	status,2,c
 10001  001EBC  D34C               	goto	u11510
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;TabelasUmidade.h: 274: else
 10005                           ;TabelasUmidade.h: 275: if (_tmp == 150) _umd = 20;
 10006                           
 10007                           ; BSR set to: 0
 10008                           
 10009                           ; BSR set to: 0
 10010  001EBE  0E96               	movlw	150
 10011  001EC0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10012  001EC2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10013  001EC4  B4D8               	btfsc	status,2,c
 10014  001EC6  D34F               	goto	u11520
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;TabelasUmidade.h: 276: else
 10018                           ;TabelasUmidade.h: 277: if (_tmp == 151) _umd = 19;
 10019                           
 10020                           ; BSR set to: 0
 10021                           
 10022                           ; BSR set to: 0
 10023  001EC8  0E97               	movlw	151
 10024  001ECA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10025  001ECC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10026  001ECE  B4D8               	btfsc	status,2,c
 10027  001ED0  D352               	goto	u11530
 10028                           
 10029                           ; BSR set to: 0
 10030                           ;TabelasUmidade.h: 278: else
 10031                           ;TabelasUmidade.h: 279: if (_tmp == 152) _umd = 18;
 10032                           
 10033                           ; BSR set to: 0
 10034                           
 10035                           ; BSR set to: 0
 10036  001ED2  0E98               	movlw	152
 10037  001ED4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10038  001ED6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10039  001ED8  B4D8               	btfsc	status,2,c
 10040  001EDA  D355               	goto	u11540
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;TabelasUmidade.h: 280: else
 10044                           ;TabelasUmidade.h: 281: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10045                           
 10046                           ; BSR set to: 0
 10047                           
 10048                           ; BSR set to: 0
 10049  001EDC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10050  001EDE  D00E               	goto	l633
 10051  001EE0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10052  001EE2  E104               	bnz	u10360
 10053  001EE4  0E99               	movlw	153
 10054  001EE6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10055  001EE8  A0D8               	btfss	status,0,c
 10056  001EEA  D008               	goto	l633
 10057  001EEC                     u10360:
 10058                           
 10059                           ; BSR set to: 0
 10060  001EEC  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10061  001EEE  D35E               	goto	u11560
 10062  001EF0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10063  001EF2  E104               	bnz	l7364
 10064  001EF4  0E9D               	movlw	157
 10065  001EF6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10066  001EF8  A0D8               	btfss	status,0,c
 10067  001EFA  D358               	goto	u11560
 10068  001EFC                     l633:
 10069  001EFC                     l7364:
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;TabelasUmidade.h: 282: else
 10073                           ;TabelasUmidade.h: 283: if (_tmp == 157) _umd = 16;
 10074  001EFC  0E9D               	movlw	157
 10075  001EFE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10076  001F00  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10077  001F02  B4D8               	btfsc	status,2,c
 10078  001F04  D35B               	goto	u11570
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;TabelasUmidade.h: 284: else
 10082                           ;TabelasUmidade.h: 285: if (_tmp >= 158) _umd = 15;
 10083                           
 10084                           ; BSR set to: 0
 10085                           
 10086                           ; BSR set to: 0
 10087  001F06  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10088  001F08  D372               	goto	l638
 10089  001F0A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10090  001F0C  E101               	bnz	u10390
 10091  001F0E  D182               	goto	L24
 10092  001F10                     u10390:
 10093  001F10  D360               	goto	u11580
 10094  001F12                     
 10095                           ; BSR set to: 0
 10096                           ;TabelasUmidade.h: 288: if (_tmp <= 90) _umd = 97;
 10097                           
 10098                           ; BSR set to: 0
 10099  001F12  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10100  001F14  D006               	goto	u10400
 10101  001F16  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10102  001F18  E107               	bnz	l7376
 10103  001F1A  0E5B               	movlw	91
 10104  001F1C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10105  001F1E  B0D8               	btfsc	status,0,c
 10106  001F20  D003               	goto	l640
 10107  001F22                     u10400:
 10108                           
 10109                           ; BSR set to: 0
 10110  001F22  0E61               	movlw	97
 10111  001F24  EF6E  F00B         	goto	L22
 10112  001F28                     l640:
 10113  001F28                     l7376:
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;TabelasUmidade.h: 289: else
 10117                           ;TabelasUmidade.h: 290: if (_tmp == 91) _umd = 96;
 10118  001F28  0E5B               	movlw	91
 10119  001F2A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10120  001F2C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10121  001F2E  A4D8               	btfss	status,2,c
 10122  001F30  D003               	goto	l642
 10123  001F32                     u10410:
 10124                           
 10125                           ; BSR set to: 0
 10126  001F32  0E60               	movlw	96
 10127  001F34  EF6E  F00B         	goto	L22
 10128  001F38                     l642:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;TabelasUmidade.h: 291: else
 10132                           ;TabelasUmidade.h: 292: if (_tmp == 92) _umd = 95;
 10133                           
 10134                           ; BSR set to: 0
 10135  001F38  0E5C               	movlw	92
 10136  001F3A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10137  001F3C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10138  001F3E  B4D8               	btfsc	status,2,c
 10139  001F40  D005               	goto	u10430
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;TabelasUmidade.h: 293: else
 10143                           ;TabelasUmidade.h: 294: if (_tmp == 92) _umd = 95;
 10144                           
 10145                           ; BSR set to: 0
 10146                           
 10147                           ; BSR set to: 0
 10148  001F42  0E5C               	movlw	92
 10149  001F44  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10150  001F46  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10151  001F48  A4D8               	btfss	status,2,c
 10152  001F4A  D003               	goto	l646
 10153  001F4C                     u10430:
 10154                           
 10155                           ; BSR set to: 0
 10156  001F4C  0E5F               	movlw	95
 10157  001F4E  EF6E  F00B         	goto	L22
 10158  001F52                     l646:
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;TabelasUmidade.h: 295: else
 10162                           ;TabelasUmidade.h: 296: if (_tmp == 93) _umd = 94;
 10163                           
 10164                           ; BSR set to: 0
 10165  001F52  0E5D               	movlw	93
 10166  001F54  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10167  001F56  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10168  001F58  B4D8               	btfsc	status,2,c
 10169  001F5A  EF60  F00B         	goto	u8670
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;TabelasUmidade.h: 297: else
 10173                           ;TabelasUmidade.h: 298: if (_tmp >= 94 && _tmp <= 100) _umd = 93;
 10174                           
 10175                           ; BSR set to: 0
 10176                           
 10177                           ; BSR set to: 0
 10178  001F5E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10179  001F60  D010               	goto	l650
 10180  001F62  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10181  001F64  E104               	bnz	u10450
 10182  001F66  0E5E               	movlw	94
 10183  001F68  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10184  001F6A  A0D8               	btfss	status,0,c
 10185  001F6C  D00A               	goto	l650
 10186  001F6E                     u10450:
 10187                           
 10188                           ; BSR set to: 0
 10189  001F6E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10190  001F70  EF59  F00B         	goto	u8660
 10191  001F74  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10192  001F76  E105               	bnz	l7398
 10193  001F78  0E65               	movlw	101
 10194  001F7A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10195  001F7C  A0D8               	btfss	status,0,c
 10196  001F7E  EF59  F00B         	goto	u8660
 10197  001F82                     l650:
 10198  001F82                     l7398:
 10199                           
 10200                           ; BSR set to: 0
 10201                           ;TabelasUmidade.h: 299: else
 10202                           ;TabelasUmidade.h: 300: if (_tmp >= 101 && _tmp <= 102) _umd = 83;
 10203  001F82  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10204  001F84  D011               	goto	l652
 10205  001F86  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10206  001F88  E104               	bnz	u10470
 10207  001F8A  0E65               	movlw	101
 10208  001F8C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10209  001F8E  A0D8               	btfss	status,0,c
 10210  001F90  D00B               	goto	l652
 10211  001F92                     u10470:
 10212                           
 10213                           ; BSR set to: 0
 10214  001F92  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10215  001F94  D006               	goto	u10480
 10216  001F96  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10217  001F98  E107               	bnz	l7404
 10218  001F9A  0E67               	movlw	103
 10219  001F9C  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10220  001F9E  B0D8               	btfsc	status,0,c
 10221  001FA0  D003               	goto	l652
 10222  001FA2                     u10480:
 10223                           
 10224                           ; BSR set to: 0
 10225  001FA2  0E53               	movlw	83
 10226  001FA4  EF6E  F00B         	goto	L22
 10227  001FA8                     l652:
 10228  001FA8                     l7404:
 10229                           
 10230                           ; BSR set to: 0
 10231                           ;TabelasUmidade.h: 301: else
 10232                           ;TabelasUmidade.h: 302: if (_tmp == 103) _umd = 81;
 10233  001FA8  0E67               	movlw	103
 10234  001FAA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10235  001FAC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10236  001FAE  A4D8               	btfss	status,2,c
 10237  001FB0  D003               	goto	l654
 10238                           
 10239                           ; BSR set to: 0
 10240  001FB2  0E51               	movlw	81
 10241  001FB4  EF6E  F00B         	goto	L22
 10242  001FB8                     l654:
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;TabelasUmidade.h: 303: else
 10246                           ;TabelasUmidade.h: 304: if (_tmp == 104) _umd = 80;
 10247                           
 10248                           ; BSR set to: 0
 10249  001FB8  0E68               	movlw	104
 10250  001FBA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10251  001FBC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10252  001FBE  B4D8               	btfsc	status,2,c
 10253  001FC0  D17F               	goto	u11100
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;TabelasUmidade.h: 305: else
 10257                           ;TabelasUmidade.h: 306: if (_tmp == 105) _umd = 77;
 10258                           
 10259                           ; BSR set to: 0
 10260                           
 10261                           ; BSR set to: 0
 10262  001FC2  0E69               	movlw	105
 10263  001FC4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10264  001FC6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10265  001FC8  B4D8               	btfsc	status,2,c
 10266  001FCA  D18A               	goto	u11120
 10267                           
 10268                           ; BSR set to: 0
 10269                           ;TabelasUmidade.h: 307: else
 10270                           ;TabelasUmidade.h: 308: if (_tmp == 106) _umd = 75;
 10271                           
 10272                           ; BSR set to: 0
 10273                           
 10274                           ; BSR set to: 0
 10275  001FCC  0E6A               	movlw	106
 10276  001FCE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10277  001FD0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10278  001FD2  B4D8               	btfsc	status,2,c
 10279  001FD4  D195               	goto	u11140
 10280                           
 10281                           ; BSR set to: 0
 10282                           ;TabelasUmidade.h: 309: else
 10283                           ;TabelasUmidade.h: 310: if (_tmp == 107) _umd = 73;
 10284                           
 10285                           ; BSR set to: 0
 10286                           
 10287                           ; BSR set to: 0
 10288  001FD6  0E6B               	movlw	107
 10289  001FD8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10290  001FDA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10291  001FDC  A4D8               	btfss	status,2,c
 10292  001FDE  D003               	goto	l662
 10293                           
 10294                           ; BSR set to: 0
 10295  001FE0  0E49               	movlw	73
 10296  001FE2  EF6E  F00B         	goto	L22
 10297  001FE6                     l662:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;TabelasUmidade.h: 311: else
 10301                           ;TabelasUmidade.h: 312: if (_tmp == 108) _umd = 72;
 10302                           
 10303                           ; BSR set to: 0
 10304  001FE6  0E6C               	movlw	108
 10305  001FE8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10306  001FEA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10307  001FEC  A4D8               	btfss	status,2,c
 10308  001FEE  D003               	goto	l664
 10309  001FF0                     u10540:
 10310                           
 10311                           ; BSR set to: 0
 10312  001FF0  0E48               	movlw	72
 10313  001FF2  EF6E  F00B         	goto	L22
 10314  001FF6                     l664:
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;TabelasUmidade.h: 313: else
 10318                           ;TabelasUmidade.h: 314: if (_tmp == 109) _umd = 71;
 10319                           
 10320                           ; BSR set to: 0
 10321  001FF6  0E6D               	movlw	109
 10322  001FF8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10323  001FFA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10324  001FFC  A4D8               	btfss	status,2,c
 10325  001FFE  D003               	goto	l666
 10326                           
 10327                           ; BSR set to: 0
 10328  002000  0E47               	movlw	71
 10329  002002  EF6E  F00B         	goto	L22
 10330  002006                     l666:
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;TabelasUmidade.h: 315: else
 10334                           ;TabelasUmidade.h: 316: if (_tmp == 110) _umd = 70;
 10335                           
 10336                           ; BSR set to: 0
 10337  002006  0E6E               	movlw	110
 10338  002008  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10339  00200A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10340  00200C  B4D8               	btfsc	status,2,c
 10341  00200E  D18B               	goto	u11160
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;TabelasUmidade.h: 317: else
 10345                           ;TabelasUmidade.h: 318: if (_tmp >= 111 && _tmp <= 114) _umd = 65;
 10346                           
 10347                           ; BSR set to: 0
 10348                           
 10349                           ; BSR set to: 0
 10350  002010  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10351  002012  D011               	goto	l670
 10352  002014  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10353  002016  E104               	bnz	u10570
 10354  002018  0E6F               	movlw	111
 10355  00201A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10356  00201C  A0D8               	btfss	status,0,c
 10357  00201E  D00B               	goto	l670
 10358  002020                     u10570:
 10359                           
 10360                           ; BSR set to: 0
 10361  002020  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10362  002022  D006               	goto	u10580
 10363  002024  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10364  002026  E107               	bnz	l7442
 10365  002028  0E73               	movlw	115
 10366  00202A  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10367  00202C  B0D8               	btfsc	status,0,c
 10368  00202E  D003               	goto	l670
 10369  002030                     u10580:
 10370                           
 10371                           ; BSR set to: 0
 10372  002030  0E41               	movlw	65
 10373  002032  EF6E  F00B         	goto	L22
 10374  002036                     l670:
 10375  002036                     l7442:
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;TabelasUmidade.h: 319: else
 10379                           ;TabelasUmidade.h: 320: if (_tmp == 115) _umd = 63;
 10380  002036  0E73               	movlw	115
 10381  002038  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10382  00203A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10383  00203C  A4D8               	btfss	status,2,c
 10384  00203E  D003               	goto	l672
 10385                           
 10386                           ; BSR set to: 0
 10387  002040  0E3F               	movlw	63
 10388  002042  EF6E  F00B         	goto	L22
 10389  002046                     l672:
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;TabelasUmidade.h: 321: else
 10393                           ;TabelasUmidade.h: 322: if (_tmp == 116) _umd = 61;
 10394                           
 10395                           ; BSR set to: 0
 10396  002046  0E74               	movlw	116
 10397  002048  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10398  00204A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10399  00204C  A4D8               	btfss	status,2,c
 10400  00204E  D003               	goto	l674
 10401                           
 10402                           ; BSR set to: 0
 10403  002050  0E3D               	movlw	61
 10404  002052  EF6E  F00B         	goto	L22
 10405  002056                     l674:
 10406                           
 10407                           ; BSR set to: 0
 10408                           ;TabelasUmidade.h: 323: else
 10409                           ;TabelasUmidade.h: 324: if (_tmp == 117) _umd = 59;
 10410                           
 10411                           ; BSR set to: 0
 10412  002056  0E75               	movlw	117
 10413  002058  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10414  00205A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10415  00205C  A4D8               	btfss	status,2,c
 10416  00205E  D003               	goto	l676
 10417                           
 10418                           ; BSR set to: 0
 10419  002060  0E3B               	movlw	59
 10420  002062  EF6E  F00B         	goto	L22
 10421  002066                     l676:
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;TabelasUmidade.h: 325: else
 10425                           ;TabelasUmidade.h: 326: if (_tmp == 118) _umd = 57;
 10426                           
 10427                           ; BSR set to: 0
 10428  002066  0E76               	movlw	118
 10429  002068  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10430  00206A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10431  00206C  A4D8               	btfss	status,2,c
 10432  00206E  D003               	goto	l678
 10433                           
 10434                           ; BSR set to: 0
 10435  002070  0E39               	movlw	57
 10436  002072  EF6E  F00B         	goto	L22
 10437  002076                     l678:
 10438                           
 10439                           ; BSR set to: 0
 10440                           ;TabelasUmidade.h: 327: else
 10441                           ;TabelasUmidade.h: 328: if (_tmp == 119) _umd = 55;
 10442                           
 10443                           ; BSR set to: 0
 10444  002076  0E77               	movlw	119
 10445  002078  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10446  00207A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10447  00207C  B4D8               	btfsc	status,2,c
 10448  00207E  D193               	goto	u11240
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;TabelasUmidade.h: 329: else
 10452                           ;TabelasUmidade.h: 330: if (_tmp == 120) _umd = 53;
 10453                           
 10454                           ; BSR set to: 0
 10455                           
 10456                           ; BSR set to: 0
 10457  002080  0E78               	movlw	120
 10458  002082  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10459  002084  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10460  002086  B4D8               	btfsc	status,2,c
 10461  002088  D196               	goto	u11250
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;TabelasUmidade.h: 331: else
 10465                           ;TabelasUmidade.h: 332: if (_tmp == 121) _umd = 51;
 10466                           
 10467                           ; BSR set to: 0
 10468                           
 10469                           ; BSR set to: 0
 10470  00208A  0E79               	movlw	121
 10471  00208C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10472  00208E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10473  002090  A4D8               	btfss	status,2,c
 10474  002092  D003               	goto	l684
 10475                           
 10476                           ; BSR set to: 0
 10477  002094  0E33               	movlw	51
 10478  002096  EF6E  F00B         	goto	L22
 10479  00209A                     l684:
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;TabelasUmidade.h: 333: else
 10483                           ;TabelasUmidade.h: 334: if (_tmp == 122) _umd = 50;
 10484                           
 10485                           ; BSR set to: 0
 10486  00209A  0E7A               	movlw	122
 10487  00209C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10488  00209E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10489  0020A0  B4D8               	btfsc	status,2,c
 10490  0020A2  D199               	goto	u11270
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;TabelasUmidade.h: 335: else
 10494                           ;TabelasUmidade.h: 336: if (_tmp == 123) _umd = 48;
 10495                           
 10496                           ; BSR set to: 0
 10497                           
 10498                           ; BSR set to: 0
 10499  0020A4  0E7B               	movlw	123
 10500  0020A6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10501  0020A8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10502  0020AA  A4D8               	btfss	status,2,c
 10503  0020AC  D003               	goto	l688
 10504  0020AE                     u10670:
 10505                           
 10506                           ; BSR set to: 0
 10507  0020AE  0E30               	movlw	48
 10508  0020B0  EF6E  F00B         	goto	L22
 10509  0020B4                     l688:
 10510                           
 10511                           ; BSR set to: 0
 10512                           ;TabelasUmidade.h: 337: else
 10513                           ;TabelasUmidade.h: 338: if (_tmp == 124) _umd = 47;
 10514                           
 10515                           ; BSR set to: 0
 10516  0020B4  0E7C               	movlw	124
 10517  0020B6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10518  0020B8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10519  0020BA  B4D8               	btfsc	status,2,c
 10520  0020BC  D19C               	goto	u11290
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;TabelasUmidade.h: 339: else
 10524                           ;TabelasUmidade.h: 340: if (_tmp == 125) _umd = 45;
 10525                           
 10526                           ; BSR set to: 0
 10527                           
 10528                           ; BSR set to: 0
 10529  0020BE  0E7D               	movlw	125
 10530  0020C0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10531  0020C2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10532  0020C4  B4D8               	btfsc	status,2,c
 10533  0020C6  D19F               	goto	u11300
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;TabelasUmidade.h: 341: else
 10537                           ;TabelasUmidade.h: 342: if (_tmp == 126) _umd = 44;
 10538                           
 10539                           ; BSR set to: 0
 10540                           
 10541                           ; BSR set to: 0
 10542  0020C8  0E7E               	movlw	126
 10543  0020CA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10544  0020CC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10545  0020CE  A4D8               	btfss	status,2,c
 10546  0020D0  D003               	goto	l694
 10547  0020D2                     u10700:
 10548                           
 10549                           ; BSR set to: 0
 10550  0020D2  0E2C               	movlw	44
 10551  0020D4  EF6E  F00B         	goto	L22
 10552  0020D8                     l694:
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;TabelasUmidade.h: 343: else
 10556                           ;TabelasUmidade.h: 344: if (_tmp == 127) _umd = 42;
 10557                           
 10558                           ; BSR set to: 0
 10559  0020D8  0E7F               	movlw	127
 10560  0020DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10561  0020DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10562  0020DE  A4D8               	btfss	status,2,c
 10563  0020E0  D003               	goto	l696
 10564  0020E2                     u10710:
 10565                           
 10566                           ; BSR set to: 0
 10567  0020E2  0E2A               	movlw	42
 10568  0020E4  EF6E  F00B         	goto	L22
 10569  0020E8                     l696:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;TabelasUmidade.h: 345: else
 10573                           ;TabelasUmidade.h: 346: if (_tmp == 128) _umd = 41;
 10574                           
 10575                           ; BSR set to: 0
 10576  0020E8  0E80               	movlw	128
 10577  0020EA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10578  0020EC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10579  0020EE  B4D8               	btfsc	status,2,c
 10580  0020F0  D19A               	goto	u11320
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;TabelasUmidade.h: 347: else
 10584                           ;TabelasUmidade.h: 348: if (_tmp == 129) _umd = 41;
 10585                           
 10586                           ; BSR set to: 0
 10587                           
 10588                           ; BSR set to: 0
 10589  0020F2  0E81               	movlw	129
 10590  0020F4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10591  0020F6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10592  0020F8  B4D8               	btfsc	status,2,c
 10593  0020FA  D195               	goto	u11320
 10594                           
 10595                           ; BSR set to: 0
 10596                           ;TabelasUmidade.h: 349: else
 10597                           ;TabelasUmidade.h: 350: if (_tmp == 130) _umd = 40;
 10598                           
 10599                           ; BSR set to: 0
 10600                           
 10601                           ; BSR set to: 0
 10602  0020FC  0E82               	movlw	130
 10603  0020FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10604  002100  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10605  002102  B4D8               	btfsc	status,2,c
 10606  002104  D198               	goto	u11330
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;TabelasUmidade.h: 351: else
 10610                           ;TabelasUmidade.h: 352: if (_tmp == 131) _umd = 40;
 10611                           
 10612                           ; BSR set to: 0
 10613                           
 10614                           ; BSR set to: 0
 10615  002106  0E83               	movlw	131
 10616  002108  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10617  00210A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10618  00210C  B4D8               	btfsc	status,2,c
 10619  00210E  D193               	goto	u11330
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;TabelasUmidade.h: 353: else
 10623                           ;TabelasUmidade.h: 354: if (_tmp == 132) _umd = 39;
 10624                           
 10625                           ; BSR set to: 0
 10626                           
 10627                           ; BSR set to: 0
 10628  002110  0E84               	movlw	132
 10629  002112  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10630  002114  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10631  002116  B4D8               	btfsc	status,2,c
 10632  002118  D196               	goto	u11340
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;TabelasUmidade.h: 355: else
 10636                           ;TabelasUmidade.h: 356: if (_tmp == 133) _umd = 39;
 10637                           
 10638                           ; BSR set to: 0
 10639                           
 10640                           ; BSR set to: 0
 10641  00211A  0E85               	movlw	133
 10642  00211C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10643  00211E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10644  002120  B4D8               	btfsc	status,2,c
 10645  002122  D191               	goto	u11340
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;TabelasUmidade.h: 357: else
 10649                           ;TabelasUmidade.h: 358: if (_tmp == 134) _umd = 36;
 10650                           
 10651                           ; BSR set to: 0
 10652                           
 10653                           ; BSR set to: 0
 10654  002124  0E86               	movlw	134
 10655  002126  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10656  002128  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10657  00212A  B4D8               	btfsc	status,2,c
 10658  00212C  D19C               	goto	u11360
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;TabelasUmidade.h: 359: else
 10662                           ;TabelasUmidade.h: 360: if (_tmp == 135) _umd = 35;
 10663                           
 10664                           ; BSR set to: 0
 10665                           
 10666                           ; BSR set to: 0
 10667  00212E  0E87               	movlw	135
 10668  002130  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10669  002132  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10670  002134  B4D8               	btfsc	status,2,c
 10671  002136  D19F               	goto	u11370
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;TabelasUmidade.h: 361: else
 10675                           ;TabelasUmidade.h: 362: if (_tmp == 136) _umd = 34;
 10676                           
 10677                           ; BSR set to: 0
 10678                           
 10679                           ; BSR set to: 0
 10680  002138  0E88               	movlw	136
 10681  00213A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10682  00213C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10683  00213E  B4D8               	btfsc	status,2,c
 10684  002140  D1A2               	goto	u11380
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;TabelasUmidade.h: 363: else
 10688                           ;TabelasUmidade.h: 364: if (_tmp == 137) _umd = 33;
 10689                           
 10690                           ; BSR set to: 0
 10691                           
 10692                           ; BSR set to: 0
 10693  002142  0E89               	movlw	137
 10694  002144  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10695  002146  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10696  002148  B4D8               	btfsc	status,2,c
 10697  00214A  D1A5               	goto	u11390
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;TabelasUmidade.h: 365: else
 10701                           ;TabelasUmidade.h: 366: if (_tmp == 138) _umd = 32;
 10702                           
 10703                           ; BSR set to: 0
 10704                           
 10705                           ; BSR set to: 0
 10706  00214C  0E8A               	movlw	138
 10707  00214E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10708  002150  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10709  002152  B4D8               	btfsc	status,2,c
 10710  002154  D1A8               	goto	u11400
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;TabelasUmidade.h: 367: else
 10714                           ;TabelasUmidade.h: 368: if (_tmp == 139) _umd = 31;
 10715                           
 10716                           ; BSR set to: 0
 10717                           
 10718                           ; BSR set to: 0
 10719  002156  0E8B               	movlw	139
 10720  002158  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10721  00215A  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10722  00215C  B4D8               	btfsc	status,2,c
 10723  00215E  D1AB               	goto	u11410
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;TabelasUmidade.h: 369: else
 10727                           ;TabelasUmidade.h: 370: if (_tmp == 140) _umd = 30;
 10728                           
 10729                           ; BSR set to: 0
 10730                           
 10731                           ; BSR set to: 0
 10732  002160  0E8C               	movlw	140
 10733  002162  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10734  002164  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10735  002166  B4D8               	btfsc	status,2,c
 10736  002168  D1AE               	goto	u11420
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;TabelasUmidade.h: 371: else
 10740                           ;TabelasUmidade.h: 372: if (_tmp == 141) _umd = 29;
 10741                           
 10742                           ; BSR set to: 0
 10743                           
 10744                           ; BSR set to: 0
 10745  00216A  0E8D               	movlw	141
 10746  00216C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10747  00216E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10748  002170  B4D8               	btfsc	status,2,c
 10749  002172  D1B1               	goto	u11430
 10750                           
 10751                           ; BSR set to: 0
 10752                           ;TabelasUmidade.h: 373: else
 10753                           ;TabelasUmidade.h: 374: if (_tmp == 142) _umd = 28;
 10754                           
 10755                           ; BSR set to: 0
 10756                           
 10757                           ; BSR set to: 0
 10758  002174  0E8E               	movlw	142
 10759  002176  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10760  002178  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10761  00217A  B4D8               	btfsc	status,2,c
 10762  00217C  D1B4               	goto	u11440
 10763                           
 10764                           ; BSR set to: 0
 10765                           ;TabelasUmidade.h: 375: else
 10766                           ;TabelasUmidade.h: 376: if (_tmp == 143) _umd = 27;
 10767                           
 10768                           ; BSR set to: 0
 10769                           
 10770                           ; BSR set to: 0
 10771  00217E  0E8F               	movlw	143
 10772  002180  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10773  002182  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10774  002184  B4D8               	btfsc	status,2,c
 10775  002186  D1B7               	goto	u11450
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;TabelasUmidade.h: 377: else
 10779                           ;TabelasUmidade.h: 378: if (_tmp == 144) _umd = 26;
 10780                           
 10781                           ; BSR set to: 0
 10782                           
 10783                           ; BSR set to: 0
 10784  002188  0E90               	movlw	144
 10785  00218A  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10786  00218C  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10787  00218E  B4D8               	btfsc	status,2,c
 10788  002190  D1BA               	goto	u11460
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;TabelasUmidade.h: 379: else
 10792                           ;TabelasUmidade.h: 380: if (_tmp == 145) _umd = 25;
 10793                           
 10794                           ; BSR set to: 0
 10795                           
 10796                           ; BSR set to: 0
 10797  002192  0E91               	movlw	145
 10798  002194  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10799  002196  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10800  002198  B4D8               	btfsc	status,2,c
 10801  00219A  D1BD               	goto	u11470
 10802                           
 10803                           ; BSR set to: 0
 10804                           ;TabelasUmidade.h: 381: else
 10805                           ;TabelasUmidade.h: 382: if (_tmp == 146) _umd = 24;
 10806                           
 10807                           ; BSR set to: 0
 10808                           
 10809                           ; BSR set to: 0
 10810  00219C  0E92               	movlw	146
 10811  00219E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10812  0021A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10813  0021A2  B4D8               	btfsc	status,2,c
 10814  0021A4  D1C0               	goto	u11480
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;TabelasUmidade.h: 383: else
 10818                           ;TabelasUmidade.h: 384: if (_tmp == 147) _umd = 23;
 10819                           
 10820                           ; BSR set to: 0
 10821                           
 10822                           ; BSR set to: 0
 10823  0021A6  0E93               	movlw	147
 10824  0021A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10825  0021AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10826  0021AC  B4D8               	btfsc	status,2,c
 10827  0021AE  D1C3               	goto	u11490
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;TabelasUmidade.h: 385: else
 10831                           ;TabelasUmidade.h: 386: if (_tmp == 148) _umd = 22;
 10832                           
 10833                           ; BSR set to: 0
 10834                           
 10835                           ; BSR set to: 0
 10836  0021B0  0E94               	movlw	148
 10837  0021B2  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10838  0021B4  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10839  0021B6  B4D8               	btfsc	status,2,c
 10840  0021B8  D1C6               	goto	u11500
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;TabelasUmidade.h: 387: else
 10844                           ;TabelasUmidade.h: 388: if (_tmp == 149) _umd = 21;
 10845                           
 10846                           ; BSR set to: 0
 10847                           
 10848                           ; BSR set to: 0
 10849  0021BA  0E95               	movlw	149
 10850  0021BC  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10851  0021BE  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10852  0021C0  B4D8               	btfsc	status,2,c
 10853  0021C2  D1C9               	goto	u11510
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;TabelasUmidade.h: 389: else
 10857                           ;TabelasUmidade.h: 390: if (_tmp == 150) _umd = 20;
 10858                           
 10859                           ; BSR set to: 0
 10860                           
 10861                           ; BSR set to: 0
 10862  0021C4  0E96               	movlw	150
 10863  0021C6  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10864  0021C8  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10865  0021CA  B4D8               	btfsc	status,2,c
 10866  0021CC  D1CC               	goto	u11520
 10867                           
 10868                           ; BSR set to: 0
 10869                           ;TabelasUmidade.h: 391: else
 10870                           ;TabelasUmidade.h: 392: if (_tmp == 151) _umd = 19;
 10871                           
 10872                           ; BSR set to: 0
 10873                           
 10874                           ; BSR set to: 0
 10875  0021CE  0E97               	movlw	151
 10876  0021D0  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10877  0021D2  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10878  0021D4  B4D8               	btfsc	status,2,c
 10879  0021D6  D1CF               	goto	u11530
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;TabelasUmidade.h: 393: else
 10883                           ;TabelasUmidade.h: 394: if (_tmp == 152) _umd = 18;
 10884                           
 10885                           ; BSR set to: 0
 10886                           
 10887                           ; BSR set to: 0
 10888  0021D8  0E98               	movlw	152
 10889  0021DA  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10890  0021DC  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10891  0021DE  B4D8               	btfsc	status,2,c
 10892  0021E0  D1D2               	goto	u11540
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;TabelasUmidade.h: 395: else
 10896                           ;TabelasUmidade.h: 396: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 10897                           
 10898                           ; BSR set to: 0
 10899                           
 10900                           ; BSR set to: 0
 10901  0021E2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10902  0021E4  D00E               	goto	l748
 10903  0021E6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10904  0021E8  E104               	bnz	u10970
 10905  0021EA  0E99               	movlw	153
 10906  0021EC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10907  0021EE  A0D8               	btfss	status,0,c
 10908  0021F0  D008               	goto	l748
 10909  0021F2                     u10970:
 10910                           
 10911                           ; BSR set to: 0
 10912  0021F2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10913  0021F4  D1DB               	goto	u11560
 10914  0021F6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10915  0021F8  E104               	bnz	l7600
 10916  0021FA  0E9D               	movlw	157
 10917  0021FC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10918  0021FE  A0D8               	btfss	status,0,c
 10919  002200  D1D5               	goto	u11560
 10920  002202                     l748:
 10921  002202                     l7600:
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;TabelasUmidade.h: 397: else
 10925                           ;TabelasUmidade.h: 398: if (_tmp == 157) _umd = 16;
 10926  002202  0E9D               	movlw	157
 10927  002204  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10928  002206  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10929  002208  B4D8               	btfsc	status,2,c
 10930  00220A  D1D8               	goto	u11570
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;TabelasUmidade.h: 399: else
 10934                           ;TabelasUmidade.h: 400: if (_tmp >= 158) _umd = 15;
 10935                           
 10936                           ; BSR set to: 0
 10937                           
 10938                           ; BSR set to: 0
 10939  00220C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10940  00220E  D1EF               	goto	l638
 10941  002210  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10942  002212  E104               	bnz	u11000
 10943  002214                     L24:
 10944  002214  0E9E               	movlw	158
 10945  002216  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10946  002218  A0D8               	btfss	status,0,c
 10947  00221A  D1E9               	goto	l638
 10948  00221C                     u11000:
 10949  00221C  D1DA               	goto	u11580
 10950  00221E                     
 10951                           ; BSR set to: 0
 10952                           ;TabelasUmidade.h: 403: if (_tmp <= 92) _umd = 100;
 10953                           
 10954                           ; BSR set to: 0
 10955  00221E  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10956  002220  D006               	goto	u11010
 10957  002222  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10958  002224  E107               	bnz	l7612
 10959  002226  0E5D               	movlw	93
 10960  002228  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10961  00222A  B0D8               	btfsc	status,0,c
 10962  00222C  D003               	goto	l754
 10963  00222E                     u11010:
 10964                           
 10965                           ; BSR set to: 0
 10966  00222E  0E64               	movlw	100
 10967  002230  EF6E  F00B         	goto	L22
 10968  002234                     l754:
 10969  002234                     l7612:
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;TabelasUmidade.h: 404: else
 10973                           ;TabelasUmidade.h: 405: if (_tmp == 93) _umd = 99;
 10974  002234  0E5D               	movlw	93
 10975  002236  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 10976  002238  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10977  00223A  A4D8               	btfss	status,2,c
 10978  00223C  D003               	goto	l756
 10979  00223E                     u11020:
 10980                           
 10981                           ; BSR set to: 0
 10982  00223E  0E63               	movlw	99
 10983  002240  EF6E  F00B         	goto	L22
 10984  002244                     l756:
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;TabelasUmidade.h: 406: else
 10988                           ;TabelasUmidade.h: 407: if (_tmp >= 94 && _tmp <= 100) _umd = 98;
 10989                           
 10990                           ; BSR set to: 0
 10991  002244  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 10992  002246  D011               	goto	l758
 10993  002248  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 10994  00224A  E104               	bnz	u11030
 10995  00224C  0E5E               	movlw	94
 10996  00224E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 10997  002250  A0D8               	btfss	status,0,c
 10998  002252  D00B               	goto	l758
 10999  002254                     u11030:
 11000                           
 11001                           ; BSR set to: 0
 11002  002254  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11003  002256  D006               	goto	u11040
 11004  002258  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11005  00225A  E107               	bnz	l7622
 11006  00225C  0E65               	movlw	101
 11007  00225E  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11008  002260  B0D8               	btfsc	status,0,c
 11009  002262  D003               	goto	l758
 11010  002264                     u11040:
 11011                           
 11012                           ; BSR set to: 0
 11013  002264  0E62               	movlw	98
 11014  002266  EF6E  F00B         	goto	L22
 11015  00226A                     l758:
 11016  00226A                     l7622:
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;TabelasUmidade.h: 408: else
 11020                           ;TabelasUmidade.h: 409: if (_tmp >= 101 && _tmp <= 102) _umd = 88;
 11021  00226A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11022  00226C  D010               	goto	l760
 11023  00226E  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11024  002270  E104               	bnz	u11050
 11025  002272  0E65               	movlw	101
 11026  002274  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11027  002276  A0D8               	btfss	status,0,c
 11028  002278  D00A               	goto	l760
 11029  00227A                     u11050:
 11030                           
 11031                           ; BSR set to: 0
 11032  00227A  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11033  00227C  EF36  F00B         	goto	u8610
 11034  002280  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11035  002282  E105               	bnz	l7628
 11036  002284  0E67               	movlw	103
 11037  002286  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11038  002288  A0D8               	btfss	status,0,c
 11039  00228A  EF36  F00B         	goto	u8610
 11040  00228E                     l760:
 11041  00228E                     l7628:
 11042                           
 11043                           ; BSR set to: 0
 11044                           ;TabelasUmidade.h: 410: else
 11045                           ;TabelasUmidade.h: 411: if (_tmp == 103) _umd = 86;
 11046  00228E  0E67               	movlw	103
 11047  002290  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11048  002292  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11049  002294  B4D8               	btfsc	status,2,c
 11050  002296  EF28  F00B         	goto	u8590
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;TabelasUmidade.h: 412: else
 11054                           ;TabelasUmidade.h: 413: if (_tmp == 104) _umd = 85;
 11055                           
 11056                           ; BSR set to: 0
 11057                           
 11058                           ; BSR set to: 0
 11059  00229A  0E68               	movlw	104
 11060  00229C  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11061  00229E  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11062  0022A0  B4D8               	btfsc	status,2,c
 11063  0022A2  EF21  F00B         	goto	u8580
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;TabelasUmidade.h: 414: else
 11067                           ;TabelasUmidade.h: 415: if (_tmp == 105) _umd = 82;
 11068                           
 11069                           ; BSR set to: 0
 11070                           
 11071                           ; BSR set to: 0
 11072  0022A6  0E69               	movlw	105
 11073  0022A8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11074  0022AA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11075  0022AC  A4D8               	btfss	status,2,c
 11076  0022AE  D003               	goto	l766
 11077                           
 11078                           ; BSR set to: 0
 11079  0022B0  0E52               	movlw	82
 11080  0022B2  EF6E  F00B         	goto	L22
 11081  0022B6                     l766:
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;TabelasUmidade.h: 416: else
 11085                           ;TabelasUmidade.h: 417: if (_tmp == 106) _umd = 80;
 11086                           
 11087                           ; BSR set to: 0
 11088  0022B6  0E6A               	movlw	106
 11089  0022B8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11090  0022BA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11091  0022BC  A4D8               	btfss	status,2,c
 11092  0022BE  D003               	goto	l768
 11093  0022C0                     u11100:
 11094                           
 11095                           ; BSR set to: 0
 11096  0022C0  0E50               	movlw	80
 11097  0022C2  EF6E  F00B         	goto	L22
 11098  0022C6                     l768:
 11099                           
 11100                           ; BSR set to: 0
 11101                           ;TabelasUmidade.h: 418: else
 11102                           ;TabelasUmidade.h: 419: if (_tmp == 107) _umd = 78;
 11103                           
 11104                           ; BSR set to: 0
 11105  0022C6  0E6B               	movlw	107
 11106  0022C8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11107  0022CA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11108  0022CC  A4D8               	btfss	status,2,c
 11109  0022CE  D003               	goto	l770
 11110  0022D0                     u11110:
 11111                           
 11112                           ; BSR set to: 0
 11113  0022D0  0E4E               	movlw	78
 11114  0022D2  EF6E  F00B         	goto	L22
 11115  0022D6                     l770:
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;TabelasUmidade.h: 420: else
 11119                           ;TabelasUmidade.h: 421: if (_tmp == 108) _umd = 77;
 11120                           
 11121                           ; BSR set to: 0
 11122  0022D6  0E6C               	movlw	108
 11123  0022D8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11124  0022DA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11125  0022DC  A4D8               	btfss	status,2,c
 11126  0022DE  D003               	goto	l772
 11127  0022E0                     u11120:
 11128                           
 11129                           ; BSR set to: 0
 11130  0022E0  0E4D               	movlw	77
 11131  0022E2  EF6E  F00B         	goto	L22
 11132  0022E6                     l772:
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;TabelasUmidade.h: 422: else
 11136                           ;TabelasUmidade.h: 423: if (_tmp == 109) _umd = 76;
 11137                           
 11138                           ; BSR set to: 0
 11139  0022E6  0E6D               	movlw	109
 11140  0022E8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11141  0022EA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11142  0022EC  A4D8               	btfss	status,2,c
 11143  0022EE  D003               	goto	l774
 11144  0022F0                     u11130:
 11145                           
 11146                           ; BSR set to: 0
 11147  0022F0  0E4C               	movlw	76
 11148  0022F2  EF6E  F00B         	goto	L22
 11149  0022F6                     l774:
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;TabelasUmidade.h: 424: else
 11153                           ;TabelasUmidade.h: 425: if (_tmp == 110) _umd = 75;
 11154                           
 11155                           ; BSR set to: 0
 11156  0022F6  0E6E               	movlw	110
 11157  0022F8  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11158  0022FA  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11159  0022FC  A4D8               	btfss	status,2,c
 11160  0022FE  D003               	goto	l776
 11161  002300                     u11140:
 11162                           
 11163                           ; BSR set to: 0
 11164  002300  0E4B               	movlw	75
 11165  002302  EF6E  F00B         	goto	L22
 11166  002306                     l776:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;TabelasUmidade.h: 426: else
 11170                           ;TabelasUmidade.h: 427: if (_tmp >= 111 && _tmp <= 114) _umd = 70;
 11171                           
 11172                           ; BSR set to: 0
 11173  002306  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11174  002308  D011               	goto	l778
 11175  00230A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11176  00230C  E104               	bnz	u11150
 11177  00230E  0E6F               	movlw	111
 11178  002310  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11179  002312  A0D8               	btfss	status,0,c
 11180  002314  D00B               	goto	l778
 11181  002316                     u11150:
 11182                           
 11183                           ; BSR set to: 0
 11184  002316  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11185  002318  D006               	goto	u11160
 11186  00231A  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11187  00231C  E107               	bnz	l7666
 11188  00231E  0E73               	movlw	115
 11189  002320  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11190  002322  B0D8               	btfsc	status,0,c
 11191  002324  D003               	goto	l778
 11192  002326                     u11160:
 11193                           
 11194                           ; BSR set to: 0
 11195  002326  0E46               	movlw	70
 11196  002328  EF6E  F00B         	goto	L22
 11197  00232C                     l778:
 11198  00232C                     l7666:
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;TabelasUmidade.h: 428: else
 11202                           ;TabelasUmidade.h: 429: if (_tmp == 115) _umd = 68;
 11203  00232C  0E73               	movlw	115
 11204  00232E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11205  002330  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11206  002332  A4D8               	btfss	status,2,c
 11207  002334  D003               	goto	l780
 11208  002336                     u11170:
 11209                           
 11210                           ; BSR set to: 0
 11211  002336  0E44               	movlw	68
 11212  002338  EF6E  F00B         	goto	L22
 11213  00233C                     l780:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;TabelasUmidade.h: 430: else
 11217                           ;TabelasUmidade.h: 431: if (_tmp == 116) _umd = 66;
 11218                           
 11219                           ; BSR set to: 0
 11220  00233C  0E74               	movlw	116
 11221  00233E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11222  002340  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11223  002342  A4D8               	btfss	status,2,c
 11224  002344  D003               	goto	l782
 11225  002346                     u11180:
 11226                           
 11227                           ; BSR set to: 0
 11228  002346  0E42               	movlw	66
 11229  002348  EF6E  F00B         	goto	L22
 11230  00234C                     l782:
 11231                           
 11232                           ; BSR set to: 0
 11233                           ;TabelasUmidade.h: 432: else
 11234                           ;TabelasUmidade.h: 433: if (_tmp == 117) _umd = 64;
 11235                           
 11236                           ; BSR set to: 0
 11237  00234C  0E75               	movlw	117
 11238  00234E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11239  002350  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11240  002352  A4D8               	btfss	status,2,c
 11241  002354  D003               	goto	l784
 11242                           
 11243                           ; BSR set to: 0
 11244  002356  0E40               	movlw	64
 11245  002358  EF6E  F00B         	goto	L22
 11246  00235C                     l784:
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;TabelasUmidade.h: 434: else
 11250                           ;TabelasUmidade.h: 435: if (_tmp == 118) _umd = 62;
 11251                           
 11252                           ; BSR set to: 0
 11253  00235C  0E76               	movlw	118
 11254  00235E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11255  002360  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11256  002362  A4D8               	btfss	status,2,c
 11257  002364  D003               	goto	l786
 11258                           
 11259                           ; BSR set to: 0
 11260  002366  0E3E               	movlw	62
 11261  002368  EF6E  F00B         	goto	L22
 11262  00236C                     l786:
 11263                           
 11264                           ; BSR set to: 0
 11265                           ;TabelasUmidade.h: 436: else
 11266                           ;TabelasUmidade.h: 437: if (_tmp == 119) _umd = 60;
 11267                           
 11268                           ; BSR set to: 0
 11269  00236C  0E77               	movlw	119
 11270  00236E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11271  002370  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11272  002372  A4D8               	btfss	status,2,c
 11273  002374  D003               	goto	l788
 11274  002376                     u11210:
 11275                           
 11276                           ; BSR set to: 0
 11277  002376  0E3C               	movlw	60
 11278  002378  EF6E  F00B         	goto	L22
 11279  00237C                     l788:
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;TabelasUmidade.h: 438: else
 11283                           ;TabelasUmidade.h: 439: if (_tmp == 120) _umd = 58;
 11284                           
 11285                           ; BSR set to: 0
 11286  00237C  0E78               	movlw	120
 11287  00237E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11288  002380  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11289  002382  A4D8               	btfss	status,2,c
 11290  002384  D003               	goto	l790
 11291  002386                     u11220:
 11292                           
 11293                           ; BSR set to: 0
 11294  002386  0E3A               	movlw	58
 11295  002388  EF6E  F00B         	goto	L22
 11296  00238C                     l790:
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;TabelasUmidade.h: 440: else
 11300                           ;TabelasUmidade.h: 441: if (_tmp == 121) _umd = 56;
 11301                           
 11302                           ; BSR set to: 0
 11303  00238C  0E79               	movlw	121
 11304  00238E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11305  002390  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11306  002392  A4D8               	btfss	status,2,c
 11307  002394  D003               	goto	l792
 11308  002396                     u11230:
 11309                           
 11310                           ; BSR set to: 0
 11311  002396  0E38               	movlw	56
 11312  002398  EF6E  F00B         	goto	L22
 11313  00239C                     l792:
 11314                           
 11315                           ; BSR set to: 0
 11316                           ;TabelasUmidade.h: 442: else
 11317                           ;TabelasUmidade.h: 443: if (_tmp == 122) _umd = 55;
 11318                           
 11319                           ; BSR set to: 0
 11320  00239C  0E7A               	movlw	122
 11321  00239E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11322  0023A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11323  0023A2  A4D8               	btfss	status,2,c
 11324  0023A4  D003               	goto	l794
 11325  0023A6                     u11240:
 11326                           
 11327                           ; BSR set to: 0
 11328  0023A6  0E37               	movlw	55
 11329  0023A8  EF6E  F00B         	goto	L22
 11330  0023AC                     l794:
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;TabelasUmidade.h: 444: else
 11334                           ;TabelasUmidade.h: 445: if (_tmp == 123) _umd = 53;
 11335                           
 11336                           ; BSR set to: 0
 11337  0023AC  0E7B               	movlw	123
 11338  0023AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11339  0023B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11340  0023B2  A4D8               	btfss	status,2,c
 11341  0023B4  D003               	goto	l796
 11342  0023B6                     u11250:
 11343                           
 11344                           ; BSR set to: 0
 11345  0023B6  0E35               	movlw	53
 11346  0023B8  EF6E  F00B         	goto	L22
 11347  0023BC                     l796:
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;TabelasUmidade.h: 446: else
 11351                           ;TabelasUmidade.h: 447: if (_tmp == 124) _umd = 52;
 11352                           
 11353                           ; BSR set to: 0
 11354  0023BC  0E7C               	movlw	124
 11355  0023BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11356  0023C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11357  0023C2  A4D8               	btfss	status,2,c
 11358  0023C4  D003               	goto	l798
 11359  0023C6                     u11260:
 11360                           
 11361                           ; BSR set to: 0
 11362  0023C6  0E34               	movlw	52
 11363  0023C8  EF6E  F00B         	goto	L22
 11364  0023CC                     l798:
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;TabelasUmidade.h: 448: else
 11368                           ;TabelasUmidade.h: 449: if (_tmp == 125) _umd = 50;
 11369                           
 11370                           ; BSR set to: 0
 11371  0023CC  0E7D               	movlw	125
 11372  0023CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11373  0023D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11374  0023D2  A4D8               	btfss	status,2,c
 11375  0023D4  D003               	goto	l800
 11376  0023D6                     u11270:
 11377                           
 11378                           ; BSR set to: 0
 11379  0023D6  0E32               	movlw	50
 11380  0023D8  EF6E  F00B         	goto	L22
 11381  0023DC                     l800:
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;TabelasUmidade.h: 450: else
 11385                           ;TabelasUmidade.h: 451: if (_tmp == 126) _umd = 49;
 11386                           
 11387                           ; BSR set to: 0
 11388  0023DC  0E7E               	movlw	126
 11389  0023DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11390  0023E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11391  0023E2  A4D8               	btfss	status,2,c
 11392  0023E4  D003               	goto	l802
 11393                           
 11394                           ; BSR set to: 0
 11395  0023E6  0E31               	movlw	49
 11396  0023E8  EF6E  F00B         	goto	L22
 11397  0023EC                     l802:
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;TabelasUmidade.h: 452: else
 11401                           ;TabelasUmidade.h: 453: if (_tmp == 127) _umd = 47;
 11402                           
 11403                           ; BSR set to: 0
 11404  0023EC  0E7F               	movlw	127
 11405  0023EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11406  0023F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11407  0023F2  A4D8               	btfss	status,2,c
 11408  0023F4  D003               	goto	l804
 11409  0023F6                     u11290:
 11410                           
 11411                           ; BSR set to: 0
 11412  0023F6  0E2F               	movlw	47
 11413  0023F8  EF6E  F00B         	goto	L22
 11414  0023FC                     l804:
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;TabelasUmidade.h: 454: else
 11418                           ;TabelasUmidade.h: 455: if (_tmp == 128) _umd = 45;
 11419                           
 11420                           ; BSR set to: 0
 11421  0023FC  0E80               	movlw	128
 11422  0023FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11423  002400  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11424  002402  A4D8               	btfss	status,2,c
 11425  002404  D003               	goto	l806
 11426  002406                     u11300:
 11427                           
 11428                           ; BSR set to: 0
 11429  002406  0E2D               	movlw	45
 11430  002408  EF6E  F00B         	goto	L22
 11431  00240C                     l806:
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;TabelasUmidade.h: 456: else
 11435                           ;TabelasUmidade.h: 457: if (_tmp == 129) _umd = 43;
 11436                           
 11437                           ; BSR set to: 0
 11438  00240C  0E81               	movlw	129
 11439  00240E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11440  002410  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11441  002412  A4D8               	btfss	status,2,c
 11442  002414  D003               	goto	l808
 11443  002416                     u11310:
 11444                           
 11445                           ; BSR set to: 0
 11446  002416  0E2B               	movlw	43
 11447  002418  EF6E  F00B         	goto	L22
 11448  00241C                     l808:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;TabelasUmidade.h: 458: else
 11452                           ;TabelasUmidade.h: 459: if (_tmp == 130) _umd = 41;
 11453                           
 11454                           ; BSR set to: 0
 11455  00241C  0E82               	movlw	130
 11456  00241E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11457  002420  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11458  002422  A4D8               	btfss	status,2,c
 11459  002424  D003               	goto	l810
 11460  002426                     u11320:
 11461                           
 11462                           ; BSR set to: 0
 11463  002426  0E29               	movlw	41
 11464  002428  EF6E  F00B         	goto	L22
 11465  00242C                     l810:
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;TabelasUmidade.h: 460: else
 11469                           ;TabelasUmidade.h: 461: if (_tmp == 131) _umd = 40;
 11470                           
 11471                           ; BSR set to: 0
 11472  00242C  0E83               	movlw	131
 11473  00242E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11474  002430  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11475  002432  A4D8               	btfss	status,2,c
 11476  002434  D003               	goto	l812
 11477  002436                     u11330:
 11478                           
 11479                           ; BSR set to: 0
 11480  002436  0E28               	movlw	40
 11481  002438  EF6E  F00B         	goto	L22
 11482  00243C                     l812:
 11483                           
 11484                           ; BSR set to: 0
 11485                           ;TabelasUmidade.h: 462: else
 11486                           ;TabelasUmidade.h: 463: if (_tmp == 132) _umd = 39;
 11487                           
 11488                           ; BSR set to: 0
 11489  00243C  0E84               	movlw	132
 11490  00243E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11491  002440  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11492  002442  A4D8               	btfss	status,2,c
 11493  002444  D003               	goto	l814
 11494  002446                     u11340:
 11495                           
 11496                           ; BSR set to: 0
 11497  002446  0E27               	movlw	39
 11498  002448  EF6E  F00B         	goto	L22
 11499  00244C                     l814:
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;TabelasUmidade.h: 464: else
 11503                           ;TabelasUmidade.h: 465: if (_tmp == 133) _umd = 37;
 11504                           
 11505                           ; BSR set to: 0
 11506  00244C  0E85               	movlw	133
 11507  00244E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11508  002450  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11509  002452  A4D8               	btfss	status,2,c
 11510  002454  D003               	goto	l816
 11511  002456                     u11350:
 11512                           
 11513                           ; BSR set to: 0
 11514  002456  0E25               	movlw	37
 11515  002458  EF6E  F00B         	goto	L22
 11516  00245C                     l816:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;TabelasUmidade.h: 466: else
 11520                           ;TabelasUmidade.h: 467: if (_tmp == 134) _umd = 36;
 11521                           
 11522                           ; BSR set to: 0
 11523  00245C  0E86               	movlw	134
 11524  00245E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11525  002460  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11526  002462  A4D8               	btfss	status,2,c
 11527  002464  D003               	goto	l818
 11528  002466                     u11360:
 11529                           
 11530                           ; BSR set to: 0
 11531  002466  0E24               	movlw	36
 11532  002468  EF6E  F00B         	goto	L22
 11533  00246C                     l818:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;TabelasUmidade.h: 468: else
 11537                           ;TabelasUmidade.h: 469: if (_tmp == 135) _umd = 35;
 11538                           
 11539                           ; BSR set to: 0
 11540  00246C  0E87               	movlw	135
 11541  00246E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11542  002470  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11543  002472  A4D8               	btfss	status,2,c
 11544  002474  D003               	goto	l820
 11545  002476                     u11370:
 11546                           
 11547                           ; BSR set to: 0
 11548  002476  0E23               	movlw	35
 11549  002478  EF6E  F00B         	goto	L22
 11550  00247C                     l820:
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;TabelasUmidade.h: 470: else
 11554                           ;TabelasUmidade.h: 471: if (_tmp == 136) _umd = 34;
 11555                           
 11556                           ; BSR set to: 0
 11557  00247C  0E88               	movlw	136
 11558  00247E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11559  002480  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11560  002482  A4D8               	btfss	status,2,c
 11561  002484  D003               	goto	l822
 11562  002486                     u11380:
 11563                           
 11564                           ; BSR set to: 0
 11565  002486  0E22               	movlw	34
 11566  002488  EF6E  F00B         	goto	L22
 11567  00248C                     l822:
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;TabelasUmidade.h: 472: else
 11571                           ;TabelasUmidade.h: 473: if (_tmp == 137) _umd = 33;
 11572                           
 11573                           ; BSR set to: 0
 11574  00248C  0E89               	movlw	137
 11575  00248E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11576  002490  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11577  002492  A4D8               	btfss	status,2,c
 11578  002494  D003               	goto	l824
 11579  002496                     u11390:
 11580                           
 11581                           ; BSR set to: 0
 11582  002496  0E21               	movlw	33
 11583  002498  EF6E  F00B         	goto	L22
 11584  00249C                     l824:
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;TabelasUmidade.h: 474: else
 11588                           ;TabelasUmidade.h: 475: if (_tmp == 138) _umd = 32;
 11589                           
 11590                           ; BSR set to: 0
 11591  00249C  0E8A               	movlw	138
 11592  00249E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11593  0024A0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11594  0024A2  A4D8               	btfss	status,2,c
 11595  0024A4  D003               	goto	l826
 11596  0024A6                     u11400:
 11597                           
 11598                           ; BSR set to: 0
 11599  0024A6  0E20               	movlw	32
 11600  0024A8  EF6E  F00B         	goto	L22
 11601  0024AC                     l826:
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;TabelasUmidade.h: 476: else
 11605                           ;TabelasUmidade.h: 477: if (_tmp == 139) _umd = 31;
 11606                           
 11607                           ; BSR set to: 0
 11608  0024AC  0E8B               	movlw	139
 11609  0024AE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11610  0024B0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11611  0024B2  A4D8               	btfss	status,2,c
 11612  0024B4  D003               	goto	l828
 11613  0024B6                     u11410:
 11614                           
 11615                           ; BSR set to: 0
 11616  0024B6  0E1F               	movlw	31
 11617  0024B8  EF6E  F00B         	goto	L22
 11618  0024BC                     l828:
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;TabelasUmidade.h: 478: else
 11622                           ;TabelasUmidade.h: 479: if (_tmp == 140) _umd = 30;
 11623                           
 11624                           ; BSR set to: 0
 11625  0024BC  0E8C               	movlw	140
 11626  0024BE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11627  0024C0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11628  0024C2  A4D8               	btfss	status,2,c
 11629  0024C4  D003               	goto	l830
 11630  0024C6                     u11420:
 11631                           
 11632                           ; BSR set to: 0
 11633  0024C6  0E1E               	movlw	30
 11634  0024C8  EF6E  F00B         	goto	L22
 11635  0024CC                     l830:
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;TabelasUmidade.h: 480: else
 11639                           ;TabelasUmidade.h: 481: if (_tmp == 141) _umd = 29;
 11640                           
 11641                           ; BSR set to: 0
 11642  0024CC  0E8D               	movlw	141
 11643  0024CE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11644  0024D0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11645  0024D2  A4D8               	btfss	status,2,c
 11646  0024D4  D003               	goto	l832
 11647  0024D6                     u11430:
 11648                           
 11649                           ; BSR set to: 0
 11650  0024D6  0E1D               	movlw	29
 11651  0024D8  EF6E  F00B         	goto	L22
 11652  0024DC                     l832:
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;TabelasUmidade.h: 482: else
 11656                           ;TabelasUmidade.h: 483: if (_tmp == 142) _umd = 28;
 11657                           
 11658                           ; BSR set to: 0
 11659  0024DC  0E8E               	movlw	142
 11660  0024DE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11661  0024E0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11662  0024E2  A4D8               	btfss	status,2,c
 11663  0024E4  D003               	goto	l834
 11664  0024E6                     u11440:
 11665                           
 11666                           ; BSR set to: 0
 11667  0024E6  0E1C               	movlw	28
 11668  0024E8  EF6E  F00B         	goto	L22
 11669  0024EC                     l834:
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;TabelasUmidade.h: 484: else
 11673                           ;TabelasUmidade.h: 485: if (_tmp == 143) _umd = 27;
 11674                           
 11675                           ; BSR set to: 0
 11676  0024EC  0E8F               	movlw	143
 11677  0024EE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11678  0024F0  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11679  0024F2  A4D8               	btfss	status,2,c
 11680  0024F4  D003               	goto	l836
 11681  0024F6                     u11450:
 11682                           
 11683                           ; BSR set to: 0
 11684  0024F6  0E1B               	movlw	27
 11685  0024F8  EF6E  F00B         	goto	L22
 11686  0024FC                     l836:
 11687                           
 11688                           ; BSR set to: 0
 11689                           ;TabelasUmidade.h: 486: else
 11690                           ;TabelasUmidade.h: 487: if (_tmp == 144) _umd = 26;
 11691                           
 11692                           ; BSR set to: 0
 11693  0024FC  0E90               	movlw	144
 11694  0024FE  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11695  002500  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11696  002502  A4D8               	btfss	status,2,c
 11697  002504  D003               	goto	l838
 11698  002506                     u11460:
 11699                           
 11700                           ; BSR set to: 0
 11701  002506  0E1A               	movlw	26
 11702  002508  EF6E  F00B         	goto	L22
 11703  00250C                     l838:
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;TabelasUmidade.h: 488: else
 11707                           ;TabelasUmidade.h: 489: if (_tmp == 145) _umd = 25;
 11708                           
 11709                           ; BSR set to: 0
 11710  00250C  0E91               	movlw	145
 11711  00250E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11712  002510  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11713  002512  A4D8               	btfss	status,2,c
 11714  002514  D003               	goto	l840
 11715  002516                     u11470:
 11716                           
 11717                           ; BSR set to: 0
 11718  002516  0E19               	movlw	25
 11719  002518  EF6E  F00B         	goto	L22
 11720  00251C                     l840:
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;TabelasUmidade.h: 490: else
 11724                           ;TabelasUmidade.h: 491: if (_tmp == 146) _umd = 24;
 11725                           
 11726                           ; BSR set to: 0
 11727  00251C  0E92               	movlw	146
 11728  00251E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11729  002520  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11730  002522  A4D8               	btfss	status,2,c
 11731  002524  D003               	goto	l842
 11732  002526                     u11480:
 11733                           
 11734                           ; BSR set to: 0
 11735  002526  0E18               	movlw	24
 11736  002528  EF6E  F00B         	goto	L22
 11737  00252C                     l842:
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;TabelasUmidade.h: 492: else
 11741                           ;TabelasUmidade.h: 493: if (_tmp == 147) _umd = 23;
 11742                           
 11743                           ; BSR set to: 0
 11744  00252C  0E93               	movlw	147
 11745  00252E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11746  002530  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11747  002532  A4D8               	btfss	status,2,c
 11748  002534  D003               	goto	l844
 11749  002536                     u11490:
 11750                           
 11751                           ; BSR set to: 0
 11752  002536  0E17               	movlw	23
 11753  002538  EF6E  F00B         	goto	L22
 11754  00253C                     l844:
 11755                           
 11756                           ; BSR set to: 0
 11757                           ;TabelasUmidade.h: 494: else
 11758                           ;TabelasUmidade.h: 495: if (_tmp == 148) _umd = 22;
 11759                           
 11760                           ; BSR set to: 0
 11761  00253C  0E94               	movlw	148
 11762  00253E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11763  002540  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11764  002542  A4D8               	btfss	status,2,c
 11765  002544  D003               	goto	l846
 11766  002546                     u11500:
 11767                           
 11768                           ; BSR set to: 0
 11769  002546  0E16               	movlw	22
 11770  002548  EF6E  F00B         	goto	L22
 11771  00254C                     l846:
 11772                           
 11773                           ; BSR set to: 0
 11774                           ;TabelasUmidade.h: 496: else
 11775                           ;TabelasUmidade.h: 497: if (_tmp == 149) _umd = 21;
 11776                           
 11777                           ; BSR set to: 0
 11778  00254C  0E95               	movlw	149
 11779  00254E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11780  002550  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11781  002552  A4D8               	btfss	status,2,c
 11782  002554  D003               	goto	l848
 11783  002556                     u11510:
 11784                           
 11785                           ; BSR set to: 0
 11786  002556  0E15               	movlw	21
 11787  002558  EF6E  F00B         	goto	L22
 11788  00255C                     l848:
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;TabelasUmidade.h: 498: else
 11792                           ;TabelasUmidade.h: 499: if (_tmp == 150) _umd = 20;
 11793                           
 11794                           ; BSR set to: 0
 11795  00255C  0E96               	movlw	150
 11796  00255E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11797  002560  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11798  002562  A4D8               	btfss	status,2,c
 11799  002564  D003               	goto	l850
 11800  002566                     u11520:
 11801                           
 11802                           ; BSR set to: 0
 11803  002566  0E14               	movlw	20
 11804  002568  EF6E  F00B         	goto	L22
 11805  00256C                     l850:
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;TabelasUmidade.h: 500: else
 11809                           ;TabelasUmidade.h: 501: if (_tmp == 151) _umd = 19;
 11810                           
 11811                           ; BSR set to: 0
 11812  00256C  0E97               	movlw	151
 11813  00256E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11814  002570  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11815  002572  A4D8               	btfss	status,2,c
 11816  002574  D003               	goto	l852
 11817  002576                     u11530:
 11818                           
 11819                           ; BSR set to: 0
 11820  002576  0E13               	movlw	19
 11821  002578  EF6E  F00B         	goto	L22
 11822  00257C                     l852:
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;TabelasUmidade.h: 502: else
 11826                           ;TabelasUmidade.h: 503: if (_tmp == 152) _umd = 18;
 11827                           
 11828                           ; BSR set to: 0
 11829  00257C  0E98               	movlw	152
 11830  00257E  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11831  002580  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11832  002582  A4D8               	btfss	status,2,c
 11833  002584  D003               	goto	l854
 11834  002586                     u11540:
 11835                           
 11836                           ; BSR set to: 0
 11837  002586  0E12               	movlw	18
 11838  002588  EF6E  F00B         	goto	L22
 11839  00258C                     l854:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;TabelasUmidade.h: 504: else
 11843                           ;TabelasUmidade.h: 505: if (_tmp >= 153 && _tmp <= 156) _umd = 17;
 11844                           
 11845                           ; BSR set to: 0
 11846  00258C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11847  00258E  D011               	goto	l856
 11848  002590  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11849  002592  E104               	bnz	u11550
 11850  002594  0E99               	movlw	153
 11851  002596  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11852  002598  A0D8               	btfss	status,0,c
 11853  00259A  D00B               	goto	l856
 11854  00259C                     u11550:
 11855                           
 11856                           ; BSR set to: 0
 11857  00259C  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11858  00259E  D006               	goto	u11560
 11859  0025A0  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11860  0025A2  E107               	bnz	l7824
 11861  0025A4  0E9D               	movlw	157
 11862  0025A6  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11863  0025A8  B0D8               	btfsc	status,0,c
 11864  0025AA  D003               	goto	l856
 11865  0025AC                     u11560:
 11866                           
 11867                           ; BSR set to: 0
 11868  0025AC  0E11               	movlw	17
 11869  0025AE  EF6E  F00B         	goto	L22
 11870  0025B2                     l856:
 11871  0025B2                     l7824:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;TabelasUmidade.h: 506: else
 11875                           ;TabelasUmidade.h: 507: if (_tmp == 157) _umd = 16;
 11876  0025B2  0E9D               	movlw	157
 11877  0025B4  1960               	xorwf	tabelaUmidade@_tmp& (0+255),w,b
 11878  0025B6  1161               	iorwf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11879  0025B8  A4D8               	btfss	status,2,c
 11880  0025BA  D003               	goto	l858
 11881  0025BC                     u11570:
 11882                           
 11883                           ; BSR set to: 0
 11884  0025BC  0E10               	movlw	16
 11885  0025BE  EF6E  F00B         	goto	L22
 11886  0025C2                     l858:
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;TabelasUmidade.h: 508: else
 11890                           ;TabelasUmidade.h: 509: if (_tmp >= 158) _umd = 15;
 11891                           
 11892                           ; BSR set to: 0
 11893  0025C2  BF61               	btfsc	(tabelaUmidade@_tmp+1)& (0+255),7,b
 11894  0025C4  D014               	goto	l638
 11895  0025C6  5161               	movf	(tabelaUmidade@_tmp+1)& (0+255),w,b
 11896  0025C8  E104               	bnz	u11580
 11897  0025CA  0E9E               	movlw	158
 11898  0025CC  5D60               	subwf	tabelaUmidade@_tmp& (0+255),w,b
 11899  0025CE  A0D8               	btfss	status,0,c
 11900  0025D0  D00E               	goto	l638
 11901  0025D2                     u11580:
 11902                           
 11903                           ; BSR set to: 0
 11904  0025D2  0E0F               	movlw	15
 11905  0025D4  EF6E  F00B         	goto	L22
 11906  0025D8                     l525:
 11907                           
 11908                           ; BSR set to: 0
 11909                           
 11910                           ; BSR set to: 0
 11911  0025D8  51F5               	movf	_clima& (0+255),w,b
 11912                           
 11913                           ; Switch size 1, requested type "space"
 11914                           ; Number of cases is 3, Range of values is 1 to 3
 11915                           ; switch strategies available:
 11916                           ; Name         Instructions Cycles
 11917                           ; simple_byte           10     6 (average)
 11918                           ;	Chosen strategy is simple_byte
 11919  0025DA  0A01               	xorlw	1	; case 1
 11920  0025DC  B4D8               	btfsc	status,2,c
 11921  0025DE  EF39  F00E         	goto	l526
 11922  0025E2  0A03               	xorlw	3	; case 2
 11923  0025E4  B4D8               	btfsc	status,2,c
 11924  0025E6  D495               	goto	l639
 11925  0025E8  0A01               	xorlw	1	; case 3
 11926  0025EA  B4D8               	btfsc	status,2,c
 11927  0025EC  D618               	goto	l753
 11928  0025EE                     l638:
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;TabelasUmidade.h: 512: }
 11932                           ;TabelasUmidade.h: 513: return _umd;
 11933                           
 11934                           ; BSR set to: 0
 11935                           
 11936                           ; BSR set to: 0
 11937  0025EE  C067  F060         	movff	tabelaUmidade@_umd,?_tabelaUmidade
 11938  0025F2  6B61               	clrf	(?_tabelaUmidade+1)& (0+255),b
 11939                           
 11940                           ; BSR set to: 0
 11941  0025F4  0012               	return		;funcret
 11942  0025F6                     __end_of_tabelaUmidade:
 11943                           	opt stack 0
 11944                           tblptru	equ	0xFF8
 11945                           tblptrh	equ	0xFF7
 11946                           tblptrl	equ	0xFF6
 11947                           tablat	equ	0xFF5
 11948                           prodh	equ	0xFF4
 11949                           prodl	equ	0xFF3
 11950                           intcon	equ	0xFF2
 11951                           intcon2	equ	0xFF1
 11952                           intcon3	equ	0xFF0
 11953                           postinc0	equ	0xFEE
 11954                           wreg	equ	0xFE8
 11955                           postdec1	equ	0xFE5
 11956                           fsr1l	equ	0xFE1
 11957                           indf2	equ	0xFDF
 11958                           fsr2h	equ	0xFDA
 11959                           fsr2l	equ	0xFD9
 11960                           status	equ	0xFD8
 11961                           
 11962 ;; *************** function _setRangeValor *****************
 11963 ;; Defined at:
 11964 ;;		line 76 in file "src/FuncoesControlador.h"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;  _acao           1    wreg     unsigned char 
 11967 ;;  _var_ajt        2    5[BANK0 ] PTR unsigned char 
 11968 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 11969 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 11970 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 11971 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 11972 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 11973 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 11974 ;;		 -> clima(1), 
 11975 ;;  _min            1    7[BANK0 ] unsigned char 
 11976 ;;  _max            1    8[BANK0 ] unsigned char 
 11977 ;;  end_eeprom      1    9[BANK0 ] unsigned char 
 11978 ;; Auto vars:     Size  Location     Type
 11979 ;;  _acao           1   13[BANK0 ] unsigned char 
 11980 ;;  _aux            2   14[BANK0 ] int 
 11981 ;; Return value:  Size  Location     Type
 11982 ;;                  1    wreg      void 
 11983 ;; Registers used:
 11984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11985 ;; Tracked objects:
 11986 ;;		On entry : 0/0
 11987 ;;		On exit  : 0/0
 11988 ;;		Unchanged: 0/0
 11989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11990 ;;      Params:         0       5       0       0       0       0       0       0       0
 11991 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11992 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11993 ;;      Totals:         0      11       0       0       0       0       0       0       0
 11994 ;;Total ram usage:       11 bytes
 11995 ;; Hardware stack levels used:    1
 11996 ;; Hardware stack levels required when called:    9
 11997 ;; This function calls:
 11998 ;;		_writeEEPROM_ext
 11999 ;; This function is called by:
 12000 ;;		_main
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text4
 12005  004FB2                     __ptext4:
 12006                           	opt stack 0
 12007  004FB2                     _setRangeValor:
 12008                           	opt stack 21
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;incstack = 0
 12012                           ;setRangeValor@_acao stored from wreg
 12013  004FB2  0100               	movlb	0	; () banked
 12014  004FB4  6F6D               	movwf	setRangeValor@_acao& (0+255),b
 12015                           
 12016                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 12017  004FB6  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12018  004FBA  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12019  004FBE  50DF               	movf	indf2,w,c
 12020  004FC0  0100               	movlb	0	; () banked
 12021  004FC2  6F6A               	movwf	??_setRangeValor& (0+255),b
 12022  004FC4  516A               	movf	??_setRangeValor& (0+255),w,b
 12023  004FC6  6F6E               	movwf	setRangeValor@_aux& (0+255),b
 12024  004FC8  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12025                           
 12026                           ;FuncoesControlador.h: 78: switch (_acao) {
 12027  004FCA  D02C               	goto	l942
 12028  004FCC                     
 12029                           ; BSR set to: 0
 12030                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 12031                           
 12032                           ; BSR set to: 0
 12033  004FCC  5168               	movf	setRangeValor@_max& (0+255),w,b
 12034  004FCE  6F6A               	movwf	??_setRangeValor& (0+255),b
 12035  004FD0  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12036  004FD2  516A               	movf	??_setRangeValor& (0+255),w,b
 12037  004FD4  5D6E               	subwf	setRangeValor@_aux& (0+255),w,b
 12038  004FD6  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12039  004FD8  0A80               	xorlw	128
 12040  004FDA  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12041  004FDC  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12042  004FDE  0A80               	xorlw	128
 12043  004FE0  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12044  004FE2  B0D8               	btfsc	status,0,c
 12045  004FE4  D003               	goto	l945
 12046                           
 12047                           ; BSR set to: 0
 12048  004FE6  4B6E               	infsnz	setRangeValor@_aux& (0+255),f,b
 12049  004FE8  2B6F               	incf	(setRangeValor@_aux+1)& (0+255),f,b
 12050  004FEA  D013               	goto	L25
 12051  004FEC                     l945:
 12052                           
 12053                           ; BSR set to: 0
 12054  004FEC  C067  F06E         	movff	setRangeValor@_min,setRangeValor@_aux
 12055  004FF0  D017               	goto	L26
 12056  004FF2                     
 12057                           ; BSR set to: 0
 12058                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 12059                           
 12060                           ; BSR set to: 0
 12061  004FF2  5167               	movf	setRangeValor@_min& (0+255),w,b
 12062  004FF4  6F6A               	movwf	??_setRangeValor& (0+255),b
 12063  004FF6  6B6B               	clrf	(??_setRangeValor+1)& (0+255),b
 12064  004FF8  516E               	movf	setRangeValor@_aux& (0+255),w,b
 12065  004FFA  5D6A               	subwf	??_setRangeValor& (0+255),w,b
 12066  004FFC  516B               	movf	(??_setRangeValor+1)& (0+255),w,b
 12067  004FFE  0A80               	xorlw	128
 12068  005000  6F6C               	movwf	(??_setRangeValor+2)& (0+255),b
 12069  005002  516F               	movf	(setRangeValor@_aux+1)& (0+255),w,b
 12070  005004  0A80               	xorlw	128
 12071  005006  596C               	subwfb	(??_setRangeValor+2)& (0+255),w,b
 12072  005008  B0D8               	btfsc	status,0,c
 12073  00500A  D008               	goto	l951
 12074                           
 12075                           ; BSR set to: 0
 12076  00500C  076E               	decf	setRangeValor@_aux& (0+255),f,b
 12077  00500E  A0D8               	btfss	status,0,c
 12078  005010  076F               	decf	(setRangeValor@_aux+1)& (0+255),f,b
 12079  005012                     L25:
 12080  005012  C06E  F06E         	movff	setRangeValor@_aux,setRangeValor@_aux
 12081  005016  C06F  F06F         	movff	setRangeValor@_aux+1,setRangeValor@_aux+1
 12082  00501A  D00B               	goto	l948
 12083  00501C                     l951:
 12084                           
 12085                           ; BSR set to: 0
 12086  00501C  C068  F06E         	movff	setRangeValor@_max,setRangeValor@_aux
 12087  005020                     L26:
 12088  005020  6B6F               	clrf	(setRangeValor@_aux+1)& (0+255),b
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;FuncoesControlador.h: 85: }
 12092                           
 12093                           ; BSR set to: 0
 12094                           ;FuncoesControlador.h: 84: break;
 12095  005022  D007               	goto	l948
 12096  005024                     l942:
 12097                           
 12098                           ; BSR set to: 0
 12099                           
 12100                           ; BSR set to: 0
 12101  005024  516D               	movf	setRangeValor@_acao& (0+255),w,b
 12102                           
 12103                           ; Switch size 1, requested type "space"
 12104                           ; Number of cases is 2, Range of values is 43 to 45
 12105                           ; switch strategies available:
 12106                           ; Name         Instructions Cycles
 12107                           ; simple_byte            7     4 (average)
 12108                           ;	Chosen strategy is simple_byte
 12109  005026  0A2B               	xorlw	43	; case 43
 12110  005028  B4D8               	btfsc	status,2,c
 12111  00502A  D7D0               	goto	l943
 12112  00502C  0A06               	xorlw	6	; case 45
 12113  00502E  B4D8               	btfsc	status,2,c
 12114  005030  D7E0               	goto	l949
 12115  005032                     l948:
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 12119                           
 12120                           ; BSR set to: 0
 12121  005032  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12122  005034  B4D8               	btfsc	status,2,c
 12123  005036  D005               	goto	l954
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 12127  005038  C06E  F063         	movff	setRangeValor@_aux,writeEEPROM_ext@data
 12128  00503C  5169               	movf	setRangeValor@end_eeprom& (0+255),w,b
 12129  00503E  EC11  F02C         	call	_writeEEPROM_ext
 12130  005042                     l954:
 12131                           
 12132                           ;FuncoesControlador.h: 88: }
 12133                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 12134  005042  C065  FFD9         	movff	setRangeValor@_var_ajt,fsr2l
 12135  005046  C066  FFDA         	movff	setRangeValor@_var_ajt+1,fsr2h
 12136  00504A  C06E  FFDF         	movff	setRangeValor@_aux,indf2
 12137  00504E  0012               	return		;funcret
 12138  005050                     __end_of_setRangeValor:
 12139                           	opt stack 0
 12140                           tblptru	equ	0xFF8
 12141                           tblptrh	equ	0xFF7
 12142                           tblptrl	equ	0xFF6
 12143                           tablat	equ	0xFF5
 12144                           prodh	equ	0xFF4
 12145                           prodl	equ	0xFF3
 12146                           intcon	equ	0xFF2
 12147                           intcon2	equ	0xFF1
 12148                           intcon3	equ	0xFF0
 12149                           postinc0	equ	0xFEE
 12150                           wreg	equ	0xFE8
 12151                           postdec1	equ	0xFE5
 12152                           fsr1l	equ	0xFE1
 12153                           indf2	equ	0xFDF
 12154                           fsr2h	equ	0xFDA
 12155                           fsr2l	equ	0xFD9
 12156                           status	equ	0xFD8
 12157                           
 12158 ;; *************** function _readEEPROM_ext *****************
 12159 ;; Defined at:
 12160 ;;		line 26 in file "src/Eeprom_ext.h"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  adress          1    wreg     unsigned char 
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  adress          1    5[BANK0 ] unsigned char 
 12165 ;;  data            1    6[BANK0 ] unsigned char 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      unsigned char 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0
 12176 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12177 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12178 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        2 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    8
 12182 ;; This function calls:
 12183 ;;		_I2C_Read
 12184 ;;		_I2C_Restart
 12185 ;;		_I2C_Start
 12186 ;;		_I2C_Stop
 12187 ;;		_I2C_Write
 12188 ;; This function is called by:
 12189 ;;		_main
 12190 ;;		_readEEPROM16_ext
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text5
 12195  0056AE                     __ptext5:
 12196                           	opt stack 0
 12197  0056AE                     _readEEPROM_ext:
 12198                           	opt stack 22
 12199                           
 12200                           ;incstack = 0
 12201                           ;readEEPROM_ext@adress stored from wreg
 12202  0056AE  0100               	movlb	0	; () banked
 12203  0056B0  6F65               	movwf	readEEPROM_ext@adress& (0+255),b
 12204                           
 12205                           ;Eeprom_ext.h: 27: I2C_Start();
 12206  0056B2  EC2F  F02E         	call	_I2C_Start	;wreg free
 12207                           
 12208                           ;Eeprom_ext.h: 28: I2C_Write(0xA0);
 12209  0056B6  0E00               	movlw	0
 12210  0056B8  0100               	movlb	0	; () banked
 12211  0056BA  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12212  0056BC  0EA0               	movlw	160
 12213  0056BE  6F61               	movwf	I2C_Write@d& (0+255),b
 12214  0056C0  EC1D  F02E         	call	_I2C_Write	;wreg free
 12215                           
 12216                           ;Eeprom_ext.h: 30: I2C_Write(adress);
 12217  0056C4  C065  F061         	movff	readEEPROM_ext@adress,I2C_Write@d
 12218  0056C8  0100               	movlb	0	; () banked
 12219  0056CA  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 12220  0056CC  EC1D  F02E         	call	_I2C_Write	;wreg free
 12221                           
 12222                           ;Eeprom_ext.h: 31: I2C_Restart();
 12223  0056D0  EC27  F02E         	call	_I2C_Restart	;wreg free
 12224                           
 12225                           ;Eeprom_ext.h: 32: I2C_Write(0xA1);
 12226  0056D4  0E00               	movlw	0
 12227  0056D6  0100               	movlb	0	; () banked
 12228  0056D8  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 12229  0056DA  0EA1               	movlw	161
 12230  0056DC  6F61               	movwf	I2C_Write@d& (0+255),b
 12231  0056DE  EC1D  F02E         	call	_I2C_Write	;wreg free
 12232                           
 12233                           ;Eeprom_ext.h: 33: unsigned char data = I2C_Read(0);
 12234  0056E2  0E00               	movlw	0
 12235  0056E4  0100               	movlb	0	; () banked
 12236  0056E6  6F62               	movwf	(I2C_Read@a+1)& (0+255),b
 12237  0056E8  0E00               	movlw	0
 12238  0056EA  6F61               	movwf	I2C_Read@a& (0+255),b
 12239  0056EC  EC89  F02C         	call	_I2C_Read	;wreg free
 12240  0056F0  0100               	movlb	0	; () banked
 12241  0056F2  5161               	movf	?_I2C_Read& (0+255),w,b
 12242  0056F4  6F66               	movwf	readEEPROM_ext@data& (0+255),b
 12243                           
 12244                           ;Eeprom_ext.h: 34: I2C_Stop();
 12245  0056F6  EC2B  F02E         	call	_I2C_Stop	;wreg free
 12246                           
 12247                           ;Eeprom_ext.h: 35: return data;
 12248  0056FA  0100               	movlb	0	; () banked
 12249  0056FC  5166               	movf	readEEPROM_ext@data& (0+255),w,b
 12250  0056FE  0012               	return	
 12251  005700                     __end_of_readEEPROM_ext:
 12252                           	opt stack 0
 12253                           tblptru	equ	0xFF8
 12254                           tblptrh	equ	0xFF7
 12255                           tblptrl	equ	0xFF6
 12256                           tablat	equ	0xFF5
 12257                           prodh	equ	0xFF4
 12258                           prodl	equ	0xFF3
 12259                           intcon	equ	0xFF2
 12260                           intcon2	equ	0xFF1
 12261                           intcon3	equ	0xFF0
 12262                           postinc0	equ	0xFEE
 12263                           wreg	equ	0xFE8
 12264                           postdec1	equ	0xFE5
 12265                           fsr1l	equ	0xFE1
 12266                           indf2	equ	0xFDF
 12267                           fsr2h	equ	0xFDA
 12268                           fsr2l	equ	0xFD9
 12269                           status	equ	0xFD8
 12270                           
 12271 ;; *************** function _I2C_Restart *****************
 12272 ;; Defined at:
 12273 ;;		line 30 in file "src/I2C.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, status,2, status,0, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    7
 12294 ;; This function calls:
 12295 ;;		_I2C_Wait
 12296 ;; This function is called by:
 12297 ;;		_readEEPROM_ext
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text6
 12302  005C4E                     __ptext6:
 12303                           	opt stack 0
 12304  005C4E                     _I2C_Restart:
 12305                           	opt stack 22
 12306                           
 12307                           ;I2C.c: 31: I2C_Wait();
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;incstack = 0
 12311  005C4E  ECF6  F02D         	call	_I2C_Wait	;wreg free
 12312                           
 12313                           ;I2C.c: 32: RSEN = 1;
 12314  005C52  82C5               	bsf	4037,1,c	;volatile
 12315  005C54  0012               	return		;funcret
 12316  005C56                     __end_of_I2C_Restart:
 12317                           	opt stack 0
 12318                           tblptru	equ	0xFF8
 12319                           tblptrh	equ	0xFF7
 12320                           tblptrl	equ	0xFF6
 12321                           tablat	equ	0xFF5
 12322                           prodh	equ	0xFF4
 12323                           prodl	equ	0xFF3
 12324                           intcon	equ	0xFF2
 12325                           intcon2	equ	0xFF1
 12326                           intcon3	equ	0xFF0
 12327                           postinc0	equ	0xFEE
 12328                           wreg	equ	0xFE8
 12329                           postdec1	equ	0xFE5
 12330                           fsr1l	equ	0xFE1
 12331                           indf2	equ	0xFDF
 12332                           fsr2h	equ	0xFDA
 12333                           fsr2l	equ	0xFD9
 12334                           status	equ	0xFD8
 12335                           
 12336 ;; *************** function _I2C_Read *****************
 12337 ;; Defined at:
 12338 ;;		line 46 in file "src/I2C.c"
 12339 ;; Parameters:    Size  Location     Type
 12340 ;;  a               2    1[BANK0 ] unsigned short 
 12341 ;; Auto vars:     Size  Location     Type
 12342 ;;  temp            2    3[BANK0 ] unsigned short 
 12343 ;; Return value:  Size  Location     Type
 12344 ;;                  2    1[BANK0 ] unsigned short 
 12345 ;; Registers used:
 12346 ;;		wreg, status,2, status,0, cstack
 12347 ;; Tracked objects:
 12348 ;;		On entry : 0/0
 12349 ;;		On exit  : 0/0
 12350 ;;		Unchanged: 0/0
 12351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12352 ;;      Params:         0       2       0       0       0       0       0       0       0
 12353 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12354 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12355 ;;      Totals:         0       4       0       0       0       0       0       0       0
 12356 ;;Total ram usage:        4 bytes
 12357 ;; Hardware stack levels used:    1
 12358 ;; Hardware stack levels required when called:    7
 12359 ;; This function calls:
 12360 ;;		_I2C_Wait
 12361 ;; This function is called by:
 12362 ;;		_readEEPROM_ext
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text7
 12367  005912                     __ptext7:
 12368                           	opt stack 0
 12369  005912                     _I2C_Read:
 12370                           	opt stack 22
 12371                           
 12372                           ;I2C.c: 47: unsigned short temp;
 12373                           ;I2C.c: 48: I2C_Wait();
 12374                           
 12375                           ;incstack = 0
 12376  005912  ECF6  F02D         	call	_I2C_Wait	;wreg free
 12377                           
 12378                           ;I2C.c: 49: RCEN = 1;
 12379  005916  86C5               	bsf	4037,3,c	;volatile
 12380                           
 12381                           ;I2C.c: 50: I2C_Wait();
 12382  005918  ECF6  F02D         	call	_I2C_Wait	;wreg free
 12383                           
 12384                           ;I2C.c: 51: temp = SSPBUF;
 12385  00591C  CFC9 F063          	movff	4041,I2C_Read@temp	;volatile
 12386  005920  0100               	movlb	0	; () banked
 12387  005922  6B64               	clrf	(I2C_Read@temp+1)& (0+255),b
 12388                           
 12389                           ;I2C.c: 52: I2C_Wait();
 12390  005924  ECF6  F02D         	call	_I2C_Wait	;wreg free
 12391                           
 12392                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 12393  005928  0100               	movlb	0	; () banked
 12394  00592A  5161               	movf	I2C_Read@a& (0+255),w,b
 12395  00592C  1162               	iorwf	(I2C_Read@a+1)& (0+255),w,b
 12396  00592E  A4D8               	btfss	status,2,c
 12397  005930  D002               	goto	u8550
 12398  005932  8AC5               	bsf	4037,5,c	;volatile
 12399  005934  D001               	goto	u8565
 12400  005936                     u8550:
 12401  005936  9AC5               	bcf	4037,5,c	;volatile
 12402  005938                     u8565:
 12403                           
 12404                           ;I2C.c: 54: ACKEN = 1;
 12405  005938  88C5               	bsf	4037,4,c	;volatile
 12406                           
 12407                           ;I2C.c: 55: return temp;
 12408  00593A  C063  F061         	movff	I2C_Read@temp,?_I2C_Read
 12409  00593E  C064  F062         	movff	I2C_Read@temp+1,?_I2C_Read+1
 12410  005942  0012               	return	
 12411  005944                     __end_of_I2C_Read:
 12412                           	opt stack 0
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           intcon	equ	0xFF2
 12420                           intcon2	equ	0xFF1
 12421                           intcon3	equ	0xFF0
 12422                           postinc0	equ	0xFEE
 12423                           wreg	equ	0xFE8
 12424                           postdec1	equ	0xFE5
 12425                           fsr1l	equ	0xFE1
 12426                           indf2	equ	0xFDF
 12427                           fsr2h	equ	0xFDA
 12428                           fsr2l	equ	0xFD9
 12429                           status	equ	0xFD8
 12430                           
 12431 ;; *************** function _getSensors *****************
 12432 ;; Defined at:
 12433 ;;		line 22 in file "src/ADC.h"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;		None
 12436 ;; Auto vars:     Size  Location     Type
 12437 ;;  auxx            3   77[BANK0 ] float 
 12438 ;;  aux             3   84[BANK0 ] float 
 12439 ;;  i               1   83[BANK0 ] unsigned char 
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  2  1223[None  ] int 
 12442 ;; Registers used:
 12443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12449 ;;      Params:         0       0       0       0       0       0       0       0       0
 12450 ;;      Locals:         0      18       0       0       0       0       0       0       0
 12451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12452 ;;      Totals:         0      18       0       0       0       0       0       0       0
 12453 ;;Total ram usage:       18 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:    8
 12456 ;; This function calls:
 12457 ;;		___ftadd
 12458 ;;		___ftdiv
 12459 ;;		___ftge
 12460 ;;		___ftmul
 12461 ;;		___fttol
 12462 ;;		___lwtoft
 12463 ;;		_readADC
 12464 ;; This function is called by:
 12465 ;;		_main
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           
 12469                           	psect	text8
 12470  0030E6                     __ptext8:
 12471                           	opt stack 0
 12472  0030E6                     _getSensors:
 12473                           	opt stack 22
 12474                           
 12475                           ;ADC.h: 23: unsigned char i = 0;
 12476                           
 12477                           ;incstack = 0
 12478  0030E6  0E00               	movlw	0
 12479  0030E8  0100               	movlb	0	; () banked
 12480  0030EA  6FB3               	movwf	getSensors@i& (0+255),b
 12481                           
 12482                           ;ADC.h: 24: float aux = 0;
 12483  0030EC  0E00               	movlw	0
 12484  0030EE  6FB4               	movwf	getSensors@aux& (0+255),b
 12485  0030F0  0E00               	movlw	0
 12486  0030F2  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12487  0030F4  0E00               	movlw	0
 12488  0030F6  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12489                           
 12490                           ;ADC.h: 26: if (t_leitura_adc == 0) {
 12491  0030F8  5036               	movf	_t_leitura_adc,w,c
 12492  0030FA  A4D8               	btfss	status,2,c
 12493  0030FC  D1F3               	goto	l1224
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;ADC.h: 27: t_leitura_adc = 10;
 12497  0030FE  0E0A               	movlw	10
 12498  003100  6E36               	movwf	_t_leitura_adc,c
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;ADC.h: 28: media_adc = (media_adc >= 10) ? 0 : ++media_adc;
 12502  003102  0E0A               	movlw	10
 12503  003104  6035               	cpfslt	_media_adc,c
 12504  003106  D005               	goto	l1226
 12505                           
 12506                           ; BSR set to: 0
 12507  003108  2A35               	incf	_media_adc,f,c
 12508  00310A  C035  F0AB         	movff	_media_adc,_getSensors$1514
 12509  00310E  6BAC               	clrf	(_getSensors$1514+1)& (0+255),b
 12510  003110  D004               	goto	l1228
 12511  003112                     l1226:
 12512                           
 12513                           ; BSR set to: 0
 12514                           
 12515                           ; BSR set to: 0
 12516  003112  0E00               	movlw	0
 12517  003114  6FAC               	movwf	(_getSensors$1514+1)& (0+255),b
 12518  003116  0E00               	movlw	0
 12519  003118  6FAB               	movwf	_getSensors$1514& (0+255),b
 12520  00311A                     l1228:
 12521                           
 12522                           ; BSR set to: 0
 12523                           
 12524                           ; BSR set to: 0
 12525  00311A  C0AB  F035         	movff	_getSensors$1514,_media_adc
 12526                           
 12527                           ;ADC.h: 31: aux = 0;
 12528  00311E  0E00               	movlw	0
 12529  003120  6FB4               	movwf	getSensors@aux& (0+255),b
 12530  003122  0E00               	movlw	0
 12531  003124  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12532  003126  0E00               	movlw	0
 12533  003128  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12534                           
 12535                           ;ADC.h: 32: for (i = 0; i < 12; i++) {
 12536  00312A  0E00               	movlw	0
 12537  00312C  6FB3               	movwf	getSensors@i& (0+255),b
 12538  00312E                     l9126:
 12539                           
 12540                           ; BSR set to: 0
 12541  00312E  0E0B               	movlw	11
 12542  003130  65B3               	cpfsgt	getSensors@i& (0+255),b
 12543  003132  D001               	goto	l1229
 12544  003134  D042               	goto	u13940
 12545  003136                     l1229:
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12549                           
 12550                           ; BSR set to: 0
 12551  003136  0E00               	movlw	0
 12552  003138  6F7E               	movwf	___ftadd@f2& (0+255),b
 12553  00313A  0E00               	movlw	0
 12554  00313C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12555  00313E  0E42               	movlw	66
 12556  003140  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12557  003142  0E00               	movlw	0
 12558  003144  6F6F               	movwf	___ftmul@f2& (0+255),b
 12559  003146  0E61               	movlw	97
 12560  003148  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12561  00314A  0E3F               	movlw	63
 12562  00314C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12563  00314E  0E00               	movlw	0
 12564  003150  EC76  F028         	call	_readADC
 12565  003154  C060  F069         	movff	?_readADC,___lwtoft@c
 12566  003158  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12567  00315C  EC82  F02D         	call	___lwtoft	;wreg free
 12568  003160  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12569  003164  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12570  003168  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12571  00316C  ECC1  F024         	call	___ftmul	;wreg free
 12572  003170  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12573  003174  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12574  003178  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12575  00317C  ECD0  F021         	call	___ftadd	;wreg free
 12576  003180  C07B  F0B0         	movff	?___ftadd,_getSensors$2517
 12577  003184  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2517+1
 12578  003188  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2517+2
 12579                           
 12580                           ;ADC.h: 33: aux += (((readADC(0)* 0.48828125)*1.8) + 32);
 12581  00318C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12582  003190  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12583  003194  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12584  003198  C0B0  F07E         	movff	_getSensors$2517,___ftadd@f2
 12585  00319C  C0B1  F07F         	movff	_getSensors$2517+1,___ftadd@f2+1
 12586  0031A0  C0B2  F080         	movff	_getSensors$2517+2,___ftadd@f2+2
 12587  0031A4  ECD0  F021         	call	___ftadd	;wreg free
 12588  0031A8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12589  0031AC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12590  0031B0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12591  0031B4  0100               	movlb	0	; () banked
 12592  0031B6  2BB3               	incf	getSensors@i& (0+255),f,b
 12593  0031B8  D7BA               	goto	l9126
 12594  0031BA                     u13940:
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;ADC.h: 34: }
 12598                           ;ADC.h: 35: aux = (aux / 12);
 12599                           
 12600                           ; BSR set to: 0
 12601  0031BA  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12602  0031BE  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12603  0031C2  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12604  0031C6  0E00               	movlw	0
 12605  0031C8  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12606  0031CA  0E40               	movlw	64
 12607  0031CC  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12608  0031CE  0E41               	movlw	65
 12609  0031D0  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12610  0031D2  EC3C  F025         	call	___ftdiv	;wreg free
 12611  0031D6  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12612  0031DA  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12613  0031DE  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12614                           
 12615                           ;ADC.h: 36: _temp[media_adc] = (aux <= 37) ? 0 : aux+1;
 12616  0031E2  0E00               	movlw	0
 12617  0031E4  0100               	movlb	0	; () banked
 12618  0031E6  6F60               	movwf	___ftge@ff1& (0+255),b
 12619  0031E8  0E14               	movlw	20
 12620  0031EA  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12621  0031EC  0E42               	movlw	66
 12622  0031EE  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12623  0031F0  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12624  0031F4  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12625  0031F8  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12626  0031FC  EC10  F029         	call	___ftge	;wreg free
 12627  003200  0100               	movlb	0	; () banked
 12628  003202  B0D8               	btfsc	status,0,c
 12629  003204  D015               	goto	l1232
 12630                           
 12631                           ; BSR set to: 0
 12632  003206  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12633  00320A  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12634  00320E  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12635  003212  0E00               	movlw	0
 12636  003214  6F7E               	movwf	___ftadd@f2& (0+255),b
 12637  003216  0E80               	movlw	128
 12638  003218  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12639  00321A  0E3F               	movlw	63
 12640  00321C  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12641  00321E  ECD0  F021         	call	___ftadd	;wreg free
 12642  003222  C07B  F0A5         	movff	?___ftadd,_getSensors$1516
 12643  003226  C07C  F0A6         	movff	?___ftadd+1,_getSensors$1516+1
 12644  00322A  C07D  F0A7         	movff	?___ftadd+2,_getSensors$1516+2
 12645  00322E  D007               	goto	l1234
 12646  003230                     l1232:
 12647  003230  0E00               	movlw	0
 12648  003232  0100               	movlb	0	; () banked
 12649  003234  6FA5               	movwf	_getSensors$1516& (0+255),b
 12650  003236  0E00               	movlw	0
 12651  003238  6FA6               	movwf	(_getSensors$1516+1)& (0+255),b
 12652  00323A  0E00               	movlw	0
 12653  00323C  6FA7               	movwf	(_getSensors$1516+2)& (0+255),b
 12654  00323E                     l1234:
 12655                           
 12656                           ; BSR set to: 0
 12657  00323E  5035               	movf	_media_adc,w,c
 12658  003240  0D03               	mullw	3
 12659  003242  0E21               	movlw	low __temp
 12660  003244  24F3               	addwf	prodl,w,c
 12661  003246  6ED9               	movwf	fsr2l,c
 12662  003248  0E01               	movlw	high __temp
 12663  00324A  20F4               	addwfc	prodh,w,c
 12664  00324C  6EDA               	movwf	fsr2h,c
 12665  00324E  C0A5  FFDE         	movff	_getSensors$1516,postinc2
 12666  003252  C0A6  FFDE         	movff	_getSensors$1516+1,postinc2
 12667  003256  C0A7  FFDE         	movff	_getSensors$1516+2,postinc2
 12668                           
 12669                           ;ADC.h: 40: aux = 0;
 12670  00325A  0E00               	movlw	0
 12671  00325C  0100               	movlb	0	; () banked
 12672  00325E  6FB4               	movwf	getSensors@aux& (0+255),b
 12673  003260  0E00               	movlw	0
 12674  003262  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12675  003264  0E00               	movlw	0
 12676  003266  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;ADC.h: 41: if (tipo_sensor_umidade == 1) {
 12680  003268  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12681  00326A  A4D8               	btfss	status,2,c
 12682  00326C  D07E               	goto	l1235
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;ADC.h: 42: float auxx = 0;
 12686  00326E  0E00               	movlw	0
 12687  003270  6FAD               	movwf	getSensors@auxx& (0+255),b
 12688  003272  0E00               	movlw	0
 12689  003274  6FAE               	movwf	(getSensors@auxx+1)& (0+255),b
 12690  003276  0E00               	movlw	0
 12691  003278  6FAF               	movwf	(getSensors@auxx+2)& (0+255),b
 12692                           
 12693                           ;ADC.h: 43: for (i = 0; i < 12; i++) {
 12694  00327A  0E00               	movlw	0
 12695  00327C  6FB3               	movwf	getSensors@i& (0+255),b
 12696  00327E                     l9150:
 12697                           
 12698                           ; BSR set to: 0
 12699  00327E  0E0B               	movlw	11
 12700  003280  65B3               	cpfsgt	getSensors@i& (0+255),b
 12701  003282  D001               	goto	l1236
 12702  003284  D0BA               	goto	u14010
 12703  003286                     l1236:
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;ADC.h: 44: auxx = (((readADC(1)*0.0048828125) - 0.826) / 0.0315);
 12707                           
 12708                           ; BSR set to: 0
 12709  003286  0E75               	movlw	117
 12710  003288  6F7E               	movwf	___ftadd@f2& (0+255),b
 12711  00328A  0E53               	movlw	83
 12712  00328C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12713  00328E  0EBF               	movlw	191
 12714  003290  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12715  003292  0E00               	movlw	0
 12716  003294  6F6F               	movwf	___ftmul@f2& (0+255),b
 12717  003296  0EA0               	movlw	160
 12718  003298  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12719  00329A  0E3B               	movlw	59
 12720  00329C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12721  00329E  0E01               	movlw	1
 12722  0032A0  EC76  F028         	call	_readADC
 12723  0032A4  C060  F069         	movff	?_readADC,___lwtoft@c
 12724  0032A8  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12725  0032AC  EC82  F02D         	call	___lwtoft	;wreg free
 12726  0032B0  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12727  0032B4  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12728  0032B8  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12729  0032BC  ECC1  F024         	call	___ftmul	;wreg free
 12730  0032C0  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12731  0032C4  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12732  0032C8  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12733  0032CC  ECD0  F021         	call	___ftadd	;wreg free
 12734  0032D0  C07B  F087         	movff	?___ftadd,___ftdiv@f1
 12735  0032D4  C07C  F088         	movff	?___ftadd+1,___ftdiv@f1+1
 12736  0032D8  C07D  F089         	movff	?___ftadd+2,___ftdiv@f1+2
 12737  0032DC  0E06               	movlw	6
 12738  0032DE  0100               	movlb	0	; () banked
 12739  0032E0  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12740  0032E2  0E01               	movlw	1
 12741  0032E4  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12742  0032E6  0E3D               	movlw	61
 12743  0032E8  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12744  0032EA  EC3C  F025         	call	___ftdiv	;wreg free
 12745  0032EE  C087  F0AD         	movff	?___ftdiv,getSensors@auxx
 12746  0032F2  C088  F0AE         	movff	?___ftdiv+1,getSensors@auxx+1
 12747  0032F6  C089  F0AF         	movff	?___ftdiv+2,getSensors@auxx+2
 12748                           
 12749                           ;ADC.h: 45: if (auxx < 10) {
 12750  0032FA  C0AD  F060         	movff	getSensors@auxx,___ftge@ff1
 12751  0032FE  C0AE  F061         	movff	getSensors@auxx+1,___ftge@ff1+1
 12752  003302  C0AF  F062         	movff	getSensors@auxx+2,___ftge@ff1+2
 12753  003306  0E00               	movlw	0
 12754  003308  0100               	movlb	0	; () banked
 12755  00330A  6F63               	movwf	___ftge@ff2& (0+255),b
 12756  00330C  0E20               	movlw	32
 12757  00330E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12758  003310  0E41               	movlw	65
 12759  003312  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12760  003314  EC10  F029         	call	___ftge	;wreg free
 12761  003318  0100               	movlb	0	; () banked
 12762  00331A  B0D8               	btfsc	status,0,c
 12763  00331C  D00F               	goto	l1238
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;ADC.h: 46: aux += 0;
 12767  00331E  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12768  003322  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12769  003326  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12770  00332A  0E00               	movlw	0
 12771  00332C  6F7E               	movwf	___ftadd@f2& (0+255),b
 12772  00332E  0E00               	movlw	0
 12773  003330  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12774  003332  0E00               	movlw	0
 12775  003334  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12776  003336  ECD0  F021         	call	___ftadd	;wreg free
 12777  00333A  D00E               	goto	L27
 12778  00333C                     l1238:
 12779                           
 12780                           ;ADC.h: 48: aux += auxx;
 12781  00333C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12782  003340  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12783  003344  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12784  003348  C0AD  F07E         	movff	getSensors@auxx,___ftadd@f2
 12785  00334C  C0AE  F07F         	movff	getSensors@auxx+1,___ftadd@f2+1
 12786  003350  C0AF  F080         	movff	getSensors@auxx+2,___ftadd@f2+2
 12787  003354  ECD0  F021         	call	___ftadd	;wreg free
 12788  003358                     L27:
 12789  003358  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12790  00335C  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12791  003360  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12792  003364  0100               	movlb	0	; () banked
 12793  003366  2BB3               	incf	getSensors@i& (0+255),f,b
 12794  003368  D78A               	goto	l9150
 12795  00336A                     l1235:
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;ADC.h: 52: for (i = 0; i < 12; i++) {
 12799                           
 12800                           ; BSR set to: 0
 12801  00336A  0E00               	movlw	0
 12802  00336C  6FB3               	movwf	getSensors@i& (0+255),b
 12803  00336E                     l9166:
 12804                           
 12805                           ; BSR set to: 0
 12806  00336E  0E0B               	movlw	11
 12807  003370  65B3               	cpfsgt	getSensors@i& (0+255),b
 12808  003372  D001               	goto	l1241
 12809  003374  D042               	goto	u14010
 12810  003376                     l1241:
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12814                           
 12815                           ; BSR set to: 0
 12816  003376  0E00               	movlw	0
 12817  003378  6F7E               	movwf	___ftadd@f2& (0+255),b
 12818  00337A  0E00               	movlw	0
 12819  00337C  6F7F               	movwf	(___ftadd@f2+1)& (0+255),b
 12820  00337E  0E42               	movlw	66
 12821  003380  6F80               	movwf	(___ftadd@f2+2)& (0+255),b
 12822  003382  0E00               	movlw	0
 12823  003384  6F6F               	movwf	___ftmul@f2& (0+255),b
 12824  003386  0E61               	movlw	97
 12825  003388  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
 12826  00338A  0E3F               	movlw	63
 12827  00338C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
 12828  00338E  0E02               	movlw	2
 12829  003390  EC76  F028         	call	_readADC
 12830  003394  C060  F069         	movff	?_readADC,___lwtoft@c
 12831  003398  C061  F06A         	movff	?_readADC+1,___lwtoft@c+1
 12832  00339C  EC82  F02D         	call	___lwtoft	;wreg free
 12833  0033A0  C069  F06C         	movff	?___lwtoft,___ftmul@f1
 12834  0033A4  C06A  F06D         	movff	?___lwtoft+1,___ftmul@f1+1
 12835  0033A8  C06B  F06E         	movff	?___lwtoft+2,___ftmul@f1+2
 12836  0033AC  ECC1  F024         	call	___ftmul	;wreg free
 12837  0033B0  C06C  F07B         	movff	?___ftmul,___ftadd@f1
 12838  0033B4  C06D  F07C         	movff	?___ftmul+1,___ftadd@f1+1
 12839  0033B8  C06E  F07D         	movff	?___ftmul+2,___ftadd@f1+2
 12840  0033BC  ECD0  F021         	call	___ftadd	;wreg free
 12841  0033C0  C07B  F0B0         	movff	?___ftadd,_getSensors$2517
 12842  0033C4  C07C  F0B1         	movff	?___ftadd+1,_getSensors$2517+1
 12843  0033C8  C07D  F0B2         	movff	?___ftadd+2,_getSensors$2517+2
 12844                           
 12845                           ;ADC.h: 53: aux += (((readADC(2)* 0.48828125)*1.8) + 32);
 12846  0033CC  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 12847  0033D0  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 12848  0033D4  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 12849  0033D8  C0B0  F07E         	movff	_getSensors$2517,___ftadd@f2
 12850  0033DC  C0B1  F07F         	movff	_getSensors$2517+1,___ftadd@f2+1
 12851  0033E0  C0B2  F080         	movff	_getSensors$2517+2,___ftadd@f2+2
 12852  0033E4  ECD0  F021         	call	___ftadd	;wreg free
 12853  0033E8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 12854  0033EC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 12855  0033F0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 12856  0033F4  0100               	movlb	0	; () banked
 12857  0033F6  2BB3               	incf	getSensors@i& (0+255),f,b
 12858  0033F8  D7BA               	goto	l9166
 12859  0033FA                     u14010:
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;ADC.h: 54: }
 12863                           ;ADC.h: 55: }
 12864                           ;ADC.h: 57: aux = (aux / 12);
 12865                           
 12866                           ; BSR set to: 0
 12867                           
 12868                           ; BSR set to: 0
 12869  0033FA  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 12870  0033FE  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 12871  003402  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 12872  003406  0E00               	movlw	0
 12873  003408  6F8A               	movwf	___ftdiv@f2& (0+255),b
 12874  00340A  0E40               	movlw	64
 12875  00340C  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 12876  00340E  0E41               	movlw	65
 12877  003410  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 12878  003412  EC3C  F025         	call	___ftdiv	;wreg free
 12879  003416  C087  F0B4         	movff	?___ftdiv,getSensors@aux
 12880  00341A  C088  F0B5         	movff	?___ftdiv+1,getSensors@aux+1
 12881  00341E  C089  F0B6         	movff	?___ftdiv+2,getSensors@aux+2
 12882                           
 12883                           ;ADC.h: 58: if (tipo_sensor_umidade == 1) {
 12884  003422  0100               	movlb	0	; () banked
 12885  003424  05FA               	decf	_tipo_sensor_umidade& (0+255),w,b
 12886  003426  A4D8               	btfss	status,2,c
 12887  003428  D02E               	goto	l1245
 12888                           
 12889                           ; BSR set to: 0
 12890                           ;ADC.h: 59: if (aux > 100) aux = 100;
 12891  00342A  0E00               	movlw	0
 12892  00342C  6F60               	movwf	___ftge@ff1& (0+255),b
 12893  00342E  0EC8               	movlw	200
 12894  003430  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 12895  003432  0E42               	movlw	66
 12896  003434  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 12897  003436  C0B4  F063         	movff	getSensors@aux,___ftge@ff2
 12898  00343A  C0B5  F064         	movff	getSensors@aux+1,___ftge@ff2+1
 12899  00343E  C0B6  F065         	movff	getSensors@aux+2,___ftge@ff2+2
 12900  003442  EC10  F029         	call	___ftge	;wreg free
 12901  003446  0100               	movlb	0	; () banked
 12902  003448  B0D8               	btfsc	status,0,c
 12903  00344A  D006               	goto	l1244
 12904                           
 12905                           ; BSR set to: 0
 12906  00344C  0E00               	movlw	0
 12907  00344E  6FB4               	movwf	getSensors@aux& (0+255),b
 12908  003450  0EC8               	movlw	200
 12909  003452  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12910  003454  0E42               	movlw	66
 12911  003456  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12912  003458                     l1244:
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;ADC.h: 60: if (aux < 10) aux = 0;
 12916                           
 12917                           ; BSR set to: 0
 12918  003458  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12919  00345C  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12920  003460  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12921  003464  0E00               	movlw	0
 12922  003466  6F63               	movwf	___ftge@ff2& (0+255),b
 12923  003468  0E20               	movlw	32
 12924  00346A  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12925  00346C  0E41               	movlw	65
 12926  00346E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12927  003470  EC10  F029         	call	___ftge	;wreg free
 12928  003474  0100               	movlb	0	; () banked
 12929  003476  B0D8               	btfsc	status,0,c
 12930  003478  D006               	goto	l1245
 12931                           
 12932                           ; BSR set to: 0
 12933  00347A  0E00               	movlw	0
 12934  00347C  6FB4               	movwf	getSensors@aux& (0+255),b
 12935  00347E  0E00               	movlw	0
 12936  003480  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 12937  003482  0E00               	movlw	0
 12938  003484  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 12939  003486                     l1245:
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;ADC.h: 61: }
 12943                           ;ADC.h: 62: _umid[media_adc] = (aux < 40 && tipo_sensor_umidade == 0) ? 0 : aux;
 12944                           
 12945                           ; BSR set to: 0
 12946                           
 12947                           ; BSR set to: 0
 12948  003486  C0B4  F060         	movff	getSensors@aux,___ftge@ff1
 12949  00348A  C0B5  F061         	movff	getSensors@aux+1,___ftge@ff1+1
 12950  00348E  C0B6  F062         	movff	getSensors@aux+2,___ftge@ff1+2
 12951  003492  0E00               	movlw	0
 12952  003494  6F63               	movwf	___ftge@ff2& (0+255),b
 12953  003496  0E20               	movlw	32
 12954  003498  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 12955  00349A  0E42               	movlw	66
 12956  00349C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 12957  00349E  EC10  F029         	call	___ftge	;wreg free
 12958  0034A2  0100               	movlb	0	; () banked
 12959  0034A4  B0D8               	btfsc	status,0,c
 12960  0034A6  D003               	goto	u14060
 12961                           
 12962                           ; BSR set to: 0
 12963  0034A8  51FA               	movf	_tipo_sensor_umidade& (0+255),w,b
 12964  0034AA  B4D8               	btfsc	status,2,c
 12965  0034AC  D007               	goto	l1247
 12966  0034AE                     u14060:
 12967                           
 12968                           ; BSR set to: 0
 12969  0034AE  C0B4  F0A8         	movff	getSensors@aux,_getSensors$1518
 12970  0034B2  C0B5  F0A9         	movff	getSensors@aux+1,_getSensors$1518+1
 12971  0034B6  C0B6  F0AA         	movff	getSensors@aux+2,_getSensors$1518+2
 12972  0034BA  D006               	goto	l1249
 12973  0034BC                     l1247:
 12974                           
 12975                           ; BSR set to: 0
 12976                           
 12977                           ; BSR set to: 0
 12978  0034BC  0E00               	movlw	0
 12979  0034BE  6FA8               	movwf	_getSensors$1518& (0+255),b
 12980  0034C0  0E00               	movlw	0
 12981  0034C2  6FA9               	movwf	(_getSensors$1518+1)& (0+255),b
 12982  0034C4  0E00               	movlw	0
 12983  0034C6  6FAA               	movwf	(_getSensors$1518+2)& (0+255),b
 12984  0034C8                     l1249:
 12985                           
 12986                           ; BSR set to: 0
 12987                           
 12988                           ; BSR set to: 0
 12989  0034C8  5035               	movf	_media_adc,w,c
 12990  0034CA  0D03               	mullw	3
 12991  0034CC  0E00               	movlw	low __umid
 12992  0034CE  24F3               	addwf	prodl,w,c
 12993  0034D0  6ED9               	movwf	fsr2l,c
 12994  0034D2  0E01               	movlw	high __umid
 12995  0034D4  20F4               	addwfc	prodh,w,c
 12996  0034D6  6EDA               	movwf	fsr2h,c
 12997  0034D8  C0A8  FFDE         	movff	_getSensors$1518,postinc2
 12998  0034DC  C0A9  FFDE         	movff	_getSensors$1518+1,postinc2
 12999  0034E0  C0AA  FFDE         	movff	_getSensors$1518+2,postinc2
 13000  0034E4                     l1224:
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;ADC.h: 63: }
 13004                           ;ADC.h: 67: i = 0;
 13005                           
 13006                           ; BSR set to: 0
 13007  0034E4  0E00               	movlw	0
 13008  0034E6  6FB3               	movwf	getSensors@i& (0+255),b
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;ADC.h: 68: aux = 0;
 13012  0034E8  0E00               	movlw	0
 13013  0034EA  6FB4               	movwf	getSensors@aux& (0+255),b
 13014  0034EC  0E00               	movlw	0
 13015  0034EE  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13016  0034F0  0E00               	movlw	0
 13017  0034F2  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;ADC.h: 69: for (i = 0; i < 10; i++) {
 13021  0034F4  0E00               	movlw	0
 13022  0034F6  6FB3               	movwf	getSensors@i& (0+255),b
 13023  0034F8                     l9202:
 13024                           
 13025                           ; BSR set to: 0
 13026  0034F8  0E09               	movlw	9
 13027  0034FA  65B3               	cpfsgt	getSensors@i& (0+255),b
 13028  0034FC  D001               	goto	l1252
 13029  0034FE  D01F               	goto	u14080
 13030  003500                     l1252:
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;ADC.h: 70: aux += _temp[i];
 13034                           
 13035                           ; BSR set to: 0
 13036  003500  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13037  003504  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13038  003508  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13039  00350C  51B3               	movf	getSensors@i& (0+255),w,b
 13040  00350E  0D03               	mullw	3
 13041  003510  0E21               	movlw	low __temp
 13042  003512  24F3               	addwf	prodl,w,c
 13043  003514  6ED9               	movwf	fsr2l,c
 13044  003516  0E01               	movlw	high __temp
 13045  003518  20F4               	addwfc	prodh,w,c
 13046  00351A  6EDA               	movwf	fsr2h,c
 13047  00351C  CFDE F07E          	movff	postinc2,___ftadd@f2
 13048  003520  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13049  003524  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13050  003528  ECD0  F021         	call	___ftadd	;wreg free
 13051  00352C  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13052  003530  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13053  003534  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13054  003538  0100               	movlb	0	; () banked
 13055  00353A  2BB3               	incf	getSensors@i& (0+255),f,b
 13056  00353C  D7DD               	goto	l9202
 13057  00353E                     u14080:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;ADC.h: 71: }
 13061                           ;ADC.h: 72: temp = (aux / 10);
 13062                           
 13063                           ; BSR set to: 0
 13064  00353E  0E00               	movlw	0
 13065  003540  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13066  003542  0E20               	movlw	32
 13067  003544  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13068  003546  0E41               	movlw	65
 13069  003548  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13070  00354A  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13071  00354E  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13072  003552  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13073  003556  EC3C  F025         	call	___ftdiv	;wreg free
 13074  00355A  C087  F096         	movff	?___ftdiv,___fttol@f1
 13075  00355E  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13076  003562  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13077  003566  ECC9  F023         	call	___fttol	;wreg free
 13078  00356A  0100               	movlb	0	; () banked
 13079  00356C  5196               	movf	?___fttol& (0+255),w,b
 13080  00356E  6FFE               	movwf	_temp& (0+255),b
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;ADC.h: 76: i = 0;
 13084  003570  0E00               	movlw	0
 13085  003572  6FB3               	movwf	getSensors@i& (0+255),b
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;ADC.h: 77: aux = 0;
 13089  003574  0E00               	movlw	0
 13090  003576  6FB4               	movwf	getSensors@aux& (0+255),b
 13091  003578  0E00               	movlw	0
 13092  00357A  6FB5               	movwf	(getSensors@aux+1)& (0+255),b
 13093  00357C  0E00               	movlw	0
 13094  00357E  6FB6               	movwf	(getSensors@aux+2)& (0+255),b
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;ADC.h: 78: for (i = 0; i < 10; i++) {
 13098  003580  0E00               	movlw	0
 13099  003582  6FB3               	movwf	getSensors@i& (0+255),b
 13100  003584                     l9220:
 13101                           
 13102                           ; BSR set to: 0
 13103  003584  0E09               	movlw	9
 13104  003586  65B3               	cpfsgt	getSensors@i& (0+255),b
 13105  003588  D001               	goto	l1254
 13106  00358A  D01F               	goto	u14100
 13107  00358C                     l1254:
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;ADC.h: 79: aux += _umid[i];
 13111                           
 13112                           ; BSR set to: 0
 13113  00358C  C0B4  F07B         	movff	getSensors@aux,___ftadd@f1
 13114  003590  C0B5  F07C         	movff	getSensors@aux+1,___ftadd@f1+1
 13115  003594  C0B6  F07D         	movff	getSensors@aux+2,___ftadd@f1+2
 13116  003598  51B3               	movf	getSensors@i& (0+255),w,b
 13117  00359A  0D03               	mullw	3
 13118  00359C  0E00               	movlw	low __umid
 13119  00359E  24F3               	addwf	prodl,w,c
 13120  0035A0  6ED9               	movwf	fsr2l,c
 13121  0035A2  0E01               	movlw	high __umid
 13122  0035A4  20F4               	addwfc	prodh,w,c
 13123  0035A6  6EDA               	movwf	fsr2h,c
 13124  0035A8  CFDE F07E          	movff	postinc2,___ftadd@f2
 13125  0035AC  CFDE F07F          	movff	postinc2,___ftadd@f2+1
 13126  0035B0  CFDD F080          	movff	postdec2,___ftadd@f2+2
 13127  0035B4  ECD0  F021         	call	___ftadd	;wreg free
 13128  0035B8  C07B  F0B4         	movff	?___ftadd,getSensors@aux
 13129  0035BC  C07C  F0B5         	movff	?___ftadd+1,getSensors@aux+1
 13130  0035C0  C07D  F0B6         	movff	?___ftadd+2,getSensors@aux+2
 13131  0035C4  0100               	movlb	0	; () banked
 13132  0035C6  2BB3               	incf	getSensors@i& (0+255),f,b
 13133  0035C8  D7DD               	goto	l9220
 13134  0035CA                     u14100:
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;ADC.h: 80: }
 13138                           ;ADC.h: 81: umid = (aux / 10);
 13139                           
 13140                           ; BSR set to: 0
 13141  0035CA  0E00               	movlw	0
 13142  0035CC  6F8A               	movwf	___ftdiv@f2& (0+255),b
 13143  0035CE  0E20               	movlw	32
 13144  0035D0  6F8B               	movwf	(___ftdiv@f2+1)& (0+255),b
 13145  0035D2  0E41               	movlw	65
 13146  0035D4  6F8C               	movwf	(___ftdiv@f2+2)& (0+255),b
 13147  0035D6  C0B4  F087         	movff	getSensors@aux,___ftdiv@f1
 13148  0035DA  C0B5  F088         	movff	getSensors@aux+1,___ftdiv@f1+1
 13149  0035DE  C0B6  F089         	movff	getSensors@aux+2,___ftdiv@f1+2
 13150  0035E2  EC3C  F025         	call	___ftdiv	;wreg free
 13151  0035E6  C087  F096         	movff	?___ftdiv,___fttol@f1
 13152  0035EA  C088  F097         	movff	?___ftdiv+1,___fttol@f1+1
 13153  0035EE  C089  F098         	movff	?___ftdiv+2,___fttol@f1+2
 13154  0035F2  ECC9  F023         	call	___fttol	;wreg free
 13155  0035F6  0100               	movlb	0	; () banked
 13156  0035F8  5196               	movf	?___fttol& (0+255),w,b
 13157  0035FA  6E5D               	movwf	_umid,c
 13158                           
 13159                           ; BSR set to: 0
 13160  0035FC  0012               	return		;funcret
 13161  0035FE                     __end_of_getSensors:
 13162                           	opt stack 0
 13163                           tblptru	equ	0xFF8
 13164                           tblptrh	equ	0xFF7
 13165                           tblptrl	equ	0xFF6
 13166                           tablat	equ	0xFF5
 13167                           prodh	equ	0xFF4
 13168                           prodl	equ	0xFF3
 13169                           intcon	equ	0xFF2
 13170                           intcon2	equ	0xFF1
 13171                           intcon3	equ	0xFF0
 13172                           postinc0	equ	0xFEE
 13173                           wreg	equ	0xFE8
 13174                           postdec1	equ	0xFE5
 13175                           fsr1l	equ	0xFE1
 13176                           indf2	equ	0xFDF
 13177                           postinc2	equ	0xFDE
 13178                           postdec2	equ	0xFDD
 13179                           fsr2h	equ	0xFDA
 13180                           fsr2l	equ	0xFD9
 13181                           status	equ	0xFD8
 13182                           
 13183 ;; *************** function _readADC *****************
 13184 ;; Defined at:
 13185 ;;		line 10 in file "src/ADC.h"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  canal           1    wreg     unsigned char 
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;  canal           1    8[BANK0 ] unsigned char 
 13190 ;;  digital         2    6[BANK0 ] int 
 13191 ;; Return value:  Size  Location     Type
 13192 ;;                  2    0[BANK0 ] unsigned int 
 13193 ;; Registers used:
 13194 ;;		wreg, status,2, status,0
 13195 ;; Tracked objects:
 13196 ;;		On entry : 0/0
 13197 ;;		On exit  : 0/0
 13198 ;;		Unchanged: 0/0
 13199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13200 ;;      Params:         0       2       0       0       0       0       0       0       0
 13201 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13202 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13203 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13204 ;;Total ram usage:        9 bytes
 13205 ;; Hardware stack levels used:    1
 13206 ;; Hardware stack levels required when called:    6
 13207 ;; This function calls:
 13208 ;;		Nothing
 13209 ;; This function is called by:
 13210 ;;		_getSensors
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           	psect	text9
 13215  0050EC                     __ptext9:
 13216                           	opt stack 0
 13217  0050EC                     _readADC:
 13218                           	opt stack 23
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;incstack = 0
 13222                           ;readADC@canal stored from wreg
 13223  0050EC  0100               	movlb	0	; () banked
 13224  0050EE  6F68               	movwf	readADC@canal& (0+255),b
 13225                           
 13226                           ;ADC.h: 11: ADRESH = 0;
 13227  0050F0  0E00               	movlw	0
 13228  0050F2  6EC4               	movwf	4036,c	;volatile
 13229                           
 13230                           ;ADC.h: 12: ADRESL = 0;
 13231  0050F4  0E00               	movlw	0
 13232  0050F6  6EC3               	movwf	4035,c	;volatile
 13233                           
 13234                           ;ADC.h: 13: int digital;
 13235                           ;ADC.h: 14: ADCON0 = (ADCON0 & 0b11000011) | ((canal << 2) & 0b00111100);
 13236  0050F8  C068  F062         	movff	readADC@canal,??_readADC
 13237  0050FC  0100               	movlb	0	; () banked
 13238  0050FE  90D8               	bcf	status,0,c
 13239  005100  3762               	rlcf	??_readADC& (0+255),f,b
 13240  005102  90D8               	bcf	status,0,c
 13241  005104  3762               	rlcf	??_readADC& (0+255),f,b
 13242  005106  0E3C               	movlw	60
 13243  005108  1762               	andwf	??_readADC& (0+255),f,b
 13244  00510A  50C2               	movf	4034,w,c	;volatile
 13245  00510C  0BC3               	andlw	195
 13246  00510E  1162               	iorwf	??_readADC& (0+255),w,b
 13247  005110  6EC2               	movwf	4034,c	;volatile
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;ADC.h: 15: _delay((unsigned long)((30)*(8000000/4000000.0)));
 13251  005112  0E14               	movlw	20
 13252  005114                     u15437:
 13253  005114  2EE8               	decfsz	wreg,f,c
 13254  005116  D7FE               	bra	u15437
 13255                           
 13256                           ;ADC.h: 16: ADCON0 |= ((1 << ADON) | (1 << GO));
 13257  005118  A2C2               	btfss	4034,1,c	;volatile
 13258  00511A  D004               	goto	u11790
 13259  00511C  0100               	movlb	0	; () banked
 13260  00511E  6B62               	clrf	??_readADC& (0+255),b
 13261  005120  2B62               	incf	??_readADC& (0+255),f,b
 13262  005122  D002               	goto	u11808
 13263  005124                     u11790:
 13264  005124  0100               	movlb	0	; () banked
 13265  005126  6B62               	clrf	??_readADC& (0+255),b
 13266  005128                     u11808:
 13267  005128  0E01               	movlw	1
 13268  00512A  6F63               	movwf	(??_readADC+1)& (0+255),b
 13269  00512C  2B62               	incf	??_readADC& (0+255),f,b
 13270  00512E  D002               	goto	u11814
 13271  005130                     u11815:
 13272  005130  90D8               	bcf	status,0,c
 13273  005132  3763               	rlcf	(??_readADC+1)& (0+255),f,b
 13274  005134                     u11814:
 13275  005134  2F62               	decfsz	??_readADC& (0+255),f,b
 13276  005136  D7FC               	goto	u11815
 13277  005138  A0C2               	btfss	4034,0,c	;volatile
 13278  00513A  D004               	goto	u11820
 13279  00513C  0100               	movlb	0	; () banked
 13280  00513E  6B64               	clrf	(??_readADC+2)& (0+255),b
 13281  005140  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13282  005142  D002               	goto	u11838
 13283  005144                     u11820:
 13284  005144  0100               	movlb	0	; () banked
 13285  005146  6B64               	clrf	(??_readADC+2)& (0+255),b
 13286  005148                     u11838:
 13287  005148  0E01               	movlw	1
 13288  00514A  6F65               	movwf	(??_readADC+3)& (0+255),b
 13289  00514C  2B64               	incf	(??_readADC+2)& (0+255),f,b
 13290  00514E  D002               	goto	u11844
 13291  005150                     u11845:
 13292  005150  90D8               	bcf	status,0,c
 13293  005152  3765               	rlcf	(??_readADC+3)& (0+255),f,b
 13294  005154                     u11844:
 13295  005154  2F64               	decfsz	(??_readADC+2)& (0+255),f,b
 13296  005156  D7FC               	goto	u11845
 13297  005158  0100               	movlb	0	; () banked
 13298  00515A  5165               	movf	(??_readADC+3)& (0+255),w,b
 13299  00515C  1163               	iorwf	(??_readADC+1)& (0+255),w,b
 13300  00515E  12C2               	iorwf	4034,f,c	;volatile
 13301  005160                     
 13302                           ; BSR set to: 0
 13303  005160  B2C2               	btfsc	4034,1,c	;volatile
 13304  005162  D7FE               	goto	l1219
 13305                           
 13306                           ;ADC.h: 18: digital = (ADRESH * 256) | (ADRESL);
 13307  005164  50C3               	movf	4035,w,c	;volatile
 13308  005166  CFC4 F062          	movff	4036,??_readADC	;volatile
 13309  00516A  0100               	movlb	0	; () banked
 13310  00516C  6B63               	clrf	(??_readADC+1)& (0+255),b
 13311  00516E  C062  F063         	movff	??_readADC,??_readADC+1
 13312  005172  6B62               	clrf	??_readADC& (0+255),b
 13313  005174  1162               	iorwf	??_readADC& (0+255),w,b
 13314  005176  6F66               	movwf	readADC@digital& (0+255),b
 13315  005178  5163               	movf	(??_readADC+1)& (0+255),w,b
 13316  00517A  6F67               	movwf	(readADC@digital+1)& (0+255),b
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;ADC.h: 19: return (digital);
 13320  00517C  C066  F060         	movff	readADC@digital,?_readADC
 13321  005180  C067  F061         	movff	readADC@digital+1,?_readADC+1
 13322  005184  0012               	return	
 13323  005186                     __end_of_readADC:
 13324                           	opt stack 0
 13325                           tblptru	equ	0xFF8
 13326                           tblptrh	equ	0xFF7
 13327                           tblptrl	equ	0xFF6
 13328                           tablat	equ	0xFF5
 13329                           prodh	equ	0xFF4
 13330                           prodl	equ	0xFF3
 13331                           intcon	equ	0xFF2
 13332                           intcon2	equ	0xFF1
 13333                           intcon3	equ	0xFF0
 13334                           postinc0	equ	0xFEE
 13335                           wreg	equ	0xFE8
 13336                           postdec1	equ	0xFE5
 13337                           fsr1l	equ	0xFE1
 13338                           indf2	equ	0xFDF
 13339                           postinc2	equ	0xFDE
 13340                           postdec2	equ	0xFDD
 13341                           fsr2h	equ	0xFDA
 13342                           fsr2l	equ	0xFD9
 13343                           status	equ	0xFD8
 13344                           
 13345 ;; *************** function ___lwtoft *****************
 13346 ;; Defined at:
 13347 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;  c               2    9[BANK0 ] unsigned int 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;		None
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  3    9[BANK0 ] float 
 13354 ;; Registers used:
 13355 ;;		wreg, status,2, status,0, cstack
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13361 ;;      Params:         0       3       0       0       0       0       0       0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13363 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13364 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13365 ;;Total ram usage:        3 bytes
 13366 ;; Hardware stack levels used:    1
 13367 ;; Hardware stack levels required when called:    7
 13368 ;; This function calls:
 13369 ;;		___ftpack
 13370 ;; This function is called by:
 13371 ;;		_getSensors
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text10
 13376  005B04                     __ptext10:
 13377                           	opt stack 0
 13378  005B04                     ___lwtoft:
 13379                           	opt stack 22
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;incstack = 0
 13383  005B04  C069  F060         	movff	___lwtoft@c,___ftpack@arg
 13384  005B08  C06A  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
 13385  005B0C  0100               	movlb	0	; () banked
 13386  005B0E  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 13387  005B10  0E8E               	movlw	142
 13388  005B12  6F63               	movwf	___ftpack@exp& (0+255),b
 13389  005B14  0E00               	movlw	0
 13390  005B16  6F64               	movwf	___ftpack@sign& (0+255),b
 13391  005B18  EC2B  F027         	call	___ftpack	;wreg free
 13392  005B1C  C060  F069         	movff	?___ftpack,?___lwtoft
 13393  005B20  C061  F06A         	movff	?___ftpack+1,?___lwtoft+1
 13394  005B24  C062  F06B         	movff	?___ftpack+2,?___lwtoft+2
 13395  005B28  0012               	return	
 13396  005B2A                     __end_of___lwtoft:
 13397                           	opt stack 0
 13398                           tblptru	equ	0xFF8
 13399                           tblptrh	equ	0xFF7
 13400                           tblptrl	equ	0xFF6
 13401                           tablat	equ	0xFF5
 13402                           prodh	equ	0xFF4
 13403                           prodl	equ	0xFF3
 13404                           intcon	equ	0xFF2
 13405                           intcon2	equ	0xFF1
 13406                           intcon3	equ	0xFF0
 13407                           postinc0	equ	0xFEE
 13408                           wreg	equ	0xFE8
 13409                           postdec1	equ	0xFE5
 13410                           fsr1l	equ	0xFE1
 13411                           indf2	equ	0xFDF
 13412                           postinc2	equ	0xFDE
 13413                           postdec2	equ	0xFDD
 13414                           fsr2h	equ	0xFDA
 13415                           fsr2l	equ	0xFD9
 13416                           status	equ	0xFD8
 13417                           
 13418 ;; *************** function ___fttol *****************
 13419 ;; Defined at:
 13420 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;  f1              3   54[BANK0 ] float 
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;  lval            4   64[BANK0 ] unsigned long 
 13425 ;;  exp1            1   68[BANK0 ] unsigned char 
 13426 ;;  sign1           1   63[BANK0 ] unsigned char 
 13427 ;; Return value:  Size  Location     Type
 13428 ;;                  4   54[BANK0 ] long 
 13429 ;; Registers used:
 13430 ;;		wreg, status,2, status,0
 13431 ;; Tracked objects:
 13432 ;;		On entry : 0/0
 13433 ;;		On exit  : 0/0
 13434 ;;		Unchanged: 0/0
 13435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13436 ;;      Params:         0       4       0       0       0       0       0       0       0
 13437 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13438 ;;      Temps:          0       5       0       0       0       0       0       0       0
 13439 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13440 ;;Total ram usage:       15 bytes
 13441 ;; Hardware stack levels used:    1
 13442 ;; Hardware stack levels required when called:    6
 13443 ;; This function calls:
 13444 ;;		Nothing
 13445 ;; This function is called by:
 13446 ;;		_getSensors
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           	psect	text11
 13451  004792                     __ptext11:
 13452                           	opt stack 0
 13453  004792                     ___fttol:
 13454                           	opt stack 23
 13455                           
 13456                           ;incstack = 0
 13457  004792  C098  F09A         	movff	___fttol@f1+2,??___fttol
 13458  004796  0100               	movlb	0	; () banked
 13459  004798  6B9B               	clrf	(??___fttol+1)& (0+255),b
 13460  00479A  6B9C               	clrf	(??___fttol+2)& (0+255),b
 13461  00479C  3597               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13462  00479E  379A               	rlcf	??___fttol& (0+255),f,b
 13463  0047A0  E301               	bnc	u12211
 13464  0047A2  819B               	bsf	(??___fttol+1)& (0+255),0,b
 13465  0047A4                     u12211:
 13466  0047A4  519A               	movf	??___fttol& (0+255),w,b
 13467  0047A6  6FA4               	movwf	___fttol@exp1& (0+255),b
 13468  0047A8  51A4               	movf	___fttol@exp1& (0+255),w,b
 13469  0047AA  A4D8               	btfss	status,2,c
 13470  0047AC  D009               	goto	l2010
 13471                           
 13472                           ; BSR set to: 0
 13473  0047AE  0E00               	movlw	0
 13474  0047B0  6F96               	movwf	?___fttol& (0+255),b
 13475  0047B2  0E00               	movlw	0
 13476  0047B4  6F97               	movwf	(?___fttol+1)& (0+255),b
 13477  0047B6  0E00               	movlw	0
 13478  0047B8  6F98               	movwf	(?___fttol+2)& (0+255),b
 13479  0047BA  0E00               	movlw	0
 13480  0047BC  6F99               	movwf	(?___fttol+3)& (0+255),b
 13481                           
 13482                           ; BSR set to: 0
 13483  0047BE  0012               	return	
 13484  0047C0                     l2010:
 13485                           
 13486                           ; BSR set to: 0
 13487                           
 13488                           ; BSR set to: 0
 13489  0047C0  0E17               	movlw	23
 13490  0047C2  6F9A               	movwf	??___fttol& (0+255),b
 13491  0047C4  C096  F09B         	movff	___fttol@f1,??___fttol+1
 13492  0047C8  C097  F09C         	movff	___fttol@f1+1,??___fttol+2
 13493  0047CC  C098  F09D         	movff	___fttol@f1+2,??___fttol+3
 13494  0047D0  299A               	incf	??___fttol& (0+255),w,b
 13495  0047D2  6F9E               	movwf	(??___fttol+4)& (0+255),b
 13496  0047D4  D004               	goto	u12230
 13497  0047D6                     u12235:
 13498  0047D6  90D8               	bcf	status,0,c
 13499  0047D8  339D               	rrcf	(??___fttol+3)& (0+255),f,b
 13500  0047DA  339C               	rrcf	(??___fttol+2)& (0+255),f,b
 13501  0047DC  339B               	rrcf	(??___fttol+1)& (0+255),f,b
 13502  0047DE                     u12230:
 13503  0047DE  2F9E               	decfsz	(??___fttol+4)& (0+255),f,b
 13504  0047E0  D7FA               	goto	u12235
 13505  0047E2  0100               	movlb	0	; () banked
 13506  0047E4  519B               	movf	(??___fttol+1)& (0+255),w,b
 13507  0047E6  6F9F               	movwf	___fttol@sign1& (0+255),b
 13508                           
 13509                           ; BSR set to: 0
 13510  0047E8  8F97               	bsf	(___fttol@f1+1)& (0+255),7,b
 13511                           
 13512                           ; BSR set to: 0
 13513  0047EA  0EFF               	movlw	255
 13514  0047EC  1796               	andwf	___fttol@f1& (0+255),f,b
 13515  0047EE  0EFF               	movlw	255
 13516  0047F0  1797               	andwf	(___fttol@f1+1)& (0+255),f,b
 13517  0047F2  0E00               	movlw	0
 13518  0047F4  1798               	andwf	(___fttol@f1+2)& (0+255),f,b
 13519                           
 13520                           ; BSR set to: 0
 13521  0047F6  5196               	movf	___fttol@f1& (0+255),w,b
 13522  0047F8  6FA0               	movwf	___fttol@lval& (0+255),b
 13523  0047FA  5197               	movf	(___fttol@f1+1)& (0+255),w,b
 13524  0047FC  6FA1               	movwf	(___fttol@lval+1)& (0+255),b
 13525  0047FE  5198               	movf	(___fttol@f1+2)& (0+255),w,b
 13526  004800  6FA2               	movwf	(___fttol@lval+2)& (0+255),b
 13527  004802  6BA3               	clrf	(___fttol@lval+3)& (0+255),b
 13528                           
 13529                           ; BSR set to: 0
 13530  004804  0E8E               	movlw	142
 13531  004806  5FA4               	subwf	___fttol@exp1& (0+255),f,b
 13532                           
 13533                           ; BSR set to: 0
 13534  004808  AFA4               	btfss	___fttol@exp1& (0+255),7,b
 13535  00480A  D016               	goto	l2012
 13536                           
 13537                           ; BSR set to: 0
 13538  00480C  51A4               	movf	___fttol@exp1& (0+255),w,b
 13539  00480E  0A80               	xorlw	128
 13540  004810  0F8F               	addlw	143
 13541  004812  B0D8               	btfsc	status,0,c
 13542  004814  D009               	goto	l2013
 13543                           
 13544                           ; BSR set to: 0
 13545  004816  0E00               	movlw	0
 13546  004818  6F96               	movwf	?___fttol& (0+255),b
 13547  00481A  0E00               	movlw	0
 13548  00481C  6F97               	movwf	(?___fttol+1)& (0+255),b
 13549  00481E  0E00               	movlw	0
 13550  004820  6F98               	movwf	(?___fttol+2)& (0+255),b
 13551  004822  0E00               	movlw	0
 13552  004824  6F99               	movwf	(?___fttol+3)& (0+255),b
 13553                           
 13554                           ; BSR set to: 0
 13555  004826  0012               	return	
 13556  004828                     l2013:
 13557                           
 13558                           ; BSR set to: 0
 13559                           
 13560                           ; BSR set to: 0
 13561                           
 13562                           ; BSR set to: 0
 13563  004828  90D8               	bcf	status,0,c
 13564  00482A  33A3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13565  00482C  33A2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13566  00482E  33A1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13567  004830  33A0               	rrcf	___fttol@lval& (0+255),f,b
 13568                           
 13569                           ; BSR set to: 0
 13570  004832  3FA4               	incfsz	___fttol@exp1& (0+255),f,b
 13571  004834  D7F9               	goto	l2013
 13572                           
 13573                           ; BSR set to: 0
 13574  004836  D015               	goto	u12270
 13575  004838                     l2012:
 13576                           
 13577                           ; BSR set to: 0
 13578                           
 13579                           ; BSR set to: 0
 13580  004838  0E17               	movlw	23
 13581  00483A  65A4               	cpfsgt	___fttol@exp1& (0+255),b
 13582  00483C  D00F               	goto	l2018
 13583                           
 13584                           ; BSR set to: 0
 13585  00483E  0E00               	movlw	0
 13586  004840  6F96               	movwf	?___fttol& (0+255),b
 13587  004842  0E00               	movlw	0
 13588  004844  6F97               	movwf	(?___fttol+1)& (0+255),b
 13589  004846  0E00               	movlw	0
 13590  004848  6F98               	movwf	(?___fttol+2)& (0+255),b
 13591  00484A  0E00               	movlw	0
 13592  00484C  6F99               	movwf	(?___fttol+3)& (0+255),b
 13593                           
 13594                           ; BSR set to: 0
 13595  00484E  0012               	return	
 13596  004850                     
 13597                           ; BSR set to: 0
 13598                           
 13599                           ; BSR set to: 0
 13600  004850  90D8               	bcf	status,0,c
 13601  004852  37A0               	rlcf	___fttol@lval& (0+255),f,b
 13602  004854  37A1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13603  004856  37A2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13604  004858  37A3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13605  00485A  07A4               	decf	___fttol@exp1& (0+255),f,b
 13606  00485C                     l2018:
 13607                           
 13608                           ; BSR set to: 0
 13609                           
 13610                           ; BSR set to: 0
 13611  00485C  51A4               	movf	___fttol@exp1& (0+255),w,b
 13612  00485E  A4D8               	btfss	status,2,c
 13613  004860  D7F7               	goto	l2019
 13614  004862                     u12270:
 13615                           
 13616                           ; BSR set to: 0
 13617                           
 13618                           ; BSR set to: 0
 13619                           
 13620                           ; BSR set to: 0
 13621  004862  519F               	movf	___fttol@sign1& (0+255),w,b
 13622  004864  B4D8               	btfsc	status,2,c
 13623  004866  D008               	goto	l2021
 13624                           
 13625                           ; BSR set to: 0
 13626  004868  1FA3               	comf	(___fttol@lval+3)& (0+255),f,b
 13627  00486A  1FA2               	comf	(___fttol@lval+2)& (0+255),f,b
 13628  00486C  1FA1               	comf	(___fttol@lval+1)& (0+255),f,b
 13629  00486E  6DA0               	negf	___fttol@lval& (0+255),b
 13630  004870  0E00               	movlw	0
 13631  004872  23A1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13632  004874  23A2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13633  004876  23A3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13634  004878                     l2021:
 13635                           
 13636                           ; BSR set to: 0
 13637                           
 13638                           ; BSR set to: 0
 13639  004878  C0A0  F096         	movff	___fttol@lval,?___fttol
 13640  00487C  C0A1  F097         	movff	___fttol@lval+1,?___fttol+1
 13641  004880  C0A2  F098         	movff	___fttol@lval+2,?___fttol+2
 13642  004884  C0A3  F099         	movff	___fttol@lval+3,?___fttol+3
 13643  004888  0012               	return	
 13644  00488A                     __end_of___fttol:
 13645                           	opt stack 0
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           intcon	equ	0xFF2
 13653                           intcon2	equ	0xFF1
 13654                           intcon3	equ	0xFF0
 13655                           postinc0	equ	0xFEE
 13656                           wreg	equ	0xFE8
 13657                           postdec1	equ	0xFE5
 13658                           fsr1l	equ	0xFE1
 13659                           indf2	equ	0xFDF
 13660                           postinc2	equ	0xFDE
 13661                           postdec2	equ	0xFDD
 13662                           fsr2h	equ	0xFDA
 13663                           fsr2l	equ	0xFD9
 13664                           status	equ	0xFD8
 13665                           
 13666 ;; *************** function ___ftmul *****************
 13667 ;; Defined at:
 13668 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftmul.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  f1              3   12[BANK0 ] float 
 13671 ;;  f2              3   15[BANK0 ] float 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
 13674 ;;  sign            1   26[BANK0 ] unsigned char 
 13675 ;;  cntr            1   25[BANK0 ] unsigned char 
 13676 ;;  exp             1   21[BANK0 ] unsigned char 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  3   12[BANK0 ] float 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, status,0, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13686 ;;      Params:         0       6       0       0       0       0       0       0       0
 13687 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13688 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13689 ;;      Totals:         0      15       0       0       0       0       0       0       0
 13690 ;;Total ram usage:       15 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:    7
 13693 ;; This function calls:
 13694 ;;		___ftpack
 13695 ;; This function is called by:
 13696 ;;		_getSensors
 13697 ;; This function uses a non-reentrant model
 13698 ;;
 13699                           
 13700                           	psect	text12
 13701  004982                     __ptext12:
 13702                           	opt stack 0
 13703  004982                     ___ftmul:
 13704                           	opt stack 22
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;incstack = 0
 13708  004982  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
 13709  004986  0100               	movlb	0	; () banked
 13710  004988  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13711  00498A  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13712  00498C  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 13713  00498E  3772               	rlcf	??___ftmul& (0+255),f,b
 13714  004990  E301               	bnc	u12121
 13715  004992  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13716  004994                     u12121:
 13717  004994  5172               	movf	??___ftmul& (0+255),w,b
 13718  004996  6F75               	movwf	___ftmul@exp& (0+255),b
 13719  004998  5175               	movf	___ftmul@exp& (0+255),w,b
 13720  00499A  A4D8               	btfss	status,2,c
 13721  00499C  D007               	goto	l1989
 13722                           
 13723                           ; BSR set to: 0
 13724  00499E  0E00               	movlw	0
 13725  0049A0  6F6C               	movwf	?___ftmul& (0+255),b
 13726  0049A2  0E00               	movlw	0
 13727  0049A4  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13728  0049A6  0E00               	movlw	0
 13729  0049A8  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13730                           
 13731                           ; BSR set to: 0
 13732  0049AA  0012               	return	
 13733  0049AC                     l1989:
 13734                           
 13735                           ; BSR set to: 0
 13736                           
 13737                           ; BSR set to: 0
 13738  0049AC  C071  F072         	movff	___ftmul@f2+2,??___ftmul
 13739  0049B0  6B73               	clrf	(??___ftmul+1)& (0+255),b
 13740  0049B2  6B74               	clrf	(??___ftmul+2)& (0+255),b
 13741  0049B4  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 13742  0049B6  3772               	rlcf	??___ftmul& (0+255),f,b
 13743  0049B8  E301               	bnc	u12141
 13744  0049BA  8173               	bsf	(??___ftmul+1)& (0+255),0,b
 13745  0049BC                     u12141:
 13746  0049BC  5172               	movf	??___ftmul& (0+255),w,b
 13747  0049BE  6F7A               	movwf	___ftmul@sign& (0+255),b
 13748  0049C0  517A               	movf	___ftmul@sign& (0+255),w,b
 13749  0049C2  A4D8               	btfss	status,2,c
 13750  0049C4  D007               	goto	l1991
 13751                           
 13752                           ; BSR set to: 0
 13753  0049C6  0E00               	movlw	0
 13754  0049C8  6F6C               	movwf	?___ftmul& (0+255),b
 13755  0049CA  0E00               	movlw	0
 13756  0049CC  6F6D               	movwf	(?___ftmul+1)& (0+255),b
 13757  0049CE  0E00               	movlw	0
 13758  0049D0  6F6E               	movwf	(?___ftmul+2)& (0+255),b
 13759                           
 13760                           ; BSR set to: 0
 13761  0049D2  0012               	return	
 13762  0049D4                     l1991:
 13763                           
 13764                           ; BSR set to: 0
 13765                           
 13766                           ; BSR set to: 0
 13767  0049D4  517A               	movf	___ftmul@sign& (0+255),w,b
 13768  0049D6  0F7B               	addlw	123
 13769  0049D8  2775               	addwf	___ftmul@exp& (0+255),f,b
 13770                           
 13771                           ; BSR set to: 0
 13772  0049DA  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
 13773  0049DE  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13774  0049E0  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
 13775  0049E2  0E80               	movlw	128
 13776  0049E4  177A               	andwf	___ftmul@sign& (0+255),f,b
 13777                           
 13778                           ; BSR set to: 0
 13779  0049E6  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
 13780                           
 13781                           ; BSR set to: 0
 13782  0049E8  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
 13783                           
 13784                           ; BSR set to: 0
 13785  0049EA  0EFF               	movlw	255
 13786  0049EC  176F               	andwf	___ftmul@f2& (0+255),f,b
 13787  0049EE  0EFF               	movlw	255
 13788  0049F0  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
 13789  0049F2  0E00               	movlw	0
 13790  0049F4  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
 13791                           
 13792                           ; BSR set to: 0
 13793  0049F6  0E00               	movlw	0
 13794  0049F8  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
 13795  0049FA  0E00               	movlw	0
 13796  0049FC  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 13797  0049FE  0E00               	movlw	0
 13798  004A00  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 13799                           
 13800                           ; BSR set to: 0
 13801  004A02  0E07               	movlw	7
 13802  004A04  6F79               	movwf	___ftmul@cntr& (0+255),b
 13803  004A06                     
 13804                           ; BSR set to: 0
 13805                           
 13806                           ; BSR set to: 0
 13807  004A06  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13808  004A08  D006               	goto	l1993
 13809                           
 13810                           ; BSR set to: 0
 13811  004A0A  516F               	movf	___ftmul@f2& (0+255),w,b
 13812  004A0C  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13813  004A0E  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13814  004A10  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13815  004A12  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13816  004A14  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13817  004A16                     l1993:
 13818                           
 13819                           ; BSR set to: 0
 13820                           
 13821                           ; BSR set to: 0
 13822  004A16  90D8               	bcf	status,0,c
 13823  004A18  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13824  004A1A  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13825  004A1C  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13826  004A1E  90D8               	bcf	status,0,c
 13827  004A20  376F               	rlcf	___ftmul@f2& (0+255),f,b
 13828  004A22  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 13829  004A24  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 13830                           
 13831                           ; BSR set to: 0
 13832  004A26  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13833  004A28  D7EE               	goto	l1992
 13834                           
 13835                           ; BSR set to: 0
 13836                           
 13837                           ; BSR set to: 0
 13838  004A2A  0E09               	movlw	9
 13839  004A2C  6F79               	movwf	___ftmul@cntr& (0+255),b
 13840  004A2E                     
 13841                           ; BSR set to: 0
 13842                           
 13843                           ; BSR set to: 0
 13844  004A2E  A16C               	btfss	___ftmul@f1& (0+255),0,b
 13845  004A30  D006               	goto	l1996
 13846                           
 13847                           ; BSR set to: 0
 13848  004A32  516F               	movf	___ftmul@f2& (0+255),w,b
 13849  004A34  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
 13850  004A36  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
 13851  004A38  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 13852  004A3A  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
 13853  004A3C  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 13854  004A3E                     l1996:
 13855                           
 13856                           ; BSR set to: 0
 13857                           
 13858                           ; BSR set to: 0
 13859  004A3E  90D8               	bcf	status,0,c
 13860  004A40  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 13861  004A42  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 13862  004A44  336C               	rrcf	___ftmul@f1& (0+255),f,b
 13863  004A46  90D8               	bcf	status,0,c
 13864  004A48  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 13865  004A4A  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 13866  004A4C  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 13867                           
 13868                           ; BSR set to: 0
 13869  004A4E  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
 13870  004A50  D7EE               	goto	l1995
 13871                           
 13872                           ; BSR set to: 0
 13873                           
 13874                           ; BSR set to: 0
 13875  004A52  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 13876  004A56  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 13877  004A5A  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 13878  004A5E  C075  F063         	movff	___ftmul@exp,___ftpack@exp
 13879  004A62  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
 13880  004A66  EC2B  F027         	call	___ftpack	;wreg free
 13881  004A6A  C060  F06C         	movff	?___ftpack,?___ftmul
 13882  004A6E  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
 13883  004A72  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
 13884  004A76  0012               	return	
 13885  004A78                     __end_of___ftmul:
 13886                           	opt stack 0
 13887                           tblptru	equ	0xFF8
 13888                           tblptrh	equ	0xFF7
 13889                           tblptrl	equ	0xFF6
 13890                           tablat	equ	0xFF5
 13891                           prodh	equ	0xFF4
 13892                           prodl	equ	0xFF3
 13893                           intcon	equ	0xFF2
 13894                           intcon2	equ	0xFF1
 13895                           intcon3	equ	0xFF0
 13896                           postinc0	equ	0xFEE
 13897                           wreg	equ	0xFE8
 13898                           postdec1	equ	0xFE5
 13899                           fsr1l	equ	0xFE1
 13900                           indf2	equ	0xFDF
 13901                           postinc2	equ	0xFDE
 13902                           postdec2	equ	0xFDD
 13903                           fsr2h	equ	0xFDA
 13904                           fsr2l	equ	0xFD9
 13905                           status	equ	0xFD8
 13906                           
 13907 ;; *************** function ___ftge *****************
 13908 ;; Defined at:
 13909 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftge.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;  ff1             3    0[BANK0 ] float 
 13912 ;;  ff2             3    3[BANK0 ] float 
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;		None
 13915 ;; Return value:  Size  Location     Type
 13916 ;;		None               void
 13917 ;; Registers used:
 13918 ;;		wreg, status,2, status,0
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13924 ;;      Params:         0       6       0       0       0       0       0       0       0
 13925 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13926 ;;      Temps:          0       3       0       0       0       0       0       0       0
 13927 ;;      Totals:         0       9       0       0       0       0       0       0       0
 13928 ;;Total ram usage:        9 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    6
 13931 ;; This function calls:
 13932 ;;		Nothing
 13933 ;; This function is called by:
 13934 ;;		_getSensors
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text13
 13939  005220                     __ptext13:
 13940                           	opt stack 0
 13941  005220                     ___ftge:
 13942                           	opt stack 23
 13943                           
 13944                           ;incstack = 0
 13945  005220  0100               	movlb	0	; () banked
 13946  005222  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 13947  005224  D016               	goto	l1982
 13948                           
 13949                           ; BSR set to: 0
 13950  005226  C060  F066         	movff	___ftge@ff1,??___ftge
 13951  00522A  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 13952  00522E  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 13953  005232  1F66               	comf	??___ftge& (0+255),f,b
 13954  005234  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13955  005236  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13956  005238  2B66               	incf	??___ftge& (0+255),f,b
 13957  00523A  0E00               	movlw	0
 13958  00523C  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13959  00523E  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13960  005240  0E00               	movlw	0
 13961  005242  2566               	addwf	??___ftge& (0+255),w,b
 13962  005244  6F60               	movwf	___ftge@ff1& (0+255),b
 13963  005246  0E00               	movlw	0
 13964  005248  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13965  00524A  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 13966  00524C  0E80               	movlw	128
 13967  00524E  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13968  005250  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 13969  005252                     l1982:
 13970                           
 13971                           ; BSR set to: 0
 13972                           
 13973                           ; BSR set to: 0
 13974  005252  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 13975  005254  D016               	goto	l1983
 13976                           
 13977                           ; BSR set to: 0
 13978  005256  C063  F066         	movff	___ftge@ff2,??___ftge
 13979  00525A  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 13980  00525E  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 13981  005262  1F66               	comf	??___ftge& (0+255),f,b
 13982  005264  1F67               	comf	(??___ftge+1)& (0+255),f,b
 13983  005266  1F68               	comf	(??___ftge+2)& (0+255),f,b
 13984  005268  2B66               	incf	??___ftge& (0+255),f,b
 13985  00526A  0E00               	movlw	0
 13986  00526C  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 13987  00526E  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 13988  005270  0E00               	movlw	0
 13989  005272  2566               	addwf	??___ftge& (0+255),w,b
 13990  005274  6F63               	movwf	___ftge@ff2& (0+255),b
 13991  005276  0E00               	movlw	0
 13992  005278  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 13993  00527A  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 13994  00527C  0E80               	movlw	128
 13995  00527E  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 13996  005280  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 13997  005282                     l1983:
 13998                           
 13999                           ; BSR set to: 0
 14000                           
 14001                           ; BSR set to: 0
 14002  005282  0E00               	movlw	0
 14003  005284  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 14004  005286  0E00               	movlw	0
 14005  005288  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14006  00528A  0E80               	movlw	128
 14007  00528C  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14008                           
 14009                           ; BSR set to: 0
 14010  00528E  0E00               	movlw	0
 14011  005290  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 14012  005292  0E00               	movlw	0
 14013  005294  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14014  005296  0E80               	movlw	128
 14015  005298  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14016  00529A  5163               	movf	___ftge@ff2& (0+255),w,b
 14017  00529C  5D60               	subwf	___ftge@ff1& (0+255),w,b
 14018  00529E  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 14019  0052A0  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14020  0052A2  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 14021  0052A4  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14022  0052A6  B0D8               	btfsc	status,0,c
 14023  0052A8  D002               	goto	l6220
 14024                           
 14025                           ; BSR set to: 0
 14026  0052AA  90D8               	bcf	status,0,c
 14027  0052AC  0012               	return	
 14028  0052AE                     l6220:
 14029                           
 14030                           ; BSR set to: 0
 14031                           
 14032                           ; BSR set to: 0
 14033  0052AE  80D8               	bsf	status,0,c
 14034                           
 14035                           ; BSR set to: 0
 14036  0052B0  0012               	return	
 14037  0052B2                     __end_of___ftge:
 14038                           	opt stack 0
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           intcon2	equ	0xFF1
 14047                           intcon3	equ	0xFF0
 14048                           postinc0	equ	0xFEE
 14049                           wreg	equ	0xFE8
 14050                           postdec1	equ	0xFE5
 14051                           fsr1l	equ	0xFE1
 14052                           indf2	equ	0xFDF
 14053                           postinc2	equ	0xFDE
 14054                           postdec2	equ	0xFDD
 14055                           fsr2h	equ	0xFDA
 14056                           fsr2l	equ	0xFD9
 14057                           status	equ	0xFD8
 14058                           
 14059 ;; *************** function ___ftdiv *****************
 14060 ;; Defined at:
 14061 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;  f1              3   39[BANK0 ] float 
 14064 ;;  f2              3   42[BANK0 ] float 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;  f3              3   49[BANK0 ] float 
 14067 ;;  sign            1   53[BANK0 ] unsigned char 
 14068 ;;  exp             1   52[BANK0 ] unsigned char 
 14069 ;;  cntr            1   48[BANK0 ] unsigned char 
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  3   39[BANK0 ] float 
 14072 ;; Registers used:
 14073 ;;		wreg, status,2, status,0, cstack
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14079 ;;      Params:         0       6       0       0       0       0       0       0       0
 14080 ;;      Locals:         0       6       0       0       0       0       0       0       0
 14081 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14082 ;;      Totals:         0      15       0       0       0       0       0       0       0
 14083 ;;Total ram usage:       15 bytes
 14084 ;; Hardware stack levels used:    1
 14085 ;; Hardware stack levels required when called:    7
 14086 ;; This function calls:
 14087 ;;		___ftpack
 14088 ;; This function is called by:
 14089 ;;		_getSensors
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text14
 14094  004A78                     __ptext14:
 14095                           	opt stack 0
 14096  004A78                     ___ftdiv:
 14097                           	opt stack 22
 14098                           
 14099                           ; BSR set to: 0
 14100                           ;incstack = 0
 14101  004A78  C089  F08D         	movff	___ftdiv@f1+2,??___ftdiv
 14102  004A7C  0100               	movlb	0	; () banked
 14103  004A7E  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14104  004A80  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14105  004A82  3588               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 14106  004A84  378D               	rlcf	??___ftdiv& (0+255),f,b
 14107  004A86  E301               	bnc	u12071
 14108  004A88  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14109  004A8A                     u12071:
 14110  004A8A  518D               	movf	??___ftdiv& (0+255),w,b
 14111  004A8C  6F94               	movwf	___ftdiv@exp& (0+255),b
 14112  004A8E  5194               	movf	___ftdiv@exp& (0+255),w,b
 14113  004A90  A4D8               	btfss	status,2,c
 14114  004A92  D007               	goto	l1974
 14115                           
 14116                           ; BSR set to: 0
 14117  004A94  0E00               	movlw	0
 14118  004A96  6F87               	movwf	?___ftdiv& (0+255),b
 14119  004A98  0E00               	movlw	0
 14120  004A9A  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14121  004A9C  0E00               	movlw	0
 14122  004A9E  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14123                           
 14124                           ; BSR set to: 0
 14125  004AA0  0012               	return	
 14126  004AA2                     l1974:
 14127                           
 14128                           ; BSR set to: 0
 14129                           
 14130                           ; BSR set to: 0
 14131  004AA2  C08C  F08D         	movff	___ftdiv@f2+2,??___ftdiv
 14132  004AA6  6B8E               	clrf	(??___ftdiv+1)& (0+255),b
 14133  004AA8  6B8F               	clrf	(??___ftdiv+2)& (0+255),b
 14134  004AAA  358B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 14135  004AAC  378D               	rlcf	??___ftdiv& (0+255),f,b
 14136  004AAE  E301               	bnc	u12091
 14137  004AB0  818E               	bsf	(??___ftdiv+1)& (0+255),0,b
 14138  004AB2                     u12091:
 14139  004AB2  518D               	movf	??___ftdiv& (0+255),w,b
 14140  004AB4  6F95               	movwf	___ftdiv@sign& (0+255),b
 14141  004AB6  5195               	movf	___ftdiv@sign& (0+255),w,b
 14142  004AB8  A4D8               	btfss	status,2,c
 14143  004ABA  D007               	goto	l1976
 14144                           
 14145                           ; BSR set to: 0
 14146  004ABC  0E00               	movlw	0
 14147  004ABE  6F87               	movwf	?___ftdiv& (0+255),b
 14148  004AC0  0E00               	movlw	0
 14149  004AC2  6F88               	movwf	(?___ftdiv+1)& (0+255),b
 14150  004AC4  0E00               	movlw	0
 14151  004AC6  6F89               	movwf	(?___ftdiv+2)& (0+255),b
 14152                           
 14153                           ; BSR set to: 0
 14154  004AC8  0012               	return	
 14155  004ACA                     l1976:
 14156                           
 14157                           ; BSR set to: 0
 14158                           
 14159                           ; BSR set to: 0
 14160  004ACA  0E00               	movlw	0
 14161  004ACC  6F91               	movwf	___ftdiv@f3& (0+255),b
 14162  004ACE  0E00               	movlw	0
 14163  004AD0  6F92               	movwf	(___ftdiv@f3+1)& (0+255),b
 14164  004AD2  0E00               	movlw	0
 14165  004AD4  6F93               	movwf	(___ftdiv@f3+2)& (0+255),b
 14166                           
 14167                           ; BSR set to: 0
 14168  004AD6  5195               	movf	___ftdiv@sign& (0+255),w,b
 14169  004AD8  0F89               	addlw	137
 14170  004ADA  5F94               	subwf	___ftdiv@exp& (0+255),f,b
 14171                           
 14172                           ; BSR set to: 0
 14173  004ADC  C089  F095         	movff	___ftdiv@f1+2,___ftdiv@sign
 14174                           
 14175                           ; BSR set to: 0
 14176  004AE0  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14177  004AE2  1B95               	xorwf	___ftdiv@sign& (0+255),f,b
 14178                           
 14179                           ; BSR set to: 0
 14180  004AE4  0E80               	movlw	128
 14181  004AE6  1795               	andwf	___ftdiv@sign& (0+255),f,b
 14182                           
 14183                           ; BSR set to: 0
 14184  004AE8  8F88               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 14185                           
 14186                           ; BSR set to: 0
 14187  004AEA  0EFF               	movlw	255
 14188  004AEC  1787               	andwf	___ftdiv@f1& (0+255),f,b
 14189  004AEE  0EFF               	movlw	255
 14190  004AF0  1788               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 14191  004AF2  0E00               	movlw	0
 14192  004AF4  1789               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 14193                           
 14194                           ; BSR set to: 0
 14195  004AF6  8F8B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 14196                           
 14197                           ; BSR set to: 0
 14198  004AF8  0EFF               	movlw	255
 14199  004AFA  178A               	andwf	___ftdiv@f2& (0+255),f,b
 14200  004AFC  0EFF               	movlw	255
 14201  004AFE  178B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 14202  004B00  0E00               	movlw	0
 14203  004B02  178C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 14204                           
 14205                           ; BSR set to: 0
 14206  004B04  0E18               	movlw	24
 14207  004B06  6F90               	movwf	___ftdiv@cntr& (0+255),b
 14208  004B08                     
 14209                           ; BSR set to: 0
 14210                           
 14211                           ; BSR set to: 0
 14212  004B08  90D8               	bcf	status,0,c
 14213  004B0A  3791               	rlcf	___ftdiv@f3& (0+255),f,b
 14214  004B0C  3792               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 14215  004B0E  3793               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 14216                           
 14217                           ; BSR set to: 0
 14218  004B10  518A               	movf	___ftdiv@f2& (0+255),w,b
 14219  004B12  5D87               	subwf	___ftdiv@f1& (0+255),w,b
 14220  004B14  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14221  004B16  5988               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 14222  004B18  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14223  004B1A  5989               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 14224  004B1C  A0D8               	btfss	status,0,c
 14225  004B1E  D007               	goto	l1978
 14226                           
 14227                           ; BSR set to: 0
 14228  004B20  518A               	movf	___ftdiv@f2& (0+255),w,b
 14229  004B22  5F87               	subwf	___ftdiv@f1& (0+255),f,b
 14230  004B24  518B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 14231  004B26  5B88               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 14232  004B28  518C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 14233  004B2A  5B89               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 14234                           
 14235                           ; BSR set to: 0
 14236  004B2C  8191               	bsf	___ftdiv@f3& (0+255),0,b
 14237  004B2E                     l1978:
 14238                           
 14239                           ; BSR set to: 0
 14240  004B2E  90D8               	bcf	status,0,c
 14241  004B30  3787               	rlcf	___ftdiv@f1& (0+255),f,b
 14242  004B32  3788               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 14243  004B34  3789               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 14244                           
 14245                           ; BSR set to: 0
 14246  004B36  2F90               	decfsz	___ftdiv@cntr& (0+255),f,b
 14247  004B38  D7E7               	goto	l1977
 14248                           
 14249                           ; BSR set to: 0
 14250                           
 14251                           ; BSR set to: 0
 14252  004B3A  C091  F060         	movff	___ftdiv@f3,___ftpack@arg
 14253  004B3E  C092  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 14254  004B42  C093  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 14255  004B46  C094  F063         	movff	___ftdiv@exp,___ftpack@exp
 14256  004B4A  C095  F064         	movff	___ftdiv@sign,___ftpack@sign
 14257  004B4E  EC2B  F027         	call	___ftpack	;wreg free
 14258  004B52  C060  F087         	movff	?___ftpack,?___ftdiv
 14259  004B56  C061  F088         	movff	?___ftpack+1,?___ftdiv+1
 14260  004B5A  C062  F089         	movff	?___ftpack+2,?___ftdiv+2
 14261  004B5E  0012               	return	
 14262  004B60                     __end_of___ftdiv:
 14263                           	opt stack 0
 14264                           tblptru	equ	0xFF8
 14265                           tblptrh	equ	0xFF7
 14266                           tblptrl	equ	0xFF6
 14267                           tablat	equ	0xFF5
 14268                           prodh	equ	0xFF4
 14269                           prodl	equ	0xFF3
 14270                           intcon	equ	0xFF2
 14271                           intcon2	equ	0xFF1
 14272                           intcon3	equ	0xFF0
 14273                           postinc0	equ	0xFEE
 14274                           wreg	equ	0xFE8
 14275                           postdec1	equ	0xFE5
 14276                           fsr1l	equ	0xFE1
 14277                           indf2	equ	0xFDF
 14278                           postinc2	equ	0xFDE
 14279                           postdec2	equ	0xFDD
 14280                           fsr2h	equ	0xFDA
 14281                           fsr2l	equ	0xFD9
 14282                           status	equ	0xFD8
 14283                           
 14284 ;; *************** function ___ftadd *****************
 14285 ;; Defined at:
 14286 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
 14287 ;; Parameters:    Size  Location     Type
 14288 ;;  f1              3   27[BANK0 ] float 
 14289 ;;  f2              3   30[BANK0 ] float 
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;  exp1            1   38[BANK0 ] unsigned char 
 14292 ;;  exp2            1   37[BANK0 ] unsigned char 
 14293 ;;  sign            1   36[BANK0 ] unsigned char 
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  3   27[BANK0 ] float 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14303 ;;      Params:         0       6       0       0       0       0       0       0       0
 14304 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14305 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14306 ;;      Totals:         0      12       0       0       0       0       0       0       0
 14307 ;;Total ram usage:       12 bytes
 14308 ;; Hardware stack levels used:    1
 14309 ;; Hardware stack levels required when called:    7
 14310 ;; This function calls:
 14311 ;;		___ftpack
 14312 ;; This function is called by:
 14313 ;;		_getSensors
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text15
 14318  0043A0                     __ptext15:
 14319                           	opt stack 0
 14320  0043A0                     ___ftadd:
 14321                           	opt stack 22
 14322                           
 14323                           ;incstack = 0
 14324  0043A0  C07D  F081         	movff	___ftadd@f1+2,??___ftadd
 14325  0043A4  0100               	movlb	0	; () banked
 14326  0043A6  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14327  0043A8  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14328  0043AA  357C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14329  0043AC  3781               	rlcf	??___ftadd& (0+255),f,b
 14330  0043AE  E301               	bnc	u11861
 14331  0043B0  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14332  0043B2                     u11861:
 14333  0043B2  5181               	movf	??___ftadd& (0+255),w,b
 14334  0043B4  6F86               	movwf	___ftadd@exp1& (0+255),b
 14335  0043B6  C080  F081         	movff	___ftadd@f2+2,??___ftadd
 14336  0043BA  6B82               	clrf	(??___ftadd+1)& (0+255),b
 14337  0043BC  6B83               	clrf	(??___ftadd+2)& (0+255),b
 14338  0043BE  357F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14339  0043C0  3781               	rlcf	??___ftadd& (0+255),f,b
 14340  0043C2  E301               	bnc	u11871
 14341  0043C4  8182               	bsf	(??___ftadd+1)& (0+255),0,b
 14342  0043C6                     u11871:
 14343  0043C6  5181               	movf	??___ftadd& (0+255),w,b
 14344  0043C8  6F85               	movwf	___ftadd@exp2& (0+255),b
 14345                           
 14346                           ; BSR set to: 0
 14347  0043CA  5186               	movf	___ftadd@exp1& (0+255),w,b
 14348  0043CC  B4D8               	btfsc	status,2,c
 14349  0043CE  D00B               	goto	u11900
 14350                           
 14351                           ; BSR set to: 0
 14352  0043D0  5185               	movf	___ftadd@exp2& (0+255),w,b
 14353  0043D2  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14354  0043D4  B0D8               	btfsc	status,0,c
 14355  0043D6  D00E               	goto	l1941
 14356                           
 14357                           ; BSR set to: 0
 14358  0043D8  5186               	movf	___ftadd@exp1& (0+255),w,b
 14359  0043DA  0800               	sublw	0
 14360  0043DC  2585               	addwf	___ftadd@exp2& (0+255),w,b
 14361  0043DE  6F81               	movwf	??___ftadd& (0+255),b
 14362  0043E0  0E18               	movlw	24
 14363  0043E2  6581               	cpfsgt	??___ftadd& (0+255),b
 14364  0043E4  D007               	goto	l1941
 14365  0043E6                     u11900:
 14366                           
 14367                           ; BSR set to: 0
 14368  0043E6  C07E  F07B         	movff	___ftadd@f2,?___ftadd
 14369  0043EA  C07F  F07C         	movff	___ftadd@f2+1,?___ftadd+1
 14370  0043EE  C080  F07D         	movff	___ftadd@f2+2,?___ftadd+2
 14371  0043F2  0012               	return	
 14372  0043F4                     l1941:
 14373                           
 14374                           ; BSR set to: 0
 14375                           
 14376                           ; BSR set to: 0
 14377  0043F4  5185               	movf	___ftadd@exp2& (0+255),w,b
 14378  0043F6  B4D8               	btfsc	status,2,c
 14379  0043F8  D00B               	goto	u11930
 14380                           
 14381                           ; BSR set to: 0
 14382  0043FA  5186               	movf	___ftadd@exp1& (0+255),w,b
 14383  0043FC  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14384  0043FE  B0D8               	btfsc	status,0,c
 14385  004400  D00E               	goto	l1945
 14386                           
 14387                           ; BSR set to: 0
 14388  004402  5185               	movf	___ftadd@exp2& (0+255),w,b
 14389  004404  0800               	sublw	0
 14390  004406  2586               	addwf	___ftadd@exp1& (0+255),w,b
 14391  004408  6F81               	movwf	??___ftadd& (0+255),b
 14392  00440A  0E18               	movlw	24
 14393  00440C  6581               	cpfsgt	??___ftadd& (0+255),b
 14394  00440E  D007               	goto	l1945
 14395  004410                     u11930:
 14396                           
 14397                           ; BSR set to: 0
 14398  004410  C07B  F07B         	movff	___ftadd@f1,?___ftadd
 14399  004414  C07C  F07C         	movff	___ftadd@f1+1,?___ftadd+1
 14400  004418  C07D  F07D         	movff	___ftadd@f1+2,?___ftadd+2
 14401  00441C  0012               	return	
 14402  00441E                     l1945:
 14403                           
 14404                           ; BSR set to: 0
 14405                           
 14406                           ; BSR set to: 0
 14407  00441E  0E06               	movlw	6
 14408  004420  6F84               	movwf	___ftadd@sign& (0+255),b
 14409                           
 14410                           ; BSR set to: 0
 14411  004422  BF7D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14412                           
 14413                           ; BSR set to: 0
 14414  004424  8F84               	bsf	___ftadd@sign& (0+255),7,b
 14415                           
 14416                           ; BSR set to: 0
 14417                           
 14418                           ; BSR set to: 0
 14419  004426  BF80               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14420                           
 14421                           ; BSR set to: 0
 14422  004428  8D84               	bsf	___ftadd@sign& (0+255),6,b
 14423                           
 14424                           ; BSR set to: 0
 14425  00442A  8F7C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14426                           
 14427                           ; BSR set to: 0
 14428  00442C  0EFF               	movlw	255
 14429  00442E  177B               	andwf	___ftadd@f1& (0+255),f,b
 14430  004430  0EFF               	movlw	255
 14431  004432  177C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14432  004434  0E00               	movlw	0
 14433  004436  177D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14434  004438  8F7F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14435                           
 14436                           ; BSR set to: 0
 14437  00443A  0EFF               	movlw	255
 14438  00443C  177E               	andwf	___ftadd@f2& (0+255),f,b
 14439  00443E  0EFF               	movlw	255
 14440  004440  177F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14441  004442  0E00               	movlw	0
 14442  004444  1780               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14443                           
 14444                           ; BSR set to: 0
 14445  004446  5185               	movf	___ftadd@exp2& (0+255),w,b
 14446  004448  5D86               	subwf	___ftadd@exp1& (0+255),w,b
 14447  00444A  B0D8               	btfsc	status,0,c
 14448  00444C  D01B               	goto	l1950
 14449  00444E                     u11960:
 14450                           
 14451                           ; BSR set to: 0
 14452                           
 14453                           ; BSR set to: 0
 14454  00444E  90D8               	bcf	status,0,c
 14455  004450  377E               	rlcf	___ftadd@f2& (0+255),f,b
 14456  004452  377F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14457  004454  3780               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14458  004456  0785               	decf	___ftadd@exp2& (0+255),f,b
 14459                           
 14460                           ; BSR set to: 0
 14461  004458  5186               	movf	___ftadd@exp1& (0+255),w,b
 14462  00445A  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14463  00445C  B4D8               	btfsc	status,2,c
 14464  00445E  D00D               	goto	l1955
 14465                           
 14466                           ; BSR set to: 0
 14467  004460  0784               	decf	___ftadd@sign& (0+255),f,b
 14468  004462  C084  F081         	movff	___ftadd@sign,??___ftadd
 14469  004466  0E07               	movlw	7
 14470  004468  1781               	andwf	??___ftadd& (0+255),f,b
 14471  00446A  B4D8               	btfsc	status,2,c
 14472  00446C  D006               	goto	l1955
 14473  00446E  D7EF               	goto	u11960
 14474  004470                     
 14475                           ; BSR set to: 0
 14476                           
 14477                           ; BSR set to: 0
 14478  004470  90D8               	bcf	status,0,c
 14479  004472  337D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14480  004474  337C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14481  004476  337B               	rrcf	___ftadd@f1& (0+255),f,b
 14482  004478  2B86               	incf	___ftadd@exp1& (0+255),f,b
 14483  00447A                     l1955:
 14484                           
 14485                           ; BSR set to: 0
 14486                           
 14487                           ; BSR set to: 0
 14488  00447A  5185               	movf	___ftadd@exp2& (0+255),w,b
 14489  00447C  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14490  00447E  B4D8               	btfsc	status,2,c
 14491  004480  D01F               	goto	u12030
 14492  004482  D7F6               	goto	l1956
 14493  004484                     l1950:
 14494                           
 14495                           ; BSR set to: 0
 14496                           
 14497                           ; BSR set to: 0
 14498  004484  5186               	movf	___ftadd@exp1& (0+255),w,b
 14499  004486  5D85               	subwf	___ftadd@exp2& (0+255),w,b
 14500  004488  B0D8               	btfsc	status,0,c
 14501  00448A  D01A               	goto	u12030
 14502  00448C                     u12000:
 14503                           
 14504                           ; BSR set to: 0
 14505                           
 14506                           ; BSR set to: 0
 14507  00448C  90D8               	bcf	status,0,c
 14508  00448E  377B               	rlcf	___ftadd@f1& (0+255),f,b
 14509  004490  377C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14510  004492  377D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14511  004494  0786               	decf	___ftadd@exp1& (0+255),f,b
 14512                           
 14513                           ; BSR set to: 0
 14514  004496  5186               	movf	___ftadd@exp1& (0+255),w,b
 14515  004498  1985               	xorwf	___ftadd@exp2& (0+255),w,b
 14516  00449A  B4D8               	btfsc	status,2,c
 14517  00449C  D00D               	goto	l1964
 14518                           
 14519                           ; BSR set to: 0
 14520  00449E  0784               	decf	___ftadd@sign& (0+255),f,b
 14521  0044A0  C084  F081         	movff	___ftadd@sign,??___ftadd
 14522  0044A4  0E07               	movlw	7
 14523  0044A6  1781               	andwf	??___ftadd& (0+255),f,b
 14524  0044A8  B4D8               	btfsc	status,2,c
 14525  0044AA  D006               	goto	l1964
 14526  0044AC  D7EF               	goto	u12000
 14527  0044AE                     
 14528                           ; BSR set to: 0
 14529                           
 14530                           ; BSR set to: 0
 14531  0044AE  90D8               	bcf	status,0,c
 14532  0044B0  3380               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14533  0044B2  337F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14534  0044B4  337E               	rrcf	___ftadd@f2& (0+255),f,b
 14535  0044B6  2B85               	incf	___ftadd@exp2& (0+255),f,b
 14536  0044B8                     l1964:
 14537                           
 14538                           ; BSR set to: 0
 14539                           
 14540                           ; BSR set to: 0
 14541  0044B8  5185               	movf	___ftadd@exp2& (0+255),w,b
 14542  0044BA  1986               	xorwf	___ftadd@exp1& (0+255),w,b
 14543  0044BC  A4D8               	btfss	status,2,c
 14544  0044BE  D7F7               	goto	l1965
 14545  0044C0                     u12030:
 14546                           
 14547                           ; BSR set to: 0
 14548                           
 14549                           ; BSR set to: 0
 14550                           
 14551                           ; BSR set to: 0
 14552  0044C0  AF84               	btfss	___ftadd@sign& (0+255),7,b
 14553  0044C2  D00C               	goto	l1967
 14554                           
 14555                           ; BSR set to: 0
 14556  0044C4  0EFF               	movlw	255
 14557  0044C6  1B7B               	xorwf	___ftadd@f1& (0+255),f,b
 14558  0044C8  0EFF               	movlw	255
 14559  0044CA  1B7C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14560  0044CC  0EFF               	movlw	255
 14561  0044CE  1B7D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14562  0044D0  0E01               	movlw	1
 14563  0044D2  277B               	addwf	___ftadd@f1& (0+255),f,b
 14564  0044D4  0E00               	movlw	0
 14565  0044D6  237C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14566  0044D8  0E00               	movlw	0
 14567  0044DA  237D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14568  0044DC                     l1967:
 14569                           
 14570                           ; BSR set to: 0
 14571  0044DC  AD84               	btfss	___ftadd@sign& (0+255),6,b
 14572  0044DE  D00C               	goto	l1968
 14573                           
 14574                           ; BSR set to: 0
 14575  0044E0  0EFF               	movlw	255
 14576  0044E2  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14577  0044E4  0EFF               	movlw	255
 14578  0044E6  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14579  0044E8  0EFF               	movlw	255
 14580  0044EA  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14581  0044EC  0E01               	movlw	1
 14582  0044EE  277E               	addwf	___ftadd@f2& (0+255),f,b
 14583  0044F0  0E00               	movlw	0
 14584  0044F2  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14585  0044F4  0E00               	movlw	0
 14586  0044F6  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14587  0044F8                     l1968:
 14588                           
 14589                           ; BSR set to: 0
 14590                           
 14591                           ; BSR set to: 0
 14592  0044F8  0E00               	movlw	0
 14593  0044FA  6F84               	movwf	___ftadd@sign& (0+255),b
 14594                           
 14595                           ; BSR set to: 0
 14596  0044FC  517B               	movf	___ftadd@f1& (0+255),w,b
 14597  0044FE  277E               	addwf	___ftadd@f2& (0+255),f,b
 14598  004500  517C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14599  004502  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14600  004504  517D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14601  004506  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14602                           
 14603                           ; BSR set to: 0
 14604  004508  AF80               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14605  00450A  D00E               	goto	l1969
 14606                           
 14607                           ; BSR set to: 0
 14608  00450C  0EFF               	movlw	255
 14609  00450E  1B7E               	xorwf	___ftadd@f2& (0+255),f,b
 14610  004510  0EFF               	movlw	255
 14611  004512  1B7F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14612  004514  0EFF               	movlw	255
 14613  004516  1B80               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14614  004518  0E01               	movlw	1
 14615  00451A  277E               	addwf	___ftadd@f2& (0+255),f,b
 14616  00451C  0E00               	movlw	0
 14617  00451E  237F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14618  004520  0E00               	movlw	0
 14619  004522  2380               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14620                           
 14621                           ; BSR set to: 0
 14622  004524  0E01               	movlw	1
 14623  004526  6F84               	movwf	___ftadd@sign& (0+255),b
 14624  004528                     l1969:
 14625                           
 14626                           ; BSR set to: 0
 14627                           
 14628                           ; BSR set to: 0
 14629  004528  C07E  F060         	movff	___ftadd@f2,___ftpack@arg
 14630  00452C  C07F  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 14631  004530  C080  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 14632  004534  C086  F063         	movff	___ftadd@exp1,___ftpack@exp
 14633  004538  C084  F064         	movff	___ftadd@sign,___ftpack@sign
 14634  00453C  EC2B  F027         	call	___ftpack	;wreg free
 14635  004540  C060  F07B         	movff	?___ftpack,?___ftadd
 14636  004544  C061  F07C         	movff	?___ftpack+1,?___ftadd+1
 14637  004548  C062  F07D         	movff	?___ftpack+2,?___ftadd+2
 14638  00454C  0012               	return	
 14639  00454E                     __end_of___ftadd:
 14640                           	opt stack 0
 14641                           tblptru	equ	0xFF8
 14642                           tblptrh	equ	0xFF7
 14643                           tblptrl	equ	0xFF6
 14644                           tablat	equ	0xFF5
 14645                           prodh	equ	0xFF4
 14646                           prodl	equ	0xFF3
 14647                           intcon	equ	0xFF2
 14648                           intcon2	equ	0xFF1
 14649                           intcon3	equ	0xFF0
 14650                           postinc0	equ	0xFEE
 14651                           wreg	equ	0xFE8
 14652                           postdec1	equ	0xFE5
 14653                           fsr1l	equ	0xFE1
 14654                           indf2	equ	0xFDF
 14655                           postinc2	equ	0xFDE
 14656                           postdec2	equ	0xFDD
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function ___ftpack *****************
 14662 ;; Defined at:
 14663 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  arg             3    0[BANK0 ] unsigned um
 14666 ;;  exp             1    3[BANK0 ] unsigned char 
 14667 ;;  sign            1    4[BANK0 ] unsigned char 
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;		None
 14670 ;; Return value:  Size  Location     Type
 14671 ;;                  3    0[BANK0 ] float 
 14672 ;; Registers used:
 14673 ;;		wreg, status,2, status,0
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14679 ;;      Params:         0       5       0       0       0       0       0       0       0
 14680 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14681 ;;      Temps:          0       3       0       0       0       0       0       0       0
 14682 ;;      Totals:         0       8       0       0       0       0       0       0       0
 14683 ;;Total ram usage:        8 bytes
 14684 ;; Hardware stack levels used:    1
 14685 ;; Hardware stack levels required when called:    6
 14686 ;; This function calls:
 14687 ;;		Nothing
 14688 ;; This function is called by:
 14689 ;;		___ftadd
 14690 ;;		___ftdiv
 14691 ;;		___ftmul
 14692 ;;		___lwtoft
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text16
 14697  004E56                     __ptext16:
 14698                           	opt stack 0
 14699  004E56                     ___ftpack:
 14700                           	opt stack 22
 14701                           
 14702                           ;incstack = 0
 14703  004E56  0100               	movlb	0	; () banked
 14704  004E58  5163               	movf	___ftpack@exp& (0+255),w,b
 14705  004E5A  B4D8               	btfsc	status,2,c
 14706  004E5C  D005               	goto	u8460
 14707                           
 14708                           ; BSR set to: 0
 14709  004E5E  5160               	movf	___ftpack@arg& (0+255),w,b
 14710  004E60  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14711  004E62  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14712  004E64  A4D8               	btfss	status,2,c
 14713  004E66  D00C               	goto	l1910
 14714  004E68                     u8460:
 14715                           
 14716                           ; BSR set to: 0
 14717                           
 14718                           ; BSR set to: 0
 14719  004E68  0E00               	movlw	0
 14720  004E6A  6F60               	movwf	?___ftpack& (0+255),b
 14721  004E6C  0E00               	movlw	0
 14722  004E6E  6F61               	movwf	(?___ftpack+1)& (0+255),b
 14723  004E70  0E00               	movlw	0
 14724  004E72  6F62               	movwf	(?___ftpack+2)& (0+255),b
 14725                           
 14726                           ; BSR set to: 0
 14727  004E74  0012               	return	
 14728  004E76                     
 14729                           ; BSR set to: 0
 14730                           
 14731                           ; BSR set to: 0
 14732  004E76  2B63               	incf	___ftpack@exp& (0+255),f,b
 14733  004E78  90D8               	bcf	status,0,c
 14734  004E7A  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14735  004E7C  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14736  004E7E  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14737  004E80                     l1910:
 14738                           
 14739                           ; BSR set to: 0
 14740                           
 14741                           ; BSR set to: 0
 14742  004E80  0E00               	movlw	0
 14743  004E82  1560               	andwf	___ftpack@arg& (0+255),w,b
 14744  004E84  6F65               	movwf	??___ftpack& (0+255),b
 14745  004E86  0E00               	movlw	0
 14746  004E88  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14747  004E8A  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14748  004E8C  0EFE               	movlw	254
 14749  004E8E  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14750  004E90  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14751  004E92  5165               	movf	??___ftpack& (0+255),w,b
 14752  004E94  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14753  004E96  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14754  004E98  B4D8               	btfsc	status,2,c
 14755  004E9A  D00C               	goto	l1913
 14756  004E9C  D7EC               	goto	l1911
 14757  004E9E                     
 14758                           ; BSR set to: 0
 14759                           
 14760                           ; BSR set to: 0
 14761  004E9E  2B63               	incf	___ftpack@exp& (0+255),f,b
 14762                           
 14763                           ; BSR set to: 0
 14764  004EA0  0E01               	movlw	1
 14765  004EA2  2760               	addwf	___ftpack@arg& (0+255),f,b
 14766  004EA4  0E00               	movlw	0
 14767  004EA6  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14768  004EA8  0E00               	movlw	0
 14769  004EAA  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14770  004EAC  90D8               	bcf	status,0,c
 14771  004EAE  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14772  004EB0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14773  004EB2  3360               	rrcf	___ftpack@arg& (0+255),f,b
 14774  004EB4                     l1913:
 14775                           
 14776                           ; BSR set to: 0
 14777                           
 14778                           ; BSR set to: 0
 14779  004EB4  0E00               	movlw	0
 14780  004EB6  1560               	andwf	___ftpack@arg& (0+255),w,b
 14781  004EB8  6F65               	movwf	??___ftpack& (0+255),b
 14782  004EBA  0E00               	movlw	0
 14783  004EBC  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14784  004EBE  6F66               	movwf	(??___ftpack+1)& (0+255),b
 14785  004EC0  0EFF               	movlw	255
 14786  004EC2  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14787  004EC4  6F67               	movwf	(??___ftpack+2)& (0+255),b
 14788  004EC6  5165               	movf	??___ftpack& (0+255),w,b
 14789  004EC8  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 14790  004ECA  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 14791  004ECC  B4D8               	btfsc	status,2,c
 14792  004ECE  D006               	goto	l1916
 14793  004ED0  D7E6               	goto	l1914
 14794  004ED2                     
 14795                           ; BSR set to: 0
 14796                           
 14797                           ; BSR set to: 0
 14798  004ED2  0763               	decf	___ftpack@exp& (0+255),f,b
 14799  004ED4  90D8               	bcf	status,0,c
 14800  004ED6  3760               	rlcf	___ftpack@arg& (0+255),f,b
 14801  004ED8  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14802  004EDA  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14803  004EDC                     l1916:
 14804                           
 14805                           ; BSR set to: 0
 14806                           
 14807                           ; BSR set to: 0
 14808  004EDC  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14809  004EDE  D003               	goto	u8500
 14810                           
 14811                           ; BSR set to: 0
 14812  004EE0  0E02               	movlw	2
 14813  004EE2  6163               	cpfslt	___ftpack@exp& (0+255),b
 14814  004EE4  D7F6               	goto	l1917
 14815  004EE6                     u8500:
 14816                           
 14817                           ; BSR set to: 0
 14818                           
 14819                           ; BSR set to: 0
 14820  004EE6  A163               	btfss	___ftpack@exp& (0+255),0,b
 14821                           
 14822                           ; BSR set to: 0
 14823  004EE8  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14824                           
 14825                           ; BSR set to: 0
 14826                           
 14827                           ; BSR set to: 0
 14828  004EEA  90D8               	bcf	status,0,c
 14829  004EEC  3363               	rrcf	___ftpack@exp& (0+255),f,b
 14830  004EEE  5163               	movf	___ftpack@exp& (0+255),w,b
 14831  004EF0  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14832                           
 14833                           ; BSR set to: 0
 14834  004EF2  5164               	movf	___ftpack@sign& (0+255),w,b
 14835  004EF4  A4D8               	btfss	status,2,c
 14836                           
 14837                           ; BSR set to: 0
 14838  004EF6  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14839                           
 14840                           ; BSR set to: 0
 14841                           
 14842                           ; BSR set to: 0
 14843  004EF8  C060  F060         	movff	___ftpack@arg,?___ftpack
 14844  004EFC  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 14845  004F00  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 14846  004F04  0012               	return	
 14847  004F06                     __end_of___ftpack:
 14848                           	opt stack 0
 14849                           tblptru	equ	0xFF8
 14850                           tblptrh	equ	0xFF7
 14851                           tblptrl	equ	0xFF6
 14852                           tablat	equ	0xFF5
 14853                           prodh	equ	0xFF4
 14854                           prodl	equ	0xFF3
 14855                           intcon	equ	0xFF2
 14856                           intcon2	equ	0xFF1
 14857                           intcon3	equ	0xFF0
 14858                           postinc0	equ	0xFEE
 14859                           wreg	equ	0xFE8
 14860                           postdec1	equ	0xFE5
 14861                           fsr1l	equ	0xFE1
 14862                           indf2	equ	0xFDF
 14863                           postinc2	equ	0xFDE
 14864                           postdec2	equ	0xFDD
 14865                           fsr2h	equ	0xFDA
 14866                           fsr2l	equ	0xFD9
 14867                           status	equ	0xFD8
 14868                           
 14869 ;; *************** function _faseAtual *****************
 14870 ;; Defined at:
 14871 ;;		line 8 in file "src/FuncoesControlador.h"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;  tp              1    wreg     unsigned char 
 14874 ;;  _fase           2    0[BANK0 ] PTR unsigned char 
 14875 ;;		 -> fase(1), 
 14876 ;;  _tempajt        2    2[BANK0 ] PTR unsigned char 
 14877 ;;		 -> tempajt(1), 
 14878 ;; Auto vars:     Size  Location     Type
 14879 ;;  tp              1    5[BANK0 ] unsigned char 
 14880 ;;  tmpajt          1    6[BANK0 ] unsigned char 
 14881 ;;  _fasee          1    4[BANK0 ] unsigned char 
 14882 ;; Return value:  Size  Location     Type
 14883 ;;                  2    0[BANK0 ] PTR unsigned char 
 14884 ;; Registers used:
 14885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14886 ;; Tracked objects:
 14887 ;;		On entry : 0/0
 14888 ;;		On exit  : 0/0
 14889 ;;		Unchanged: 0/0
 14890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14891 ;;      Params:         0       4       0       0       0       0       0       0       0
 14892 ;;      Locals:         0       3       0       0       0       0       0       0       0
 14893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14894 ;;      Totals:         0       7       0       0       0       0       0       0       0
 14895 ;;Total ram usage:        7 bytes
 14896 ;; Hardware stack levels used:    1
 14897 ;; Hardware stack levels required when called:    6
 14898 ;; This function calls:
 14899 ;;		Nothing
 14900 ;; This function is called by:
 14901 ;;		_main
 14902 ;; This function uses a non-reentrant model
 14903 ;;
 14904                           
 14905                           	psect	text17
 14906  00454E                     __ptext17:
 14907                           	opt stack 0
 14908  00454E                     _faseAtual:
 14909                           	opt stack 24
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;incstack = 0
 14913                           ;faseAtual@tp stored from wreg
 14914  00454E  0100               	movlb	0	; () banked
 14915  004550  6F65               	movwf	faseAtual@tp& (0+255),b
 14916                           
 14917                           ;FuncoesControlador.h: 9: char _fasee = *_fase;
 14918  004552  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 14919  004556  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 14920  00455A  50DF               	movf	indf2,w,c
 14921  00455C  0100               	movlb	0	; () banked
 14922  00455E  6F64               	movwf	faseAtual@_fasee& (0+255),b
 14923                           
 14924                           ;FuncoesControlador.h: 10: char tmpajt = *_tempajt;
 14925  004560  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 14926  004564  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 14927  004568  50DF               	movf	indf2,w,c
 14928  00456A  6F66               	movwf	faseAtual@tmpajt& (0+255),b
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;FuncoesControlador.h: 11: if (tp == '?') {
 14932  00456C  0E3F               	movlw	63
 14933  00456E  1965               	xorwf	faseAtual@tp& (0+255),w,b
 14934  004570  B4D8               	btfsc	status,2,c
 14935  004572  D01A               	goto	l877
 14936  004574  D027               	goto	l876
 14937  004576                     
 14938                           ; BSR set to: 0
 14939                           
 14940                           ; BSR set to: 0
 14941  004576  0EC8               	movlw	low STR_1
 14942  004578  6F60               	movwf	?_faseAtual& (0+255),b
 14943  00457A  0E7E               	movlw	high STR_1
 14944  00457C  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14945                           
 14946                           ; BSR set to: 0
 14947  00457E  0012               	return	
 14948  004580                     
 14949                           ; BSR set to: 0
 14950                           
 14951                           ; BSR set to: 0
 14952  004580  0EA6               	movlw	low STR_2
 14953  004582  6F60               	movwf	?_faseAtual& (0+255),b
 14954  004584  0E7E               	movlw	high STR_2
 14955  004586  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14956                           
 14957                           ; BSR set to: 0
 14958  004588  0012               	return	
 14959  00458A                     
 14960                           ; BSR set to: 0
 14961                           
 14962                           ; BSR set to: 0
 14963  00458A  0EBD               	movlw	low STR_3
 14964  00458C  6F60               	movwf	?_faseAtual& (0+255),b
 14965  00458E  0E7E               	movlw	high STR_3
 14966  004590  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14967                           
 14968                           ; BSR set to: 0
 14969  004592  0012               	return	
 14970  004594                     
 14971                           ; BSR set to: 0
 14972                           
 14973                           ; BSR set to: 0
 14974  004594  0EFE               	movlw	low STR_4
 14975  004596  6F60               	movwf	?_faseAtual& (0+255),b
 14976  004598  0E7E               	movlw	high STR_4
 14977  00459A  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14978                           
 14979                           ; BSR set to: 0
 14980  00459C  0012               	return	
 14981  00459E                     
 14982                           ; BSR set to: 0
 14983                           
 14984                           ; BSR set to: 0
 14985  00459E  0EDA               	movlw	low STR_5
 14986  0045A0  6F60               	movwf	?_faseAtual& (0+255),b
 14987  0045A2  0E7F               	movlw	high STR_5
 14988  0045A4  6F61               	movwf	(?_faseAtual+1)& (0+255),b
 14989                           
 14990                           ; BSR set to: 0
 14991                           ;FuncoesControlador.h: 18: }
 14992                           
 14993                           ; BSR set to: 0
 14994  0045A6  0012               	return	
 14995  0045A8                     l877:
 14996                           
 14997                           ; BSR set to: 0
 14998                           
 14999                           ; BSR set to: 0
 15000  0045A8  5164               	movf	faseAtual@_fasee& (0+255),w,b
 15001                           
 15002                           ; Switch size 1, requested type "space"
 15003                           ; Number of cases is 4, Range of values is 1 to 4
 15004                           ; switch strategies available:
 15005                           ; Name         Instructions Cycles
 15006                           ; simple_byte           13     7 (average)
 15007                           ;	Chosen strategy is simple_byte
 15008  0045AA  0A01               	xorlw	1	; case 1
 15009  0045AC  B4D8               	btfsc	status,2,c
 15010  0045AE  D7E3               	goto	l878
 15011  0045B0  0A03               	xorlw	3	; case 2
 15012  0045B2  B4D8               	btfsc	status,2,c
 15013  0045B4  D7E5               	goto	l880
 15014  0045B6  0A01               	xorlw	1	; case 3
 15015  0045B8  B4D8               	btfsc	status,2,c
 15016  0045BA  D7E7               	goto	l881
 15017  0045BC  0A07               	xorlw	7	; case 4
 15018  0045BE  B4D8               	btfsc	status,2,c
 15019  0045C0  D7E9               	goto	l882
 15020  0045C2  D7ED               	goto	l883
 15021  0045C4                     l876:
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;FuncoesControlador.h: 20: if (tp == 'F') {
 15025                           
 15026                           ; BSR set to: 0
 15027  0045C4  0E46               	movlw	70
 15028  0045C6  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15029  0045C8  A4D8               	btfss	status,2,c
 15030  0045CA  D031               	goto	l886
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;FuncoesControlador.h: 21: if (tmpajt <= 100) *_fase = 1;
 15034  0045CC  0E65               	movlw	101
 15035  0045CE  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15036  0045D0  D007               	goto	l887
 15037                           
 15038                           ; BSR set to: 0
 15039  0045D2  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15040  0045D6  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15041  0045DA  0E01               	movlw	1
 15042  0045DC  6EDF               	movwf	indf2,c
 15043  0045DE  0012               	return	
 15044  0045E0                     l887:
 15045                           
 15046                           ; BSR set to: 0
 15047                           ;FuncoesControlador.h: 22: else if (tmpajt >= 101 && tmpajt <= 110) *_fase = 2;
 15048                           
 15049                           ; BSR set to: 0
 15050  0045E0  0E64               	movlw	100
 15051  0045E2  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15052  0045E4  D00A               	goto	l889
 15053                           
 15054                           ; BSR set to: 0
 15055  0045E6  0E6F               	movlw	111
 15056  0045E8  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15057  0045EA  D007               	goto	l889
 15058                           
 15059                           ; BSR set to: 0
 15060  0045EC  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15061  0045F0  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15062  0045F4  0E02               	movlw	2
 15063  0045F6  6EDF               	movwf	indf2,c
 15064  0045F8  0012               	return	
 15065  0045FA                     l889:
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;FuncoesControlador.h: 23: else if (tmpajt >= 111 && tmpajt <= 133) *_fase = 3;
 15069                           
 15070                           ; BSR set to: 0
 15071  0045FA  0E6E               	movlw	110
 15072  0045FC  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15073  0045FE  D00A               	goto	l891
 15074                           
 15075                           ; BSR set to: 0
 15076  004600  0E86               	movlw	134
 15077  004602  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15078  004604  D007               	goto	l891
 15079                           
 15080                           ; BSR set to: 0
 15081  004606  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15082  00460A  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15083  00460E  0E03               	movlw	3
 15084  004610  6EDF               	movwf	indf2,c
 15085  004612  0012               	return	
 15086  004614                     l891:
 15087                           
 15088                           ; BSR set to: 0
 15089                           ;FuncoesControlador.h: 24: else if (tmpajt >= 134 && tmpajt <= 160) *_fase = 4;
 15090                           
 15091                           ; BSR set to: 0
 15092  004614  0E85               	movlw	133
 15093  004616  6566               	cpfsgt	faseAtual@tmpajt& (0+255),b
 15094  004618  0012               	return	
 15095                           
 15096                           ; BSR set to: 0
 15097  00461A  0EA1               	movlw	161
 15098  00461C  6166               	cpfslt	faseAtual@tmpajt& (0+255),b
 15099  00461E  0012               	return	
 15100                           
 15101                           ; BSR set to: 0
 15102  004620  C060  FFD9         	movff	faseAtual@_fase,fsr2l
 15103  004624  C061  FFDA         	movff	faseAtual@_fase+1,fsr2h
 15104  004628  0E04               	movlw	4
 15105  00462A  6EDF               	movwf	indf2,c
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;FuncoesControlador.h: 25: } else
 15109                           
 15110                           ; BSR set to: 0
 15111                           
 15112                           ; BSR set to: 0
 15113                           
 15114                           ; BSR set to: 0
 15115  00462C  0012               	return	
 15116  00462E                     l886:
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;FuncoesControlador.h: 26: if (tp == 'A') {
 15120                           
 15121                           ; BSR set to: 0
 15122  00462E  0E41               	movlw	65
 15123  004630  1965               	xorwf	faseAtual@tp& (0+255),w,b
 15124  004632  A4D8               	btfss	status,2,c
 15125  004634  0012               	return	
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;FuncoesControlador.h: 27: if (fase == 1) *_tempajt = 85;
 15129  004636  05F6               	decf	_fase& (0+255),w,b
 15130  004638  A4D8               	btfss	status,2,c
 15131  00463A  D007               	goto	l896
 15132                           
 15133                           ; BSR set to: 0
 15134  00463C  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15135  004640  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15136  004644  0E55               	movlw	85
 15137  004646  6EDF               	movwf	indf2,c
 15138  004648  0012               	return	
 15139  00464A                     l896:
 15140                           
 15141                           ; BSR set to: 0
 15142                           ;FuncoesControlador.h: 28: else if (fase == 2) *_tempajt = 101;
 15143                           
 15144                           ; BSR set to: 0
 15145  00464A  0E02               	movlw	2
 15146  00464C  19F6               	xorwf	_fase& (0+255),w,b
 15147  00464E  A4D8               	btfss	status,2,c
 15148  004650  D007               	goto	l898
 15149                           
 15150                           ; BSR set to: 0
 15151  004652  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15152  004656  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15153  00465A  0E65               	movlw	101
 15154  00465C  6EDF               	movwf	indf2,c
 15155  00465E  0012               	return	
 15156  004660                     l898:
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;FuncoesControlador.h: 29: else if (fase == 3) *_tempajt = 111;
 15160                           
 15161                           ; BSR set to: 0
 15162  004660  0E03               	movlw	3
 15163  004662  19F6               	xorwf	_fase& (0+255),w,b
 15164  004664  A4D8               	btfss	status,2,c
 15165  004666  D007               	goto	l900
 15166                           
 15167                           ; BSR set to: 0
 15168  004668  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15169  00466C  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15170  004670  0E6F               	movlw	111
 15171  004672  6EDF               	movwf	indf2,c
 15172  004674  0012               	return	
 15173  004676                     l900:
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;FuncoesControlador.h: 30: else if (fase == 4) *_tempajt = 134;
 15177                           
 15178                           ; BSR set to: 0
 15179  004676  0E04               	movlw	4
 15180  004678  19F6               	xorwf	_fase& (0+255),w,b
 15181  00467A  A4D8               	btfss	status,2,c
 15182  00467C  0012               	return	
 15183                           
 15184                           ; BSR set to: 0
 15185  00467E  C062  FFD9         	movff	faseAtual@_tempajt,fsr2l
 15186  004682  C063  FFDA         	movff	faseAtual@_tempajt+1,fsr2h
 15187  004686  0E86               	movlw	134
 15188  004688  6EDF               	movwf	indf2,c
 15189                           
 15190                           ; BSR set to: 0
 15191                           
 15192                           ; BSR set to: 0
 15193                           
 15194                           ; BSR set to: 0
 15195                           
 15196                           ; BSR set to: 0
 15197                           
 15198                           ; BSR set to: 0
 15199                           
 15200                           ; BSR set to: 0
 15201  00468A  0012               	return	
 15202  00468C                     __end_of_faseAtual:
 15203                           	opt stack 0
 15204                           tblptru	equ	0xFF8
 15205                           tblptrh	equ	0xFF7
 15206                           tblptrl	equ	0xFF6
 15207                           tablat	equ	0xFF5
 15208                           prodh	equ	0xFF4
 15209                           prodl	equ	0xFF3
 15210                           intcon	equ	0xFF2
 15211                           intcon2	equ	0xFF1
 15212                           intcon3	equ	0xFF0
 15213                           postinc0	equ	0xFEE
 15214                           wreg	equ	0xFE8
 15215                           postdec1	equ	0xFE5
 15216                           fsr1l	equ	0xFE1
 15217                           indf2	equ	0xFDF
 15218                           postinc2	equ	0xFDE
 15219                           postdec2	equ	0xFDD
 15220                           fsr2h	equ	0xFDA
 15221                           fsr2l	equ	0xFD9
 15222                           status	equ	0xFD8
 15223                           
 15224 ;; *************** function _enviaDadosWifi *****************
 15225 ;; Defined at:
 15226 ;;		line 147 in file "src/conexaoWifi.h"
 15227 ;; Parameters:    Size  Location     Type
 15228 ;;		None
 15229 ;; Auto vars:     Size  Location     Type
 15230 ;;  i               1  121[BANK0 ] unsigned char 
 15231 ;;  men             1  119[BANK0 ] unsigned char 
 15232 ;;  j               1  118[BANK0 ] unsigned char 
 15233 ;;  AUX            15  101[BANK0 ] unsigned char [15]
 15234 ;;  i               1  120[BANK0 ] unsigned char 
 15235 ;; Return value:  Size  Location     Type
 15236 ;;                  1    wreg      void 
 15237 ;; Registers used:
 15238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15239 ;; Tracked objects:
 15240 ;;		On entry : 0/0
 15241 ;;		On exit  : 0/0
 15242 ;;		Unchanged: 0/0
 15243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15244 ;;      Params:         0       0       0       0       0       0       0       0       0
 15245 ;;      Locals:         0      21       0       0       0       0       0       0       0
 15246 ;;      Temps:          0       2       0       0       0       0       0       0       0
 15247 ;;      Totals:         0      23       0       0       0       0       0       0       0
 15248 ;;Total ram usage:       23 bytes
 15249 ;; Hardware stack levels used:    1
 15250 ;; Hardware stack levels required when called:   10
 15251 ;; This function calls:
 15252 ;;		___wmul
 15253 ;;		_delay
 15254 ;;		_findBufferSerial
 15255 ;;		_printf
 15256 ;;		_setKeyStartReceiveSerial
 15257 ;;		_sprintf
 15258 ;;		_strlen
 15259 ;; This function is called by:
 15260 ;;		_main
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           	psect	text18
 15265  002BB6                     __ptext18:
 15266                           	opt stack 0
 15267  002BB6                     _enviaDadosWifi:
 15268                           	opt stack 20
 15269                           
 15270                           ;conexaoWifi.h: 148: if (t_wifi_restart == 0) {
 15271                           
 15272                           ; BSR set to: 0
 15273                           ;incstack = 0
 15274  002BB6  503E               	movf	_t_wifi_restart,w,c
 15275  002BB8  A4D8               	btfss	status,2,c
 15276  002BBA  D005               	goto	l1013
 15277                           
 15278                           ;conexaoWifi.h: 149: f_wifi_processo = 0;
 15279  002BBC  0E00               	movlw	0
 15280  002BBE  6E3D               	movwf	_f_wifi_processo,c
 15281                           
 15282                           ;conexaoWifi.h: 150: t_wifi_restart = 10;
 15283  002BC0  0E0A               	movlw	10
 15284  002BC2  6E3E               	movwf	_t_wifi_restart,c
 15285                           
 15286                           ;conexaoWifi.h: 151: } else if (strlen(wifi_MAC) == 12) {
 15287  002BC4  0012               	return	
 15288  002BC6                     l1013:
 15289  002BC6  0EE6               	movlw	low _wifi_MAC
 15290  002BC8  0100               	movlb	0	; () banked
 15291  002BCA  6F60               	movwf	strlen@s& (0+255),b
 15292  002BCC  0E01               	movlw	high _wifi_MAC
 15293  002BCE  6F61               	movwf	(strlen@s+1)& (0+255),b
 15294  002BD0  EC02  F02B         	call	_strlen	;wreg free
 15295  002BD4  0E0C               	movlw	12
 15296  002BD6  0100               	movlb	0	; () banked
 15297  002BD8  1960               	xorwf	?_strlen& (0+255),w,b
 15298  002BDA  1161               	iorwf	(?_strlen+1)& (0+255),w,b
 15299  002BDC  B4D8               	btfsc	status,2,c
 15300  002BDE  D1C0               	goto	l1016
 15301  002BE0  D27A               	goto	l1054
 15302  002BE2                     
 15303                           ;conexaoWifi.h: 154: setKeyStartReceiveSerial("ALL");
 15304                           
 15305                           ; BSR set to: 0
 15306  002BE2  0EE2               	movlw	low STR_10
 15307  002BE4  0100               	movlb	0	; () banked
 15308  002BE6  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15309  002BE8  0E7F               	movlw	high STR_10
 15310  002BEA  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15311  002BEC  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15312                           
 15313                           ;conexaoWifi.h: 155: printf("AT+CWMODE=1\r\n");
 15314  002BF0  0E3A               	movlw	low STR_50
 15315  002BF2  0100               	movlb	0	; () banked
 15316  002BF4  6F81               	movwf	printf@f& (0+255),b
 15317  002BF6  0E7E               	movlw	high STR_50
 15318  002BF8  6F82               	movwf	(printf@f+1)& (0+255),b
 15319  002BFA  EC51  F02C         	call	_printf	;wreg free
 15320                           
 15321                           ;conexaoWifi.h: 156: wifi_conectado = 0;
 15322  002BFE  0E00               	movlw	0
 15323  002C00  6E49               	movwf	_wifi_conectado,c
 15324                           
 15325                           ;conexaoWifi.h: 157: f_wifi_processo++;
 15326  002C02  2A3D               	incf	_f_wifi_processo,f,c
 15327                           
 15328                           ;conexaoWifi.h: 158: break;
 15329  002C04  0012               	return	
 15330  002C06                     
 15331                           ;conexaoWifi.h: 160: if (findBufferSerial("OK")) {
 15332  002C06  0EEF               	movlw	low STR_12
 15333  002C08  0100               	movlb	0	; () banked
 15334  002C0A  6F74               	movwf	findBufferSerial@key& (0+255),b
 15335  002C0C  0E7F               	movlw	high STR_12
 15336  002C0E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15337  002C10  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15338  002C14  0900               	iorlw	0
 15339  002C16  B4D8               	btfsc	status,2,c
 15340  002C18  0012               	return	
 15341                           
 15342                           ;conexaoWifi.h: 161: f_wifi_processo++;
 15343  002C1A  2A3D               	incf	_f_wifi_processo,f,c
 15344                           
 15345                           ;conexaoWifi.h: 162: }
 15346                           ;conexaoWifi.h: 163: break;
 15347  002C1C  0012               	return	
 15348  002C1E                     
 15349                           ;conexaoWifi.h: 165: setKeyStartReceiveSerial("ALL");
 15350  002C1E  0EE2               	movlw	low STR_10
 15351  002C20  0100               	movlb	0	; () banked
 15352  002C22  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15353  002C24  0E7F               	movlw	high STR_10
 15354  002C26  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15355  002C28  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15356                           
 15357                           ;conexaoWifi.h: 166: printf("AT+CIPMUX=0\r\n");
 15358  002C2C  0E2C               	movlw	low STR_53
 15359  002C2E  0100               	movlb	0	; () banked
 15360  002C30  6F81               	movwf	printf@f& (0+255),b
 15361  002C32  0E7E               	movlw	high STR_53
 15362  002C34  6F82               	movwf	(printf@f+1)& (0+255),b
 15363  002C36  EC51  F02C         	call	_printf	;wreg free
 15364                           
 15365                           ;conexaoWifi.h: 167: f_wifi_processo++;
 15366  002C3A  2A3D               	incf	_f_wifi_processo,f,c
 15367                           
 15368                           ;conexaoWifi.h: 168: break;
 15369  002C3C  0012               	return	
 15370  002C3E                     
 15371                           ;conexaoWifi.h: 170: if (findBufferSerial("OK") || findBufferSerial("link")) {
 15372  002C3E  0EEF               	movlw	low STR_12
 15373  002C40  0100               	movlb	0	; () banked
 15374  002C42  6F74               	movwf	findBufferSerial@key& (0+255),b
 15375  002C44  0E7F               	movlw	high STR_12
 15376  002C46  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15377  002C48  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15378  002C4C  0900               	iorlw	0
 15379  002C4E  A4D8               	btfss	status,2,c
 15380  002C50  D00A               	goto	u12940
 15381  002C52  0ED0               	movlw	low STR_55
 15382  002C54  0100               	movlb	0	; () banked
 15383  002C56  6F74               	movwf	findBufferSerial@key& (0+255),b
 15384  002C58  0E7F               	movlw	high STR_55
 15385  002C5A  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15386  002C5C  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15387  002C60  0900               	iorlw	0
 15388  002C62  B4D8               	btfsc	status,2,c
 15389  002C64  0012               	return	
 15390  002C66                     u12940:
 15391                           
 15392                           ;conexaoWifi.h: 171: f_wifi_processo++;
 15393  002C66  2A3D               	incf	_f_wifi_processo,f,c
 15394                           
 15395                           ;conexaoWifi.h: 172: }
 15396                           ;conexaoWifi.h: 173: break;
 15397  002C68  0012               	return	
 15398  002C6A                     
 15399                           ;conexaoWifi.h: 175: setKeyStartReceiveSerial("ALL");
 15400  002C6A  0EE2               	movlw	low STR_10
 15401  002C6C  0100               	movlb	0	; () banked
 15402  002C6E  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15403  002C70  0E7F               	movlw	high STR_10
 15404  002C72  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15405  002C74  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15406                           
 15407                           ;conexaoWifi.h: 176: delay(10);
 15408  002C78  0E00               	movlw	0
 15409  002C7A  0100               	movlb	0	; () banked
 15410  002C7C  6F61               	movwf	(delay@x+1)& (0+255),b
 15411  002C7E  0E0A               	movlw	10
 15412  002C80  6F60               	movwf	delay@x& (0+255),b
 15413  002C82  EC31  F02D         	call	_delay	;wreg free
 15414                           
 15415                           ;conexaoWifi.h: 177: printf("AT+CWJAP=\"%s\",\"%s\"\r\n", ssid, senha);
 15416  002C86  0EEE               	movlw	low STR_57
 15417  002C88  0100               	movlb	0	; () banked
 15418  002C8A  6F81               	movwf	printf@f& (0+255),b
 15419  002C8C  0E7B               	movlw	high STR_57
 15420  002C8E  6F82               	movwf	(printf@f+1)& (0+255),b
 15421  002C90  0EC9               	movlw	low _ssid
 15422  002C92  6F83               	movwf	(?_printf+2)& (0+255),b
 15423  002C94  0E01               	movlw	high _ssid
 15424  002C96  6F84               	movwf	(?_printf+3)& (0+255),b
 15425  002C98  0EBA               	movlw	low _senha
 15426  002C9A  6F85               	movwf	(?_printf+4)& (0+255),b
 15427  002C9C  0E01               	movlw	high _senha
 15428  002C9E  6F86               	movwf	(?_printf+5)& (0+255),b
 15429  002CA0  EC51  F02C         	call	_printf	;wreg free
 15430                           
 15431                           ;conexaoWifi.h: 178: f_wifi_processo++;
 15432  002CA4  2A3D               	incf	_f_wifi_processo,f,c
 15433                           
 15434                           ;conexaoWifi.h: 179: t_wifi_restart = 35;
 15435  002CA6  0E23               	movlw	35
 15436  002CA8  6E3E               	movwf	_t_wifi_restart,c
 15437                           
 15438                           ;conexaoWifi.h: 180: break;
 15439  002CAA  0012               	return	
 15440  002CAC                     
 15441                           ;conexaoWifi.h: 183: f_wifi_processo++;
 15442  002CAC  2A3D               	incf	_f_wifi_processo,f,c
 15443                           
 15444                           ;conexaoWifi.h: 185: break;
 15445  002CAE  0012               	return	
 15446  002CB0                     
 15447                           ;conexaoWifi.h: 187: setKeyStartReceiveSerial("ALL");
 15448  002CB0  0EE2               	movlw	low STR_10
 15449  002CB2  0100               	movlb	0	; () banked
 15450  002CB4  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15451  002CB6  0E7F               	movlw	high STR_10
 15452  002CB8  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15453  002CBA  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15454                           
 15455                           ;conexaoWifi.h: 188: if (t_wifi_restart <= 15) {
 15456  002CBE  0E10               	movlw	16
 15457  002CC0  603E               	cpfslt	_t_wifi_restart,c
 15458  002CC2  0012               	return	
 15459                           
 15460                           ;conexaoWifi.h: 189: printf("AT+CIPSTATUS\r\n");
 15461  002CC4  0EFF               	movlw	low STR_59
 15462  002CC6  0100               	movlb	0	; () banked
 15463  002CC8  6F81               	movwf	printf@f& (0+255),b
 15464  002CCA  0E7D               	movlw	high STR_59
 15465  002CCC  6F82               	movwf	(printf@f+1)& (0+255),b
 15466  002CCE  EC51  F02C         	call	_printf	;wreg free
 15467                           
 15468                           ;conexaoWifi.h: 190: f_wifi_processo++;
 15469  002CD2  2A3D               	incf	_f_wifi_processo,f,c
 15470                           
 15471                           ;conexaoWifi.h: 191: }
 15472                           ;conexaoWifi.h: 192: break;
 15473  002CD4  0012               	return	
 15474  002CD6                     
 15475                           ;conexaoWifi.h: 194: if (findBufferSerial("2") || findBufferSerial("4")) {
 15476  002CD6  0EFB               	movlw	low STR_60
 15477  002CD8  0100               	movlb	0	; () banked
 15478  002CDA  6F74               	movwf	findBufferSerial@key& (0+255),b
 15479  002CDC  0E7F               	movlw	high STR_60
 15480  002CDE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15481  002CE0  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15482  002CE4  0900               	iorlw	0
 15483  002CE6  A4D8               	btfss	status,2,c
 15484  002CE8  D00A               	goto	u12970
 15485  002CEA  0EFD               	movlw	low STR_61
 15486  002CEC  0100               	movlb	0	; () banked
 15487  002CEE  6F74               	movwf	findBufferSerial@key& (0+255),b
 15488  002CF0  0E7F               	movlw	high STR_61
 15489  002CF2  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15490  002CF4  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15491  002CF8  0900               	iorlw	0
 15492  002CFA  B4D8               	btfsc	status,2,c
 15493  002CFC  0012               	return	
 15494  002CFE                     u12970:
 15495                           
 15496                           ;conexaoWifi.h: 195: wifi_conectado = 1;
 15497  002CFE  0E01               	movlw	1
 15498  002D00  6E49               	movwf	_wifi_conectado,c
 15499                           
 15500                           ;conexaoWifi.h: 196: f_wifi_processo++;
 15501  002D02  2A3D               	incf	_f_wifi_processo,f,c
 15502                           
 15503                           ;conexaoWifi.h: 197: }
 15504                           ;conexaoWifi.h: 198: break;
 15505  002D04  0012               	return	
 15506  002D06                     
 15507                           ;conexaoWifi.h: 200: setKeyStartReceiveSerial("ALL");
 15508  002D06  0EE2               	movlw	low STR_10
 15509  002D08  0100               	movlb	0	; () banked
 15510  002D0A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15511  002D0C  0E7F               	movlw	high STR_10
 15512  002D0E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15513  002D10  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15514                           
 15515                           ;conexaoWifi.h: 201: printf("AT+CIPSTART=\"TCP\",\"%s\",%d\r\n", ipServer, portServer);
 15516  002D14  0EA6               	movlw	low STR_63
 15517  002D16  0100               	movlb	0	; () banked
 15518  002D18  6F81               	movwf	printf@f& (0+255),b
 15519  002D1A  0E7B               	movlw	high STR_63
 15520  002D1C  6F82               	movwf	(printf@f+1)& (0+255),b
 15521  002D1E  0EA6               	movlw	low _ipServer
 15522  002D20  6F83               	movwf	(?_printf+2)& (0+255),b
 15523  002D22  0E01               	movlw	high _ipServer
 15524  002D24  6F84               	movwf	(?_printf+3)& (0+255),b
 15525  002D26  0EE2               	movlw	low _portServer
 15526  002D28  6F85               	movwf	(?_printf+4)& (0+255),b
 15527  002D2A  0E01               	movlw	high _portServer
 15528  002D2C  6F86               	movwf	(?_printf+5)& (0+255),b
 15529  002D2E  EC51  F02C         	call	_printf	;wreg free
 15530                           
 15531                           ;conexaoWifi.h: 202: f_wifi_processo++;
 15532  002D32  2A3D               	incf	_f_wifi_processo,f,c
 15533                           
 15534                           ;conexaoWifi.h: 203: break;
 15535  002D34  0012               	return	
 15536  002D36                     
 15537                           ;conexaoWifi.h: 205: if (findBufferSerial("OK") != (0)) {
 15538  002D36  0EEF               	movlw	low STR_12
 15539  002D38  0100               	movlb	0	; () banked
 15540  002D3A  6F74               	movwf	findBufferSerial@key& (0+255),b
 15541  002D3C  0E7F               	movlw	high STR_12
 15542  002D3E  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15543  002D40  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15544  002D44  0900               	iorlw	0
 15545  002D46  B4D8               	btfsc	status,2,c
 15546  002D48  0012               	return	
 15547                           
 15548                           ;conexaoWifi.h: 206: f_wifi_processo++;
 15549  002D4A  2A3D               	incf	_f_wifi_processo,f,c
 15550                           
 15551                           ;conexaoWifi.h: 207: }
 15552                           ;conexaoWifi.h: 208: break;
 15553  002D4C  0012               	return	
 15554  002D4E                     
 15555                           ;conexaoWifi.h: 210: setKeyStartReceiveSerial("ALL");
 15556  002D4E  0EE2               	movlw	low STR_10
 15557  002D50  0100               	movlb	0	; () banked
 15558  002D52  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15559  002D54  0E7F               	movlw	high STR_10
 15560  002D56  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15561  002D58  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15562                           
 15563                           ;conexaoWifi.h: 211: printf("AT+CIPSENDEX=260\r\n");
 15564  002D5C  0EE2               	movlw	low STR_66
 15565  002D5E  0100               	movlb	0	; () banked
 15566  002D60  6F81               	movwf	printf@f& (0+255),b
 15567  002D62  0E7C               	movlw	high STR_66
 15568  002D64  6F82               	movwf	(printf@f+1)& (0+255),b
 15569  002D66  EC51  F02C         	call	_printf	;wreg free
 15570                           
 15571                           ;conexaoWifi.h: 212: f_wifi_processo++;
 15572  002D6A  2A3D               	incf	_f_wifi_processo,f,c
 15573                           
 15574                           ;conexaoWifi.h: 213: break;
 15575  002D6C  0012               	return	
 15576  002D6E                     
 15577                           ;conexaoWifi.h: 215: if (findBufferSerial(">")) {
 15578  002D6E  0E7C               	movlw	low (STR_119+18)
 15579  002D70  0100               	movlb	0	; () banked
 15580  002D72  6F74               	movwf	findBufferSerial@key& (0+255),b
 15581  002D74  0E7C               	movlw	high (STR_119+18)
 15582  002D76  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15583  002D78  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15584  002D7C  0900               	iorlw	0
 15585  002D7E  B4D8               	btfsc	status,2,c
 15586  002D80  0012               	return	
 15587                           
 15588                           ;conexaoWifi.h: 216: f_wifi_processo++;
 15589  002D82  2A3D               	incf	_f_wifi_processo,f,c
 15590                           
 15591                           ;conexaoWifi.h: 217: }
 15592                           ;conexaoWifi.h: 218: break;
 15593  002D84  0012               	return	
 15594  002D86                     
 15595                           ;conexaoWifi.h: 220: setKeyStartReceiveSerial("200");
 15596  002D86  0EDE               	movlw	low STR_68
 15597  002D88  0100               	movlb	0	; () banked
 15598  002D8A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15599  002D8C  0E7F               	movlw	high STR_68
 15600  002D8E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15601  002D90  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15602                           
 15603                           ;conexaoWifi.h: 221: char i = 0;
 15604  002D94  0E00               	movlw	0
 15605  002D96  0100               	movlb	0	; () banked
 15606  002D98  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;conexaoWifi.h: 222: char AUX[15];
 15610                           ;conexaoWifi.h: 223: sprintf(AUX, "%s", "Jul 15 2020");
 15611  002D9A  0EC5               	movlw	low enviaDadosWifi@AUX
 15612  002D9C  6F81               	movwf	sprintf@wh& (0+255),b
 15613  002D9E  0E00               	movlw	high enviaDadosWifi@AUX
 15614  002DA0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 15615  002DA2  0E0F               	movlw	low (STR_94+7)
 15616  002DA4  6F83               	movwf	sprintf@f& (0+255),b
 15617  002DA6  0E7F               	movlw	high (STR_94+7)
 15618  002DA8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 15619  002DAA  0E8E               	movlw	low STR_70
 15620  002DAC  6F85               	movwf	(?_sprintf+4)& (0+255),b
 15621  002DAE  0E7E               	movlw	high STR_70
 15622  002DB0  6F86               	movwf	(?_sprintf+5)& (0+255),b
 15623  002DB2  ECCD  F02B         	call	_sprintf	;wreg free
 15624                           
 15625                           ;conexaoWifi.h: 224: for (i = 0; i < strlen(AUX); i++) {
 15626  002DB6  0E00               	movlw	0
 15627  002DB8  0100               	movlb	0	; () banked
 15628  002DBA  6FD8               	movwf	enviaDadosWifi@i& (0+255),b
 15629  002DBC  D017               	goto	l1041
 15630  002DBE                     
 15631                           ; BSR set to: 0
 15632                           ;conexaoWifi.h: 225: if (AUX[i] == ' ') AUX[i] = '-';
 15633                           
 15634                           ; BSR set to: 0
 15635  002DBE  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15636  002DC0  0D01               	mullw	1
 15637  002DC2  0EC5               	movlw	low enviaDadosWifi@AUX
 15638  002DC4  24F3               	addwf	prodl,w,c
 15639  002DC6  6ED9               	movwf	fsr2l,c
 15640  002DC8  0E00               	movlw	high enviaDadosWifi@AUX
 15641  002DCA  20F4               	addwfc	prodh,w,c
 15642  002DCC  6EDA               	movwf	fsr2h,c
 15643  002DCE  0E20               	movlw	32
 15644  002DD0  18DE               	xorwf	postinc2,w,c
 15645  002DD2  A4D8               	btfss	status,2,c
 15646  002DD4  D00A               	goto	l1043
 15647                           
 15648                           ; BSR set to: 0
 15649  002DD6  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15650  002DD8  0D01               	mullw	1
 15651  002DDA  0EC5               	movlw	low enviaDadosWifi@AUX
 15652  002DDC  24F3               	addwf	prodl,w,c
 15653  002DDE  6ED9               	movwf	fsr2l,c
 15654  002DE0  0E00               	movlw	high enviaDadosWifi@AUX
 15655  002DE2  20F4               	addwfc	prodh,w,c
 15656  002DE4  6EDA               	movwf	fsr2h,c
 15657  002DE6  0E2D               	movlw	45
 15658  002DE8  6EDF               	movwf	indf2,c
 15659  002DEA                     l1043:
 15660                           
 15661                           ; BSR set to: 0
 15662                           
 15663                           ; BSR set to: 0
 15664  002DEA  2BD8               	incf	enviaDadosWifi@i& (0+255),f,b
 15665  002DEC                     l1041:
 15666                           
 15667                           ; BSR set to: 0
 15668                           
 15669                           ; BSR set to: 0
 15670  002DEC  0EC5               	movlw	low enviaDadosWifi@AUX
 15671  002DEE  6F60               	movwf	strlen@s& (0+255),b
 15672  002DF0  0E00               	movlw	high enviaDadosWifi@AUX
 15673  002DF2  6F61               	movwf	(strlen@s+1)& (0+255),b
 15674  002DF4  EC02  F02B         	call	_strlen	;wreg free
 15675  002DF8  0100               	movlb	0	; () banked
 15676  002DFA  51D8               	movf	enviaDadosWifi@i& (0+255),w,b
 15677  002DFC  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 15678  002DFE  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 15679  002E00  5160               	movf	?_strlen& (0+255),w,b
 15680  002E02  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 15681  002E04  5161               	movf	(?_strlen+1)& (0+255),w,b
 15682  002E06  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 15683  002E08  A0D8               	btfss	status,0,c
 15684  002E0A  D7D9               	goto	l1042
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;conexaoWifi.h: 226: }
 15688                           ;conexaoWifi.h: 228: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15689                           
 15690                           ; BSR set to: 0
 15691  002E0C  C04B  F060         	movff	_wifi_SENHA,___wmul@multiplier
 15692  002E10  C04C  F061         	movff	_wifi_SENHA+1,___wmul@multiplier+1
 15693  002E14  0E00               	movlw	0
 15694  002E16  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15695  002E18  0E27               	movlw	39
 15696  002E1A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15697  002E1C  EC46  F02D         	call	___wmul	;wreg free
 15698  002E20  C060  F0D4         	movff	?___wmul,_enviaDadosWifi$2516
 15699  002E24  C061  F0D5         	movff	?___wmul+1,_enviaDadosWifi$2516+1
 15700                           
 15701                           ;conexaoWifi.h: 226: }
 15702                           ;conexaoWifi.h: 228: printf("GET /device/integration?i=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|
      +                          %s|%d|%s|%d&p=%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d&k=1z4df68iw1fp5 HTTP/1.1\r\nHost
      +                          : 18.228.154.248\r\n\r\n\\0", temp, tempajt, umid, umidajt, fornalha, buzzer, tipo_modo_
      +                          trabalh
 15703  002E28  0EAE               	movlw	low STR_71
 15704  002E2A  0100               	movlb	0	; () banked
 15705  002E2C  6F81               	movwf	printf@f& (0+255),b
 15706  002E2E  0E7A               	movlw	high STR_71
 15707  002E30  6F82               	movwf	(printf@f+1)& (0+255),b
 15708  002E32  C0FE  F083         	movff	_temp,?_printf+2
 15709  002E36  6B84               	clrf	(?_printf+3)& (0+255),b
 15710  002E38  C0F4  F085         	movff	_tempajt,?_printf+4
 15711  002E3C  6B86               	clrf	(?_printf+5)& (0+255),b
 15712  002E3E  C05D  F087         	movff	_umid,?_printf+6
 15713  002E42  6B88               	clrf	(?_printf+7)& (0+255),b
 15714  002E44  C0F3  F089         	movff	_umidajt,?_printf+8
 15715  002E48  6B8A               	clrf	(?_printf+9)& (0+255),b
 15716  002E4A  C05A  F08B         	movff	_fornalha,?_printf+10
 15717  002E4E  6B8C               	clrf	(?_printf+11)& (0+255),b
 15718  002E50  C0FC  F08D         	movff	_buzzer,?_printf+12
 15719  002E54  6B8E               	clrf	(?_printf+13)& (0+255),b
 15720  002E56  C059  F08F         	movff	_tipo_modo_trabalho,?_printf+14
 15721  002E5A  6B90               	clrf	(?_printf+15)& (0+255),b
 15722  002E5C  C0FB  F091         	movff	_trava_fase,?_printf+16
 15723  002E60  6B92               	clrf	(?_printf+17)& (0+255),b
 15724  002E62  C0F6  F093         	movff	_fase,?_printf+18
 15725  002E66  6B94               	clrf	(?_printf+19)& (0+255),b
 15726  002E68  C0F5  F095         	movff	_clima,?_printf+20
 15727  002E6C  6B96               	clrf	(?_printf+21)& (0+255),b
 15728  002E6E  C0FA  F097         	movff	_tipo_sensor_umidade,?_printf+22
 15729  002E72  6B98               	clrf	(?_printf+23)& (0+255),b
 15730  002E74  0EE6               	movlw	low _wifi_MAC
 15731  002E76  6F99               	movwf	(?_printf+24)& (0+255),b
 15732  002E78  0E01               	movlw	high _wifi_MAC
 15733  002E7A  6F9A               	movwf	(?_printf+25)& (0+255),b
 15734  002E7C  C0D4  F09B         	movff	_enviaDadosWifi$2516,?_printf+26
 15735  002E80  C0D5  F09C         	movff	_enviaDadosWifi$2516+1,?_printf+27
 15736  002E84  0EC5               	movlw	low enviaDadosWifi@AUX
 15737  002E86  6F9D               	movwf	(?_printf+28)& (0+255),b
 15738  002E88  0E00               	movlw	high enviaDadosWifi@AUX
 15739  002E8A  6F9E               	movwf	(?_printf+29)& (0+255),b
 15740  002E8C  C05E  F09F         	movff	_f_falta_energia,?_printf+30
 15741  002E90  6BA0               	clrf	(?_printf+31)& (0+255),b
 15742  002E92  C0FA  F0A1         	movff	_tipo_sensor_umidade,?_printf+32
 15743  002E96  6BA2               	clrf	(?_printf+33)& (0+255),b
 15744  002E98  C052  F0A3         	movff	_h_abafador,?_printf+34
 15745  002E9C  6BA4               	clrf	(?_printf+35)& (0+255),b
 15746  002E9E  C051  F0A5         	movff	_h_flap,?_printf+36
 15747  002EA2  6BA6               	clrf	(?_printf+37)& (0+255),b
 15748  002EA4  C053  F0A7         	movff	_h_venotinha,?_printf+38
 15749  002EA8  6BA8               	clrf	(?_printf+39)& (0+255),b
 15750  002EAA  C0F7  F0A9         	movff	_h_modo_seguranca,?_printf+40
 15751  002EAE  6BAA               	clrf	(?_printf+41)& (0+255),b
 15752  002EB0  C050  F0AB         	movff	_h_buzzer,?_printf+42
 15753  002EB4  6BAC               	clrf	(?_printf+43)& (0+255),b
 15754  002EB6  C055  F0AD         	movff	_t_flap_ligado,?_printf+44
 15755  002EBA  6BAE               	clrf	(?_printf+45)& (0+255),b
 15756  002EBC  C054  F0AF         	movff	_t_flap_intervalo,?_printf+46
 15757  002EC0  6BB0               	clrf	(?_printf+47)& (0+255),b
 15758  002EC2  C0FF  F0B1         	movff	_t_buzzer_religar,?_printf+48
 15759  002EC6  6BB2               	clrf	(?_printf+49)& (0+255),b
 15760  002EC8  C0F9  F0B3         	movff	_t_temp_automatica,?_printf+50
 15761  002ECC  6BB4               	clrf	(?_printf+51)& (0+255),b
 15762  002ECE  C04E  F0B5         	movff	_wifi_habilita_alteracao,?_printf+52
 15763  002ED2  6BB6               	clrf	(?_printf+53)& (0+255),b
 15764  002ED4  C04B  F0B7         	movff	_wifi_SENHA,?_printf+54
 15765  002ED8  C04C  F0B8         	movff	_wifi_SENHA+1,?_printf+55
 15766  002EDC  C04F  F0B9         	movff	_h_subir_temp_automatica,?_printf+56
 15767  002EE0  6BBA               	clrf	(?_printf+57)& (0+255),b
 15768  002EE2  C0F8  F0BB         	movff	_t_religar_ventoinha_automatica,?_printf+58
 15769  002EE6  6BBC               	clrf	(?_printf+59)& (0+255),b
 15770  002EE8  EC51  F02C         	call	_printf	;wreg free
 15771                           
 15772                           ;conexaoWifi.h: 229: f_wifi_processo++;
 15773  002EEC  2A3D               	incf	_f_wifi_processo,f,c
 15774                           
 15775                           ;conexaoWifi.h: 230: break;
 15776  002EEE  0012               	return	
 15777  002EF0                     
 15778                           ;conexaoWifi.h: 232: if (findBufferSerial("save")) {
 15779  002EF0  0ECB               	movlw	low STR_72
 15780  002EF2  0100               	movlb	0	; () banked
 15781  002EF4  6F74               	movwf	findBufferSerial@key& (0+255),b
 15782  002EF6  0E7F               	movlw	high STR_72
 15783  002EF8  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15784  002EFA  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15785  002EFE  0900               	iorlw	0
 15786  002F00  B4D8               	btfsc	status,2,c
 15787  002F02  0012               	return	
 15788                           
 15789                           ;conexaoWifi.h: 233: f_wifi_processo++;
 15790  002F04  2A3D               	incf	_f_wifi_processo,f,c
 15791                           
 15792                           ;conexaoWifi.h: 234: }
 15793                           ;conexaoWifi.h: 235: break;
 15794  002F06  0012               	return	
 15795  002F08                     
 15796                           ;conexaoWifi.h: 237: setKeyStartReceiveSerial("ALL");
 15797  002F08  0EE2               	movlw	low STR_10
 15798  002F0A  0100               	movlb	0	; () banked
 15799  002F0C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15800  002F0E  0E7F               	movlw	high STR_10
 15801  002F10  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15802  002F12  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15803                           
 15804                           ;conexaoWifi.h: 238: printf("AT+CIPCLOSE\r\n");
 15805  002F16  0E64               	movlw	low STR_74
 15806  002F18  0100               	movlb	0	; () banked
 15807  002F1A  6F81               	movwf	printf@f& (0+255),b
 15808  002F1C  0E7E               	movlw	high STR_74
 15809  002F1E  6F82               	movwf	(printf@f+1)& (0+255),b
 15810  002F20  EC51  F02C         	call	_printf	;wreg free
 15811                           
 15812                           ;conexaoWifi.h: 239: f_wifi_processo++;
 15813  002F24  2A3D               	incf	_f_wifi_processo,f,c
 15814                           
 15815                           ;conexaoWifi.h: 240: break;
 15816  002F26  0012               	return	
 15817  002F28                     
 15818                           ;conexaoWifi.h: 242: if (findBufferSerial("OK") || findBufferSerial("CLOSED")) {
 15819  002F28  0EEF               	movlw	low STR_12
 15820  002F2A  0100               	movlb	0	; () banked
 15821  002F2C  6F74               	movwf	findBufferSerial@key& (0+255),b
 15822  002F2E  0E7F               	movlw	high STR_12
 15823  002F30  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15824  002F32  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15825  002F36  0900               	iorlw	0
 15826  002F38  A4D8               	btfss	status,2,c
 15827  002F3A  D00A               	goto	u13040
 15828  002F3C  0E8A               	movlw	low STR_76
 15829  002F3E  0100               	movlb	0	; () banked
 15830  002F40  6F74               	movwf	findBufferSerial@key& (0+255),b
 15831  002F42  0E7F               	movlw	high STR_76
 15832  002F44  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15833  002F46  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15834  002F4A  0900               	iorlw	0
 15835  002F4C  B4D8               	btfsc	status,2,c
 15836  002F4E  0012               	return	
 15837  002F50                     u13040:
 15838                           
 15839                           ;conexaoWifi.h: 243: f_wifi_processo = 6;
 15840  002F50  0E06               	movlw	6
 15841  002F52  6E3D               	movwf	_f_wifi_processo,c
 15842                           
 15843                           ;conexaoWifi.h: 244: t_wifi_restart = 25;
 15844  002F54  0E19               	movlw	25
 15845  002F56  6E3E               	movwf	_t_wifi_restart,c
 15846                           
 15847                           ;conexaoWifi.h: 245: }
 15848                           ;conexaoWifi.h: 246: break;
 15849  002F58  0012               	return	
 15850  002F5A                     
 15851                           ;conexaoWifi.h: 248: f_wifi_processo = 0;
 15852  002F5A  0E00               	movlw	0
 15853  002F5C  6E3D               	movwf	_f_wifi_processo,c
 15854                           
 15855                           ;conexaoWifi.h: 249: }
 15856  002F5E  0012               	return	
 15857  002F60                     l1016:
 15858  002F60  503D               	movf	_f_wifi_processo,w,c
 15859                           
 15860                           ; Switch size 1, requested type "space"
 15861                           ; Number of cases is 16, Range of values is 0 to 15
 15862                           ; switch strategies available:
 15863                           ; Name         Instructions Cycles
 15864                           ; simple_byte           49    25 (average)
 15865                           ;	Chosen strategy is simple_byte
 15866  002F62  0A00               	xorlw	0	; case 0
 15867  002F64  B4D8               	btfsc	status,2,c
 15868  002F66  D63D               	goto	l1017
 15869  002F68  0A01               	xorlw	1	; case 1
 15870  002F6A  B4D8               	btfsc	status,2,c
 15871  002F6C  D64C               	goto	l1019
 15872  002F6E  0A03               	xorlw	3	; case 2
 15873  002F70  B4D8               	btfsc	status,2,c
 15874  002F72  D655               	goto	l1021
 15875  002F74  0A01               	xorlw	1	; case 3
 15876  002F76  B4D8               	btfsc	status,2,c
 15877  002F78  D662               	goto	l1022
 15878  002F7A  0A07               	xorlw	7	; case 4
 15879  002F7C  B4D8               	btfsc	status,2,c
 15880  002F7E  D675               	goto	l1026
 15881  002F80  0A01               	xorlw	1	; case 5
 15882  002F82  B4D8               	btfsc	status,2,c
 15883  002F84  D693               	goto	l1027
 15884  002F86  0A03               	xorlw	3	; case 6
 15885  002F88  B4D8               	btfsc	status,2,c
 15886  002F8A  D692               	goto	l1028
 15887  002F8C  0A01               	xorlw	1	; case 7
 15888  002F8E  B4D8               	btfsc	status,2,c
 15889  002F90  D6A2               	goto	l1030
 15890  002F92  0A0F               	xorlw	15	; case 8
 15891  002F94  B4D8               	btfsc	status,2,c
 15892  002F96  D6B7               	goto	l1034
 15893  002F98  0A01               	xorlw	1	; case 9
 15894  002F9A  B4D8               	btfsc	status,2,c
 15895  002F9C  D6CC               	goto	l1035
 15896  002F9E  0A03               	xorlw	3	; case 10
 15897  002FA0  B4D8               	btfsc	status,2,c
 15898  002FA2  D6D5               	goto	l1037
 15899  002FA4  0A01               	xorlw	1	; case 11
 15900  002FA6  B4D8               	btfsc	status,2,c
 15901  002FA8  D6E2               	goto	l1038
 15902  002FAA  0A07               	xorlw	7	; case 12
 15903  002FAC  B4D8               	btfsc	status,2,c
 15904  002FAE  D6EB               	goto	l1040
 15905  002FB0  0A01               	xorlw	1	; case 13
 15906  002FB2  B4D8               	btfsc	status,2,c
 15907  002FB4  D79D               	goto	l1045
 15908  002FB6  0A03               	xorlw	3	; case 14
 15909  002FB8  B4D8               	btfsc	status,2,c
 15910  002FBA  D7A6               	goto	l1047
 15911  002FBC  0A01               	xorlw	1	; case 15
 15912  002FBE  B4D8               	btfsc	status,2,c
 15913  002FC0  D7B3               	goto	l1048
 15914  002FC2  D7CB               	goto	l1052
 15915  002FC4                     
 15916                           ;conexaoWifi.h: 253: setKeyStartReceiveSerial("STAMAC");
 15917  002FC4  0E83               	movlw	low STR_77
 15918  002FC6  0100               	movlb	0	; () banked
 15919  002FC8  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 15920  002FCA  0E7F               	movlw	high STR_77
 15921  002FCC  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 15922  002FCE  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 15923                           
 15924                           ;conexaoWifi.h: 254: printf("AT+CIFSR\r\n");
 15925  002FD2  0EB2               	movlw	low STR_78
 15926  002FD4  0100               	movlb	0	; () banked
 15927  002FD6  6F81               	movwf	printf@f& (0+255),b
 15928  002FD8  0E7E               	movlw	high STR_78
 15929  002FDA  6F82               	movwf	(printf@f+1)& (0+255),b
 15930  002FDC  EC51  F02C         	call	_printf	;wreg free
 15931                           
 15932                           ;conexaoWifi.h: 255: f_wifi_processo++;
 15933  002FE0  2A3D               	incf	_f_wifi_processo,f,c
 15934                           
 15935                           ;conexaoWifi.h: 256: break;
 15936  002FE2  0012               	return	
 15937  002FE4                     
 15938                           ;conexaoWifi.h: 258: if (findBufferSerial("OK")) {
 15939  002FE4  0EEF               	movlw	low STR_12
 15940  002FE6  0100               	movlb	0	; () banked
 15941  002FE8  6F74               	movwf	findBufferSerial@key& (0+255),b
 15942  002FEA  0E7F               	movlw	high STR_12
 15943  002FEC  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 15944  002FEE  EC5A  F02D         	call	_findBufferSerial	;wreg free
 15945  002FF2  0900               	iorlw	0
 15946  002FF4  B4D8               	btfsc	status,2,c
 15947  002FF6  0012               	return	
 15948                           
 15949                           ;conexaoWifi.h: 259: unsigned char i = 0;
 15950  002FF8  0E00               	movlw	0
 15951  002FFA  0100               	movlb	0	; () banked
 15952  002FFC  6FD9               	movwf	enviaDadosWifi@i_1393& (0+255),b
 15953                           
 15954                           ;conexaoWifi.h: 260: unsigned char j = 0;
 15955  002FFE  0E00               	movlw	0
 15956  003000  6FD6               	movwf	enviaDadosWifi@j& (0+255),b
 15957                           
 15958                           ;conexaoWifi.h: 261: unsigned char men = 0;
 15959  003002  0E00               	movlw	0
 15960  003004  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 15961                           
 15962                           ;conexaoWifi.h: 262: for (i = 0; i < strlen(bufferSerial); i++) {
 15963  003006  0E00               	movlw	0
 15964  003008  6FD9               	movwf	enviaDadosWifi@i_1393& (0+255),b
 15965  00300A  D051               	goto	l1059
 15966  00300C                     
 15967                           ; BSR set to: 0
 15968                           ;conexaoWifi.h: 263: if (bufferSerial[i] == '"' && men == 0) {
 15969                           
 15970                           ; BSR set to: 0
 15971  00300C  51D9               	movf	enviaDadosWifi@i_1393& (0+255),w,b
 15972  00300E  0D01               	mullw	1
 15973  003010  0E69               	movlw	low _bufferSerial
 15974  003012  24F3               	addwf	prodl,w,c
 15975  003014  6ED9               	movwf	fsr2l,c
 15976  003016  0E02               	movlw	high _bufferSerial
 15977  003018  20F4               	addwfc	prodh,w,c
 15978  00301A  6EDA               	movwf	fsr2h,c
 15979  00301C  0E22               	movlw	34
 15980  00301E  18DE               	xorwf	postinc2,w,c
 15981  003020  A4D8               	btfss	status,2,c
 15982  003022  D006               	goto	l1061
 15983                           
 15984                           ; BSR set to: 0
 15985  003024  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 15986  003026  A4D8               	btfss	status,2,c
 15987  003028  D003               	goto	l1061
 15988                           
 15989                           ; BSR set to: 0
 15990                           ;conexaoWifi.h: 264: men = 1;
 15991  00302A  0E01               	movlw	1
 15992  00302C  6FD7               	movwf	enviaDadosWifi@men& (0+255),b
 15993                           
 15994                           ;conexaoWifi.h: 265: } else if (bufferSerial[i] == '"' && men == 1) {
 15995  00302E  D03E               	goto	l1066
 15996  003030                     l1061:
 15997                           
 15998                           ; BSR set to: 0
 15999                           
 16000                           ; BSR set to: 0
 16001  003030  51D9               	movf	enviaDadosWifi@i_1393& (0+255),w,b
 16002  003032  0D01               	mullw	1
 16003  003034  0E69               	movlw	low _bufferSerial
 16004  003036  24F3               	addwf	prodl,w,c
 16005  003038  6ED9               	movwf	fsr2l,c
 16006  00303A  0E02               	movlw	high _bufferSerial
 16007  00303C  20F4               	addwfc	prodh,w,c
 16008  00303E  6EDA               	movwf	fsr2h,c
 16009  003040  0E22               	movlw	34
 16010  003042  18DE               	xorwf	postinc2,w,c
 16011  003044  A4D8               	btfss	status,2,c
 16012  003046  D003               	goto	l1063
 16013                           
 16014                           ; BSR set to: 0
 16015  003048  05D7               	decf	enviaDadosWifi@men& (0+255),w,b
 16016  00304A  B4D8               	btfsc	status,2,c
 16017  00304C  0012               	return	
 16018  00304E                     l1063:
 16019                           
 16020                           ; BSR set to: 0
 16021                           
 16022                           ; BSR set to: 0
 16023  00304E  51D7               	movf	enviaDadosWifi@men& (0+255),w,b
 16024  003050  B4D8               	btfsc	status,2,c
 16025  003052  D02C               	goto	l1066
 16026                           
 16027                           ; BSR set to: 0
 16028  003054  51D9               	movf	enviaDadosWifi@i_1393& (0+255),w,b
 16029  003056  0D01               	mullw	1
 16030  003058  0E69               	movlw	low _bufferSerial
 16031  00305A  24F3               	addwf	prodl,w,c
 16032  00305C  6ED9               	movwf	fsr2l,c
 16033  00305E  0E02               	movlw	high _bufferSerial
 16034  003060  20F4               	addwfc	prodh,w,c
 16035  003062  6EDA               	movwf	fsr2h,c
 16036  003064  0E3A               	movlw	58
 16037  003066  18DE               	xorwf	postinc2,w,c
 16038  003068  B4D8               	btfsc	status,2,c
 16039  00306A  D020               	goto	l1066
 16040                           
 16041                           ; BSR set to: 0
 16042  00306C  0EE6               	movlw	low _wifi_MAC
 16043  00306E  6F60               	movwf	strlen@s& (0+255),b
 16044  003070  0E01               	movlw	high _wifi_MAC
 16045  003072  6F61               	movwf	(strlen@s+1)& (0+255),b
 16046  003074  EC02  F02B         	call	_strlen	;wreg free
 16047  003078  0100               	movlb	0	; () banked
 16048  00307A  5161               	movf	(?_strlen+1)& (0+255),w,b
 16049  00307C  E117               	bnz	l8816
 16050  00307E  0E0C               	movlw	12
 16051  003080  5D60               	subwf	?_strlen& (0+255),w,b
 16052  003082  B0D8               	btfsc	status,0,c
 16053  003084  D013               	goto	l1066
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;conexaoWifi.h: 268: wifi_MAC[j++] = bufferSerial[i];
 16057  003086  51D9               	movf	enviaDadosWifi@i_1393& (0+255),w,b
 16058  003088  0D01               	mullw	1
 16059  00308A  0E69               	movlw	low _bufferSerial
 16060  00308C  24F3               	addwf	prodl,w,c
 16061  00308E  6ED9               	movwf	fsr2l,c
 16062  003090  0E02               	movlw	high _bufferSerial
 16063  003092  20F4               	addwfc	prodh,w,c
 16064  003094  6EDA               	movwf	fsr2h,c
 16065  003096  51D6               	movf	enviaDadosWifi@j& (0+255),w,b
 16066  003098  0D01               	mullw	1
 16067  00309A  0EE6               	movlw	low _wifi_MAC
 16068  00309C  24F3               	addwf	prodl,w,c
 16069  00309E  6EE1               	movwf	fsr1l,c
 16070  0030A0  0E01               	movlw	high _wifi_MAC
 16071  0030A2  20F4               	addwfc	prodh,w,c
 16072  0030A4  6EE2               	movwf	fsr1h,c
 16073  0030A6  CFDF FFE7          	movff	indf2,indf1
 16074                           
 16075                           ; BSR set to: 0
 16076  0030AA  2BD6               	incf	enviaDadosWifi@j& (0+255),f,b
 16077  0030AC                     l1066:
 16078  0030AC                     l8816:
 16079                           
 16080                           ; BSR set to: 0
 16081  0030AC  2BD9               	incf	enviaDadosWifi@i_1393& (0+255),f,b
 16082  0030AE                     l1059:
 16083                           
 16084                           ; BSR set to: 0
 16085                           
 16086                           ; BSR set to: 0
 16087  0030AE  0E69               	movlw	low _bufferSerial
 16088  0030B0  6F60               	movwf	strlen@s& (0+255),b
 16089  0030B2  0E02               	movlw	high _bufferSerial
 16090  0030B4  6F61               	movwf	(strlen@s+1)& (0+255),b
 16091  0030B6  EC02  F02B         	call	_strlen	;wreg free
 16092  0030BA  0100               	movlb	0	; () banked
 16093  0030BC  51D9               	movf	enviaDadosWifi@i_1393& (0+255),w,b
 16094  0030BE  6FC3               	movwf	??_enviaDadosWifi& (0+255),b
 16095  0030C0  6BC4               	clrf	(??_enviaDadosWifi+1)& (0+255),b
 16096  0030C2  5160               	movf	?_strlen& (0+255),w,b
 16097  0030C4  5DC3               	subwf	??_enviaDadosWifi& (0+255),w,b
 16098  0030C6  5161               	movf	(?_strlen+1)& (0+255),w,b
 16099  0030C8  59C4               	subwfb	(??_enviaDadosWifi+1)& (0+255),w,b
 16100  0030CA  B0D8               	btfsc	status,0,c
 16101  0030CC  0012               	return	
 16102  0030CE  D79E               	goto	l1060
 16103  0030D0                     
 16104                           ;conexaoWifi.h: 274: f_wifi_processo = 0;
 16105                           
 16106                           ; BSR set to: 0
 16107  0030D0  0E00               	movlw	0
 16108  0030D2  6E3D               	movwf	_f_wifi_processo,c
 16109                           
 16110                           ;conexaoWifi.h: 276: }
 16111                           
 16112                           ;conexaoWifi.h: 275: break;
 16113  0030D4  0012               	return	
 16114  0030D6                     l1054:
 16115  0030D6  503D               	movf	_f_wifi_processo,w,c
 16116                           
 16117                           ; Switch size 1, requested type "space"
 16118                           ; Number of cases is 2, Range of values is 0 to 1
 16119                           ; switch strategies available:
 16120                           ; Name         Instructions Cycles
 16121                           ; simple_byte            7     4 (average)
 16122                           ;	Chosen strategy is simple_byte
 16123  0030D8  0A00               	xorlw	0	; case 0
 16124  0030DA  B4D8               	btfsc	status,2,c
 16125  0030DC  D773               	goto	l1055
 16126  0030DE  0A01               	xorlw	1	; case 1
 16127  0030E0  B4D8               	btfsc	status,2,c
 16128  0030E2  D780               	goto	l1057
 16129  0030E4  D7F5               	goto	l1068
 16130  0030E6                     __end_of_enviaDadosWifi:
 16131                           	opt stack 0
 16132                           tblptru	equ	0xFF8
 16133                           tblptrh	equ	0xFF7
 16134                           tblptrl	equ	0xFF6
 16135                           tablat	equ	0xFF5
 16136                           prodh	equ	0xFF4
 16137                           prodl	equ	0xFF3
 16138                           intcon	equ	0xFF2
 16139                           intcon2	equ	0xFF1
 16140                           intcon3	equ	0xFF0
 16141                           postinc0	equ	0xFEE
 16142                           wreg	equ	0xFE8
 16143                           indf1	equ	0xFE7
 16144                           postdec1	equ	0xFE5
 16145                           fsr1h	equ	0xFE2
 16146                           fsr1l	equ	0xFE1
 16147                           indf2	equ	0xFDF
 16148                           postinc2	equ	0xFDE
 16149                           postdec2	equ	0xFDD
 16150                           fsr2h	equ	0xFDA
 16151                           fsr2l	equ	0xFD9
 16152                           status	equ	0xFD8
 16153                           
 16154 ;; *************** function _criaCaracteresCGRAM *****************
 16155 ;; Defined at:
 16156 ;;		line 180 in file "src/lcd.h"
 16157 ;; Parameters:    Size  Location     Type
 16158 ;;		None
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;  character      56    7[BANK0 ] const unsigned char [8][
 16161 ;;  i               1   67[BANK0 ] unsigned char 
 16162 ;;  j               1   66[BANK0 ] unsigned char 
 16163 ;;  k               1   65[BANK0 ] unsigned char 
 16164 ;; Return value:  Size  Location     Type
 16165 ;;                  1    wreg      void 
 16166 ;; Registers used:
 16167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16168 ;; Tracked objects:
 16169 ;;		On entry : 0/0
 16170 ;;		On exit  : 0/0
 16171 ;;		Unchanged: 0/0
 16172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16173 ;;      Params:         0       0       0       0       0       0       0       0       0
 16174 ;;      Locals:         0      61       0       0       0       0       0       0       0
 16175 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16176 ;;      Totals:         0      64       0       0       0       0       0       0       0
 16177 ;;Total ram usage:       64 bytes
 16178 ;; Hardware stack levels used:    1
 16179 ;; Hardware stack levels required when called:    8
 16180 ;; This function calls:
 16181 ;;		_Lcd_Cmd
 16182 ;;		_Lcd_Write_Char
 16183 ;; This function is called by:
 16184 ;;		_main
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           	psect	text19
 16189  004F06                     __ptext19:
 16190                           	opt stack 0
 16191  004F06                     _criaCaracteresCGRAM:
 16192                           	opt stack 22
 16193                           
 16194                           ;lcd.h: 187: const char character[7][8] = {
 16195                           ;lcd.h: 188: 14, 17, 17, 31, 27, 27, 31, 31,
 16196                           ;lcd.h: 189: 1, 3, 7, 29, 29, 7, 3, 1,
 16197                           ;lcd.h: 190: 4, 4, 14, 14, 31, 29, 27, 14,
 16198                           ;lcd.h: 191: 4, 10, 10, 10, 14, 31, 31, 14,
 16199                           ;lcd.h: 193: 0, 14, 17, 4, 10, 0, 4, 0
 16200                           ;lcd.h: 196: };
 16201                           
 16202                           ;incstack = 0
 16203  004F06  0E2D               	movlw	low criaCaracteresCGRAM@F3900
 16204  004F08  6EF6               	movwf	tblptrl,c
 16205  004F0A                     	if	1	;There is more than 1 active tblptr byte
 16206  004F0A  0E78               	movlw	high criaCaracteresCGRAM@F3900
 16207  004F0C  6EF7               	movwf	tblptrh,c
 16208  004F0E                     	endif
 16209  004F0E                     	if	0	;There are less than 3 active tblptr bytes
 16210  004F0E                     	endif
 16211  004F0E  EE20  F067         	lfsr	2,criaCaracteresCGRAM@character
 16212  004F12  0E37               	movlw	55
 16213  004F14                     u12400:
 16214  004F14  0009               	tblrd		*+
 16215  004F16  CFF5 FFDE          	movff	tablat,postinc2
 16216  004F1A  06E8               	decf	wreg,f,c
 16217  004F1C  E2FB               	bc	u12400
 16218                           
 16219                           ;lcd.h: 197: Lcd_Cmd(0b0100);
 16220  004F1E  0E04               	movlw	4
 16221  004F20  EC95  F02D         	call	_Lcd_Cmd
 16222                           
 16223                           ;lcd.h: 198: Lcd_Cmd(0b0000);
 16224  004F24  0E00               	movlw	0
 16225  004F26  EC95  F02D         	call	_Lcd_Cmd
 16226                           
 16227                           ;lcd.h: 199: _delay((unsigned long)((50)*(8000000/4000000.0)));
 16228  004F2A  0E21               	movlw	33
 16229  004F2C                     u15447:
 16230  004F2C  2EE8               	decfsz	wreg,f,c
 16231  004F2E  D7FE               	bra	u15447
 16232  004F30  F000               	nop	
 16233                           
 16234                           ;lcd.h: 200: char i = 0, j = 0, k = 0;
 16235  004F32  0E00               	movlw	0
 16236  004F34  0100               	movlb	0	; () banked
 16237  004F36  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16238                           
 16239                           ; BSR set to: 0
 16240  004F38  0E00               	movlw	0
 16241  004F3A  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16242                           
 16243                           ; BSR set to: 0
 16244  004F3C  0E00               	movlw	0
 16245  004F3E  6FA1               	movwf	criaCaracteresCGRAM@k& (0+255),b
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;lcd.h: 201: for (i = 0; i < 5; i++) {
 16249  004F40  0E00               	movlw	0
 16250  004F42  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16251  004F44                     l8302:
 16252                           
 16253                           ; BSR set to: 0
 16254  004F44  0E04               	movlw	4
 16255  004F46  65A3               	cpfsgt	criaCaracteresCGRAM@i& (0+255),b
 16256  004F48  D001               	goto	l275
 16257  004F4A  0012               	return	
 16258  004F4C                     l275:
 16259                           
 16260                           ; BSR set to: 0
 16261                           ;lcd.h: 202: if (k == 1) i = 0;
 16262                           
 16263                           ; BSR set to: 0
 16264  004F4C  05A1               	decf	criaCaracteresCGRAM@k& (0+255),w,b
 16265  004F4E  A4D8               	btfss	status,2,c
 16266  004F50  D002               	goto	l277
 16267                           
 16268                           ; BSR set to: 0
 16269  004F52  0E00               	movlw	0
 16270  004F54  6FA3               	movwf	criaCaracteresCGRAM@i& (0+255),b
 16271  004F56                     l277:
 16272                           
 16273                           ; BSR set to: 0
 16274                           ;lcd.h: 203: for (j = 0; j < 8; j++) {
 16275  004F56  0E00               	movlw	0
 16276  004F58  6FA2               	movwf	criaCaracteresCGRAM@j& (0+255),b
 16277  004F5A                     l8310:
 16278                           
 16279                           ; BSR set to: 0
 16280  004F5A  0E07               	movlw	7
 16281  004F5C  65A2               	cpfsgt	criaCaracteresCGRAM@j& (0+255),b
 16282  004F5E  D001               	goto	l278
 16283  004F60  D025               	goto	u12450
 16284  004F62                     l278:
 16285                           
 16286                           ; BSR set to: 0
 16287                           ;lcd.h: 204: Lcd_Write_Char((k) ? character[i][j] : 0);
 16288                           
 16289                           ; BSR set to: 0
 16290  004F62  51A1               	movf	criaCaracteresCGRAM@k& (0+255),w,b
 16291  004F64  A4D8               	btfss	status,2,c
 16292  004F66  D005               	goto	l281
 16293                           
 16294                           ; BSR set to: 0
 16295  004F68  0E00               	movlw	0
 16296  004F6A  6FA0               	movwf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16297  004F6C  0E00               	movlw	0
 16298  004F6E  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16299  004F70  D017               	goto	l283
 16300  004F72                     l281:
 16301                           
 16302                           ; BSR set to: 0
 16303                           
 16304                           ; BSR set to: 0
 16305  004F72  51A3               	movf	criaCaracteresCGRAM@i& (0+255),w,b
 16306  004F74  0D08               	mullw	8
 16307  004F76  0E67               	movlw	low criaCaracteresCGRAM@character
 16308  004F78  6F64               	movwf	??_criaCaracteresCGRAM& (0+255),b
 16309  004F7A  0E00               	movlw	high criaCaracteresCGRAM@character
 16310  004F7C  6F65               	movwf	(??_criaCaracteresCGRAM+1)& (0+255),b
 16311  004F7E  50F3               	movf	prodl,w,c
 16312  004F80  2764               	addwf	??_criaCaracteresCGRAM& (0+255),f,b
 16313  004F82  50F4               	movf	prodh,w,c
 16314  004F84  2365               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),f,b
 16315  004F86  51A2               	movf	criaCaracteresCGRAM@j& (0+255),w,b
 16316  004F88  0D01               	mullw	1
 16317  004F8A  50F3               	movf	prodl,w,c
 16318  004F8C  2564               	addwf	??_criaCaracteresCGRAM& (0+255),w,b
 16319  004F8E  6ED9               	movwf	fsr2l,c
 16320  004F90  50F4               	movf	prodh,w,c
 16321  004F92  2165               	addwfc	(??_criaCaracteresCGRAM+1)& (0+255),w,b
 16322  004F94  6EDA               	movwf	fsr2h,c
 16323  004F96  50DF               	movf	indf2,w,c
 16324  004F98  6F66               	movwf	(??_criaCaracteresCGRAM+2)& (0+255),b
 16325  004F9A  5166               	movf	(??_criaCaracteresCGRAM+2)& (0+255),w,b
 16326  004F9C  6F9F               	movwf	_criaCaracteresCGRAM$1229& (0+255),b
 16327  004F9E  6BA0               	clrf	(_criaCaracteresCGRAM$1229+1)& (0+255),b
 16328  004FA0                     l283:
 16329                           
 16330                           ; BSR set to: 0
 16331                           
 16332                           ; BSR set to: 0
 16333  004FA0  519F               	movf	_criaCaracteresCGRAM$1229& (0+255),w,b
 16334  004FA2  EC32  F02C         	call	_Lcd_Write_Char
 16335  004FA6  0100               	movlb	0	; () banked
 16336  004FA8  2BA2               	incf	criaCaracteresCGRAM@j& (0+255),f,b
 16337  004FAA  D7D7               	goto	l8310
 16338  004FAC                     u12450:
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;lcd.h: 205: }
 16342                           ;lcd.h: 206: k++;
 16343                           
 16344                           ; BSR set to: 0
 16345  004FAC  2BA1               	incf	criaCaracteresCGRAM@k& (0+255),f,b
 16346  004FAE  2BA3               	incf	criaCaracteresCGRAM@i& (0+255),f,b
 16347  004FB0  D7C9               	goto	l8302
 16348  004FB2                     __end_of_criaCaracteresCGRAM:
 16349                           	opt stack 0
 16350                           tblptru	equ	0xFF8
 16351                           tblptrh	equ	0xFF7
 16352                           tblptrl	equ	0xFF6
 16353                           tablat	equ	0xFF5
 16354                           prodh	equ	0xFF4
 16355                           prodl	equ	0xFF3
 16356                           intcon	equ	0xFF2
 16357                           intcon2	equ	0xFF1
 16358                           intcon3	equ	0xFF0
 16359                           postinc0	equ	0xFEE
 16360                           wreg	equ	0xFE8
 16361                           indf1	equ	0xFE7
 16362                           postdec1	equ	0xFE5
 16363                           fsr1h	equ	0xFE2
 16364                           fsr1l	equ	0xFE1
 16365                           indf2	equ	0xFDF
 16366                           postinc2	equ	0xFDE
 16367                           postdec2	equ	0xFDD
 16368                           fsr2h	equ	0xFDA
 16369                           fsr2l	equ	0xFD9
 16370                           status	equ	0xFD8
 16371                           
 16372 ;; *************** function _controle *****************
 16373 ;; Defined at:
 16374 ;;		line 148 in file "src/controle.h"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      void 
 16381 ;; Registers used:
 16382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16390 ;;      Temps:          0       7       0       0       0       0       0       0       0
 16391 ;;      Totals:         0       7       0       0       0       0       0       0       0
 16392 ;;Total ram usage:        7 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:    8
 16395 ;; This function calls:
 16396 ;;		_acaoFlap
 16397 ;;		_setLed
 16398 ;; This function is called by:
 16399 ;;		_main
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text20
 16404  003B06                     __ptext20:
 16405                           	opt stack 0
 16406  003B06                     _controle:
 16407                           	opt stack 22
 16408                           
 16409                           ;controle.h: 150: if (f_falta_energia == 0) {
 16410                           
 16411                           ; BSR set to: 0
 16412                           ;incstack = 0
 16413  003B06  505E               	movf	_f_falta_energia,w,c
 16414  003B08  A4D8               	btfss	status,2,c
 16415  003B0A  D02B               	goto	l1156
 16416                           
 16417                           ;controle.h: 151: LATBbits.LATB5 = blinkk;
 16418  003B0C  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16419  003B0E  D002               	bra	u13545
 16420  003B10  8A8A               	bsf	3978,5,c	;volatile
 16421  003B12  D001               	bra	u13547
 16422  003B14                     u13545:
 16423  003B14  9A8A               	bcf	3978,5,c	;volatile
 16424  003B16                     u13547:
 16425                           
 16426                           ;controle.h: 152: LATEbits.LE0 = 0;
 16427  003B16  908D               	bcf	3981,0,c	;volatile
 16428                           
 16429                           ;controle.h: 153: LATDbits.LD0 = 1;
 16430  003B18  808C               	bsf	3980,0,c	;volatile
 16431                           
 16432                           ;controle.h: 154: LATDbits.LD1 = 0;
 16433  003B1A  928C               	bcf	3980,1,c	;volatile
 16434                           
 16435                           ;controle.h: 155: acaoFlap(1, 10, 0);
 16436  003B1C  0E00               	movlw	0
 16437  003B1E  0100               	movlb	0	; () banked
 16438  003B20  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16439  003B22  0E0A               	movlw	10
 16440  003B24  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16441  003B26  0E00               	movlw	0
 16442  003B28  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16443  003B2A  0E00               	movlw	0
 16444  003B2C  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16445  003B2E  0E01               	movlw	1
 16446  003B30  EC59  F029         	call	_acaoFlap
 16447                           
 16448                           ;controle.h: 156: if (f_buzzer_falta_energia == 1 && buzzer == 0) {
 16449  003B34  043B               	decf	_f_buzzer_falta_energia,w,c
 16450  003B36  A4D8               	btfss	status,2,c
 16451  003B38  D008               	goto	l1157
 16452  003B3A  0100               	movlb	0	; () banked
 16453  003B3C  51FC               	movf	_buzzer& (0+255),w,b
 16454  003B3E  A4D8               	btfss	status,2,c
 16455  003B40  D004               	goto	l1157
 16456                           
 16457                           ; BSR set to: 0
 16458                           ;controle.h: 157: buzzer = 1;
 16459  003B42  0E01               	movlw	1
 16460  003B44  6FFC               	movwf	_buzzer& (0+255),b
 16461                           
 16462                           ;controle.h: 158: f_buzzer_falta_energia = 0;
 16463  003B46  0E00               	movlw	0
 16464  003B48  6E3B               	movwf	_f_buzzer_falta_energia,c
 16465  003B4A                     l1157:
 16466                           
 16467                           ;controle.h: 159: }
 16468                           ;controle.h: 160: if (buzzer) {
 16469  003B4A  0100               	movlb	0	; () banked
 16470  003B4C  51FC               	movf	_buzzer& (0+255),w,b
 16471  003B4E  B4D8               	btfsc	status,2,c
 16472  003B50  D006               	goto	l1158
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;controle.h: 161: LATCbits.LC1 = blinkk;
 16476  003B52  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 16477  003B54  D002               	bra	u13585
 16478  003B56  828B               	bsf	3979,1,c	;volatile
 16479  003B58  D001               	bra	u13587
 16480  003B5A                     u13585:
 16481  003B5A  928B               	bcf	3979,1,c	;volatile
 16482  003B5C                     u13587:
 16483                           
 16484                           ;controle.h: 162: } else {
 16485  003B5C  0012               	return	
 16486  003B5E                     l1158:
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;controle.h: 163: LATCbits.LC1 = 0;
 16490  003B5E  928B               	bcf	3979,1,c	;volatile
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;controle.h: 164: }
 16494                           ;controle.h: 165: return;
 16495  003B60  0012               	return	
 16496  003B62                     l1156:
 16497                           
 16498                           ;controle.h: 167: f_buzzer_falta_energia = 1;
 16499                           
 16500                           ; BSR set to: 0
 16501  003B62  0E01               	movlw	1
 16502  003B64  6E3B               	movwf	_f_buzzer_falta_energia,c
 16503                           
 16504                           ;controle.h: 168: }
 16505                           ;controle.h: 172: LATBbits.LATB5 = 1;
 16506  003B66  8A8A               	bsf	3978,5,c	;volatile
 16507                           
 16508                           ;controle.h: 174: if (((temp + h_modo_seguranca) <= tempajt) | ((temp - h_modo_seguranca
      +                          ) >= tempajt) && h_modo_seguranca != 0) {
 16509  003B68  0100               	movlb	0	; () banked
 16510  003B6A  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16511  003B6C  C0FE  F068         	movff	_temp,??_controle
 16512  003B70  6B69               	clrf	(??_controle+1)& (0+255),b
 16513  003B72  2768               	addwf	??_controle& (0+255),f,b
 16514  003B74  0E00               	movlw	0
 16515  003B76  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16516  003B78  51F4               	movf	_tempajt& (0+255),w,b
 16517  003B7A  6F6A               	movwf	(??_controle+2)& (0+255),b
 16518  003B7C  6B6B               	clrf	(??_controle+3)& (0+255),b
 16519  003B7E  5168               	movf	??_controle& (0+255),w,b
 16520  003B80  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16521  003B82  516B               	movf	(??_controle+3)& (0+255),w,b
 16522  003B84  0A80               	xorlw	128
 16523  003B86  6F6C               	movwf	(??_controle+4)& (0+255),b
 16524  003B88  5169               	movf	(??_controle+1)& (0+255),w,b
 16525  003B8A  0A80               	xorlw	128
 16526  003B8C  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16527  003B8E  B0D8               	btfsc	status,0,c
 16528  003B90  D01B               	goto	u13600
 16529                           
 16530                           ; BSR set to: 0
 16531  003B92  51F4               	movf	_tempajt& (0+255),w,b
 16532  003B94  6F68               	movwf	??_controle& (0+255),b
 16533  003B96  6B69               	clrf	(??_controle+1)& (0+255),b
 16534  003B98  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16535  003B9A  6F6A               	movwf	(??_controle+2)& (0+255),b
 16536  003B9C  6B6B               	clrf	(??_controle+3)& (0+255),b
 16537  003B9E  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16538  003BA0  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16539  003BA2  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16540  003BA4  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16541  003BA6  51FE               	movf	_temp& (0+255),w,b
 16542  003BA8  6F6C               	movwf	(??_controle+4)& (0+255),b
 16543  003BAA  6B6D               	clrf	(??_controle+5)& (0+255),b
 16544  003BAC  516A               	movf	(??_controle+2)& (0+255),w,b
 16545  003BAE  276C               	addwf	(??_controle+4)& (0+255),f,b
 16546  003BB0  516B               	movf	(??_controle+3)& (0+255),w,b
 16547  003BB2  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16548  003BB4  5168               	movf	??_controle& (0+255),w,b
 16549  003BB6  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16550  003BB8  516D               	movf	(??_controle+5)& (0+255),w,b
 16551  003BBA  0A80               	xorlw	128
 16552  003BBC  6F6E               	movwf	(??_controle+6)& (0+255),b
 16553  003BBE  5169               	movf	(??_controle+1)& (0+255),w,b
 16554  003BC0  0A80               	xorlw	128
 16555  003BC2  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16556  003BC4  A0D8               	btfss	status,0,c
 16557  003BC6  D025               	goto	l1162
 16558  003BC8                     u13600:
 16559                           
 16560                           ; BSR set to: 0
 16561                           
 16562                           ; BSR set to: 0
 16563  003BC8  51F7               	movf	_h_modo_seguranca& (0+255),w,b
 16564  003BCA  B4D8               	btfsc	status,2,c
 16565  003BCC  D022               	goto	l1162
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;controle.h: 175: setLed(8, 1);
 16569  003BCE  0E01               	movlw	1
 16570  003BD0  6F60               	movwf	setLed@acao& (0+255),b
 16571  003BD2  0E08               	movlw	8
 16572  003BD4  ECCB  F02D         	call	_setLed
 16573                           
 16574                           ;controle.h: 176: acaoFlap(md_seguranca, 10, 0);
 16575  003BD8  0E00               	movlw	0
 16576  003BDA  0100               	movlb	0	; () banked
 16577  003BDC  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16578  003BDE  0E0A               	movlw	10
 16579  003BE0  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16580  003BE2  0E00               	movlw	0
 16581  003BE4  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16582  003BE6  0E00               	movlw	0
 16583  003BE8  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16584  003BEA  0E00               	movlw	0
 16585  003BEC  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16586  003BEE  0E01               	movlw	1
 16587  003BF0  EC59  F029         	call	_acaoFlap
 16588                           
 16589                           ;controle.h: 177: if (t_controle_modo_seguranca == 0) {
 16590  003BF4  0101               	movlb	1	; () banked
 16591  003BF6  514C               	movf	_t_controle_modo_seguranca& (0+255),w,b
 16592  003BF8  114D               	iorwf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 16593  003BFA  A4D8               	btfss	status,2,c
 16594  003BFC  D042               	goto	l1169
 16595                           
 16596                           ; BSR set to: 1
 16597                           ;controle.h: 178: t_controle_modo_seguranca = 1800;
 16598  003BFE  0E07               	movlw	7
 16599  003C00  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 16600  003C02  0E08               	movlw	8
 16601  003C04  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 16602                           
 16603                           ; BSR set to: 1
 16604                           ;controle.h: 179: md_seguranca = ~md_seguranca;
 16605  003C06  B25B               	btfsc	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16606  003C08  D002               	goto	u13630
 16607  003C0A  825B               	bsf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16608  003C0C  D03A               	goto	l1169
 16609  003C0E                     u13630:
 16610  003C0E  925B               	bcf	_md_seguranca/(0+8),_md_seguranca& (0+7),c
 16611                           
 16612                           ;controle.h: 180: }
 16613                           ;controle.h: 181: } else {
 16614  003C10  D038               	goto	l1169
 16615  003C12                     l1162:
 16616                           
 16617                           ;controle.h: 182: setLed(8, 0);
 16618  003C12  0E00               	movlw	0
 16619  003C14  0100               	movlb	0	; () banked
 16620  003C16  6F60               	movwf	setLed@acao& (0+255),b
 16621  003C18  0E08               	movlw	8
 16622  003C1A  ECCB  F02D         	call	_setLed
 16623                           
 16624                           ;controle.h: 183: if (umid >= (umidajt + h_flap)) {
 16625  003C1E  5051               	movf	_h_flap,w,c
 16626  003C20  C0F3  F068         	movff	_umidajt,??_controle
 16627  003C24  0100               	movlb	0	; () banked
 16628  003C26  6B69               	clrf	(??_controle+1)& (0+255),b
 16629  003C28  2768               	addwf	??_controle& (0+255),f,b
 16630  003C2A  0E00               	movlw	0
 16631  003C2C  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16632  003C2E  505D               	movf	_umid,w,c
 16633  003C30  6F6A               	movwf	(??_controle+2)& (0+255),b
 16634  003C32  6B6B               	clrf	(??_controle+3)& (0+255),b
 16635  003C34  5168               	movf	??_controle& (0+255),w,b
 16636  003C36  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16637  003C38  516B               	movf	(??_controle+3)& (0+255),w,b
 16638  003C3A  0A80               	xorlw	128
 16639  003C3C  6F6C               	movwf	(??_controle+4)& (0+255),b
 16640  003C3E  5169               	movf	(??_controle+1)& (0+255),w,b
 16641  003C40  0A80               	xorlw	128
 16642  003C42  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16643  003C44  A0D8               	btfss	status,0,c
 16644  003C46  D00D               	goto	l1167
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;controle.h: 184: acaoFlap(1, t_flap_ligado, (t_flap_intervalo * 10));
 16648  003C48  C055  F062         	movff	_t_flap_ligado,acaoFlap@tempo_ativado
 16649  003C4C  6B63               	clrf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16650  003C4E  5054               	movf	_t_flap_intervalo,w,c
 16651  003C50  0D0A               	mullw	10
 16652  003C52  CFF3 F064          	movff	prodl,acaoFlap@tempo_aguardar
 16653  003C56  CFF4 F065          	movff	prodh,acaoFlap@tempo_aguardar+1
 16654  003C5A  0E01               	movlw	1
 16655  003C5C  EC59  F029         	call	_acaoFlap
 16656                           
 16657                           ;controle.h: 185: } else if (umid <= umidajt) {
 16658  003C60  D010               	goto	l1169
 16659  003C62                     l1167:
 16660  003C62  505D               	movf	_umid,w,c
 16661  003C64  0100               	movlb	0	; () banked
 16662  003C66  5DF3               	subwf	_umidajt& (0+255),w,b
 16663  003C68  A0D8               	btfss	status,0,c
 16664  003C6A  D00B               	goto	l1169
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;controle.h: 186: acaoFlap(0, 200, 600);
 16668  003C6C  0E00               	movlw	0
 16669  003C6E  6F63               	movwf	(acaoFlap@tempo_ativado+1)& (0+255),b
 16670  003C70  0EC8               	movlw	200
 16671  003C72  6F62               	movwf	acaoFlap@tempo_ativado& (0+255),b
 16672  003C74  0E02               	movlw	2
 16673  003C76  6F65               	movwf	(acaoFlap@tempo_aguardar+1)& (0+255),b
 16674  003C78  0E58               	movlw	88
 16675  003C7A  6F64               	movwf	acaoFlap@tempo_aguardar& (0+255),b
 16676  003C7C  0E00               	movlw	0
 16677  003C7E  EC59  F029         	call	_acaoFlap
 16678  003C82                     l1169:
 16679                           
 16680                           ;controle.h: 187: }
 16681                           ;controle.h: 188: }
 16682                           ;controle.h: 189: if (temp > 0) {
 16683  003C82  0100               	movlb	0	; () banked
 16684  003C84  51FE               	movf	_temp& (0+255),w,b
 16685  003C86  B4D8               	btfsc	status,2,c
 16686  003C88  D03D               	goto	l1170
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;controle.h: 190: if ((temp + h_abafador) <= tempajt) {
 16690  003C8A  5052               	movf	_h_abafador,w,c
 16691  003C8C  C0FE  F068         	movff	_temp,??_controle
 16692  003C90  6B69               	clrf	(??_controle+1)& (0+255),b
 16693  003C92  2768               	addwf	??_controle& (0+255),f,b
 16694  003C94  0E00               	movlw	0
 16695  003C96  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16696  003C98  51F4               	movf	_tempajt& (0+255),w,b
 16697  003C9A  6F6A               	movwf	(??_controle+2)& (0+255),b
 16698  003C9C  6B6B               	clrf	(??_controle+3)& (0+255),b
 16699  003C9E  5168               	movf	??_controle& (0+255),w,b
 16700  003CA0  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16701  003CA2  516B               	movf	(??_controle+3)& (0+255),w,b
 16702  003CA4  0A80               	xorlw	128
 16703  003CA6  6F6C               	movwf	(??_controle+4)& (0+255),b
 16704  003CA8  5169               	movf	(??_controle+1)& (0+255),w,b
 16705  003CAA  0A80               	xorlw	128
 16706  003CAC  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16707  003CAE  A0D8               	btfss	status,0,c
 16708  003CB0  D002               	goto	l1171
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;controle.h: 191: LATEbits.LE0 = 1;
 16712  003CB2  808D               	bsf	3981,0,c	;volatile
 16713  003CB4  D008               	goto	L28
 16714  003CB6                     l1171:
 16715                           
 16716                           ; BSR set to: 0
 16717                           
 16718                           ; BSR set to: 0
 16719  003CB6  51F4               	movf	_tempajt& (0+255),w,b
 16720  003CB8  5DFE               	subwf	_temp& (0+255),w,b
 16721  003CBA  A0D8               	btfss	status,0,c
 16722  003CBC  D003               	goto	l1173
 16723                           
 16724                           ; BSR set to: 0
 16725                           ;controle.h: 194: LATEbits.LE0 = 0;
 16726  003CBE  908D               	bcf	3981,0,c	;volatile
 16727                           
 16728                           ;controle.h: 195: LATDbits.LD0 = 1;
 16729  003CC0  808C               	bsf	3980,0,c	;volatile
 16730                           
 16731                           ;controle.h: 196: } else {
 16732  003CC2  D002               	goto	l1174
 16733  003CC4                     l1173:
 16734                           
 16735                           ; BSR set to: 0
 16736                           ;controle.h: 197: LATEbits.LE0 = 0;
 16737  003CC4  908D               	bcf	3981,0,c	;volatile
 16738  003CC6                     L28:
 16739                           
 16740                           ;controle.h: 198: LATDbits.LD0 = 0;
 16741  003CC6  908C               	bcf	3980,0,c	;volatile
 16742  003CC8                     l1174:
 16743                           
 16744                           ; BSR set to: 0
 16745                           ;controle.h: 199: }
 16746                           ;controle.h: 201: if (fornalha == 1) {
 16747                           
 16748                           ; BSR set to: 0
 16749                           
 16750                           ; BSR set to: 0
 16751  003CC8  045A               	decf	_fornalha,w,c
 16752  003CCA  A4D8               	btfss	status,2,c
 16753  003CCC  D01D               	goto	L29
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;controle.h: 202: if ((temp + h_venotinha) <= tempajt) {
 16757  003CCE  5053               	movf	_h_venotinha,w,c
 16758  003CD0  C0FE  F068         	movff	_temp,??_controle
 16759  003CD4  6B69               	clrf	(??_controle+1)& (0+255),b
 16760  003CD6  2768               	addwf	??_controle& (0+255),f,b
 16761  003CD8  0E00               	movlw	0
 16762  003CDA  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16763  003CDC  51F4               	movf	_tempajt& (0+255),w,b
 16764  003CDE  6F6A               	movwf	(??_controle+2)& (0+255),b
 16765  003CE0  6B6B               	clrf	(??_controle+3)& (0+255),b
 16766  003CE2  5168               	movf	??_controle& (0+255),w,b
 16767  003CE4  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16768  003CE6  516B               	movf	(??_controle+3)& (0+255),w,b
 16769  003CE8  0A80               	xorlw	128
 16770  003CEA  6F6C               	movwf	(??_controle+4)& (0+255),b
 16771  003CEC  5169               	movf	(??_controle+1)& (0+255),w,b
 16772  003CEE  0A80               	xorlw	128
 16773  003CF0  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16774  003CF2  A0D8               	btfss	status,0,c
 16775  003CF4  D002               	goto	l1176
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;controle.h: 203: LATDbits.LD1 = 1;
 16779  003CF6  828C               	bsf	3980,1,c	;volatile
 16780                           
 16781                           ;controle.h: 205: } else if (temp >= tempajt) {
 16782  003CF8  D008               	goto	l1180
 16783  003CFA                     l1176:
 16784                           
 16785                           ; BSR set to: 0
 16786                           
 16787                           ; BSR set to: 0
 16788  003CFA  51F4               	movf	_tempajt& (0+255),w,b
 16789  003CFC  5DFE               	subwf	_temp& (0+255),w,b
 16790  003CFE  A0D8               	btfss	status,0,c
 16791  003D00  D004               	goto	l1180
 16792  003D02  D002               	goto	L29
 16793  003D04                     l1170:
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;controle.h: 213: LATEbits.LE0 = 0;
 16797  003D04  908D               	bcf	3981,0,c	;volatile
 16798                           
 16799                           ;controle.h: 214: LATDbits.LD0 = 1;
 16800  003D06  808C               	bsf	3980,0,c	;volatile
 16801  003D08                     L29:
 16802                           
 16803                           ;controle.h: 215: LATDbits.LD1 = 0;
 16804  003D08  928C               	bcf	3980,1,c	;volatile
 16805  003D0A                     l1180:
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;controle.h: 216: }
 16809                           ;controle.h: 219: if (fornalha == 1 && t_religar_ventoinha_automatica != 0) {
 16810                           
 16811                           ; BSR set to: 0
 16812  003D0A  045A               	decf	_fornalha,w,c
 16813  003D0C  A4D8               	btfss	status,2,c
 16814  003D0E  D008               	goto	l1181
 16815                           
 16816                           ; BSR set to: 0
 16817  003D10  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16818  003D12  B4D8               	btfsc	status,2,c
 16819  003D14  D005               	goto	l1181
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;controle.h: 220: t_controle_religar_ventoinha = t_religar_ventoinha_automatica;
 16823  003D16  C0F8  F14E         	movff	_t_religar_ventoinha_automatica,_t_controle_religar_ventoinha
 16824  003D1A  0101               	movlb	1	; () banked
 16825  003D1C  6B4F               	clrf	(_t_controle_religar_ventoinha+1)& (0+255),b
 16826                           
 16827                           ;controle.h: 221: } else if (t_controle_religar_ventoinha == 0 && t_religar_ventoinha_au
      +                          tomatica != 0) {
 16828  003D1E  D00B               	goto	l1183
 16829  003D20                     l1181:
 16830                           
 16831                           ; BSR set to: 1
 16832  003D20  0101               	movlb	1	; () banked
 16833  003D22  514E               	movf	_t_controle_religar_ventoinha& (0+255),w,b
 16834  003D24  114F               	iorwf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 16835  003D26  A4D8               	btfss	status,2,c
 16836  003D28  D006               	goto	l1183
 16837                           
 16838                           ; BSR set to: 1
 16839  003D2A  0100               	movlb	0	; () banked
 16840  003D2C  51F8               	movf	_t_religar_ventoinha_automatica& (0+255),w,b
 16841  003D2E  B4D8               	btfsc	status,2,c
 16842  003D30  D002               	goto	l1183
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;controle.h: 222: fornalha = 1;
 16846  003D32  0E01               	movlw	1
 16847  003D34  6E5A               	movwf	_fornalha,c
 16848  003D36                     l1183:
 16849                           
 16850                           ;controle.h: 223: }
 16851                           ;controle.h: 226: if (buzzer == 1 && t_controle_buzzer == 0) {
 16852                           
 16853                           ; BSR set to: 0
 16854                           
 16855                           ; BSR set to: 0
 16856  003D36  0100               	movlb	0	; () banked
 16857  003D38  05FC               	decf	_buzzer& (0+255),w,b
 16858  003D3A  A4D8               	btfss	status,2,c
 16859  003D3C  D043               	goto	l1188
 16860                           
 16861                           ; BSR set to: 0
 16862  003D3E  5039               	movf	_t_controle_buzzer,w,c
 16863  003D40  A4D8               	btfss	status,2,c
 16864  003D42  D040               	goto	l1188
 16865                           
 16866                           ; BSR set to: 0
 16867                           ;controle.h: 227: if (((temp + h_buzzer) <= tempajt) | ((temp - h_buzzer) >= tempajt)) {
 16868  003D44  5050               	movf	_h_buzzer,w,c
 16869  003D46  C0FE  F068         	movff	_temp,??_controle
 16870  003D4A  6B69               	clrf	(??_controle+1)& (0+255),b
 16871  003D4C  2768               	addwf	??_controle& (0+255),f,b
 16872  003D4E  0E00               	movlw	0
 16873  003D50  2369               	addwfc	(??_controle+1)& (0+255),f,b
 16874  003D52  51F4               	movf	_tempajt& (0+255),w,b
 16875  003D54  6F6A               	movwf	(??_controle+2)& (0+255),b
 16876  003D56  6B6B               	clrf	(??_controle+3)& (0+255),b
 16877  003D58  5168               	movf	??_controle& (0+255),w,b
 16878  003D5A  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 16879  003D5C  516B               	movf	(??_controle+3)& (0+255),w,b
 16880  003D5E  0A80               	xorlw	128
 16881  003D60  6F6C               	movwf	(??_controle+4)& (0+255),b
 16882  003D62  5169               	movf	(??_controle+1)& (0+255),w,b
 16883  003D64  0A80               	xorlw	128
 16884  003D66  596C               	subwfb	(??_controle+4)& (0+255),w,b
 16885  003D68  B0D8               	btfsc	status,0,c
 16886  003D6A  D01B               	goto	u13800
 16887                           
 16888                           ; BSR set to: 0
 16889  003D6C  51F4               	movf	_tempajt& (0+255),w,b
 16890  003D6E  6F68               	movwf	??_controle& (0+255),b
 16891  003D70  6B69               	clrf	(??_controle+1)& (0+255),b
 16892  003D72  5050               	movf	_h_buzzer,w,c
 16893  003D74  6F6A               	movwf	(??_controle+2)& (0+255),b
 16894  003D76  6B6B               	clrf	(??_controle+3)& (0+255),b
 16895  003D78  1F6A               	comf	(??_controle+2)& (0+255),f,b
 16896  003D7A  1F6B               	comf	(??_controle+3)& (0+255),f,b
 16897  003D7C  4B6A               	infsnz	(??_controle+2)& (0+255),f,b
 16898  003D7E  2B6B               	incf	(??_controle+3)& (0+255),f,b
 16899  003D80  51FE               	movf	_temp& (0+255),w,b
 16900  003D82  6F6C               	movwf	(??_controle+4)& (0+255),b
 16901  003D84  6B6D               	clrf	(??_controle+5)& (0+255),b
 16902  003D86  516A               	movf	(??_controle+2)& (0+255),w,b
 16903  003D88  276C               	addwf	(??_controle+4)& (0+255),f,b
 16904  003D8A  516B               	movf	(??_controle+3)& (0+255),w,b
 16905  003D8C  236D               	addwfc	(??_controle+5)& (0+255),f,b
 16906  003D8E  5168               	movf	??_controle& (0+255),w,b
 16907  003D90  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 16908  003D92  516D               	movf	(??_controle+5)& (0+255),w,b
 16909  003D94  0A80               	xorlw	128
 16910  003D96  6F6E               	movwf	(??_controle+6)& (0+255),b
 16911  003D98  5169               	movf	(??_controle+1)& (0+255),w,b
 16912  003D9A  0A80               	xorlw	128
 16913  003D9C  596E               	subwfb	(??_controle+6)& (0+255),w,b
 16914  003D9E  A0D8               	btfss	status,0,c
 16915  003DA0  D010               	goto	l1185
 16916  003DA2                     u13800:
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;controle.h: 228: t_controle_buzzer = 10;
 16920                           
 16921                           ; BSR set to: 0
 16922  003DA2  0E0A               	movlw	10
 16923  003DA4  6E39               	movwf	_t_controle_buzzer,c
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;controle.h: 229: LATCbits.LC1 = ~LATCbits.LC1;
 16927  003DA6  A28B               	btfss	3979,1,c	;volatile
 16928  003DA8  D002               	goto	u13810
 16929  003DAA  0E01               	movlw	1
 16930  003DAC  D001               	goto	u13816
 16931  003DAE                     u13810:
 16932  003DAE  0E00               	movlw	0
 16933  003DB0                     u13816:
 16934  003DB0  0AFF               	xorlw	255
 16935  003DB2  6F68               	movwf	??_controle& (0+255),b
 16936  003DB4  4768               	rlncf	??_controle& (0+255),f,b
 16937  003DB6  508B               	movf	3979,w,c	;volatile
 16938  003DB8  1968               	xorwf	??_controle& (0+255),w,b
 16939  003DBA  0BFD               	andlw	-3
 16940  003DBC  1968               	xorwf	??_controle& (0+255),w,b
 16941  003DBE  6E8B               	movwf	3979,c	;volatile
 16942                           
 16943                           ;controle.h: 230: } else {
 16944  003DC0  D001               	goto	l1188
 16945  003DC2                     l1185:
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;controle.h: 231: LATCbits.LC1 = 0;
 16949  003DC2  928B               	bcf	3979,1,c	;volatile
 16950  003DC4                     l1188:
 16951                           
 16952                           ; BSR set to: 0
 16953                           ;controle.h: 232: }
 16954                           ;controle.h: 233: }
 16955                           ;controle.h: 234: if (buzzer == 1 && t_buzzer_religar != 0) {
 16956                           
 16957                           ; BSR set to: 0
 16958                           
 16959                           ; BSR set to: 0
 16960  003DC4  05FC               	decf	_buzzer& (0+255),w,b
 16961  003DC6  A4D8               	btfss	status,2,c
 16962  003DC8  D007               	goto	l1189
 16963                           
 16964                           ; BSR set to: 0
 16965  003DCA  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 16966  003DCC  B4D8               	btfsc	status,2,c
 16967  003DCE  D004               	goto	l1189
 16968                           
 16969                           ; BSR set to: 0
 16970                           ;controle.h: 235: t_controle_religar_buzzer = t_buzzer_religar;
 16971  003DD0  C0FF  F031         	movff	_t_buzzer_religar,_t_controle_religar_buzzer
 16972  003DD4  6A32               	clrf	_t_controle_religar_buzzer+1,c
 16973                           
 16974                           ;controle.h: 236: } else if (t_controle_religar_buzzer == 0 && t_buzzer_religar != 0) {
 16975  003DD6  D009               	goto	l1191
 16976  003DD8                     l1189:
 16977                           
 16978                           ; BSR set to: 0
 16979                           
 16980                           ; BSR set to: 0
 16981  003DD8  5031               	movf	_t_controle_religar_buzzer,w,c
 16982  003DDA  1032               	iorwf	_t_controle_religar_buzzer+1,w,c
 16983  003DDC  A4D8               	btfss	status,2,c
 16984  003DDE  D005               	goto	l1191
 16985                           
 16986                           ; BSR set to: 0
 16987  003DE0  51FF               	movf	_t_buzzer_religar& (0+255),w,b
 16988  003DE2  B4D8               	btfsc	status,2,c
 16989  003DE4  D002               	goto	l1191
 16990                           
 16991                           ; BSR set to: 0
 16992                           ;controle.h: 237: buzzer = 1;
 16993  003DE6  0E01               	movlw	1
 16994  003DE8  6FFC               	movwf	_buzzer& (0+255),b
 16995  003DEA                     l1191:
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;controle.h: 238: }
 16999                           ;controle.h: 239: if (!buzzer) {
 17000                           
 17001                           ; BSR set to: 0
 17002  003DEA  51FC               	movf	_buzzer& (0+255),w,b
 17003  003DEC  B4D8               	btfsc	status,2,c
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;controle.h: 240: LATCbits.LC1 = 0;
 17007  003DEE  928B               	bcf	3979,1,c	;volatile
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;controle.h: 241: }
 17011                           ;controle.h: 245: if (temp + 3 < tempajt) {
 17012                           
 17013                           ; BSR set to: 0
 17014  003DF0  51F4               	movf	_tempajt& (0+255),w,b
 17015  003DF2  6F68               	movwf	??_controle& (0+255),b
 17016  003DF4  6B69               	clrf	(??_controle+1)& (0+255),b
 17017  003DF6  51FE               	movf	_temp& (0+255),w,b
 17018  003DF8  6F6A               	movwf	(??_controle+2)& (0+255),b
 17019  003DFA  6B6B               	clrf	(??_controle+3)& (0+255),b
 17020  003DFC  0E03               	movlw	3
 17021  003DFE  276A               	addwf	(??_controle+2)& (0+255),f,b
 17022  003E00  0E00               	movlw	0
 17023  003E02  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17024  003E04  5168               	movf	??_controle& (0+255),w,b
 17025  003E06  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17026  003E08  516B               	movf	(??_controle+3)& (0+255),w,b
 17027  003E0A  0A80               	xorlw	128
 17028  003E0C  6F6C               	movwf	(??_controle+4)& (0+255),b
 17029  003E0E  5169               	movf	(??_controle+1)& (0+255),w,b
 17030  003E10  0A80               	xorlw	128
 17031  003E12  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17032  003E14  B0D8               	btfsc	status,0,c
 17033  003E16  D00C               	goto	l1193
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;controle.h: 246: setLed(16, 1);
 17037  003E18  0E01               	movlw	1
 17038  003E1A  6F60               	movwf	setLed@acao& (0+255),b
 17039  003E1C  0E10               	movlw	16
 17040  003E1E  ECCB  F02D         	call	_setLed
 17041                           
 17042                           ;controle.h: 247: setLed(32, 0);
 17043  003E22  0E00               	movlw	0
 17044  003E24  0100               	movlb	0	; () banked
 17045  003E26  6F60               	movwf	setLed@acao& (0+255),b
 17046  003E28  0E20               	movlw	32
 17047  003E2A  ECCB  F02D         	call	_setLed
 17048                           
 17049                           ;controle.h: 248: } else if (temp - 3 > tempajt) {
 17050  003E2E  D031               	goto	l1196
 17051  003E30                     l1193:
 17052  003E30  0EFD               	movlw	253
 17053  003E32  0100               	movlb	0	; () banked
 17054  003E34  6F68               	movwf	??_controle& (0+255),b
 17055  003E36  0EFF               	movlw	255
 17056  003E38  6F69               	movwf	(??_controle+1)& (0+255),b
 17057  003E3A  51FE               	movf	_temp& (0+255),w,b
 17058  003E3C  6F6A               	movwf	(??_controle+2)& (0+255),b
 17059  003E3E  6B6B               	clrf	(??_controle+3)& (0+255),b
 17060  003E40  5168               	movf	??_controle& (0+255),w,b
 17061  003E42  276A               	addwf	(??_controle+2)& (0+255),f,b
 17062  003E44  5169               	movf	(??_controle+1)& (0+255),w,b
 17063  003E46  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17064  003E48  51F4               	movf	_tempajt& (0+255),w,b
 17065  003E4A  6F6C               	movwf	(??_controle+4)& (0+255),b
 17066  003E4C  6B6D               	clrf	(??_controle+5)& (0+255),b
 17067  003E4E  516A               	movf	(??_controle+2)& (0+255),w,b
 17068  003E50  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17069  003E52  516D               	movf	(??_controle+5)& (0+255),w,b
 17070  003E54  0A80               	xorlw	128
 17071  003E56  6F6E               	movwf	(??_controle+6)& (0+255),b
 17072  003E58  516B               	movf	(??_controle+3)& (0+255),w,b
 17073  003E5A  0A80               	xorlw	128
 17074  003E5C  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17075  003E5E  B0D8               	btfsc	status,0,c
 17076  003E60  D00C               	goto	l1195
 17077                           
 17078                           ; BSR set to: 0
 17079                           ;controle.h: 249: setLed(32, 1);
 17080  003E62  0E01               	movlw	1
 17081  003E64  6F60               	movwf	setLed@acao& (0+255),b
 17082  003E66  0E20               	movlw	32
 17083  003E68  ECCB  F02D         	call	_setLed
 17084                           
 17085                           ;controle.h: 250: setLed(16, 0);
 17086  003E6C  0E00               	movlw	0
 17087  003E6E  0100               	movlb	0	; () banked
 17088  003E70  6F60               	movwf	setLed@acao& (0+255),b
 17089  003E72  0E10               	movlw	16
 17090  003E74  ECCB  F02D         	call	_setLed
 17091                           
 17092                           ;controle.h: 251: } else {
 17093  003E78  D00C               	goto	l1196
 17094  003E7A                     l1195:
 17095                           
 17096                           ;controle.h: 252: setLed(32, 0);
 17097  003E7A  0E00               	movlw	0
 17098  003E7C  0100               	movlb	0	; () banked
 17099  003E7E  6F60               	movwf	setLed@acao& (0+255),b
 17100  003E80  0E20               	movlw	32
 17101  003E82  ECCB  F02D         	call	_setLed
 17102                           
 17103                           ;controle.h: 253: setLed(16, 0);
 17104  003E86  0E00               	movlw	0
 17105  003E88  0100               	movlb	0	; () banked
 17106  003E8A  6F60               	movwf	setLed@acao& (0+255),b
 17107  003E8C  0E10               	movlw	16
 17108  003E8E  ECCB  F02D         	call	_setLed
 17109  003E92                     l1196:
 17110                           
 17111                           ;controle.h: 254: }
 17112                           ;controle.h: 256: if (umid + 3 < umidajt) {
 17113  003E92  0100               	movlb	0	; () banked
 17114  003E94  51F3               	movf	_umidajt& (0+255),w,b
 17115  003E96  6F68               	movwf	??_controle& (0+255),b
 17116  003E98  6B69               	clrf	(??_controle+1)& (0+255),b
 17117  003E9A  505D               	movf	_umid,w,c
 17118  003E9C  6F6A               	movwf	(??_controle+2)& (0+255),b
 17119  003E9E  6B6B               	clrf	(??_controle+3)& (0+255),b
 17120  003EA0  0E03               	movlw	3
 17121  003EA2  276A               	addwf	(??_controle+2)& (0+255),f,b
 17122  003EA4  0E00               	movlw	0
 17123  003EA6  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17124  003EA8  5168               	movf	??_controle& (0+255),w,b
 17125  003EAA  5D6A               	subwf	(??_controle+2)& (0+255),w,b
 17126  003EAC  516B               	movf	(??_controle+3)& (0+255),w,b
 17127  003EAE  0A80               	xorlw	128
 17128  003EB0  6F6C               	movwf	(??_controle+4)& (0+255),b
 17129  003EB2  5169               	movf	(??_controle+1)& (0+255),w,b
 17130  003EB4  0A80               	xorlw	128
 17131  003EB6  596C               	subwfb	(??_controle+4)& (0+255),w,b
 17132  003EB8  B0D8               	btfsc	status,0,c
 17133  003EBA  D00C               	goto	l1197
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;controle.h: 257: setLed(1, 0);
 17137  003EBC  0E00               	movlw	0
 17138  003EBE  6F60               	movwf	setLed@acao& (0+255),b
 17139  003EC0  0E01               	movlw	1
 17140  003EC2  ECCB  F02D         	call	_setLed
 17141                           
 17142                           ;controle.h: 258: setLed(2, 1);
 17143  003EC6  0E01               	movlw	1
 17144  003EC8  0100               	movlb	0	; () banked
 17145  003ECA  6F60               	movwf	setLed@acao& (0+255),b
 17146  003ECC  0E02               	movlw	2
 17147  003ECE  ECCB  F02D         	call	_setLed
 17148                           
 17149                           ;controle.h: 259: } else if (umid - 3 > umidajt) {
 17150  003ED2  0012               	return	
 17151  003ED4                     l1197:
 17152  003ED4  0EFD               	movlw	253
 17153  003ED6  0100               	movlb	0	; () banked
 17154  003ED8  6F68               	movwf	??_controle& (0+255),b
 17155  003EDA  0EFF               	movlw	255
 17156  003EDC  6F69               	movwf	(??_controle+1)& (0+255),b
 17157  003EDE  505D               	movf	_umid,w,c
 17158  003EE0  6F6A               	movwf	(??_controle+2)& (0+255),b
 17159  003EE2  6B6B               	clrf	(??_controle+3)& (0+255),b
 17160  003EE4  5168               	movf	??_controle& (0+255),w,b
 17161  003EE6  276A               	addwf	(??_controle+2)& (0+255),f,b
 17162  003EE8  5169               	movf	(??_controle+1)& (0+255),w,b
 17163  003EEA  236B               	addwfc	(??_controle+3)& (0+255),f,b
 17164  003EEC  51F3               	movf	_umidajt& (0+255),w,b
 17165  003EEE  6F6C               	movwf	(??_controle+4)& (0+255),b
 17166  003EF0  6B6D               	clrf	(??_controle+5)& (0+255),b
 17167  003EF2  516A               	movf	(??_controle+2)& (0+255),w,b
 17168  003EF4  5D6C               	subwf	(??_controle+4)& (0+255),w,b
 17169  003EF6  516D               	movf	(??_controle+5)& (0+255),w,b
 17170  003EF8  0A80               	xorlw	128
 17171  003EFA  6F6E               	movwf	(??_controle+6)& (0+255),b
 17172  003EFC  516B               	movf	(??_controle+3)& (0+255),w,b
 17173  003EFE  0A80               	xorlw	128
 17174  003F00  596E               	subwfb	(??_controle+6)& (0+255),w,b
 17175  003F02  B0D8               	btfsc	status,0,c
 17176  003F04  D00C               	goto	l1199
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;controle.h: 260: setLed(1, 1);
 17180  003F06  0E01               	movlw	1
 17181  003F08  6F60               	movwf	setLed@acao& (0+255),b
 17182  003F0A  0E01               	movlw	1
 17183  003F0C  ECCB  F02D         	call	_setLed
 17184                           
 17185                           ;controle.h: 261: setLed(2, 0);
 17186  003F10  0E00               	movlw	0
 17187  003F12  0100               	movlb	0	; () banked
 17188  003F14  6F60               	movwf	setLed@acao& (0+255),b
 17189  003F16  0E02               	movlw	2
 17190  003F18  ECCB  F02D         	call	_setLed
 17191                           
 17192                           ;controle.h: 262: } else {
 17193  003F1C  0012               	return	
 17194  003F1E                     l1199:
 17195                           
 17196                           ;controle.h: 263: setLed(1, 0);
 17197  003F1E  0E00               	movlw	0
 17198  003F20  0100               	movlb	0	; () banked
 17199  003F22  6F60               	movwf	setLed@acao& (0+255),b
 17200  003F24  0E01               	movlw	1
 17201  003F26  ECCB  F02D         	call	_setLed
 17202                           
 17203                           ;controle.h: 264: setLed(2, 0);
 17204  003F2A  0E00               	movlw	0
 17205  003F2C  0100               	movlb	0	; () banked
 17206  003F2E  6F60               	movwf	setLed@acao& (0+255),b
 17207  003F30  0E02               	movlw	2
 17208  003F32  ECCB  F02D         	call	_setLed
 17209  003F36  0012               	return	
 17210  003F38                     __end_of_controle:
 17211                           	opt stack 0
 17212                           tblptru	equ	0xFF8
 17213                           tblptrh	equ	0xFF7
 17214                           tblptrl	equ	0xFF6
 17215                           tablat	equ	0xFF5
 17216                           prodh	equ	0xFF4
 17217                           prodl	equ	0xFF3
 17218                           intcon	equ	0xFF2
 17219                           intcon2	equ	0xFF1
 17220                           intcon3	equ	0xFF0
 17221                           postinc0	equ	0xFEE
 17222                           wreg	equ	0xFE8
 17223                           indf1	equ	0xFE7
 17224                           postdec1	equ	0xFE5
 17225                           fsr1h	equ	0xFE2
 17226                           fsr1l	equ	0xFE1
 17227                           indf2	equ	0xFDF
 17228                           postinc2	equ	0xFDE
 17229                           postdec2	equ	0xFDD
 17230                           fsr2h	equ	0xFDA
 17231                           fsr2l	equ	0xFD9
 17232                           status	equ	0xFD8
 17233                           
 17234 ;; *************** function _acaoFlap *****************
 17235 ;; Defined at:
 17236 ;;		line 123 in file "src/controle.h"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  acao            1    wreg     unsigned char 
 17239 ;;  tempo_ativad    2    2[BANK0 ] int 
 17240 ;;  tempo_aguard    2    4[BANK0 ] int 
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;  acao            1    7[BANK0 ] unsigned char 
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      void 
 17245 ;; Registers used:
 17246 ;;		wreg, status,2, status,0, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17252 ;;      Params:         0       4       0       0       0       0       0       0       0
 17253 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17254 ;;      Temps:          0       1       0       0       0       0       0       0       0
 17255 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17256 ;;Total ram usage:        6 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    7
 17259 ;; This function calls:
 17260 ;;		_setLed
 17261 ;; This function is called by:
 17262 ;;		_controle
 17263 ;; This function uses a non-reentrant model
 17264 ;;
 17265                           
 17266                           	psect	text21
 17267  0052B2                     __ptext21:
 17268                           	opt stack 0
 17269  0052B2                     _acaoFlap:
 17270                           	opt stack 22
 17271                           
 17272                           ;incstack = 0
 17273                           ;acaoFlap@acao stored from wreg
 17274  0052B2  0100               	movlb	0	; () banked
 17275  0052B4  6F67               	movwf	acaoFlap@acao& (0+255),b
 17276                           
 17277                           ;controle.h: 124: if (acao != _acao_flap) {
 17278  0052B6  503C               	movf	__acao_flap,w,c
 17279  0052B8  0100               	movlb	0	; () banked
 17280  0052BA  1967               	xorwf	acaoFlap@acao& (0+255),w,b
 17281  0052BC  B4D8               	btfsc	status,2,c
 17282  0052BE  D007               	goto	l1147
 17283                           
 17284                           ; BSR set to: 0
 17285                           ;controle.h: 125: t_controle_flap = 0;
 17286  0052C0  0E00               	movlw	0
 17287  0052C2  6E34               	movwf	_t_controle_flap+1,c
 17288  0052C4  0E00               	movlw	0
 17289  0052C6  6E33               	movwf	_t_controle_flap,c
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;controle.h: 126: _acao_flap = acao;
 17293  0052C8  C067  F03C         	movff	acaoFlap@acao,__acao_flap
 17294                           
 17295                           ; BSR set to: 0
 17296                           ;controle.h: 127: return;
 17297  0052CC  0012               	return	
 17298  0052CE                     l1147:
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;controle.h: 128: }
 17302                           ;controle.h: 129: if (acao) {
 17303                           
 17304                           ; BSR set to: 0
 17305  0052CE  5167               	movf	acaoFlap@acao& (0+255),w,b
 17306  0052D0  B4D8               	btfsc	status,2,c
 17307  0052D2  D006               	goto	l1149
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;controle.h: 130: setLed(4, 1);
 17311  0052D4  0E01               	movlw	1
 17312  0052D6  6F60               	movwf	setLed@acao& (0+255),b
 17313  0052D8  0E04               	movlw	4
 17314  0052DA  ECCB  F02D         	call	_setLed
 17315                           
 17316                           ;controle.h: 131: } else {
 17317  0052DE  D006               	goto	l1150
 17318  0052E0                     l1149:
 17319                           
 17320                           ;controle.h: 132: setLed(4, 0);
 17321  0052E0  0E00               	movlw	0
 17322  0052E2  0100               	movlb	0	; () banked
 17323  0052E4  6F60               	movwf	setLed@acao& (0+255),b
 17324  0052E6  0E04               	movlw	4
 17325  0052E8  ECCB  F02D         	call	_setLed
 17326  0052EC                     l1150:
 17327                           
 17328                           ;controle.h: 133: }
 17329                           ;controle.h: 135: if (!t_controle_flap) {
 17330  0052EC  5033               	movf	_t_controle_flap,w,c
 17331  0052EE  1034               	iorwf	_t_controle_flap+1,w,c
 17332  0052F0  A4D8               	btfss	status,2,c
 17333  0052F2  D007               	goto	l1151
 17334                           
 17335                           ;controle.h: 136: t_controle_flap = (tempo_ativado + tempo_aguardar);
 17336  0052F4  0100               	movlb	0	; () banked
 17337  0052F6  5164               	movf	acaoFlap@tempo_aguardar& (0+255),w,b
 17338  0052F8  2562               	addwf	acaoFlap@tempo_ativado& (0+255),w,b
 17339  0052FA  6E33               	movwf	_t_controle_flap,c
 17340  0052FC  5165               	movf	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17341  0052FE  2163               	addwfc	(acaoFlap@tempo_ativado+1)& (0+255),w,b
 17342  005300  6E34               	movwf	_t_controle_flap+1,c
 17343  005302                     l1151:
 17344                           
 17345                           ;controle.h: 137: }
 17346                           ;controle.h: 139: if (t_controle_flap > tempo_aguardar) {
 17347  005302  5033               	movf	_t_controle_flap,w,c
 17348  005304  0100               	movlb	0	; () banked
 17349  005306  5D64               	subwf	acaoFlap@tempo_aguardar& (0+255),w,b
 17350  005308  5034               	movf	_t_controle_flap+1,w,c
 17351  00530A  5965               	subwfb	(acaoFlap@tempo_aguardar+1)& (0+255),w,b
 17352  00530C  B0D8               	btfsc	status,0,c
 17353  00530E  D015               	goto	l1152
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;controle.h: 140: LATAbits.LA5 = !acao;
 17357  005310  5167               	movf	acaoFlap@acao& (0+255),w,b
 17358  005312  A4D8               	btfss	status,2,c
 17359  005314  D003               	goto	u11760
 17360  005316  6B66               	clrf	??_acaoFlap& (0+255),b
 17361  005318  2B66               	incf	??_acaoFlap& (0+255),f,b
 17362  00531A  D002               	goto	u11778
 17363  00531C                     u11760:
 17364  00531C  0100               	movlb	0	; () banked
 17365  00531E  6B66               	clrf	??_acaoFlap& (0+255),b
 17366  005320                     u11778:
 17367  005320  3B66               	swapf	??_acaoFlap& (0+255),f,b
 17368  005322  4766               	rlncf	??_acaoFlap& (0+255),f,b
 17369  005324  5089               	movf	3977,w,c	;volatile
 17370  005326  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17371  005328  0BDF               	andlw	-33
 17372  00532A  1966               	xorwf	??_acaoFlap& (0+255),w,b
 17373  00532C  6E89               	movwf	3977,c	;volatile
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;controle.h: 141: LATCbits.LC2 = acao;
 17377  00532E  B167               	btfsc	acaoFlap@acao& (0+255),0,b
 17378  005330  D002               	bra	u11785
 17379  005332  948B               	bcf	3979,2,c	;volatile
 17380  005334  D001               	bra	u11786
 17381  005336                     u11785:
 17382  005336  848B               	bsf	3979,2,c	;volatile
 17383  005338                     u11786:
 17384                           
 17385                           ;controle.h: 142: } else {
 17386  005338  0012               	return	
 17387  00533A                     l1152:
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;controle.h: 143: LATAbits.LA5 = 0;
 17391  00533A  9A89               	bcf	3977,5,c	;volatile
 17392                           
 17393                           ;controle.h: 144: LATCbits.LC2 = 0;
 17394  00533C  948B               	bcf	3979,2,c	;volatile
 17395  00533E  0012               	return	
 17396  005340                     __end_of_acaoFlap:
 17397                           	opt stack 0
 17398                           tblptru	equ	0xFF8
 17399                           tblptrh	equ	0xFF7
 17400                           tblptrl	equ	0xFF6
 17401                           tablat	equ	0xFF5
 17402                           prodh	equ	0xFF4
 17403                           prodl	equ	0xFF3
 17404                           intcon	equ	0xFF2
 17405                           intcon2	equ	0xFF1
 17406                           intcon3	equ	0xFF0
 17407                           postinc0	equ	0xFEE
 17408                           wreg	equ	0xFE8
 17409                           indf1	equ	0xFE7
 17410                           postdec1	equ	0xFE5
 17411                           fsr1h	equ	0xFE2
 17412                           fsr1l	equ	0xFE1
 17413                           indf2	equ	0xFDF
 17414                           postinc2	equ	0xFDE
 17415                           postdec2	equ	0xFDD
 17416                           fsr2h	equ	0xFDA
 17417                           fsr2l	equ	0xFD9
 17418                           status	equ	0xFD8
 17419                           
 17420 ;; *************** function _setLed *****************
 17421 ;; Defined at:
 17422 ;;		line 18 in file "src/Led_display.h"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;  led             1    wreg     unsigned char 
 17425 ;;  acao            1    0[BANK0 ] unsigned char 
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;  led             1    1[BANK0 ] unsigned char 
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg, status,2, status,0
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17437 ;;      Params:         0       1       0       0       0       0       0       0       0
 17438 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17439 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17440 ;;      Totals:         0       2       0       0       0       0       0       0       0
 17441 ;;Total ram usage:        2 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:    6
 17444 ;; This function calls:
 17445 ;;		Nothing
 17446 ;; This function is called by:
 17447 ;;		_acaoFlap
 17448 ;;		_controle
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           	psect	text22
 17453  005B96                     __ptext22:
 17454                           	opt stack 0
 17455  005B96                     _setLed:
 17456                           	opt stack 23
 17457                           
 17458                           ;incstack = 0
 17459                           ;setLed@led stored from wreg
 17460  005B96  0100               	movlb	0	; () banked
 17461  005B98  6F61               	movwf	setLed@led& (0+255),b
 17462                           
 17463                           ;Led_display.h: 19: if (acao) {
 17464  005B9A  0100               	movlb	0	; () banked
 17465  005B9C  5160               	movf	setLed@acao& (0+255),w,b
 17466  005B9E  B4D8               	btfsc	status,2,c
 17467  005BA0  D004               	goto	l221
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;Led_display.h: 20: leds = leds | led;
 17471  005BA2  5043               	movf	_leds,w,c
 17472  005BA4  1161               	iorwf	setLed@led& (0+255),w,b
 17473  005BA6  6E43               	movwf	_leds,c
 17474                           
 17475                           ;Led_display.h: 22: } else {
 17476  005BA8  0012               	return	
 17477  005BAA                     l221:
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;Led_display.h: 23: leds = leds&~led;
 17481                           
 17482                           ; BSR set to: 0
 17483  005BAA  5161               	movf	setLed@led& (0+255),w,b
 17484  005BAC  0AFF               	xorlw	255
 17485  005BAE  1443               	andwf	_leds,w,c
 17486  005BB0  6E43               	movwf	_leds,c
 17487  005BB2  0012               	return	
 17488  005BB4                     __end_of_setLed:
 17489                           	opt stack 0
 17490                           tblptru	equ	0xFF8
 17491                           tblptrh	equ	0xFF7
 17492                           tblptrl	equ	0xFF6
 17493                           tablat	equ	0xFF5
 17494                           prodh	equ	0xFF4
 17495                           prodl	equ	0xFF3
 17496                           intcon	equ	0xFF2
 17497                           intcon2	equ	0xFF1
 17498                           intcon3	equ	0xFF0
 17499                           postinc0	equ	0xFEE
 17500                           wreg	equ	0xFE8
 17501                           indf1	equ	0xFE7
 17502                           postdec1	equ	0xFE5
 17503                           fsr1h	equ	0xFE2
 17504                           fsr1l	equ	0xFE1
 17505                           indf2	equ	0xFDF
 17506                           postinc2	equ	0xFDE
 17507                           postdec2	equ	0xFDD
 17508                           fsr2h	equ	0xFDA
 17509                           fsr2l	equ	0xFD9
 17510                           status	equ	0xFD8
 17511                           
 17512 ;; *************** function _climaAtual *****************
 17513 ;; Defined at:
 17514 ;;		line 34 in file "src/FuncoesControlador.h"
 17515 ;; Parameters:    Size  Location     Type
 17516 ;;  c               1    wreg     unsigned char 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;  c               1    2[BANK0 ] unsigned char 
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  2    0[BANK0 ] PTR unsigned char 
 17521 ;; Registers used:
 17522 ;;		wreg, status,2, status,0
 17523 ;; Tracked objects:
 17524 ;;		On entry : 0/0
 17525 ;;		On exit  : 0/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17528 ;;      Params:         0       2       0       0       0       0       0       0       0
 17529 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17531 ;;      Totals:         0       3       0       0       0       0       0       0       0
 17532 ;;Total ram usage:        3 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    6
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_main
 17539 ;; This function uses a non-reentrant model
 17540 ;;
 17541                           
 17542                           	psect	text23
 17543  005752                     __ptext23:
 17544                           	opt stack 0
 17545  005752                     _climaAtual:
 17546                           	opt stack 24
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;incstack = 0
 17550                           ;climaAtual@c stored from wreg
 17551  005752  0100               	movlb	0	; () banked
 17552  005754  6F62               	movwf	climaAtual@c& (0+255),b
 17553                           
 17554                           ;FuncoesControlador.h: 35: switch (c) {
 17555  005756  D015               	goto	l905
 17556  005758  0EBA               	movlw	low STR_6
 17557  00575A  0100               	movlb	0	; () banked
 17558  00575C  6F60               	movwf	?_climaAtual& (0+255),b
 17559  00575E  0E7F               	movlw	high STR_6
 17560  005760  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17561                           
 17562                           ; BSR set to: 0
 17563  005762  0012               	return	
 17564  005764                     
 17565                           ; BSR set to: 0
 17566                           
 17567                           ; BSR set to: 0
 17568  005764  0E91               	movlw	low STR_7
 17569  005766  6F60               	movwf	?_climaAtual& (0+255),b
 17570  005768  0E7F               	movlw	high STR_7
 17571  00576A  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17572                           
 17573                           ; BSR set to: 0
 17574  00576C  0012               	return	
 17575  00576E                     
 17576                           ; BSR set to: 0
 17577                           
 17578                           ; BSR set to: 0
 17579  00576E  0ED5               	movlw	low STR_8
 17580  005770  6F60               	movwf	?_climaAtual& (0+255),b
 17581  005772  0E7F               	movlw	high STR_8
 17582  005774  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17583                           
 17584                           ; BSR set to: 0
 17585  005776  0012               	return	
 17586  005778                     
 17587                           ; BSR set to: 0
 17588                           
 17589                           ; BSR set to: 0
 17590  005778  0EEC               	movlw	low STR_9
 17591  00577A  6F60               	movwf	?_climaAtual& (0+255),b
 17592  00577C  0E7F               	movlw	high STR_9
 17593  00577E  6F61               	movwf	(?_climaAtual+1)& (0+255),b
 17594                           
 17595                           ; BSR set to: 0
 17596                           ;FuncoesControlador.h: 41: }
 17597                           
 17598                           ; BSR set to: 0
 17599  005780  0012               	return	
 17600  005782                     l905:
 17601                           
 17602                           ; BSR set to: 0
 17603  005782  0100               	movlb	0	; () banked
 17604  005784  5162               	movf	climaAtual@c& (0+255),w,b
 17605                           
 17606                           ; Switch size 1, requested type "space"
 17607                           ; Number of cases is 3, Range of values is 1 to 3
 17608                           ; switch strategies available:
 17609                           ; Name         Instructions Cycles
 17610                           ; simple_byte           10     6 (average)
 17611                           ;	Chosen strategy is simple_byte
 17612  005786  0A01               	xorlw	1	; case 1
 17613  005788  B4D8               	btfsc	status,2,c
 17614  00578A  D7E6               	goto	l906
 17615  00578C  0A03               	xorlw	3	; case 2
 17616  00578E  B4D8               	btfsc	status,2,c
 17617  005790  D7E9               	goto	l908
 17618  005792  0A01               	xorlw	1	; case 3
 17619  005794  B4D8               	btfsc	status,2,c
 17620  005796  D7EB               	goto	l909
 17621  005798  D7EF               	goto	l910
 17622  00579A                     __end_of_climaAtual:
 17623                           	opt stack 0
 17624                           tblptru	equ	0xFF8
 17625                           tblptrh	equ	0xFF7
 17626                           tblptrl	equ	0xFF6
 17627                           tablat	equ	0xFF5
 17628                           prodh	equ	0xFF4
 17629                           prodl	equ	0xFF3
 17630                           intcon	equ	0xFF2
 17631                           intcon2	equ	0xFF1
 17632                           intcon3	equ	0xFF0
 17633                           postinc0	equ	0xFEE
 17634                           wreg	equ	0xFE8
 17635                           indf1	equ	0xFE7
 17636                           postdec1	equ	0xFE5
 17637                           fsr1h	equ	0xFE2
 17638                           fsr1l	equ	0xFE1
 17639                           indf2	equ	0xFDF
 17640                           postinc2	equ	0xFDE
 17641                           postdec2	equ	0xFDD
 17642                           fsr2h	equ	0xFDA
 17643                           fsr2l	equ	0xFD9
 17644                           status	equ	0xFD8
 17645                           
 17646 ;; *************** function _btPress *****************
 17647 ;; Defined at:
 17648 ;;		line 26 in file "src/Teclado.h"
 17649 ;; Parameters:    Size  Location     Type
 17650 ;;  bt              1    wreg     unsigned char 
 17651 ;; Auto vars:     Size  Location     Type
 17652 ;;  bt              1    0[BANK0 ] unsigned char 
 17653 ;; Return value:  Size  Location     Type
 17654 ;;                  1    wreg      unsigned char 
 17655 ;; Registers used:
 17656 ;;		wreg, status,2, status,0
 17657 ;; Tracked objects:
 17658 ;;		On entry : 0/0
 17659 ;;		On exit  : 0/0
 17660 ;;		Unchanged: 0/0
 17661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17662 ;;      Params:         0       0       0       0       0       0       0       0       0
 17663 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17665 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17666 ;;Total ram usage:        1 bytes
 17667 ;; Hardware stack levels used:    1
 17668 ;; Hardware stack levels required when called:    6
 17669 ;; This function calls:
 17670 ;;		Nothing
 17671 ;; This function is called by:
 17672 ;;		_main
 17673 ;; This function uses a non-reentrant model
 17674 ;;
 17675                           
 17676                           	psect	text24
 17677  005BB4                     __ptext24:
 17678                           	opt stack 0
 17679  005BB4                     _btPress:
 17680                           	opt stack 24
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;incstack = 0
 17684                           ;btPress@bt stored from wreg
 17685  005BB4  0100               	movlb	0	; () banked
 17686  005BB6  6F60               	movwf	btPress@bt& (0+255),b
 17687                           
 17688                           ;Teclado.h: 27: if (bt_flag == bt) {
 17689  005BB8  0100               	movlb	0	; () banked
 17690  005BBA  5160               	movf	btPress@bt& (0+255),w,b
 17691  005BBC  1842               	xorwf	_bt_flag,w,c
 17692  005BBE  B4D8               	btfsc	status,2,c
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;Teclado.h: 28: if (PORTBbits.RB2) {
 17696  005BC0  A481               	btfss	3969,2,c	;volatile
 17697  005BC2  D004               	goto	l300
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;Teclado.h: 29: bt_flag = 0;
 17701  005BC4  0E00               	movlw	0
 17702  005BC6  6E42               	movwf	_bt_flag,c
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;Teclado.h: 30: return 1;
 17706  005BC8  0E01               	movlw	1
 17707                           
 17708                           ; BSR set to: 0
 17709  005BCA  0012               	return	
 17710  005BCC                     l300:
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;Teclado.h: 31: }
 17714                           ;Teclado.h: 32: }
 17715                           ;Teclado.h: 33: return 0;
 17716                           
 17717                           ; BSR set to: 0
 17718                           
 17719                           ; BSR set to: 0
 17720  005BCC  0E00               	movlw	0
 17721  005BCE  0012               	return	
 17722  005BD0                     __end_of_btPress:
 17723                           	opt stack 0
 17724                           tblptru	equ	0xFF8
 17725                           tblptrh	equ	0xFF7
 17726                           tblptrl	equ	0xFF6
 17727                           tablat	equ	0xFF5
 17728                           prodh	equ	0xFF4
 17729                           prodl	equ	0xFF3
 17730                           intcon	equ	0xFF2
 17731                           intcon2	equ	0xFF1
 17732                           intcon3	equ	0xFF0
 17733                           postinc0	equ	0xFEE
 17734                           wreg	equ	0xFE8
 17735                           indf1	equ	0xFE7
 17736                           postdec1	equ	0xFE5
 17737                           fsr1h	equ	0xFE2
 17738                           fsr1l	equ	0xFE1
 17739                           indf2	equ	0xFDF
 17740                           postinc2	equ	0xFDE
 17741                           postdec2	equ	0xFDD
 17742                           fsr2h	equ	0xFDA
 17743                           fsr2l	equ	0xFD9
 17744                           status	equ	0xFD8
 17745                           
 17746 ;; *************** function _blink *****************
 17747 ;; Defined at:
 17748 ;;		line 212 in file "src/lcd.h"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;  line            2    0[BANK0 ] PTR unsigned char 
 17751 ;;		 -> line3(21), line2(21), line1(21), 
 17752 ;;  start           1    2[BANK0 ] unsigned char 
 17753 ;;  end             1    3[BANK0 ] unsigned char 
 17754 ;; Auto vars:     Size  Location     Type
 17755 ;;  i               1    4[BANK0 ] unsigned char 
 17756 ;; Return value:  Size  Location     Type
 17757 ;;                  1    wreg      void 
 17758 ;; Registers used:
 17759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17760 ;; Tracked objects:
 17761 ;;		On entry : 0/0
 17762 ;;		On exit  : 0/0
 17763 ;;		Unchanged: 0/0
 17764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17765 ;;      Params:         0       4       0       0       0       0       0       0       0
 17766 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17767 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17768 ;;      Totals:         0       5       0       0       0       0       0       0       0
 17769 ;;Total ram usage:        5 bytes
 17770 ;; Hardware stack levels used:    1
 17771 ;; Hardware stack levels required when called:    6
 17772 ;; This function calls:
 17773 ;;		Nothing
 17774 ;; This function is called by:
 17775 ;;		_main
 17776 ;; This function uses a non-reentrant model
 17777 ;;
 17778                           
 17779                           	psect	text25
 17780  005944                     __ptext25:
 17781                           	opt stack 0
 17782  005944                     _blink:
 17783                           	opt stack 24
 17784                           
 17785                           ;lcd.h: 213: if (blinkk) {
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;incstack = 0
 17789  005944  A45B               	btfss	_blinkk/(0+8),_blinkk& (0+7),c
 17790  005946  0012               	return	
 17791                           
 17792                           ;lcd.h: 214: char i = 0;
 17793  005948  0E00               	movlw	0
 17794  00594A  0100               	movlb	0	; () banked
 17795  00594C  6F64               	movwf	blink@i& (0+255),b
 17796                           
 17797                           ; BSR set to: 0
 17798                           ;lcd.h: 215: for (i = (--start); i < end; i++) {
 17799  00594E  0762               	decf	blink@start& (0+255),f,b
 17800  005950  C062  F064         	movff	blink@start,blink@i
 17801  005954  D00B               	goto	l288
 17802  005956                     
 17803                           ; BSR set to: 0
 17804                           ;lcd.h: 216: line[i] = ' ';
 17805                           
 17806                           ; BSR set to: 0
 17807  005956  5164               	movf	blink@i& (0+255),w,b
 17808  005958  0D01               	mullw	1
 17809  00595A  50F3               	movf	prodl,w,c
 17810  00595C  2560               	addwf	blink@line& (0+255),w,b
 17811  00595E  6ED9               	movwf	fsr2l,c
 17812  005960  50F4               	movf	prodh,w,c
 17813  005962  2161               	addwfc	(blink@line+1)& (0+255),w,b
 17814  005964  6EDA               	movwf	fsr2h,c
 17815  005966  0E20               	movlw	32
 17816  005968  6EDF               	movwf	indf2,c
 17817                           
 17818                           ; BSR set to: 0
 17819  00596A  2B64               	incf	blink@i& (0+255),f,b
 17820  00596C                     l288:
 17821                           
 17822                           ; BSR set to: 0
 17823                           
 17824                           ; BSR set to: 0
 17825  00596C  5163               	movf	blink@end& (0+255),w,b
 17826  00596E  5D64               	subwf	blink@i& (0+255),w,b
 17827  005970  B0D8               	btfsc	status,0,c
 17828  005972  0012               	return	
 17829  005974  D7F0               	goto	l289
 17830  005976                     __end_of_blink:
 17831                           	opt stack 0
 17832                           tblptru	equ	0xFF8
 17833                           tblptrh	equ	0xFF7
 17834                           tblptrl	equ	0xFF6
 17835                           tablat	equ	0xFF5
 17836                           prodh	equ	0xFF4
 17837                           prodl	equ	0xFF3
 17838                           intcon	equ	0xFF2
 17839                           intcon2	equ	0xFF1
 17840                           intcon3	equ	0xFF0
 17841                           postinc0	equ	0xFEE
 17842                           wreg	equ	0xFE8
 17843                           indf1	equ	0xFE7
 17844                           postdec1	equ	0xFE5
 17845                           fsr1h	equ	0xFE2
 17846                           fsr1l	equ	0xFE1
 17847                           indf2	equ	0xFDF
 17848                           postinc2	equ	0xFDE
 17849                           postdec2	equ	0xFDD
 17850                           fsr2h	equ	0xFDA
 17851                           fsr2l	equ	0xFD9
 17852                           status	equ	0xFD8
 17853                           
 17854 ;; *************** function _alterarDadosConexaoConfigWifi *****************
 17855 ;; Defined at:
 17856 ;;		line 18 in file "src/conexaoWifi.h"
 17857 ;; Parameters:    Size  Location     Type
 17858 ;;		None
 17859 ;; Auto vars:     Size  Location     Type
 17860 ;;  i               1  128[BANK0 ] unsigned char 
 17861 ;; Return value:  Size  Location     Type
 17862 ;;                  1    wreg      void 
 17863 ;; Registers used:
 17864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17865 ;; Tracked objects:
 17866 ;;		On entry : 0/0
 17867 ;;		On exit  : 0/0
 17868 ;;		Unchanged: 0/0
 17869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17870 ;;      Params:         0       0       0       0       0       0       0       0       0
 17871 ;;      Locals:         0       1       0       0       0       0       0       0       0
 17872 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17873 ;;      Totals:         0       1       0       0       0       0       0       0       0
 17874 ;;Total ram usage:        1 bytes
 17875 ;; Hardware stack levels used:    1
 17876 ;; Hardware stack levels required when called:   10
 17877 ;; This function calls:
 17878 ;;		_atualizaLCD
 17879 ;;		_delay
 17880 ;;		_findBufferSerial
 17881 ;;		_getStringJSON
 17882 ;;		_printf
 17883 ;;		_setKeyStartReceiveSerial
 17884 ;;		_sprintf
 17885 ;;		_strlen
 17886 ;;		_strstr
 17887 ;;		_writeEEPROM_ext
 17888 ;; This function is called by:
 17889 ;;		_main
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text26
 17894  0035FE                     __ptext26:
 17895                           	opt stack 0
 17896  0035FE                     _alterarDadosConexaoConfigWifi:
 17897                           	opt stack 20
 17898                           
 17899                           ;conexaoWifi.h: 19: if (t_wifi_restart == 0) {
 17900                           
 17901                           ;incstack = 0
 17902  0035FE  503E               	movf	_t_wifi_restart,w,c
 17903  003600  A4D8               	btfss	status,2,c
 17904  003602  D006               	goto	l972
 17905                           
 17906                           ;conexaoWifi.h: 20: menu = 8;
 17907  003604  0E08               	movlw	8
 17908  003606  0100               	movlb	0	; () banked
 17909  003608  6FFD               	movwf	_menu& (0+255),b
 17910                           
 17911                           ;conexaoWifi.h: 21: opcaomenu = 1;
 17912  00360A  0E01               	movlw	1
 17913  00360C  6E45               	movwf	_opcaomenu,c
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;conexaoWifi.h: 23: } else {
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;conexaoWifi.h: 22: return;
 17920  00360E  0012               	return	
 17921  003610                     l972:
 17922                           
 17923                           ;conexaoWifi.h: 24: delay(10);
 17924                           
 17925                           ; BSR set to: 0
 17926  003610  0E00               	movlw	0
 17927  003612  0100               	movlb	0	; () banked
 17928  003614  6F61               	movwf	(delay@x+1)& (0+255),b
 17929  003616  0E0A               	movlw	10
 17930  003618  6F60               	movwf	delay@x& (0+255),b
 17931  00361A  EC31  F02D         	call	_delay	;wreg free
 17932                           
 17933                           ;conexaoWifi.h: 25: switch (f_wifi_processo) {
 17934  00361E  D244               	goto	l975
 17935  003620                     
 17936                           ;conexaoWifi.h: 27: setKeyStartReceiveSerial("ALL");
 17937  003620  0EE2               	movlw	low STR_10
 17938  003622  0100               	movlb	0	; () banked
 17939  003624  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17940  003626  0E7F               	movlw	high STR_10
 17941  003628  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 17942  00362A  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 17943                           
 17944                           ;conexaoWifi.h: 28: printf("AT+CWMODE=2\r\n");
 17945  00362E  0E56               	movlw	low STR_11
 17946  003630  0100               	movlb	0	; () banked
 17947  003632  6F81               	movwf	printf@f& (0+255),b
 17948  003634  0E7E               	movlw	high STR_11
 17949  003636  6F82               	movwf	(printf@f+1)& (0+255),b
 17950  003638  EC51  F02C         	call	_printf	;wreg free
 17951                           
 17952                           ;conexaoWifi.h: 29: wifi_conectado = 0;
 17953  00363C  0E00               	movlw	0
 17954  00363E  6E49               	movwf	_wifi_conectado,c
 17955                           
 17956                           ;conexaoWifi.h: 30: f_wifi_processo++;
 17957  003640  2A3D               	incf	_f_wifi_processo,f,c
 17958                           
 17959                           ;conexaoWifi.h: 31: break;
 17960  003642  0012               	return	
 17961  003644                     
 17962                           ;conexaoWifi.h: 33: if (findBufferSerial("OK")) {
 17963  003644  0EEF               	movlw	low STR_12
 17964  003646  0100               	movlb	0	; () banked
 17965  003648  6F74               	movwf	findBufferSerial@key& (0+255),b
 17966  00364A  0E7F               	movlw	high STR_12
 17967  00364C  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 17968  00364E  EC5A  F02D         	call	_findBufferSerial	;wreg free
 17969  003652  0900               	iorlw	0
 17970  003654  B4D8               	btfsc	status,2,c
 17971  003656  0012               	return	
 17972                           
 17973                           ;conexaoWifi.h: 34: f_wifi_processo++;
 17974  003658  2A3D               	incf	_f_wifi_processo,f,c
 17975                           
 17976                           ;conexaoWifi.h: 35: }
 17977                           ;conexaoWifi.h: 36: break;
 17978  00365A  0012               	return	
 17979  00365C                     
 17980                           ;conexaoWifi.h: 38: setKeyStartReceiveSerial("ALL");
 17981  00365C  0EE2               	movlw	low STR_10
 17982  00365E  0100               	movlb	0	; () banked
 17983  003660  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 17984  003662  0E7F               	movlw	high STR_10
 17985  003664  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 17986  003666  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 17987                           
 17988                           ;conexaoWifi.h: 39: printf("AT+CIPMUX=1\r\n");
 17989  00366A  0E48               	movlw	low STR_14
 17990  00366C  0100               	movlb	0	; () banked
 17991  00366E  6F81               	movwf	printf@f& (0+255),b
 17992  003670  0E7E               	movlw	high STR_14
 17993  003672  6F82               	movwf	(printf@f+1)& (0+255),b
 17994  003674  EC51  F02C         	call	_printf	;wreg free
 17995                           
 17996                           ;conexaoWifi.h: 40: f_wifi_processo++;
 17997  003678  2A3D               	incf	_f_wifi_processo,f,c
 17998                           
 17999                           ;conexaoWifi.h: 41: break;
 18000  00367A  0012               	return	
 18001  00367C                     
 18002                           ;conexaoWifi.h: 43: if (findBufferSerial("OK")) {
 18003  00367C  0EEF               	movlw	low STR_12
 18004  00367E  0100               	movlb	0	; () banked
 18005  003680  6F74               	movwf	findBufferSerial@key& (0+255),b
 18006  003682  0E7F               	movlw	high STR_12
 18007  003684  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18008  003686  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18009  00368A  0900               	iorlw	0
 18010  00368C  B4D8               	btfsc	status,2,c
 18011  00368E  0012               	return	
 18012                           
 18013                           ;conexaoWifi.h: 44: f_wifi_processo++;
 18014  003690  2A3D               	incf	_f_wifi_processo,f,c
 18015                           
 18016                           ;conexaoWifi.h: 45: }
 18017                           ;conexaoWifi.h: 46: break;
 18018  003692  0012               	return	
 18019  003694                     
 18020                           ;conexaoWifi.h: 48: setKeyStartReceiveSerial("ALL");
 18021  003694  0EE2               	movlw	low STR_10
 18022  003696  0100               	movlb	0	; () banked
 18023  003698  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18024  00369A  0E7F               	movlw	high STR_10
 18025  00369C  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18026  00369E  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18027                           
 18028                           ;conexaoWifi.h: 49: printf("AT+CWSAP=\"CONTROLADOR\",\"\",11,0,4\r\n");
 18029  0036A2  0E83               	movlw	low STR_17
 18030  0036A4  0100               	movlb	0	; () banked
 18031  0036A6  6F81               	movwf	printf@f& (0+255),b
 18032  0036A8  0E7B               	movlw	high STR_17
 18033  0036AA  6F82               	movwf	(printf@f+1)& (0+255),b
 18034  0036AC  EC51  F02C         	call	_printf	;wreg free
 18035                           
 18036                           ;conexaoWifi.h: 50: f_wifi_processo++;
 18037  0036B0  2A3D               	incf	_f_wifi_processo,f,c
 18038                           
 18039                           ;conexaoWifi.h: 51: break;
 18040  0036B2  0012               	return	
 18041  0036B4                     
 18042                           ;conexaoWifi.h: 53: if (findBufferSerial("OK")) {
 18043  0036B4  0EEF               	movlw	low STR_12
 18044  0036B6  0100               	movlb	0	; () banked
 18045  0036B8  6F74               	movwf	findBufferSerial@key& (0+255),b
 18046  0036BA  0E7F               	movlw	high STR_12
 18047  0036BC  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18048  0036BE  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18049  0036C2  0900               	iorlw	0
 18050  0036C4  B4D8               	btfsc	status,2,c
 18051  0036C6  0012               	return	
 18052                           
 18053                           ;conexaoWifi.h: 54: f_wifi_processo++;
 18054  0036C8  2A3D               	incf	_f_wifi_processo,f,c
 18055                           
 18056                           ;conexaoWifi.h: 55: }
 18057                           ;conexaoWifi.h: 56: break;
 18058  0036CA  0012               	return	
 18059  0036CC                     
 18060                           ;conexaoWifi.h: 58: setKeyStartReceiveSerial("ALL");
 18061  0036CC  0EE2               	movlw	low STR_10
 18062  0036CE  0100               	movlb	0	; () banked
 18063  0036D0  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18064  0036D2  0E7F               	movlw	high STR_10
 18065  0036D4  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18066  0036D6  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18067                           
 18068                           ;conexaoWifi.h: 59: printf("AT+CIPAP=\"10.1.1.1\"\r\n");
 18069  0036DA  0EC2               	movlw	low STR_20
 18070  0036DC  0100               	movlb	0	; () banked
 18071  0036DE  6F81               	movwf	printf@f& (0+255),b
 18072  0036E0  0E7B               	movlw	high STR_20
 18073  0036E2  6F82               	movwf	(printf@f+1)& (0+255),b
 18074  0036E4  EC51  F02C         	call	_printf	;wreg free
 18075                           
 18076                           ;conexaoWifi.h: 60: f_wifi_processo++;
 18077  0036E8  2A3D               	incf	_f_wifi_processo,f,c
 18078                           
 18079                           ;conexaoWifi.h: 61: break;
 18080  0036EA  0012               	return	
 18081  0036EC                     
 18082                           ;conexaoWifi.h: 63: if (findBufferSerial("OK")) {
 18083  0036EC  0EEF               	movlw	low STR_12
 18084  0036EE  0100               	movlb	0	; () banked
 18085  0036F0  6F74               	movwf	findBufferSerial@key& (0+255),b
 18086  0036F2  0E7F               	movlw	high STR_12
 18087  0036F4  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18088  0036F6  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18089  0036FA  0900               	iorlw	0
 18090  0036FC  B4D8               	btfsc	status,2,c
 18091  0036FE  0012               	return	
 18092                           
 18093                           ;conexaoWifi.h: 64: f_wifi_processo++;
 18094  003700  2A3D               	incf	_f_wifi_processo,f,c
 18095                           
 18096                           ;conexaoWifi.h: 65: }
 18097                           ;conexaoWifi.h: 66: break;
 18098  003702  0012               	return	
 18099  003704                     
 18100                           ;conexaoWifi.h: 68: setKeyStartReceiveSerial("ALL");
 18101  003704  0EE2               	movlw	low STR_10
 18102  003706  0100               	movlb	0	; () banked
 18103  003708  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18104  00370A  0E7F               	movlw	high STR_10
 18105  00370C  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18106  00370E  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18107                           
 18108                           ;conexaoWifi.h: 69: printf("AT+CIPSERVER=1,80\r\n");
 18109  003712  0E42               	movlw	low STR_23
 18110  003714  0100               	movlb	0	; () banked
 18111  003716  6F81               	movwf	printf@f& (0+255),b
 18112  003718  0E7C               	movlw	high STR_23
 18113  00371A  6F82               	movwf	(printf@f+1)& (0+255),b
 18114  00371C  EC51  F02C         	call	_printf	;wreg free
 18115                           
 18116                           ;conexaoWifi.h: 70: f_wifi_processo++;
 18117  003720  2A3D               	incf	_f_wifi_processo,f,c
 18118                           
 18119                           ;conexaoWifi.h: 71: break;
 18120  003722  0012               	return	
 18121  003724                     
 18122                           ;conexaoWifi.h: 73: if (findBufferSerial("OK")) {
 18123  003724  0EEF               	movlw	low STR_12
 18124  003726  0100               	movlb	0	; () banked
 18125  003728  6F74               	movwf	findBufferSerial@key& (0+255),b
 18126  00372A  0E7F               	movlw	high STR_12
 18127  00372C  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18128  00372E  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18129  003732  0900               	iorlw	0
 18130  003734  B4D8               	btfsc	status,2,c
 18131  003736  0012               	return	
 18132                           
 18133                           ;conexaoWifi.h: 74: setKeyStartReceiveSerial("Accept");
 18134  003738  0EAD               	movlw	low STR_25
 18135  00373A  0100               	movlb	0	; () banked
 18136  00373C  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18137  00373E  0E7F               	movlw	high STR_25
 18138  003740  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18139  003742  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18140                           
 18141                           ;conexaoWifi.h: 75: f_wifi_processo++;
 18142  003746  2A3D               	incf	_f_wifi_processo,f,c
 18143                           
 18144                           ;conexaoWifi.h: 76: t_wifi_restart = 180;
 18145  003748  0EB4               	movlw	180
 18146  00374A  6E3E               	movwf	_t_wifi_restart,c
 18147                           
 18148                           ;conexaoWifi.h: 77: }
 18149                           ;conexaoWifi.h: 78: break;
 18150  00374C  0012               	return	
 18151  00374E                     
 18152                           ;conexaoWifi.h: 80: sprintf(line1, "Conecte-se a rede e");
 18153  00374E  0E91               	movlw	low _line1
 18154  003750  0100               	movlb	0	; () banked
 18155  003752  6F81               	movwf	sprintf@wh& (0+255),b
 18156  003754  0E01               	movlw	high _line1
 18157  003756  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18158  003758  0ECE               	movlw	low STR_26
 18159  00375A  6F83               	movwf	sprintf@f& (0+255),b
 18160  00375C  0E7C               	movlw	high STR_26
 18161  00375E  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18162  003760  ECCD  F02B         	call	_sprintf	;wreg free
 18163                           
 18164                           ;conexaoWifi.h: 81: sprintf(line2, "acesse o IP para");
 18165  003764  0E7C               	movlw	low _line2
 18166  003766  0100               	movlb	0	; () banked
 18167  003768  6F81               	movwf	sprintf@wh& (0+255),b
 18168  00376A  0E01               	movlw	high _line2
 18169  00376C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18170  00376E  0E9A               	movlw	low STR_27
 18171  003770  6F83               	movwf	sprintf@f& (0+255),b
 18172  003772  0E7D               	movlw	high STR_27
 18173  003774  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18174  003776  ECCD  F02B         	call	_sprintf	;wreg free
 18175                           
 18176                           ;conexaoWifi.h: 82: sprintf(line3, "configurar o WIFI...");
 18177  00377A  0E67               	movlw	low _line3
 18178  00377C  0100               	movlb	0	; () banked
 18179  00377E  6F81               	movwf	sprintf@wh& (0+255),b
 18180  003780  0E01               	movlw	high _line3
 18181  003782  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18182  003784  0E18               	movlw	low STR_28
 18183  003786  6F83               	movwf	sprintf@f& (0+255),b
 18184  003788  0E7C               	movlw	high STR_28
 18185  00378A  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18186  00378C  ECCD  F02B         	call	_sprintf	;wreg free
 18187                           
 18188                           ;conexaoWifi.h: 83: sprintf(line4, "10.1.1.1");
 18189  003790  0E52               	movlw	low _line4
 18190  003792  0100               	movlb	0	; () banked
 18191  003794  6F81               	movwf	sprintf@wh& (0+255),b
 18192  003796  0E01               	movlw	high _line4
 18193  003798  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18194  00379A  0E39               	movlw	low STR_29
 18195  00379C  6F83               	movwf	sprintf@f& (0+255),b
 18196  00379E  0E7F               	movlw	high STR_29
 18197  0037A0  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18198  0037A2  ECCD  F02B         	call	_sprintf	;wreg free
 18199                           
 18200                           ;conexaoWifi.h: 84: if (findBufferSerial("Accept")) {
 18201  0037A6  0EAD               	movlw	low STR_25
 18202  0037A8  0100               	movlb	0	; () banked
 18203  0037AA  6F74               	movwf	findBufferSerial@key& (0+255),b
 18204  0037AC  0E7F               	movlw	high STR_25
 18205  0037AE  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18206  0037B0  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18207  0037B4  0900               	iorlw	0
 18208  0037B6  B4D8               	btfsc	status,2,c
 18209  0037B8  0012               	return	
 18210                           
 18211                           ;conexaoWifi.h: 85: delay(400);
 18212  0037BA  0E01               	movlw	1
 18213  0037BC  0100               	movlb	0	; () banked
 18214  0037BE  6F61               	movwf	(delay@x+1)& (0+255),b
 18215  0037C0  0E90               	movlw	144
 18216  0037C2  6F60               	movwf	delay@x& (0+255),b
 18217  0037C4  EC31  F02D         	call	_delay	;wreg free
 18218                           
 18219                           ;conexaoWifi.h: 86: f_wifi_processo++;
 18220  0037C8  2A3D               	incf	_f_wifi_processo,f,c
 18221                           
 18222                           ;conexaoWifi.h: 87: }
 18223                           ;conexaoWifi.h: 88: break;
 18224  0037CA  0012               	return	
 18225  0037CC                     
 18226                           ;conexaoWifi.h: 90: setKeyStartReceiveSerial("ALL");
 18227  0037CC  0EE2               	movlw	low STR_10
 18228  0037CE  0100               	movlb	0	; () banked
 18229  0037D0  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18230  0037D2  0E7F               	movlw	high STR_10
 18231  0037D4  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18232  0037D6  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18233                           
 18234                           ;conexaoWifi.h: 91: printf("AT+CIPSENDEX=0,800\r\n");
 18235  0037DA  0E03               	movlw	low STR_32
 18236  0037DC  0100               	movlb	0	; () banked
 18237  0037DE  6F81               	movwf	printf@f& (0+255),b
 18238  0037E0  0E7C               	movlw	high STR_32
 18239  0037E2  6F82               	movwf	(printf@f+1)& (0+255),b
 18240  0037E4  EC51  F02C         	call	_printf	;wreg free
 18241                           
 18242                           ;conexaoWifi.h: 92: f_wifi_processo++;
 18243  0037E8  2A3D               	incf	_f_wifi_processo,f,c
 18244                           
 18245                           ;conexaoWifi.h: 93: break;
 18246  0037EA  0012               	return	
 18247  0037EC                     
 18248                           ;conexaoWifi.h: 95: if (strstr(bufferSerial, ">") != (0)) {
 18249  0037EC  0E69               	movlw	low _bufferSerial
 18250  0037EE  0100               	movlb	0	; () banked
 18251  0037F0  6F6F               	movwf	strstr@s1& (0+255),b
 18252  0037F2  0E02               	movlw	high _bufferSerial
 18253  0037F4  6F70               	movwf	(strstr@s1+1)& (0+255),b
 18254  0037F6  0E7C               	movlw	low (STR_119+18)
 18255  0037F8  6F71               	movwf	strstr@s2& (0+255),b
 18256  0037FA  0E7C               	movlw	high (STR_119+18)
 18257  0037FC  6F72               	movwf	(strstr@s2+1)& (0+255),b
 18258  0037FE  EC73  F026         	call	_strstr	;wreg free
 18259  003802  0100               	movlb	0	; () banked
 18260  003804  516F               	movf	?_strstr& (0+255),w,b
 18261  003806  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 18262  003808  B4D8               	btfsc	status,2,c
 18263  00380A  0012               	return	
 18264                           
 18265                           ; BSR set to: 0
 18266                           ;conexaoWifi.h: 96: f_wifi_processo++;
 18267  00380C  2A3D               	incf	_f_wifi_processo,f,c
 18268                           
 18269                           ; BSR set to: 0
 18270                           ;conexaoWifi.h: 97: }
 18271                           ;conexaoWifi.h: 98: break;
 18272  00380E  0012               	return	
 18273  003810                     
 18274                           ;conexaoWifi.h: 100: setKeyStartReceiveSerial("ALL");
 18275                           
 18276                           ; BSR set to: 0
 18277  003810  0EE2               	movlw	low STR_10
 18278  003812  0100               	movlb	0	; () banked
 18279  003814  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18280  003816  0E7F               	movlw	high STR_10
 18281  003818  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18282  00381A  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18283                           
 18284                           ;conexaoWifi.h: 101: printf("HTTP 1.1/200 OK\r\nContent-type: text/html\r\n\r\n");
 18285  00381E  0E56               	movlw	low STR_35
 18286  003820  0100               	movlb	0	; () banked
 18287  003822  6F81               	movwf	printf@f& (0+255),b
 18288  003824  0E7B               	movlw	high STR_35
 18289  003826  6F82               	movwf	(printf@f+1)& (0+255),b
 18290  003828  EC51  F02C         	call	_printf	;wreg free
 18291                           
 18292                           ;conexaoWifi.h: 102: delay(100);
 18293  00382C  0E00               	movlw	0
 18294  00382E  0100               	movlb	0	; () banked
 18295  003830  6F61               	movwf	(delay@x+1)& (0+255),b
 18296  003832  0E64               	movlw	100
 18297  003834  6F60               	movwf	delay@x& (0+255),b
 18298  003836  EC31  F02D         	call	_delay	;wreg free
 18299                           
 18300                           ;conexaoWifi.h: 103: printf("<html><style>div{margin:25px auto;max-width:350px;display:f
      +                          lex;flex-direction:column;}input,button{padding:7px;margin-bottom:25px;border:1px solid 
      +                          #888;border-radius:3px;}</style><body><div> <h2>Configuração Wifi</h2> SSID: <input id='
      +                          s'> Sen
 18301  00383A  0E6F               	movlw	low STR_36
 18302  00383C  0100               	movlb	0	; () banked
 18303  00383E  6F81               	movwf	printf@f& (0+255),b
 18304  003840  0E78               	movlw	high STR_36
 18305  003842  6F82               	movwf	(printf@f+1)& (0+255),b
 18306  003844  0EA6               	movlw	low _ipServer
 18307  003846  6F83               	movwf	(?_printf+2)& (0+255),b
 18308  003848  0E01               	movlw	high _ipServer
 18309  00384A  6F84               	movwf	(?_printf+3)& (0+255),b
 18310  00384C  0EE2               	movlw	low _portServer
 18311  00384E  6F85               	movwf	(?_printf+4)& (0+255),b
 18312  003850  0E01               	movlw	high _portServer
 18313  003852  6F86               	movwf	(?_printf+5)& (0+255),b
 18314  003854  EC51  F02C         	call	_printf	;wreg free
 18315                           
 18316                           ;conexaoWifi.h: 104: delay(800);
 18317  003858  0E03               	movlw	3
 18318  00385A  0100               	movlb	0	; () banked
 18319  00385C  6F61               	movwf	(delay@x+1)& (0+255),b
 18320  00385E  0E20               	movlw	32
 18321  003860  6F60               	movwf	delay@x& (0+255),b
 18322  003862  EC31  F02D         	call	_delay	;wreg free
 18323                           
 18324                           ;conexaoWifi.h: 105: printf("AT+CIPCLOSE=0\r\n");
 18325  003866  0EEF               	movlw	low STR_37
 18326  003868  0100               	movlb	0	; () banked
 18327  00386A  6F81               	movwf	printf@f& (0+255),b
 18328  00386C  0E7D               	movlw	high STR_37
 18329  00386E  6F82               	movwf	(printf@f+1)& (0+255),b
 18330  003870  EC51  F02C         	call	_printf	;wreg free
 18331                           
 18332                           ;conexaoWifi.h: 106: delay(300);
 18333  003874  0E01               	movlw	1
 18334  003876  0100               	movlb	0	; () banked
 18335  003878  6F61               	movwf	(delay@x+1)& (0+255),b
 18336  00387A  0E2C               	movlw	44
 18337  00387C  6F60               	movwf	delay@x& (0+255),b
 18338  00387E  EC31  F02D         	call	_delay	;wreg free
 18339                           
 18340                           ;conexaoWifi.h: 107: t_wifi_restart = 180;
 18341  003882  0EB4               	movlw	180
 18342  003884  6E3E               	movwf	_t_wifi_restart,c
 18343                           
 18344                           ;conexaoWifi.h: 108: setKeyStartReceiveSerial("$#");
 18345  003886  0EE6               	movlw	low STR_38
 18346  003888  0100               	movlb	0	; () banked
 18347  00388A  6F91               	movwf	setKeyStartReceiveSerial@start& (0+255),b
 18348  00388C  0E7F               	movlw	high STR_38
 18349  00388E  6F92               	movwf	(setKeyStartReceiveSerial@start+1)& (0+255),b
 18350  003890  EC94  F02A         	call	_setKeyStartReceiveSerial	;wreg free
 18351                           
 18352                           ;conexaoWifi.h: 109: f_wifi_processo++;
 18353  003894  2A3D               	incf	_f_wifi_processo,f,c
 18354                           
 18355                           ;conexaoWifi.h: 110: break;
 18356  003896  0012               	return	
 18357  003898                     
 18358                           ;conexaoWifi.h: 112: sprintf(line4, "Aguardando...");
 18359  003898  0E52               	movlw	low _line4
 18360  00389A  0100               	movlb	0	; () banked
 18361  00389C  6F81               	movwf	sprintf@wh& (0+255),b
 18362  00389E  0E01               	movlw	high _line4
 18363  0038A0  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18364  0038A2  0E72               	movlw	low STR_39
 18365  0038A4  6F83               	movwf	sprintf@f& (0+255),b
 18366  0038A6  0E7E               	movlw	high STR_39
 18367  0038A8  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18368  0038AA  ECCD  F02B         	call	_sprintf	;wreg free
 18369                           
 18370                           ;conexaoWifi.h: 113: if (findBufferSerial("#$")) {
 18371  0038AE  0EE9               	movlw	low STR_40
 18372  0038B0  0100               	movlb	0	; () banked
 18373  0038B2  6F74               	movwf	findBufferSerial@key& (0+255),b
 18374  0038B4  0E7F               	movlw	high STR_40
 18375  0038B6  6F75               	movwf	(findBufferSerial@key+1)& (0+255),b
 18376  0038B8  EC5A  F02D         	call	_findBufferSerial	;wreg free
 18377  0038BC  0900               	iorlw	0
 18378  0038BE  B4D8               	btfsc	status,2,c
 18379  0038C0  0012               	return	
 18380                           
 18381                           ;conexaoWifi.h: 114: getStringJSON(bufferSerial, "ss", ssid);
 18382  0038C2  0E69               	movlw	low _bufferSerial
 18383  0038C4  0100               	movlb	0	; () banked
 18384  0038C6  6F91               	movwf	getStringJSON@buff& (0+255),b
 18385  0038C8  0E02               	movlw	high _bufferSerial
 18386  0038CA  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18387  0038CC  0EF5               	movlw	low STR_41
 18388  0038CE  6F93               	movwf	getStringJSON@key& (0+255),b
 18389  0038D0  0E7F               	movlw	high STR_41
 18390  0038D2  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18391  0038D4  0EC9               	movlw	low _ssid
 18392  0038D6  6F95               	movwf	getStringJSON@ret& (0+255),b
 18393  0038D8  0E01               	movlw	high _ssid
 18394  0038DA  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18395  0038DC  ECF7  F020         	call	_getStringJSON	;wreg free
 18396                           
 18397                           ;conexaoWifi.h: 115: getStringJSON(bufferSerial, "pw", senha);
 18398  0038E0  0E69               	movlw	low _bufferSerial
 18399  0038E2  0100               	movlb	0	; () banked
 18400  0038E4  6F91               	movwf	getStringJSON@buff& (0+255),b
 18401  0038E6  0E02               	movlw	high _bufferSerial
 18402  0038E8  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18403  0038EA  0EF8               	movlw	low STR_42
 18404  0038EC  6F93               	movwf	getStringJSON@key& (0+255),b
 18405  0038EE  0E7F               	movlw	high STR_42
 18406  0038F0  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18407  0038F2  0EBA               	movlw	low _senha
 18408  0038F4  6F95               	movwf	getStringJSON@ret& (0+255),b
 18409  0038F6  0E01               	movlw	high _senha
 18410  0038F8  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18411  0038FA  ECF7  F020         	call	_getStringJSON	;wreg free
 18412                           
 18413                           ;conexaoWifi.h: 116: getStringJSON(bufferSerial, "ip", ipServer);
 18414  0038FE  0E69               	movlw	low _bufferSerial
 18415  003900  0100               	movlb	0	; () banked
 18416  003902  6F91               	movwf	getStringJSON@buff& (0+255),b
 18417  003904  0E02               	movlw	high _bufferSerial
 18418  003906  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18419  003908  0EF2               	movlw	low STR_43
 18420  00390A  6F93               	movwf	getStringJSON@key& (0+255),b
 18421  00390C  0E7F               	movlw	high STR_43
 18422  00390E  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18423  003910  0EA6               	movlw	low _ipServer
 18424  003912  6F95               	movwf	getStringJSON@ret& (0+255),b
 18425  003914  0E01               	movlw	high _ipServer
 18426  003916  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18427  003918  ECF7  F020         	call	_getStringJSON	;wreg free
 18428                           
 18429                           ;conexaoWifi.h: 117: getStringJSON(bufferSerial, "pt", portServer);
 18430  00391C  0E69               	movlw	low _bufferSerial
 18431  00391E  0100               	movlb	0	; () banked
 18432  003920  6F91               	movwf	getStringJSON@buff& (0+255),b
 18433  003922  0E02               	movlw	high _bufferSerial
 18434  003924  6F92               	movwf	(getStringJSON@buff+1)& (0+255),b
 18435  003926  0EB1               	movlw	low (STR_25+4)
 18436  003928  6F93               	movwf	getStringJSON@key& (0+255),b
 18437  00392A  0E7F               	movlw	high (STR_25+4)
 18438  00392C  6F94               	movwf	(getStringJSON@key+1)& (0+255),b
 18439  00392E  0EE2               	movlw	low _portServer
 18440  003930  6F95               	movwf	getStringJSON@ret& (0+255),b
 18441  003932  0E01               	movlw	high _portServer
 18442  003934  6F96               	movwf	(getStringJSON@ret+1)& (0+255),b
 18443  003936  ECF7  F020         	call	_getStringJSON	;wreg free
 18444                           
 18445                           ;conexaoWifi.h: 119: sprintf(line1, "%s", ssid);
 18446  00393A  0E91               	movlw	low _line1
 18447  00393C  0100               	movlb	0	; () banked
 18448  00393E  6F81               	movwf	sprintf@wh& (0+255),b
 18449  003940  0E01               	movlw	high _line1
 18450  003942  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18451  003944  0E0F               	movlw	low (STR_94+7)
 18452  003946  6F83               	movwf	sprintf@f& (0+255),b
 18453  003948  0E7F               	movlw	high (STR_94+7)
 18454  00394A  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18455  00394C  0EC9               	movlw	low _ssid
 18456  00394E  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18457  003950  0E01               	movlw	high _ssid
 18458  003952  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18459  003954  ECCD  F02B         	call	_sprintf	;wreg free
 18460                           
 18461                           ;conexaoWifi.h: 120: sprintf(line2, "%s", senha);
 18462  003958  0E7C               	movlw	low _line2
 18463  00395A  0100               	movlb	0	; () banked
 18464  00395C  6F81               	movwf	sprintf@wh& (0+255),b
 18465  00395E  0E01               	movlw	high _line2
 18466  003960  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18467  003962  0E0F               	movlw	low (STR_94+7)
 18468  003964  6F83               	movwf	sprintf@f& (0+255),b
 18469  003966  0E7F               	movlw	high (STR_94+7)
 18470  003968  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18471  00396A  0EBA               	movlw	low _senha
 18472  00396C  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18473  00396E  0E01               	movlw	high _senha
 18474  003970  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18475  003972  ECCD  F02B         	call	_sprintf	;wreg free
 18476                           
 18477                           ;conexaoWifi.h: 121: sprintf(line3, "%s:%s", ipServer, portServer);
 18478  003976  0E67               	movlw	low _line3
 18479  003978  0100               	movlb	0	; () banked
 18480  00397A  6F81               	movwf	sprintf@wh& (0+255),b
 18481  00397C  0E01               	movlw	high _line3
 18482  00397E  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18483  003980  0EC0               	movlw	low STR_47
 18484  003982  6F83               	movwf	sprintf@f& (0+255),b
 18485  003984  0E7F               	movlw	high STR_47
 18486  003986  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18487  003988  0EA6               	movlw	low _ipServer
 18488  00398A  6F85               	movwf	(?_sprintf+4)& (0+255),b
 18489  00398C  0E01               	movlw	high _ipServer
 18490  00398E  6F86               	movwf	(?_sprintf+5)& (0+255),b
 18491  003990  0EE2               	movlw	low _portServer
 18492  003992  6F87               	movwf	(?_sprintf+6)& (0+255),b
 18493  003994  0E01               	movlw	high _portServer
 18494  003996  6F88               	movwf	(?_sprintf+7)& (0+255),b
 18495  003998  ECCD  F02B         	call	_sprintf	;wreg free
 18496                           
 18497                           ;conexaoWifi.h: 122: sprintf(line4, "OK reiniciando...");
 18498  00399C  0E52               	movlw	low _line4
 18499  00399E  0100               	movlb	0	; () banked
 18500  0039A0  6F81               	movwf	sprintf@wh& (0+255),b
 18501  0039A2  0E01               	movlw	high _line4
 18502  0039A4  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 18503  0039A6  0E2E               	movlw	low STR_48
 18504  0039A8  6F83               	movwf	sprintf@f& (0+255),b
 18505  0039AA  0E7D               	movlw	high STR_48
 18506  0039AC  6F84               	movwf	(sprintf@f+1)& (0+255),b
 18507  0039AE  ECCD  F02B         	call	_sprintf	;wreg free
 18508                           
 18509                           ;conexaoWifi.h: 123: atualizaLCD(line1, line2, line3, line4);
 18510  0039B2  0E91               	movlw	low _line1
 18511  0039B4  0100               	movlb	0	; () banked
 18512  0039B6  6F68               	movwf	atualizaLCD@line1& (0+255),b
 18513  0039B8  0E01               	movlw	high _line1
 18514  0039BA  6F69               	movwf	(atualizaLCD@line1+1)& (0+255),b
 18515  0039BC  0E7C               	movlw	low _line2
 18516  0039BE  6F6A               	movwf	atualizaLCD@line2& (0+255),b
 18517  0039C0  0E01               	movlw	high _line2
 18518  0039C2  6F6B               	movwf	(atualizaLCD@line2+1)& (0+255),b
 18519  0039C4  0E67               	movlw	low _line3
 18520  0039C6  6F6C               	movwf	atualizaLCD@line3& (0+255),b
 18521  0039C8  0E01               	movlw	high _line3
 18522  0039CA  6F6D               	movwf	(atualizaLCD@line3+1)& (0+255),b
 18523  0039CC  0E52               	movlw	low _line4
 18524  0039CE  6F6E               	movwf	atualizaLCD@line4& (0+255),b
 18525  0039D0  0E01               	movlw	high _line4
 18526  0039D2  6F6F               	movwf	(atualizaLCD@line4+1)& (0+255),b
 18527  0039D4  ECB0  F025         	call	_atualizaLCD	;wreg free
 18528                           
 18529                           ;conexaoWifi.h: 125: if (strlen(ssid) > 3) {
 18530  0039D8  0EC9               	movlw	low _ssid
 18531  0039DA  0100               	movlb	0	; () banked
 18532  0039DC  6F60               	movwf	strlen@s& (0+255),b
 18533  0039DE  0E01               	movlw	high _ssid
 18534  0039E0  6F61               	movwf	(strlen@s+1)& (0+255),b
 18535  0039E2  EC02  F02B         	call	_strlen	;wreg free
 18536  0039E6  0100               	movlb	0	; () banked
 18537  0039E8  5161               	movf	(?_strlen+1)& (0+255),w,b
 18538  0039EA  E104               	bnz	u12830
 18539  0039EC  0E04               	movlw	4
 18540  0039EE  5D60               	subwf	?_strlen& (0+255),w,b
 18541  0039F0  A0D8               	btfss	status,0,c
 18542  0039F2  D056               	goto	u12890
 18543  0039F4                     u12830:
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;conexaoWifi.h: 126: unsigned char i = 0;
 18547  0039F4  0E00               	movlw	0
 18548  0039F6  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18549                           
 18550                           ;conexaoWifi.h: 127: for (i = 0; i < 15; i++) {
 18551  0039F8  0E00               	movlw	0
 18552  0039FA  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18553  0039FC                     l8636:
 18554                           
 18555                           ; BSR set to: 0
 18556  0039FC  0E0E               	movlw	14
 18557  0039FE  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18558  003A00  D001               	goto	l1001
 18559  003A02  D020               	goto	u12850
 18560  003A04                     l1001:
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;conexaoWifi.h: 128: writeEEPROM_ext((40 + i), ssid[i]);
 18564                           
 18565                           ; BSR set to: 0
 18566  003A04  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18567  003A06  0D01               	mullw	1
 18568  003A08  0EC9               	movlw	low _ssid
 18569  003A0A  24F3               	addwf	prodl,w,c
 18570  003A0C  6ED9               	movwf	fsr2l,c
 18571  003A0E  0E01               	movlw	high _ssid
 18572  003A10  20F4               	addwfc	prodh,w,c
 18573  003A12  6EDA               	movwf	fsr2h,c
 18574  003A14  50DF               	movf	indf2,w,c
 18575  003A16  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18576  003A18  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18577  003A1A  0F28               	addlw	40
 18578  003A1C  EC11  F02C         	call	_writeEEPROM_ext
 18579                           
 18580                           ;conexaoWifi.h: 129: writeEEPROM_ext((60 + i), senha[i]);
 18581  003A20  0100               	movlb	0	; () banked
 18582  003A22  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18583  003A24  0D01               	mullw	1
 18584  003A26  0EBA               	movlw	low _senha
 18585  003A28  24F3               	addwf	prodl,w,c
 18586  003A2A  6ED9               	movwf	fsr2l,c
 18587  003A2C  0E01               	movlw	high _senha
 18588  003A2E  20F4               	addwfc	prodh,w,c
 18589  003A30  6EDA               	movwf	fsr2h,c
 18590  003A32  50DF               	movf	indf2,w,c
 18591  003A34  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18592  003A36  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18593  003A38  0F3C               	addlw	60
 18594  003A3A  EC11  F02C         	call	_writeEEPROM_ext
 18595  003A3E  0100               	movlb	0	; () banked
 18596  003A40  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18597  003A42  D7DC               	goto	l8636
 18598  003A44                     u12850:
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;conexaoWifi.h: 130: }
 18602                           ;conexaoWifi.h: 131: for (i = 0; i < 20; i++) {
 18603                           
 18604                           ; BSR set to: 0
 18605  003A44  0E00               	movlw	0
 18606  003A46  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18607  003A48                     l8648:
 18608                           
 18609                           ; BSR set to: 0
 18610  003A48  0E13               	movlw	19
 18611  003A4A  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18612  003A4C  D001               	goto	l1003
 18613  003A4E  D011               	goto	u12870
 18614  003A50                     l1003:
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;conexaoWifi.h: 132: writeEEPROM_ext((80 + i), ipServer[i]);
 18618                           
 18619                           ; BSR set to: 0
 18620  003A50  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18621  003A52  0D01               	mullw	1
 18622  003A54  0EA6               	movlw	low _ipServer
 18623  003A56  24F3               	addwf	prodl,w,c
 18624  003A58  6ED9               	movwf	fsr2l,c
 18625  003A5A  0E01               	movlw	high _ipServer
 18626  003A5C  20F4               	addwfc	prodh,w,c
 18627  003A5E  6EDA               	movwf	fsr2h,c
 18628  003A60  50DF               	movf	indf2,w,c
 18629  003A62  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18630  003A64  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18631  003A66  0F50               	addlw	80
 18632  003A68  EC11  F02C         	call	_writeEEPROM_ext
 18633  003A6C  0100               	movlb	0	; () banked
 18634  003A6E  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18635  003A70  D7EB               	goto	l8648
 18636  003A72                     u12870:
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;conexaoWifi.h: 133: }
 18640                           ;conexaoWifi.h: 134: for (i = 0; i < 5; i++) {
 18641                           
 18642                           ; BSR set to: 0
 18643  003A72  0E00               	movlw	0
 18644  003A74  6FE0               	movwf	alterarDadosConexaoConfigWifi@i& (0+255),b
 18645  003A76                     l8660:
 18646                           
 18647                           ; BSR set to: 0
 18648  003A76  0E04               	movlw	4
 18649  003A78  65E0               	cpfsgt	alterarDadosConexaoConfigWifi@i& (0+255),b
 18650  003A7A  D001               	goto	l1005
 18651  003A7C  D011               	goto	u12890
 18652  003A7E                     l1005:
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;conexaoWifi.h: 135: writeEEPROM_ext((105 + i), portServer[i]);
 18656                           
 18657                           ; BSR set to: 0
 18658  003A7E  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18659  003A80  0D01               	mullw	1
 18660  003A82  0EE2               	movlw	low _portServer
 18661  003A84  24F3               	addwf	prodl,w,c
 18662  003A86  6ED9               	movwf	fsr2l,c
 18663  003A88  0E01               	movlw	high _portServer
 18664  003A8A  20F4               	addwfc	prodh,w,c
 18665  003A8C  6EDA               	movwf	fsr2h,c
 18666  003A8E  50DF               	movf	indf2,w,c
 18667  003A90  6F63               	movwf	writeEEPROM_ext@data& (0+255),b
 18668  003A92  51E0               	movf	alterarDadosConexaoConfigWifi@i& (0+255),w,b
 18669  003A94  0F69               	addlw	105
 18670  003A96  EC11  F02C         	call	_writeEEPROM_ext
 18671  003A9A  0100               	movlb	0	; () banked
 18672  003A9C  2BE0               	incf	alterarDadosConexaoConfigWifi@i& (0+255),f,b
 18673  003A9E  D7EB               	goto	l8660
 18674  003AA0                     u12890:
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;conexaoWifi.h: 136: }
 18678                           ;conexaoWifi.h: 137: }
 18679                           ;conexaoWifi.h: 138: while (1) {
 18680                           
 18681                           ; BSR set to: 0
 18682  003AA0  D7FF               	goto	u12890
 18683  003AA2  0E00               	movlw	0
 18684  003AA4  6E3D               	movwf	_f_wifi_processo,c
 18685                           
 18686                           ;conexaoWifi.h: 143: }
 18687  003AA6  0012               	return	
 18688  003AA8                     l975:
 18689  003AA8  503D               	movf	_f_wifi_processo,w,c
 18690                           
 18691                           ; Switch size 1, requested type "space"
 18692                           ; Number of cases is 15, Range of values is 0 to 14
 18693                           ; switch strategies available:
 18694                           ; Name         Instructions Cycles
 18695                           ; simple_byte           46    24 (average)
 18696                           ;	Chosen strategy is simple_byte
 18697  003AAA  0A00               	xorlw	0	; case 0
 18698  003AAC  B4D8               	btfsc	status,2,c
 18699  003AAE  D5B8               	goto	l976
 18700  003AB0  0A01               	xorlw	1	; case 1
 18701  003AB2  B4D8               	btfsc	status,2,c
 18702  003AB4  D5C7               	goto	l978
 18703  003AB6  0A03               	xorlw	3	; case 2
 18704  003AB8  B4D8               	btfsc	status,2,c
 18705  003ABA  D5D0               	goto	l980
 18706  003ABC  0A01               	xorlw	1	; case 3
 18707  003ABE  B4D8               	btfsc	status,2,c
 18708  003AC0  D5DD               	goto	l981
 18709  003AC2  0A07               	xorlw	7	; case 4
 18710  003AC4  B4D8               	btfsc	status,2,c
 18711  003AC6  D5E6               	goto	l983
 18712  003AC8  0A01               	xorlw	1	; case 5
 18713  003ACA  B4D8               	btfsc	status,2,c
 18714  003ACC  D5F3               	goto	l984
 18715  003ACE  0A03               	xorlw	3	; case 6
 18716  003AD0  B4D8               	btfsc	status,2,c
 18717  003AD2  D5FC               	goto	l986
 18718  003AD4  0A01               	xorlw	1	; case 7
 18719  003AD6  B4D8               	btfsc	status,2,c
 18720  003AD8  D609               	goto	l987
 18721  003ADA  0A0F               	xorlw	15	; case 8
 18722  003ADC  B4D8               	btfsc	status,2,c
 18723  003ADE  D612               	goto	l989
 18724  003AE0  0A01               	xorlw	1	; case 9
 18725  003AE2  B4D8               	btfsc	status,2,c
 18726  003AE4  D61F               	goto	l990
 18727  003AE6  0A03               	xorlw	3	; case 10
 18728  003AE8  B4D8               	btfsc	status,2,c
 18729  003AEA  D631               	goto	l992
 18730  003AEC  0A01               	xorlw	1	; case 11
 18731  003AEE  B4D8               	btfsc	status,2,c
 18732  003AF0  D66D               	goto	l994
 18733  003AF2  0A07               	xorlw	7	; case 12
 18734  003AF4  B4D8               	btfsc	status,2,c
 18735  003AF6  D67A               	goto	l995
 18736  003AF8  0A01               	xorlw	1	; case 13
 18737  003AFA  B4D8               	btfsc	status,2,c
 18738  003AFC  D689               	goto	l997
 18739  003AFE  0A03               	xorlw	3	; case 14
 18740  003B00  B4D8               	btfsc	status,2,c
 18741  003B02  D6CA               	goto	l998
 18742  003B04  D7CE               	goto	l1010
 18743  003B06                     __end_of_alterarDadosConexaoConfigWifi:
 18744                           	opt stack 0
 18745                           tblptru	equ	0xFF8
 18746                           tblptrh	equ	0xFF7
 18747                           tblptrl	equ	0xFF6
 18748                           tablat	equ	0xFF5
 18749                           prodh	equ	0xFF4
 18750                           prodl	equ	0xFF3
 18751                           intcon	equ	0xFF2
 18752                           intcon2	equ	0xFF1
 18753                           intcon3	equ	0xFF0
 18754                           postinc0	equ	0xFEE
 18755                           wreg	equ	0xFE8
 18756                           indf1	equ	0xFE7
 18757                           postdec1	equ	0xFE5
 18758                           fsr1h	equ	0xFE2
 18759                           fsr1l	equ	0xFE1
 18760                           indf2	equ	0xFDF
 18761                           postinc2	equ	0xFDE
 18762                           postdec2	equ	0xFDD
 18763                           fsr2h	equ	0xFDA
 18764                           fsr2l	equ	0xFD9
 18765                           status	equ	0xFD8
 18766                           
 18767 ;; *************** function _writeEEPROM_ext *****************
 18768 ;; Defined at:
 18769 ;;		line 14 in file "src/Eeprom_ext.h"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;  adress          1    wreg     unsigned char 
 18772 ;;  data            1    3[BANK0 ] unsigned char 
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;  adress          1    4[BANK0 ] unsigned char 
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      void 
 18777 ;; Registers used:
 18778 ;;		wreg, status,2, status,0, cstack
 18779 ;; Tracked objects:
 18780 ;;		On entry : 0/0
 18781 ;;		On exit  : 0/0
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18784 ;;      Params:         0       1       0       0       0       0       0       0       0
 18785 ;;      Locals:         0       1       0       0       0       0       0       0       0
 18786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18787 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18788 ;;Total ram usage:        2 bytes
 18789 ;; Hardware stack levels used:    1
 18790 ;; Hardware stack levels required when called:    8
 18791 ;; This function calls:
 18792 ;;		_I2C_Start
 18793 ;;		_I2C_Stop
 18794 ;;		_I2C_Write
 18795 ;;		_delay
 18796 ;; This function is called by:
 18797 ;;		_setUmidade
 18798 ;;		_setRangeValor
 18799 ;;		_alterarDadosConexaoConfigWifi
 18800 ;;		_main
 18801 ;;		_writeEEPROM16_ext
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805                           	psect	text27
 18806  005822                     __ptext27:
 18807                           	opt stack 0
 18808  005822                     _writeEEPROM_ext:
 18809                           	opt stack 22
 18810                           
 18811                           ;incstack = 0
 18812                           ;writeEEPROM_ext@adress stored from wreg
 18813  005822  0100               	movlb	0	; () banked
 18814  005824  6F64               	movwf	writeEEPROM_ext@adress& (0+255),b
 18815                           
 18816                           ;Eeprom_ext.h: 16: I2C_Start();
 18817  005826  EC2F  F02E         	call	_I2C_Start	;wreg free
 18818                           
 18819                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 18820  00582A  0E00               	movlw	0
 18821  00582C  0100               	movlb	0	; () banked
 18822  00582E  6F62               	movwf	(I2C_Write@d+1)& (0+255),b
 18823  005830  0EA0               	movlw	160
 18824  005832  6F61               	movwf	I2C_Write@d& (0+255),b
 18825  005834  EC1D  F02E         	call	_I2C_Write	;wreg free
 18826                           
 18827                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 18828  005838  C064  F061         	movff	writeEEPROM_ext@adress,I2C_Write@d
 18829  00583C  0100               	movlb	0	; () banked
 18830  00583E  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18831  005840  EC1D  F02E         	call	_I2C_Write	;wreg free
 18832                           
 18833                           ;Eeprom_ext.h: 20: I2C_Write(data);
 18834  005844  C063  F061         	movff	writeEEPROM_ext@data,I2C_Write@d
 18835  005848  0100               	movlb	0	; () banked
 18836  00584A  6B62               	clrf	(I2C_Write@d+1)& (0+255),b
 18837  00584C  EC1D  F02E         	call	_I2C_Write	;wreg free
 18838                           
 18839                           ;Eeprom_ext.h: 21: I2C_Stop();
 18840  005850  EC2B  F02E         	call	_I2C_Stop	;wreg free
 18841                           
 18842                           ;Eeprom_ext.h: 22: delay(105);
 18843  005854  0E00               	movlw	0
 18844  005856  0100               	movlb	0	; () banked
 18845  005858  6F61               	movwf	(delay@x+1)& (0+255),b
 18846  00585A  0E69               	movlw	105
 18847  00585C  6F60               	movwf	delay@x& (0+255),b
 18848  00585E  EC31  F02D         	call	_delay	;wreg free
 18849  005862  0012               	return		;funcret
 18850  005864                     __end_of_writeEEPROM_ext:
 18851                           	opt stack 0
 18852                           tblptru	equ	0xFF8
 18853                           tblptrh	equ	0xFF7
 18854                           tblptrl	equ	0xFF6
 18855                           tablat	equ	0xFF5
 18856                           prodh	equ	0xFF4
 18857                           prodl	equ	0xFF3
 18858                           intcon	equ	0xFF2
 18859                           intcon2	equ	0xFF1
 18860                           intcon3	equ	0xFF0
 18861                           postinc0	equ	0xFEE
 18862                           wreg	equ	0xFE8
 18863                           indf1	equ	0xFE7
 18864                           postdec1	equ	0xFE5
 18865                           fsr1h	equ	0xFE2
 18866                           fsr1l	equ	0xFE1
 18867                           indf2	equ	0xFDF
 18868                           postinc2	equ	0xFDE
 18869                           postdec2	equ	0xFDD
 18870                           fsr2h	equ	0xFDA
 18871                           fsr2l	equ	0xFD9
 18872                           status	equ	0xFD8
 18873                           
 18874 ;; *************** function _delay *****************
 18875 ;; Defined at:
 18876 ;;		line 18 in file "src/function.c"
 18877 ;; Parameters:    Size  Location     Type
 18878 ;;  x               2    0[BANK0 ] int 
 18879 ;; Auto vars:     Size  Location     Type
 18880 ;;		None
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      void 
 18883 ;; Registers used:
 18884 ;;		wreg, status,2, status,0
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 0/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18890 ;;      Params:         0       2       0       0       0       0       0       0       0
 18891 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18892 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18893 ;;      Totals:         0       3       0       0       0       0       0       0       0
 18894 ;;Total ram usage:        3 bytes
 18895 ;; Hardware stack levels used:    1
 18896 ;; Hardware stack levels required when called:    6
 18897 ;; This function calls:
 18898 ;;		Nothing
 18899 ;; This function is called by:
 18900 ;;		_writeEEPROM_ext
 18901 ;;		_alterarDadosConexaoConfigWifi
 18902 ;;		_enviaDadosWifi
 18903 ;;		_main
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907                           	psect	text28
 18908  005A62                     __ptext28:
 18909                           	opt stack 0
 18910  005A62                     _delay:
 18911                           	opt stack 23
 18912                           
 18913                           ;function.c: 19: while (x--) {
 18914                           
 18915                           ;incstack = 0
 18916  005A62  D00A               	goto	l1477
 18917  005A64                     l6612:
 18918                           
 18919                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 18920  005A64  0E03               	movlw	3
 18921  005A66  0100               	movlb	0	; () banked
 18922  005A68  6F62               	movwf	??_delay& (0+255),b
 18923  005A6A  0E97               	movlw	151
 18924  005A6C                     u15457:
 18925  005A6C  2EE8               	decfsz	wreg,f,c
 18926  005A6E  D7FE               	bra	u15457
 18927  005A70  2F62               	decfsz	??_delay& (0+255),f,b
 18928  005A72  D7FC               	bra	u15457
 18929  005A74  D000               	nop2	
 18930  005A76  0004               	clrwdt		;# 
 18931  005A78                     l1477:
 18932  005A78  0100               	movlb	0	; () banked
 18933  005A7A  0760               	decf	delay@x& (0+255),f,b
 18934  005A7C  A0D8               	btfss	status,0,c
 18935  005A7E  0761               	decf	(delay@x+1)& (0+255),f,b
 18936  005A80  2960               	incf	delay@x& (0+255),w,b
 18937  005A82  E1F0               	bnz	l6612
 18938  005A84  2961               	incf	(delay@x+1)& (0+255),w,b
 18939  005A86  B4D8               	btfsc	status,2,c
 18940  005A88  0012               	return	
 18941  005A8A  D7EC               	goto	l1478
 18942  005A8C                     __end_of_delay:
 18943                           	opt stack 0
 18944                           tblptru	equ	0xFF8
 18945                           tblptrh	equ	0xFF7
 18946                           tblptrl	equ	0xFF6
 18947                           tablat	equ	0xFF5
 18948                           prodh	equ	0xFF4
 18949                           prodl	equ	0xFF3
 18950                           intcon	equ	0xFF2
 18951                           intcon2	equ	0xFF1
 18952                           intcon3	equ	0xFF0
 18953                           postinc0	equ	0xFEE
 18954                           wreg	equ	0xFE8
 18955                           indf1	equ	0xFE7
 18956                           postdec1	equ	0xFE5
 18957                           fsr1h	equ	0xFE2
 18958                           fsr1l	equ	0xFE1
 18959                           indf2	equ	0xFDF
 18960                           postinc2	equ	0xFDE
 18961                           postdec2	equ	0xFDD
 18962                           fsr2h	equ	0xFDA
 18963                           fsr2l	equ	0xFD9
 18964                           status	equ	0xFD8
 18965                           
 18966 ;; *************** function _I2C_Write *****************
 18967 ;; Defined at:
 18968 ;;		line 41 in file "src/I2C.c"
 18969 ;; Parameters:    Size  Location     Type
 18970 ;;  d               2    1[BANK0 ] unsigned int 
 18971 ;; Auto vars:     Size  Location     Type
 18972 ;;		None
 18973 ;; Return value:  Size  Location     Type
 18974 ;;                  1    wreg      void 
 18975 ;; Registers used:
 18976 ;;		wreg, status,2, status,0, cstack
 18977 ;; Tracked objects:
 18978 ;;		On entry : 0/0
 18979 ;;		On exit  : 0/0
 18980 ;;		Unchanged: 0/0
 18981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18982 ;;      Params:         0       2       0       0       0       0       0       0       0
 18983 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18984 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18985 ;;      Totals:         0       2       0       0       0       0       0       0       0
 18986 ;;Total ram usage:        2 bytes
 18987 ;; Hardware stack levels used:    1
 18988 ;; Hardware stack levels required when called:    7
 18989 ;; This function calls:
 18990 ;;		_I2C_Wait
 18991 ;; This function is called by:
 18992 ;;		_updateLeds
 18993 ;;		_writeEEPROM_ext
 18994 ;;		_readEEPROM_ext
 18995 ;; This function uses a non-reentrant model
 18996 ;;
 18997                           
 18998                           	psect	text29
 18999  005C3A                     __ptext29:
 19000                           	opt stack 0
 19001  005C3A                     _I2C_Write:
 19002                           	opt stack 22
 19003                           
 19004                           ;I2C.c: 42: I2C_Wait();
 19005                           
 19006                           ; BSR set to: 0
 19007                           ;incstack = 0
 19008  005C3A  ECF6  F02D         	call	_I2C_Wait	;wreg free
 19009                           
 19010                           ;I2C.c: 43: SSPBUF = d;
 19011  005C3E  C061  FFC9         	movff	I2C_Write@d,4041	;volatile
 19012  005C42  0012               	return		;funcret
 19013  005C44                     __end_of_I2C_Write:
 19014                           	opt stack 0
 19015                           tblptru	equ	0xFF8
 19016                           tblptrh	equ	0xFF7
 19017                           tblptrl	equ	0xFF6
 19018                           tablat	equ	0xFF5
 19019                           prodh	equ	0xFF4
 19020                           prodl	equ	0xFF3
 19021                           intcon	equ	0xFF2
 19022                           intcon2	equ	0xFF1
 19023                           intcon3	equ	0xFF0
 19024                           postinc0	equ	0xFEE
 19025                           wreg	equ	0xFE8
 19026                           indf1	equ	0xFE7
 19027                           postdec1	equ	0xFE5
 19028                           fsr1h	equ	0xFE2
 19029                           fsr1l	equ	0xFE1
 19030                           indf2	equ	0xFDF
 19031                           postinc2	equ	0xFDE
 19032                           postdec2	equ	0xFDD
 19033                           fsr2h	equ	0xFDA
 19034                           fsr2l	equ	0xFD9
 19035                           status	equ	0xFD8
 19036                           
 19037 ;; *************** function _I2C_Stop *****************
 19038 ;; Defined at:
 19039 ;;		line 35 in file "src/I2C.c"
 19040 ;; Parameters:    Size  Location     Type
 19041 ;;		None
 19042 ;; Auto vars:     Size  Location     Type
 19043 ;;		None
 19044 ;; Return value:  Size  Location     Type
 19045 ;;                  1    wreg      void 
 19046 ;; Registers used:
 19047 ;;		wreg, status,2, status,0, cstack
 19048 ;; Tracked objects:
 19049 ;;		On entry : 0/0
 19050 ;;		On exit  : 0/0
 19051 ;;		Unchanged: 0/0
 19052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19053 ;;      Params:         0       0       0       0       0       0       0       0       0
 19054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19056 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19057 ;;Total ram usage:        0 bytes
 19058 ;; Hardware stack levels used:    1
 19059 ;; Hardware stack levels required when called:    7
 19060 ;; This function calls:
 19061 ;;		_I2C_Wait
 19062 ;; This function is called by:
 19063 ;;		_updateLeds
 19064 ;;		_writeEEPROM_ext
 19065 ;;		_readEEPROM_ext
 19066 ;; This function uses a non-reentrant model
 19067 ;;
 19068                           
 19069                           	psect	text30
 19070  005C56                     __ptext30:
 19071                           	opt stack 0
 19072  005C56                     _I2C_Stop:
 19073                           	opt stack 22
 19074                           
 19075                           ;I2C.c: 36: I2C_Wait();
 19076                           
 19077                           ;incstack = 0
 19078  005C56  ECF6  F02D         	call	_I2C_Wait	;wreg free
 19079                           
 19080                           ;I2C.c: 37: PEN = 1;
 19081  005C5A  84C5               	bsf	4037,2,c	;volatile
 19082  005C5C  0012               	return		;funcret
 19083  005C5E                     __end_of_I2C_Stop:
 19084                           	opt stack 0
 19085                           tblptru	equ	0xFF8
 19086                           tblptrh	equ	0xFF7
 19087                           tblptrl	equ	0xFF6
 19088                           tablat	equ	0xFF5
 19089                           prodh	equ	0xFF4
 19090                           prodl	equ	0xFF3
 19091                           intcon	equ	0xFF2
 19092                           intcon2	equ	0xFF1
 19093                           intcon3	equ	0xFF0
 19094                           postinc0	equ	0xFEE
 19095                           wreg	equ	0xFE8
 19096                           indf1	equ	0xFE7
 19097                           postdec1	equ	0xFE5
 19098                           fsr1h	equ	0xFE2
 19099                           fsr1l	equ	0xFE1
 19100                           indf2	equ	0xFDF
 19101                           postinc2	equ	0xFDE
 19102                           postdec2	equ	0xFDD
 19103                           fsr2h	equ	0xFDA
 19104                           fsr2l	equ	0xFD9
 19105                           status	equ	0xFD8
 19106                           
 19107 ;; *************** function _I2C_Start *****************
 19108 ;; Defined at:
 19109 ;;		line 25 in file "src/I2C.c"
 19110 ;; Parameters:    Size  Location     Type
 19111 ;;		None
 19112 ;; Auto vars:     Size  Location     Type
 19113 ;;		None
 19114 ;; Return value:  Size  Location     Type
 19115 ;;                  1    wreg      void 
 19116 ;; Registers used:
 19117 ;;		wreg, status,2, status,0, cstack
 19118 ;; Tracked objects:
 19119 ;;		On entry : 0/0
 19120 ;;		On exit  : 0/0
 19121 ;;		Unchanged: 0/0
 19122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19123 ;;      Params:         0       0       0       0       0       0       0       0       0
 19124 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19125 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19126 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19127 ;;Total ram usage:        0 bytes
 19128 ;; Hardware stack levels used:    1
 19129 ;; Hardware stack levels required when called:    7
 19130 ;; This function calls:
 19131 ;;		_I2C_Wait
 19132 ;; This function is called by:
 19133 ;;		_updateLeds
 19134 ;;		_writeEEPROM_ext
 19135 ;;		_readEEPROM_ext
 19136 ;; This function uses a non-reentrant model
 19137 ;;
 19138                           
 19139                           	psect	text31
 19140  005C5E                     __ptext31:
 19141                           	opt stack 0
 19142  005C5E                     _I2C_Start:
 19143                           	opt stack 22
 19144                           
 19145                           ;I2C.c: 26: I2C_Wait();
 19146                           
 19147                           ;incstack = 0
 19148  005C5E  ECF6  F02D         	call	_I2C_Wait	;wreg free
 19149                           
 19150                           ;I2C.c: 27: SEN = 1;
 19151  005C62  80C5               	bsf	4037,0,c	;volatile
 19152  005C64  0012               	return		;funcret
 19153  005C66                     __end_of_I2C_Start:
 19154                           	opt stack 0
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           intcon2	equ	0xFF1
 19163                           intcon3	equ	0xFF0
 19164                           postinc0	equ	0xFEE
 19165                           wreg	equ	0xFE8
 19166                           indf1	equ	0xFE7
 19167                           postdec1	equ	0xFE5
 19168                           fsr1h	equ	0xFE2
 19169                           fsr1l	equ	0xFE1
 19170                           indf2	equ	0xFDF
 19171                           postinc2	equ	0xFDE
 19172                           postdec2	equ	0xFDD
 19173                           fsr2h	equ	0xFDA
 19174                           fsr2l	equ	0xFD9
 19175                           status	equ	0xFD8
 19176                           
 19177 ;; *************** function _I2C_Wait *****************
 19178 ;; Defined at:
 19179 ;;		line 21 in file "src/I2C.c"
 19180 ;; Parameters:    Size  Location     Type
 19181 ;;		None
 19182 ;; Auto vars:     Size  Location     Type
 19183 ;;		None
 19184 ;; Return value:  Size  Location     Type
 19185 ;;                  1    wreg      void 
 19186 ;; Registers used:
 19187 ;;		wreg, status,2, status,0
 19188 ;; Tracked objects:
 19189 ;;		On entry : 0/0
 19190 ;;		On exit  : 0/0
 19191 ;;		Unchanged: 0/0
 19192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19193 ;;      Params:         0       0       0       0       0       0       0       0       0
 19194 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19195 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19196 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19197 ;;Total ram usage:        1 bytes
 19198 ;; Hardware stack levels used:    1
 19199 ;; Hardware stack levels required when called:    6
 19200 ;; This function calls:
 19201 ;;		Nothing
 19202 ;; This function is called by:
 19203 ;;		_I2C_Start
 19204 ;;		_I2C_Restart
 19205 ;;		_I2C_Stop
 19206 ;;		_I2C_Write
 19207 ;;		_I2C_Read
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	text32
 19212  005BEC                     __ptext32:
 19213                           	opt stack 0
 19214  005BEC                     _I2C_Wait:
 19215                           	opt stack 22
 19216                           
 19217                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 19218                           
 19219                           ;incstack = 0
 19220  005BEC  B4C7               	btfsc	4039,2,c	;volatile
 19221  005BEE  D7FE               	goto	_I2C_Wait
 19222  005BF0  CFC5 F060          	movff	4037,??_I2C_Wait	;volatile
 19223  005BF4  0E1F               	movlw	31
 19224  005BF6  0100               	movlb	0	; () banked
 19225  005BF8  1760               	andwf	??_I2C_Wait& (0+255),f,b
 19226  005BFA  B4D8               	btfsc	status,2,c
 19227  005BFC  0012               	return	
 19228  005BFE  D7F6               	goto	_I2C_Wait
 19229  005C00                     __end_of_I2C_Wait:
 19230                           	opt stack 0
 19231                           tblptru	equ	0xFF8
 19232                           tblptrh	equ	0xFF7
 19233                           tblptrl	equ	0xFF6
 19234                           tablat	equ	0xFF5
 19235                           prodh	equ	0xFF4
 19236                           prodl	equ	0xFF3
 19237                           intcon	equ	0xFF2
 19238                           intcon2	equ	0xFF1
 19239                           intcon3	equ	0xFF0
 19240                           postinc0	equ	0xFEE
 19241                           wreg	equ	0xFE8
 19242                           indf1	equ	0xFE7
 19243                           postdec1	equ	0xFE5
 19244                           fsr1h	equ	0xFE2
 19245                           fsr1l	equ	0xFE1
 19246                           indf2	equ	0xFDF
 19247                           postinc2	equ	0xFDE
 19248                           postdec2	equ	0xFDD
 19249                           fsr2h	equ	0xFDA
 19250                           fsr2l	equ	0xFD9
 19251                           status	equ	0xFD8
 19252                           
 19253 ;; *************** function _setKeyStartReceiveSerial *****************
 19254 ;; Defined at:
 19255 ;;		line 6 in file "src/serial.c"
 19256 ;; Parameters:    Size  Location     Type
 19257 ;;  start           2   49[BANK0 ] PTR unsigned char 
 19258 ;;		 -> STR_77(7), STR_73(4), STR_68(4), STR_65(4), 
 19259 ;;		 -> STR_62(4), STR_58(4), STR_56(4), STR_52(4), 
 19260 ;;		 -> STR_49(4), STR_38(3), STR_34(4), STR_31(4), 
 19261 ;;		 -> STR_25(7), STR_22(4), STR_19(4), STR_16(4), 
 19262 ;;		 -> STR_13(4), STR_10(4), 
 19263 ;; Auto vars:     Size  Location     Type
 19264 ;;		None
 19265 ;; Return value:  Size  Location     Type
 19266 ;;                  1    wreg      void 
 19267 ;; Registers used:
 19268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19269 ;; Tracked objects:
 19270 ;;		On entry : 0/0
 19271 ;;		On exit  : 0/0
 19272 ;;		Unchanged: 0/0
 19273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19274 ;;      Params:         0       2       0       0       0       0       0       0       0
 19275 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19276 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19277 ;;      Totals:         0       2       0       0       0       0       0       0       0
 19278 ;;Total ram usage:        2 bytes
 19279 ;; Hardware stack levels used:    1
 19280 ;; Hardware stack levels required when called:    9
 19281 ;; This function calls:
 19282 ;;		_memset
 19283 ;;		_sprintf
 19284 ;;		_strstr
 19285 ;; This function is called by:
 19286 ;;		_alterarDadosConexaoConfigWifi
 19287 ;;		_enviaDadosWifi
 19288 ;; This function uses a non-reentrant model
 19289 ;;
 19290                           
 19291                           	psect	text33
 19292  005528                     __ptext33:
 19293                           	opt stack 0
 19294  005528                     _setKeyStartReceiveSerial:
 19295                           	opt stack 20
 19296                           
 19297                           ;serial.c: 7: _BF_enable_receive = 0;
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;incstack = 0
 19301  005528  0E00               	movlw	0
 19302  00552A  6E41               	movwf	__BF_enable_receive,c
 19303                           
 19304                           ;serial.c: 8: _BF_i_count = 0;
 19305  00552C  0E00               	movlw	0
 19306  00552E  6E40               	movwf	__BF_i_count,c
 19307                           
 19308                           ;serial.c: 9: _BF_current = 0;
 19309  005530  0E00               	movlw	0
 19310  005532  6E3F               	movwf	__BF_current,c
 19311                           
 19312                           ;serial.c: 10: memset(bufferSerial, 0, sizeof (bufferSerial));
 19313  005534  0E69               	movlw	low _bufferSerial
 19314  005536  0100               	movlb	0	; () banked
 19315  005538  6F60               	movwf	memset@p1& (0+255),b
 19316  00553A  0E02               	movlw	high _bufferSerial
 19317  00553C  6F61               	movwf	(memset@p1+1)& (0+255),b
 19318  00553E  0E00               	movlw	0
 19319  005540  6F63               	movwf	(memset@c+1)& (0+255),b
 19320  005542  0E00               	movlw	0
 19321  005544  6F62               	movwf	memset@c& (0+255),b
 19322  005546  0E00               	movlw	0
 19323  005548  6F65               	movwf	(memset@n+1)& (0+255),b
 19324  00554A  0E64               	movlw	100
 19325  00554C  6F64               	movwf	memset@n& (0+255),b
 19326  00554E  ECD3  F02C         	call	_memset	;wreg free
 19327                           
 19328                           ;serial.c: 11: sprintf(_BF_start, "%s", start);
 19329  005552  0ED8               	movlw	low __BF_start
 19330  005554  0100               	movlb	0	; () banked
 19331  005556  6F81               	movwf	sprintf@wh& (0+255),b
 19332  005558  0E01               	movlw	high __BF_start
 19333  00555A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19334  00555C  0E0F               	movlw	low (STR_94+7)
 19335  00555E  6F83               	movwf	sprintf@f& (0+255),b
 19336  005560  0E7F               	movlw	high (STR_94+7)
 19337  005562  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19338  005564  C091  F085         	movff	setKeyStartReceiveSerial@start,?_sprintf+4
 19339  005568  C092  F086         	movff	setKeyStartReceiveSerial@start+1,?_sprintf+5
 19340  00556C  ECCD  F02B         	call	_sprintf	;wreg free
 19341                           
 19342                           ;serial.c: 12: if(strstr("ALL", start)){
 19343  005570  0EE2               	movlw	low STR_10
 19344  005572  0100               	movlb	0	; () banked
 19345  005574  6F6F               	movwf	strstr@s1& (0+255),b
 19346  005576  0E7F               	movlw	high STR_10
 19347  005578  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19348  00557A  C091  F071         	movff	setKeyStartReceiveSerial@start,strstr@s2
 19349  00557E  C092  F072         	movff	setKeyStartReceiveSerial@start+1,strstr@s2+1
 19350  005582  EC73  F026         	call	_strstr	;wreg free
 19351  005586  0100               	movlb	0	; () banked
 19352  005588  516F               	movf	?_strstr& (0+255),w,b
 19353  00558A  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19354  00558C  B4D8               	btfsc	status,2,c
 19355  00558E  0012               	return	
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;serial.c: 13: _BF_enable_receive = 1;
 19359  005590  0E01               	movlw	1
 19360  005592  6E41               	movwf	__BF_enable_receive,c
 19361  005594  0012               	return	
 19362  005596                     __end_of_setKeyStartReceiveSerial:
 19363                           	opt stack 0
 19364                           tblptru	equ	0xFF8
 19365                           tblptrh	equ	0xFF7
 19366                           tblptrl	equ	0xFF6
 19367                           tablat	equ	0xFF5
 19368                           prodh	equ	0xFF4
 19369                           prodl	equ	0xFF3
 19370                           intcon	equ	0xFF2
 19371                           intcon2	equ	0xFF1
 19372                           intcon3	equ	0xFF0
 19373                           postinc0	equ	0xFEE
 19374                           wreg	equ	0xFE8
 19375                           indf1	equ	0xFE7
 19376                           postdec1	equ	0xFE5
 19377                           fsr1h	equ	0xFE2
 19378                           fsr1l	equ	0xFE1
 19379                           indf2	equ	0xFDF
 19380                           postinc2	equ	0xFDE
 19381                           postdec2	equ	0xFDD
 19382                           fsr2h	equ	0xFDA
 19383                           fsr2l	equ	0xFD9
 19384                           status	equ	0xFD8
 19385                           
 19386 ;; *************** function _memset *****************
 19387 ;; Defined at:
 19388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;  p1              2    0[BANK0 ] PTR void 
 19391 ;;		 -> bufferSerial(100), 
 19392 ;;  c               2    2[BANK0 ] int 
 19393 ;;  n               2    4[BANK0 ] unsigned int 
 19394 ;; Auto vars:     Size  Location     Type
 19395 ;;  p               2    6[BANK0 ] PTR unsigned char 
 19396 ;;		 -> bufferSerial(100), 
 19397 ;; Return value:  Size  Location     Type
 19398 ;;                  2    0[BANK0 ] PTR void 
 19399 ;; Registers used:
 19400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19401 ;; Tracked objects:
 19402 ;;		On entry : 0/0
 19403 ;;		On exit  : 0/0
 19404 ;;		Unchanged: 0/0
 19405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19406 ;;      Params:         0       6       0       0       0       0       0       0       0
 19407 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19409 ;;      Totals:         0       8       0       0       0       0       0       0       0
 19410 ;;Total ram usage:        8 bytes
 19411 ;; Hardware stack levels used:    1
 19412 ;; Hardware stack levels required when called:    6
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		_setKeyStartReceiveSerial
 19417 ;; This function uses a non-reentrant model
 19418 ;;
 19419                           
 19420                           	psect	text34
 19421  0059A6                     __ptext34:
 19422                           	opt stack 0
 19423  0059A6                     _memset:
 19424                           	opt stack 22
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;incstack = 0
 19428  0059A6  C060  F066         	movff	memset@p1,memset@p
 19429  0059AA  C061  F067         	movff	memset@p1+1,memset@p+1
 19430  0059AE  D009               	goto	l2128
 19431  0059B0                     l6644:
 19432  0059B0  C066  FFD9         	movff	memset@p,fsr2l
 19433  0059B4  C067  FFDA         	movff	memset@p+1,fsr2h
 19434  0059B8  C062  FFDF         	movff	memset@c,indf2
 19435  0059BC  0100               	movlb	0	; () banked
 19436  0059BE  4B66               	infsnz	memset@p& (0+255),f,b
 19437  0059C0  2B67               	incf	(memset@p+1)& (0+255),f,b
 19438  0059C2                     l2128:
 19439                           
 19440                           ; BSR set to: 0
 19441  0059C2  0100               	movlb	0	; () banked
 19442  0059C4  0764               	decf	memset@n& (0+255),f,b
 19443  0059C6  A0D8               	btfss	status,0,c
 19444  0059C8  0765               	decf	(memset@n+1)& (0+255),f,b
 19445  0059CA  2964               	incf	memset@n& (0+255),w,b
 19446  0059CC  E1F1               	bnz	l6644
 19447  0059CE  2965               	incf	(memset@n+1)& (0+255),w,b
 19448  0059D0  B4D8               	btfsc	status,2,c
 19449  0059D2  0012               	return	
 19450  0059D4  D7ED               	goto	l2129
 19451  0059D6                     __end_of_memset:
 19452                           	opt stack 0
 19453                           tblptru	equ	0xFF8
 19454                           tblptrh	equ	0xFF7
 19455                           tblptrl	equ	0xFF6
 19456                           tablat	equ	0xFF5
 19457                           prodh	equ	0xFF4
 19458                           prodl	equ	0xFF3
 19459                           intcon	equ	0xFF2
 19460                           intcon2	equ	0xFF1
 19461                           intcon3	equ	0xFF0
 19462                           postinc0	equ	0xFEE
 19463                           wreg	equ	0xFE8
 19464                           indf1	equ	0xFE7
 19465                           postdec1	equ	0xFE5
 19466                           fsr1h	equ	0xFE2
 19467                           fsr1l	equ	0xFE1
 19468                           indf2	equ	0xFDF
 19469                           postinc2	equ	0xFDE
 19470                           postdec2	equ	0xFDD
 19471                           fsr2h	equ	0xFDA
 19472                           fsr2l	equ	0xFD9
 19473                           status	equ	0xFD8
 19474                           
 19475 ;; *************** function _printf *****************
 19476 ;; Defined at:
 19477 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\printf.c"
 19478 ;; Parameters:    Size  Location     Type
 19479 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 19480 ;;		 -> STR_80(9), STR_78(11), STR_74(14), STR_71(168), 
 19481 ;;		 -> STR_66(19), STR_63(28), STR_59(15), STR_57(21), 
 19482 ;;		 -> STR_53(14), STR_50(14), STR_37(16), STR_36(575), 
 19483 ;;		 -> STR_35(45), STR_32(21), STR_23(20), STR_20(22), 
 19484 ;;		 -> STR_17(35), STR_14(14), STR_11(14), 
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;  pb              4   95[BANK0 ] struct __prbuf
 19487 ;;  ap              2   93[BANK0 ] PTR void [1]
 19488 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19489 ;; Return value:  Size  Location     Type
 19490 ;;                  2   33[BANK0 ] int 
 19491 ;; Registers used:
 19492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19493 ;; Tracked objects:
 19494 ;;		On entry : 0/0
 19495 ;;		On exit  : 0/0
 19496 ;;		Unchanged: 0/0
 19497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19498 ;;      Params:         0      60       0       0       0       0       0       0       0
 19499 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19500 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19501 ;;      Totals:         0      66       0       0       0       0       0       0       0
 19502 ;;Total ram usage:       66 bytes
 19503 ;; Hardware stack levels used:    1
 19504 ;; Hardware stack levels required when called:    8
 19505 ;; This function calls:
 19506 ;;		__doprnt
 19507 ;; This function is called by:
 19508 ;;		_alterarDadosConexaoConfigWifi
 19509 ;;		_enviaDadosWifi
 19510 ;;		_main
 19511 ;; This function uses a non-reentrant model
 19512 ;;
 19513                           
 19514                           	psect	text35
 19515  0058A2                     __ptext35:
 19516                           	opt stack 0
 19517  0058A2                     _printf:
 19518                           	opt stack 22
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;incstack = 0
 19522  0058A2  0E00               	movlw	0
 19523  0058A4  0100               	movlb	0	; () banked
 19524  0058A6  6FBF               	movwf	printf@pb& (0+255),b
 19525  0058A8  0E00               	movlw	0
 19526  0058AA  6FC0               	movwf	(printf@pb+1)& (0+255),b
 19527  0058AC  0E12               	movlw	low _putch
 19528  0058AE  6FC1               	movwf	(printf@pb+2)& (0+255),b
 19529  0058B0  0E5C               	movlw	high _putch
 19530  0058B2  6FC2               	movwf	(printf@pb+3)& (0+255),b
 19531  0058B4  0E83               	movlw	low (?_printf+2)
 19532  0058B6  6FBD               	movwf	printf@ap& (0+255),b
 19533  0058B8  0E00               	movlw	high (?_printf+2)
 19534  0058BA  6FBE               	movwf	(printf@ap+1)& (0+255),b
 19535                           
 19536                           ; BSR set to: 0
 19537                           ;	Return value of _printf is never used
 19538  0058BC  0EBF               	movlw	low printf@pb
 19539  0058BE  6F6C               	movwf	__doprnt@pb& (0+255),b
 19540  0058C0  0E00               	movlw	high printf@pb
 19541  0058C2  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 19542  0058C4  C081  F06E         	movff	printf@f,__doprnt@f
 19543  0058C8  C082  F06F         	movff	printf@f+1,__doprnt@f+1
 19544  0058CC  0EBD               	movlw	low printf@ap
 19545  0058CE  6F70               	movwf	__doprnt@ap& (0+255),b
 19546  0058D0  0E00               	movlw	high printf@ap
 19547  0058D2  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 19548  0058D4  ECFB  F012         	call	__doprnt	;wreg free
 19549  0058D8  0012               	return	
 19550  0058DA                     __end_of_printf:
 19551                           	opt stack 0
 19552                           tblptru	equ	0xFF8
 19553                           tblptrh	equ	0xFF7
 19554                           tblptrl	equ	0xFF6
 19555                           tablat	equ	0xFF5
 19556                           prodh	equ	0xFF4
 19557                           prodl	equ	0xFF3
 19558                           intcon	equ	0xFF2
 19559                           intcon2	equ	0xFF1
 19560                           intcon3	equ	0xFF0
 19561                           postinc0	equ	0xFEE
 19562                           wreg	equ	0xFE8
 19563                           indf1	equ	0xFE7
 19564                           postdec1	equ	0xFE5
 19565                           fsr1h	equ	0xFE2
 19566                           fsr1l	equ	0xFE1
 19567                           indf2	equ	0xFDF
 19568                           postinc2	equ	0xFDE
 19569                           postdec2	equ	0xFDD
 19570                           fsr2h	equ	0xFDA
 19571                           fsr2l	equ	0xFD9
 19572                           status	equ	0xFD8
 19573                           
 19574 ;; *************** function _getStringJSON *****************
 19575 ;; Defined at:
 19576 ;;		line 48 in file "src/json.c"
 19577 ;; Parameters:    Size  Location     Type
 19578 ;;  buff            2   49[BANK0 ] PTR unsigned char 
 19579 ;;		 -> bufferSerial(100), 
 19580 ;;  key             2   51[BANK0 ] PTR unsigned char 
 19581 ;;		 -> STR_44(3), STR_43(3), STR_42(3), STR_41(3), 
 19582 ;;  ret             2   53[BANK0 ] PTR unsigned char 
 19583 ;;		 -> senha(15), ssid(15), portServer(4), ipServer(20), 
 19584 ;; Auto vars:     Size  Location     Type
 19585 ;;  res            25   57[BANK0 ] unsigned char [25]
 19586 ;;  attr           20  102[BANK0 ] unsigned char [20]
 19587 ;;  expected       20   82[BANK0 ] unsigned char [20]
 19588 ;;  i               2  126[BANK0 ] unsigned int 
 19589 ;;  j               2  123[BANK0 ] unsigned int 
 19590 ;;  find            1  125[BANK0 ] unsigned char 
 19591 ;;  isValid         1  122[BANK0 ] unsigned char 
 19592 ;; Return value:  Size  Location     Type
 19593 ;;                  1    wreg      void 
 19594 ;; Registers used:
 19595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19596 ;; Tracked objects:
 19597 ;;		On entry : 0/0
 19598 ;;		On exit  : 0/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19601 ;;      Params:         0       6       0       0       0       0       0       0       0
 19602 ;;      Locals:         0      71       0       0       0       0       0       0       0
 19603 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19604 ;;      Totals:         0      79       0       0       0       0       0       0       0
 19605 ;;Total ram usage:       79 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:    9
 19608 ;; This function calls:
 19609 ;;		_sprintf
 19610 ;;		_strlen
 19611 ;;		_strstr
 19612 ;; This function is called by:
 19613 ;;		_alterarDadosConexaoConfigWifi
 19614 ;; This function uses a non-reentrant model
 19615 ;;
 19616                           
 19617                           	psect	text36
 19618  0041EE                     __ptext36:
 19619                           	opt stack 0
 19620  0041EE                     _getStringJSON:
 19621                           	opt stack 20
 19622                           
 19623                           ;json.c: 50: unsigned int i, j = 0;
 19624                           
 19625                           ;incstack = 0
 19626  0041EE  0E00               	movlw	0
 19627  0041F0  0100               	movlb	0	; () banked
 19628  0041F2  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19629  0041F4  0E00               	movlw	0
 19630  0041F6  6FDB               	movwf	getStringJSON@j& (0+255),b
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;json.c: 51: char res[25] = "";
 19634  0041F8  EE22  F000         	lfsr	2,getStringJSON@F288
 19635  0041FC  EE10  F099         	lfsr	1,getStringJSON@res
 19636  004200  0E18               	movlw	24
 19637  004202                     u11621:
 19638  004202  CFDB FFE3          	movff	plusw2,plusw1
 19639  004206  06E8               	decf	wreg,f,c
 19640  004208  E2FC               	bc	u11621
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;json.c: 52: char attr[20] = "";
 19644  00420A  EE22  F02D         	lfsr	2,getStringJSON@F290
 19645  00420E  EE10  F0C6         	lfsr	1,getStringJSON@attr
 19646  004212  0E13               	movlw	19
 19647  004214                     u11631:
 19648  004214  CFDB FFE3          	movff	plusw2,plusw1
 19649  004218  06E8               	decf	wreg,f,c
 19650  00421A  E2FC               	bc	u11631
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;json.c: 53: char expected[20] = "";
 19654  00421C  EE22  F019         	lfsr	2,getStringJSON@F292
 19655  004220  EE10  F0B2         	lfsr	1,getStringJSON@expected
 19656  004224  0E13               	movlw	19
 19657  004226                     u11641:
 19658  004226  CFDB FFE3          	movff	plusw2,plusw1
 19659  00422A  06E8               	decf	wreg,f,c
 19660  00422C  E2FC               	bc	u11641
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;json.c: 54: char find = 0;
 19664  00422E  0E00               	movlw	0
 19665  004230  6FDD               	movwf	getStringJSON@find& (0+255),b
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;json.c: 55: char isValid = 0;
 19669  004232  0E00               	movlw	0
 19670  004234  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;json.c: 57: sprintf(expected, "\"%s\":\"", key);
 19674  004236  0EB2               	movlw	low getStringJSON@expected
 19675  004238  6F81               	movwf	sprintf@wh& (0+255),b
 19676  00423A  0E00               	movlw	high getStringJSON@expected
 19677  00423C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19678  00423E  0E7C               	movlw	low STR_127
 19679  004240  6F83               	movwf	sprintf@f& (0+255),b
 19680  004242  0E7F               	movlw	high STR_127
 19681  004244  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19682  004246  C093  F085         	movff	getStringJSON@key,?_sprintf+4
 19683  00424A  C094  F086         	movff	getStringJSON@key+1,?_sprintf+5
 19684  00424E  ECCD  F02B         	call	_sprintf	;wreg free
 19685                           
 19686                           ;json.c: 59: for (i = 0; i < strlen(buff) && isValid == 0; i++)
 19687  004252  0E00               	movlw	0
 19688  004254  0100               	movlb	0	; () banked
 19689  004256  6FDF               	movwf	(getStringJSON@i+1)& (0+255),b
 19690  004258  0E00               	movlw	0
 19691  00425A  6FDE               	movwf	getStringJSON@i& (0+255),b
 19692  00425C  D090               	goto	l1570
 19693  00425E                     
 19694                           ; BSR set to: 0
 19695                           ;json.c: 60: {
 19696                           ;json.c: 61: if (buff[i] == expected[j] && !find)
 19697                           
 19698                           ; BSR set to: 0
 19699  00425E  0EB2               	movlw	low getStringJSON@expected
 19700  004260  25DB               	addwf	getStringJSON@j& (0+255),w,b
 19701  004262  6ED9               	movwf	fsr2l,c
 19702  004264  0E00               	movlw	high getStringJSON@expected
 19703  004266  21DC               	addwfc	(getStringJSON@j+1)& (0+255),w,b
 19704  004268  6EDA               	movwf	fsr2h,c
 19705  00426A  51DE               	movf	getStringJSON@i& (0+255),w,b
 19706  00426C  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19707  00426E  6EE1               	movwf	fsr1l,c
 19708  004270  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19709  004272  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19710  004274  6EE2               	movwf	fsr1h,c
 19711  004276  50DE               	movf	postinc2,w,c
 19712  004278  18E6               	xorwf	postinc1,w,c
 19713  00427A  A4D8               	btfss	status,2,c
 19714  00427C  D035               	goto	l1572
 19715                           
 19716                           ; BSR set to: 0
 19717  00427E  51DD               	movf	getStringJSON@find& (0+255),w,b
 19718  004280  A4D8               	btfss	status,2,c
 19719  004282  D032               	goto	l1572
 19720                           
 19721                           ; BSR set to: 0
 19722                           ;json.c: 62: {
 19723                           ;json.c: 63: sprintf(attr, "%s%c", attr, buff[i]);
 19724  004284  0EC6               	movlw	low getStringJSON@attr
 19725  004286  6F81               	movwf	sprintf@wh& (0+255),b
 19726  004288  0E00               	movlw	high getStringJSON@attr
 19727  00428A  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19728  00428C  0EC6               	movlw	low STR_125
 19729  00428E  6F83               	movwf	sprintf@f& (0+255),b
 19730  004290  0E7F               	movlw	high STR_125
 19731  004292  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19732  004294  0EC6               	movlw	low getStringJSON@attr
 19733  004296  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19734  004298  0E00               	movlw	high getStringJSON@attr
 19735  00429A  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19736  00429C  51DE               	movf	getStringJSON@i& (0+255),w,b
 19737  00429E  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19738  0042A0  6ED9               	movwf	fsr2l,c
 19739  0042A2  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19740  0042A4  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19741  0042A6  6EDA               	movwf	fsr2h,c
 19742  0042A8  50DF               	movf	indf2,w,c
 19743  0042AA  6F97               	movwf	??_getStringJSON& (0+255),b
 19744  0042AC  5197               	movf	??_getStringJSON& (0+255),w,b
 19745  0042AE  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19746  0042B0  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19747  0042B2  ECCD  F02B         	call	_sprintf	;wreg free
 19748                           
 19749                           ;json.c: 64: j++;
 19750  0042B6  0100               	movlb	0	; () banked
 19751  0042B8  4BDB               	infsnz	getStringJSON@j& (0+255),f,b
 19752  0042BA  2BDC               	incf	(getStringJSON@j+1)& (0+255),f,b
 19753                           
 19754                           ; BSR set to: 0
 19755                           ;json.c: 65: if (strstr(attr, expected))
 19756  0042BC  0EC6               	movlw	low getStringJSON@attr
 19757  0042BE  6F6F               	movwf	strstr@s1& (0+255),b
 19758  0042C0  0E00               	movlw	high getStringJSON@attr
 19759  0042C2  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19760  0042C4  0EB2               	movlw	low getStringJSON@expected
 19761  0042C6  6F71               	movwf	strstr@s2& (0+255),b
 19762  0042C8  0E00               	movlw	high getStringJSON@expected
 19763  0042CA  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19764  0042CC  EC73  F026         	call	_strstr	;wreg free
 19765  0042D0  0100               	movlb	0	; () banked
 19766  0042D2  516F               	movf	?_strstr& (0+255),w,b
 19767  0042D4  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19768  0042D6  B4D8               	btfsc	status,2,c
 19769  0042D8  D04F               	goto	l1578
 19770                           
 19771                           ; BSR set to: 0
 19772                           ;json.c: 66: {
 19773                           ;json.c: 67: j = 0;
 19774  0042DA  0E00               	movlw	0
 19775  0042DC  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19776  0042DE  0E00               	movlw	0
 19777  0042E0  6FDB               	movwf	getStringJSON@j& (0+255),b
 19778                           
 19779                           ;json.c: 68: find = 1;
 19780  0042E2  0E01               	movlw	1
 19781  0042E4  6FDD               	movwf	getStringJSON@find& (0+255),b
 19782                           
 19783                           ; BSR set to: 0
 19784                           ;json.c: 69: }
 19785                           ;json.c: 70: }
 19786  0042E6  D048               	goto	l1578
 19787  0042E8                     l1572:
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;json.c: 71: else if (!find)
 19791                           
 19792                           ; BSR set to: 0
 19793  0042E8  51DD               	movf	getStringJSON@find& (0+255),w,b
 19794  0042EA  A4D8               	btfss	status,2,c
 19795  0042EC  D00F               	goto	l1575
 19796                           
 19797                           ; BSR set to: 0
 19798                           ;json.c: 72: {
 19799                           ;json.c: 73: j = 0;
 19800  0042EE  0E00               	movlw	0
 19801  0042F0  6FDC               	movwf	(getStringJSON@j+1)& (0+255),b
 19802  0042F2  0E00               	movlw	0
 19803  0042F4  6FDB               	movwf	getStringJSON@j& (0+255),b
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;json.c: 74: sprintf(attr, "");
 19807  0042F6  0EC6               	movlw	low getStringJSON@attr
 19808  0042F8  6F81               	movwf	sprintf@wh& (0+255),b
 19809  0042FA  0E00               	movlw	high getStringJSON@attr
 19810  0042FC  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19811  0042FE  0E82               	movlw	low (STR_35+44)
 19812  004300  6F83               	movwf	sprintf@f& (0+255),b
 19813  004302  0E7B               	movlw	high (STR_35+44)
 19814  004304  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19815  004306  ECCD  F02B         	call	_sprintf	;wreg free
 19816                           
 19817                           ;json.c: 75: }
 19818  00430A  D036               	goto	l1578
 19819  00430C                     l1575:
 19820                           
 19821                           ;json.c: 76: else
 19822                           ;json.c: 77: {
 19823                           ;json.c: 78: if (buff[i] == '"')
 19824  00430C  0100               	movlb	0	; () banked
 19825  00430E  51DE               	movf	getStringJSON@i& (0+255),w,b
 19826  004310  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19827  004312  6ED9               	movwf	fsr2l,c
 19828  004314  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19829  004316  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19830  004318  6EDA               	movwf	fsr2h,c
 19831  00431A  0E22               	movlw	34
 19832  00431C  18DE               	xorwf	postinc2,w,c
 19833  00431E  A4D8               	btfss	status,2,c
 19834  004320  D011               	goto	l1577
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;json.c: 79: {
 19838                           ;json.c: 80: isValid = 1;
 19839  004322  0E01               	movlw	1
 19840  004324  6FDA               	movwf	getStringJSON@isValid& (0+255),b
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;json.c: 81: sprintf(ret, "%s", res);
 19844  004326  C095  F081         	movff	getStringJSON@ret,sprintf@wh
 19845  00432A  C096  F082         	movff	getStringJSON@ret+1,sprintf@wh+1
 19846  00432E  0E0F               	movlw	low (STR_94+7)
 19847  004330  6F83               	movwf	sprintf@f& (0+255),b
 19848  004332  0E7F               	movlw	high (STR_94+7)
 19849  004334  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19850  004336  0E99               	movlw	low getStringJSON@res
 19851  004338  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19852  00433A  0E00               	movlw	high getStringJSON@res
 19853  00433C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19854  00433E  ECCD  F02B         	call	_sprintf	;wreg free
 19855                           
 19856                           ;json.c: 82: }
 19857  004342  D01A               	goto	l1578
 19858  004344                     l1577:
 19859                           
 19860                           ;json.c: 83: else
 19861                           ;json.c: 84: {
 19862                           ;json.c: 85: sprintf(res, "%s%c", res, buff[i]);
 19863  004344  0E99               	movlw	low getStringJSON@res
 19864  004346  0100               	movlb	0	; () banked
 19865  004348  6F81               	movwf	sprintf@wh& (0+255),b
 19866  00434A  0E00               	movlw	high getStringJSON@res
 19867  00434C  6F82               	movwf	(sprintf@wh+1)& (0+255),b
 19868  00434E  0EC6               	movlw	low STR_125
 19869  004350  6F83               	movwf	sprintf@f& (0+255),b
 19870  004352  0E7F               	movlw	high STR_125
 19871  004354  6F84               	movwf	(sprintf@f+1)& (0+255),b
 19872  004356  0E99               	movlw	low getStringJSON@res
 19873  004358  6F85               	movwf	(?_sprintf+4)& (0+255),b
 19874  00435A  0E00               	movlw	high getStringJSON@res
 19875  00435C  6F86               	movwf	(?_sprintf+5)& (0+255),b
 19876  00435E  51DE               	movf	getStringJSON@i& (0+255),w,b
 19877  004360  2591               	addwf	getStringJSON@buff& (0+255),w,b
 19878  004362  6ED9               	movwf	fsr2l,c
 19879  004364  51DF               	movf	(getStringJSON@i+1)& (0+255),w,b
 19880  004366  2192               	addwfc	(getStringJSON@buff+1)& (0+255),w,b
 19881  004368  6EDA               	movwf	fsr2h,c
 19882  00436A  50DF               	movf	indf2,w,c
 19883  00436C  6F97               	movwf	??_getStringJSON& (0+255),b
 19884  00436E  5197               	movf	??_getStringJSON& (0+255),w,b
 19885  004370  6F87               	movwf	(?_sprintf+6)& (0+255),b
 19886  004372  6B88               	clrf	(?_sprintf+7)& (0+255),b
 19887  004374  ECCD  F02B         	call	_sprintf	;wreg free
 19888  004378                     l1578:
 19889  004378  0100               	movlb	0	; () banked
 19890  00437A  4BDE               	infsnz	getStringJSON@i& (0+255),f,b
 19891  00437C  2BDF               	incf	(getStringJSON@i+1)& (0+255),f,b
 19892  00437E                     l1570:
 19893                           
 19894                           ; BSR set to: 0
 19895                           
 19896                           ; BSR set to: 0
 19897  00437E  C091  F060         	movff	getStringJSON@buff,strlen@s
 19898  004382  C092  F061         	movff	getStringJSON@buff+1,strlen@s+1
 19899  004386  EC02  F02B         	call	_strlen	;wreg free
 19900  00438A  0100               	movlb	0	; () banked
 19901  00438C  5160               	movf	?_strlen& (0+255),w,b
 19902  00438E  5DDE               	subwf	getStringJSON@i& (0+255),w,b
 19903  004390  5161               	movf	(?_strlen+1)& (0+255),w,b
 19904  004392  59DF               	subwfb	(getStringJSON@i+1)& (0+255),w,b
 19905  004394  B0D8               	btfsc	status,0,c
 19906  004396  0012               	return	
 19907                           
 19908                           ; BSR set to: 0
 19909  004398  51DA               	movf	getStringJSON@isValid& (0+255),w,b
 19910  00439A  A4D8               	btfss	status,2,c
 19911  00439C  0012               	return	
 19912  00439E  D75F               	goto	l1571
 19913  0043A0                     __end_of_getStringJSON:
 19914                           	opt stack 0
 19915                           tblptru	equ	0xFF8
 19916                           tblptrh	equ	0xFF7
 19917                           tblptrl	equ	0xFF6
 19918                           tablat	equ	0xFF5
 19919                           prodh	equ	0xFF4
 19920                           prodl	equ	0xFF3
 19921                           intcon	equ	0xFF2
 19922                           intcon2	equ	0xFF1
 19923                           intcon3	equ	0xFF0
 19924                           postinc0	equ	0xFEE
 19925                           wreg	equ	0xFE8
 19926                           indf1	equ	0xFE7
 19927                           postinc1	equ	0xFE6
 19928                           postdec1	equ	0xFE5
 19929                           plusw1	equ	0xFE3
 19930                           fsr1h	equ	0xFE2
 19931                           fsr1l	equ	0xFE1
 19932                           indf2	equ	0xFDF
 19933                           postinc2	equ	0xFDE
 19934                           postdec2	equ	0xFDD
 19935                           plusw2	equ	0xFDB
 19936                           fsr2h	equ	0xFDA
 19937                           fsr2l	equ	0xFD9
 19938                           status	equ	0xFD8
 19939                           
 19940 ;; *************** function _sprintf *****************
 19941 ;; Defined at:
 19942 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\sprintf.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;  wh              2   33[BANK0 ] PTR unsigned char 
 19945 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 19946 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), enviaDadosWifi@AUX(15), senha(15), 
 19947 ;;		 -> ssid(15), portServer(4), ipServer(20), line4(21), 
 19948 ;;		 -> line3(21), line2(21), line1(21), 
 19949 ;;  f               2   35[BANK0 ] PTR const unsigned char 
 19950 ;;		 -> STR_132(3), STR_131(5), STR_130(3), STR_129(1), 
 19951 ;;		 -> STR_128(5), STR_127(7), STR_126(1), STR_125(5), 
 19952 ;;		 -> STR_124(6), STR_123(18), STR_122(19), STR_121(19), 
 19953 ;;		 -> STR_120(19), STR_119(20), STR_118(9), STR_117(7), 
 19954 ;;		 -> STR_116(8), STR_115(8), STR_114(10), STR_113(18), 
 19955 ;;		 -> STR_112(18), STR_111(18), STR_110(17), STR_109(17), 
 19956 ;;		 -> STR_108(17), STR_107(17), STR_106(20), STR_105(20), 
 19957 ;;		 -> STR_104(20), STR_101(11), STR_98(10), STR_95(9), 
 19958 ;;		 -> STR_94(10), STR_93(9), STR_92(15), STR_91(18), 
 19959 ;;		 -> STR_90(20), STR_89(10), STR_88(22), STR_87(21), 
 19960 ;;		 -> STR_86(15), STR_85(12), STR_83(3), STR_82(14), 
 19961 ;;		 -> STR_81(20), STR_69(3), STR_48(18), STR_47(6), 
 19962 ;;		 -> STR_46(3), STR_45(3), STR_39(14), STR_29(9), 
 19963 ;;		 -> STR_28(21), STR_27(17), STR_26(20), 
 19964 ;; Auto vars:     Size  Location     Type
 19965 ;;  pb              4   45[BANK0 ] struct __prbuf
 19966 ;;  ap              2   43[BANK0 ] PTR void [1]
 19967 ;;		 -> ?_sprintf(2), ?_printf(2), 
 19968 ;; Return value:  Size  Location     Type
 19969 ;;                  2   33[BANK0 ] int 
 19970 ;; Registers used:
 19971 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19972 ;; Tracked objects:
 19973 ;;		On entry : 0/0
 19974 ;;		On exit  : 0/0
 19975 ;;		Unchanged: 0/0
 19976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19977 ;;      Params:         0      10       0       0       0       0       0       0       0
 19978 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19979 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19980 ;;      Totals:         0      16       0       0       0       0       0       0       0
 19981 ;;Total ram usage:       16 bytes
 19982 ;; Hardware stack levels used:    1
 19983 ;; Hardware stack levels required when called:    8
 19984 ;; This function calls:
 19985 ;;		__doprnt
 19986 ;; This function is called by:
 19987 ;;		_alterarDadosConexaoConfigWifi
 19988 ;;		_enviaDadosWifi
 19989 ;;		_main
 19990 ;;		_getStringJSON
 19991 ;;		_setKeyStartReceiveSerial
 19992 ;;		_getIntJSON
 19993 ;; This function uses a non-reentrant model
 19994 ;;
 19995                           
 19996                           	psect	text37
 19997  00579A                     __ptext37:
 19998                           	opt stack 0
 19999  00579A                     _sprintf:
 20000                           	opt stack 22
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;incstack = 0
 20004  00579A  C081  F08D         	movff	sprintf@wh,sprintf@pb
 20005  00579E  C082  F08E         	movff	sprintf@wh+1,sprintf@pb+1
 20006  0057A2  0E00               	movlw	0
 20007  0057A4  0100               	movlb	0	; () banked
 20008  0057A6  6F8F               	movwf	(sprintf@pb+2)& (0+255),b
 20009  0057A8  0E00               	movlw	0
 20010  0057AA  6F90               	movwf	(sprintf@pb+3)& (0+255),b
 20011  0057AC  0E85               	movlw	low (?_sprintf+4)
 20012  0057AE  6F8B               	movwf	sprintf@ap& (0+255),b
 20013  0057B0  0E00               	movlw	high (?_sprintf+4)
 20014  0057B2  6F8C               	movwf	(sprintf@ap+1)& (0+255),b
 20015                           
 20016                           ; BSR set to: 0
 20017  0057B4  0E8D               	movlw	low sprintf@pb
 20018  0057B6  6F6C               	movwf	__doprnt@pb& (0+255),b
 20019  0057B8  0E00               	movlw	high sprintf@pb
 20020  0057BA  6F6D               	movwf	(__doprnt@pb+1)& (0+255),b
 20021  0057BC  C083  F06E         	movff	sprintf@f,__doprnt@f
 20022  0057C0  C084  F06F         	movff	sprintf@f+1,__doprnt@f+1
 20023  0057C4  0E8B               	movlw	low sprintf@ap
 20024  0057C6  6F70               	movwf	__doprnt@ap& (0+255),b
 20025  0057C8  0E00               	movlw	high sprintf@ap
 20026  0057CA  6F71               	movwf	(__doprnt@ap+1)& (0+255),b
 20027  0057CC  ECFB  F012         	call	__doprnt	;wreg free
 20028  0057D0  C08D  FFD9         	movff	sprintf@pb,fsr2l
 20029  0057D4  C08E  FFDA         	movff	sprintf@pb+1,fsr2h
 20030  0057D8  0E00               	movlw	0
 20031  0057DA  6EDF               	movwf	indf2,c
 20032  0057DC  0012               	return	
 20033  0057DE                     __end_of_sprintf:
 20034                           	opt stack 0
 20035                           tblptru	equ	0xFF8
 20036                           tblptrh	equ	0xFF7
 20037                           tblptrl	equ	0xFF6
 20038                           tablat	equ	0xFF5
 20039                           prodh	equ	0xFF4
 20040                           prodl	equ	0xFF3
 20041                           intcon	equ	0xFF2
 20042                           intcon2	equ	0xFF1
 20043                           intcon3	equ	0xFF0
 20044                           postinc0	equ	0xFEE
 20045                           wreg	equ	0xFE8
 20046                           indf1	equ	0xFE7
 20047                           postinc1	equ	0xFE6
 20048                           postdec1	equ	0xFE5
 20049                           plusw1	equ	0xFE3
 20050                           fsr1h	equ	0xFE2
 20051                           fsr1l	equ	0xFE1
 20052                           indf2	equ	0xFDF
 20053                           postinc2	equ	0xFDE
 20054                           postdec2	equ	0xFDD
 20055                           plusw2	equ	0xFDB
 20056                           fsr2h	equ	0xFDA
 20057                           fsr2l	equ	0xFD9
 20058                           status	equ	0xFD8
 20059                           
 20060 ;; *************** function __doprnt *****************
 20061 ;; Defined at:
 20062 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\doprnt.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;  pb              2   12[BANK0 ] PTR struct __prbuf
 20065 ;;		 -> sprintf@pb(4), printf@pb(4), 
 20066 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 20067 ;;		 -> STR_132(3), STR_131(5), STR_130(3), STR_129(1), 
 20068 ;;		 -> STR_128(5), STR_127(7), STR_126(1), STR_125(5), 
 20069 ;;		 -> STR_124(6), STR_123(18), STR_122(19), STR_121(19), 
 20070 ;;		 -> STR_120(19), STR_119(20), STR_118(9), STR_117(7), 
 20071 ;;		 -> STR_116(8), STR_115(8), STR_114(10), STR_113(18), 
 20072 ;;		 -> STR_112(18), STR_111(18), STR_110(17), STR_109(17), 
 20073 ;;		 -> STR_108(17), STR_107(17), STR_106(20), STR_105(20), 
 20074 ;;		 -> STR_104(20), STR_101(11), STR_98(10), STR_95(9), 
 20075 ;;		 -> STR_94(10), STR_93(9), STR_92(15), STR_91(18), 
 20076 ;;		 -> STR_90(20), STR_89(10), STR_88(22), STR_87(21), 
 20077 ;;		 -> STR_86(15), STR_85(12), STR_83(3), STR_82(14), 
 20078 ;;		 -> STR_81(20), STR_80(9), STR_78(11), STR_74(14), 
 20079 ;;		 -> STR_71(168), STR_69(3), STR_66(19), STR_63(28), 
 20080 ;;		 -> STR_59(15), STR_57(21), STR_53(14), STR_50(14), 
 20081 ;;		 -> STR_48(18), STR_47(6), STR_46(3), STR_45(3), 
 20082 ;;		 -> STR_39(14), STR_37(16), STR_36(575), STR_35(45), 
 20083 ;;		 -> STR_32(21), STR_29(9), STR_28(21), STR_27(17), 
 20084 ;;		 -> STR_26(20), STR_23(20), STR_20(22), STR_17(35), 
 20085 ;;		 -> STR_14(14), STR_11(14), 
 20086 ;;  ap              2   16[BANK0 ] PTR PTR void 
 20087 ;;		 -> sprintf@ap(2), printf@ap(2), 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  tmpval          4    0        struct .
 20090 ;;  width           2   30[BANK0 ] int 
 20091 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
 20092 ;;		 -> ?_sprintf(2), ?_printf(2), STR_134(7), _doprnt@c(1), 
 20093 ;;		 -> _BF_start(10), getStringJSON@expected(20), getStringJSON@attr(20), getStringJSON@res(25), 
 20094 ;;		 -> getIntJSON@expected(20), getIntJSON@attr(20), STR_103(10), STR_102(7), 
 20095 ;;		 -> STR_100(11), STR_99(8), STR_97(11), STR_96(7), 
 20096 ;;		 -> STR_84(12), STR_77(7), STR_73(4), STR_70(12), 
 20097 ;;		 -> enviaDadosWifi@AUX(15), STR_68(4), STR_65(4), STR_62(4), 
 20098 ;;		 -> STR_58(4), STR_56(4), STR_52(4), STR_49(4), 
 20099 ;;		 -> wifi_MAC(12), STR_44(3), STR_43(3), STR_42(3), 
 20100 ;;		 -> senha(15), STR_41(3), ssid(15), STR_38(3), 
 20101 ;;		 -> portServer(4), ipServer(20), STR_34(4), NULL(0), 
 20102 ;;		 -> STR_31(4), line4(21), line3(21), line2(21), 
 20103 ;;		 -> line1(21), STR_25(7), STR_22(4), STR_19(4), 
 20104 ;;		 -> STR_16(4), STR_13(4), STR_10(4), STR_9(3), 
 20105 ;;		 -> STR_8(5), STR_7(7), STR_6(6), STR_5(4), 
 20106 ;;		 -> STR_4(10), STR_3(11), STR_2(12), STR_1(11), 
 20107 ;;  len             2   26[BANK0 ] unsigned int 
 20108 ;;  val             2   24[BANK0 ] unsigned int 
 20109 ;;  c               1   32[BANK0 ] char 
 20110 ;;  flag            1   23[BANK0 ] unsigned char 
 20111 ;;  prec            1   22[BANK0 ] char 
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  2   12[BANK0 ] int 
 20114 ;; Registers used:
 20115 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20121 ;;      Params:         0       6       0       0       0       0       0       0       0
 20122 ;;      Locals:         0      11       0       0       0       0       0       0       0
 20123 ;;      Temps:          0       4       0       0       0       0       0       0       0
 20124 ;;      Totals:         0      21       0       0       0       0       0       0       0
 20125 ;;Total ram usage:       21 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:    7
 20128 ;; This function calls:
 20129 ;;		Absolute function
 20130 ;;		___lwdiv
 20131 ;;		___lwmod
 20132 ;;		___wmul
 20133 ;;		_isdigit
 20134 ;;		_putch
 20135 ;; This function is called by:
 20136 ;;		_printf
 20137 ;;		_sprintf
 20138 ;; This function uses a non-reentrant model
 20139 ;;
 20140                           
 20141                           	psect	text38
 20142  0025F6                     __ptext38:
 20143                           	opt stack 0
 20144  0025F6                     __doprnt:
 20145                           	opt stack 22
 20146                           
 20147                           ;doprnt.c: 499: signed char c;
 20148                           ;doprnt.c: 501: int width;
 20149                           ;doprnt.c: 506: signed char prec;
 20150                           ;doprnt.c: 508: unsigned char flag;
 20151                           ;doprnt.c: 523: union {
 20152                           ;doprnt.c: 524: unsigned long vd;
 20153                           ;doprnt.c: 525: double integ;
 20154                           ;doprnt.c: 526: } tmpval;
 20155                           ;doprnt.c: 528: unsigned int val;
 20156                           ;doprnt.c: 529: unsigned len;
 20157                           ;doprnt.c: 530: const char * cp;
 20158                           ;doprnt.c: 536: while(c = *f++) {
 20159                           
 20160                           ;incstack = 0
 20161  0025F6  D2CC               	goto	u8210
 20162  0025F8                     
 20163                           ;doprnt.c: 538: if(c != '%')
 20164  0025F8  0E25               	movlw	37
 20165  0025FA  0100               	movlb	0	; () banked
 20166  0025FC  1980               	xorwf	__doprnt@c& (0+255),w,b
 20167  0025FE  B4D8               	btfsc	status,2,c
 20168  002600  D033               	goto	l1627
 20169                           
 20170                           ; BSR set to: 0
 20171                           ;doprnt.c: 540: {
 20172                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 20173  002602  EE20 F002          	lfsr	2,2
 20174  002606  516C               	movf	__doprnt@pb& (0+255),w,b
 20175  002608  26D9               	addwf	fsr2l,f,c
 20176  00260A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20177  00260C  22DA               	addwfc	fsr2h,f,c
 20178  00260E  50DE               	movf	postinc2,w,c
 20179  002610  10DE               	iorwf	postinc2,w,c
 20180  002612  B4D8               	btfsc	status,2,c
 20181  002614  D013               	goto	l1628
 20182                           
 20183                           ; BSR set to: 0
 20184  002616  EE20 F002          	lfsr	2,2
 20185  00261A  516C               	movf	__doprnt@pb& (0+255),w,b
 20186  00261C  26D9               	addwf	fsr2l,f,c
 20187  00261E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20188  002620  22DA               	addwfc	fsr2h,f,c
 20189  002622  D801               	call	u7908
 20190  002624  D2B5               	goto	u8210
 20191  002626                     u7908:
 20192  002626  0005               	push	
 20193  002628  6EFA               	movwf	pclath,c
 20194  00262A  50DE               	movf	postinc2,w,c
 20195  00262C  6EFD               	movwf	tosl,c
 20196  00262E  50DE               	movf	postinc2,w,c
 20197  002630  6EFE               	movwf	tosh,c
 20198  002632  50F8               	movf	tblptru,w,c
 20199  002634  6EFF               	movwf	tosu,c
 20200  002636  50FA               	movf	pclath,w,c
 20201  002638  5180               	movf	__doprnt@c& (0+255),w,b
 20202  00263A  0012               	return		;indir
 20203  00263C                     l1628:
 20204  00263C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20205  002640  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20206  002644  CFDE F072          	movff	postinc2,??__doprnt
 20207  002648  CFDD F073          	movff	postdec2,??__doprnt+1
 20208  00264C  C072  FFD9         	movff	??__doprnt,fsr2l
 20209  002650  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20210  002654  C080  FFDF         	movff	__doprnt@c,indf2
 20211  002658  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20212  00265C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20213  002660  2ADE               	incf	postinc2,f,c
 20214  002662  0E00               	movlw	0
 20215  002664  22DD               	addwfc	postdec2,f,c
 20216                           
 20217                           ;doprnt.c: 542: continue;
 20218  002666  D294               	goto	u8210
 20219  002668                     l1627:
 20220                           
 20221                           ;doprnt.c: 543: }
 20222                           ;doprnt.c: 546: width = 0;
 20223  002668  0E00               	movlw	0
 20224  00266A  0100               	movlb	0	; () banked
 20225  00266C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20226  00266E  0E00               	movlw	0
 20227  002670  6F7E               	movwf	__doprnt@width& (0+255),b
 20228                           
 20229                           ;doprnt.c: 548: flag = 0;
 20230  002672  0E00               	movlw	0
 20231  002674  6F77               	movwf	__doprnt@flag& (0+255),b
 20232                           
 20233                           ; BSR set to: 0
 20234                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20235  002676  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20236  00267A  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20237  00267E                     	if	0	;tblptru may be non-zero
 20238  00267E                     	endif
 20239  00267E                     	if	0	;tblptru may be non-zero
 20240  00267E                     	endif
 20241  00267E  0008               	tblrd		*
 20242  002680  50F5               	movf	tablat,w,c
 20243  002682  ECBA  F02D         	call	_isdigit
 20244  002686  A0D8               	btfss	status,0,c
 20245  002688  D13C               	goto	l1633
 20246                           
 20247                           ;doprnt.c: 598: width = 0;
 20248  00268A  0E00               	movlw	0
 20249  00268C  0100               	movlb	0	; () banked
 20250  00268E  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20251  002690  0E00               	movlw	0
 20252  002692  6F7E               	movwf	__doprnt@width& (0+255),b
 20253  002694                     
 20254                           ;doprnt.c: 600: width *= 10;
 20255                           
 20256                           ; BSR set to: 0
 20257  002694  C07E  F060         	movff	__doprnt@width,___wmul@multiplier
 20258  002698  C07F  F061         	movff	__doprnt@width+1,___wmul@multiplier+1
 20259  00269C  0E00               	movlw	0
 20260  00269E  0100               	movlb	0	; () banked
 20261  0026A0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20262  0026A2  0E0A               	movlw	10
 20263  0026A4  6F62               	movwf	___wmul@multiplicand& (0+255),b
 20264  0026A6  EC46  F02D         	call	___wmul	;wreg free
 20265  0026AA  C060  F07E         	movff	?___wmul,__doprnt@width
 20266  0026AE  C061  F07F         	movff	?___wmul+1,__doprnt@width+1
 20267                           
 20268                           ;doprnt.c: 601: width += *f++ - '0';
 20269  0026B2  0ED0               	movlw	208
 20270  0026B4  0100               	movlb	0	; () banked
 20271  0026B6  6F72               	movwf	??__doprnt& (0+255),b
 20272  0026B8  0EFF               	movlw	255
 20273  0026BA  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20274  0026BC  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20275  0026C0  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20276  0026C4                     	if	0	;tblptru may be non-zero
 20277  0026C4                     	endif
 20278  0026C4                     	if	0	;tblptru may be non-zero
 20279  0026C4                     	endif
 20280  0026C4  0008               	tblrd		*
 20281  0026C6  50F5               	movf	tablat,w,c
 20282  0026C8  6F74               	movwf	(??__doprnt+2)& (0+255),b
 20283  0026CA  6B75               	clrf	(??__doprnt+3)& (0+255),b
 20284  0026CC  5172               	movf	??__doprnt& (0+255),w,b
 20285  0026CE  2774               	addwf	(??__doprnt+2)& (0+255),f,b
 20286  0026D0  5173               	movf	(??__doprnt+1)& (0+255),w,b
 20287  0026D2  2375               	addwfc	(??__doprnt+3)& (0+255),f,b
 20288  0026D4  5174               	movf	(??__doprnt+2)& (0+255),w,b
 20289  0026D6  277E               	addwf	__doprnt@width& (0+255),f,b
 20290  0026D8  5175               	movf	(??__doprnt+3)& (0+255),w,b
 20291  0026DA  237F               	addwfc	(__doprnt@width+1)& (0+255),f,b
 20292                           
 20293                           ; BSR set to: 0
 20294  0026DC  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20295  0026DE  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20296                           
 20297                           ; BSR set to: 0
 20298                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20299  0026E0  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20300  0026E4  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20301  0026E8                     	if	0	;tblptru may be non-zero
 20302  0026E8                     	endif
 20303  0026E8                     	if	0	;tblptru may be non-zero
 20304  0026E8                     	endif
 20305  0026E8  0008               	tblrd		*
 20306  0026EA  50F5               	movf	tablat,w,c
 20307  0026EC  ECBA  F02D         	call	_isdigit
 20308  0026F0  A0D8               	btfss	status,0,c
 20309  0026F2  D107               	goto	l1633
 20310  0026F4  D7CF               	goto	l1631
 20311  0026F6                     
 20312                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 20313  0026F6  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20314  0026FA  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20315  0026FE  CFDF F072          	movff	indf2,??__doprnt
 20316  002702  0E02               	movlw	2
 20317  002704  26DE               	addwf	postinc2,f,c
 20318  002706  CFDF F073          	movff	indf2,??__doprnt+1
 20319  00270A  0E00               	movlw	0
 20320  00270C  22DD               	addwfc	postdec2,f,c
 20321  00270E  C072  FFD9         	movff	??__doprnt,fsr2l
 20322  002712  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20323  002716  CFDE F07C          	movff	postinc2,__doprnt@cp
 20324  00271A  CFDD F07D          	movff	postdec2,__doprnt@cp+1
 20325                           
 20326                           ;doprnt.c: 740: if(!cp)
 20327  00271E  0100               	movlb	0	; () banked
 20328  002720  517C               	movf	__doprnt@cp& (0+255),w,b
 20329  002722  117D               	iorwf	(__doprnt@cp+1)& (0+255),w,b
 20330  002724  A4D8               	btfss	status,2,c
 20331  002726  D004               	goto	l1640
 20332                           
 20333                           ; BSR set to: 0
 20334                           ;doprnt.c: 741: cp = "(null)";
 20335  002728  0E75               	movlw	low STR_134
 20336  00272A  6F7C               	movwf	__doprnt@cp& (0+255),b
 20337  00272C  0E7F               	movlw	high STR_134
 20338  00272E  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20339  002730                     l1640:
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;doprnt.c: 745: len = 0;
 20343                           
 20344                           ; BSR set to: 0
 20345  002730  0E00               	movlw	0
 20346  002732  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20347  002734  0E00               	movlw	0
 20348  002736  6F7A               	movwf	__doprnt@len& (0+255),b
 20349                           
 20350                           ;doprnt.c: 746: while(cp[len])
 20351  002738  D003               	goto	l1641
 20352  00273A                     
 20353                           ;doprnt.c: 747: len++;
 20354                           
 20355                           ; BSR set to: 0
 20356  00273A  0100               	movlb	0	; () banked
 20357  00273C  4B7A               	infsnz	__doprnt@len& (0+255),f,b
 20358  00273E  2B7B               	incf	(__doprnt@len+1)& (0+255),f,b
 20359  002740                     l1641:
 20360                           
 20361                           ; BSR set to: 0
 20362                           
 20363                           ; BSR set to: 0
 20364  002740  517A               	movf	__doprnt@len& (0+255),w,b
 20365  002742  257C               	addwf	__doprnt@cp& (0+255),w,b
 20366  002744  6F72               	movwf	??__doprnt& (0+255),b
 20367  002746  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20368  002748  217D               	addwfc	(__doprnt@cp+1)& (0+255),w,b
 20369  00274A  6F73               	movwf	(??__doprnt+1)& (0+255),b
 20370  00274C  C072  FFF6         	movff	??__doprnt,tblptrl
 20371  002750  C073  FFF7         	movff	??__doprnt+1,tblptrh
 20372  002754  6AF8               	clrf	tblptru,c
 20373  002756  0E07               	movlw	(high __ramtop+-1)
 20374  002758  64F7               	cpfsgt	tblptrh,c
 20375  00275A  D003               	bra	u7947
 20376  00275C  0008               	tblrd		*
 20377  00275E  50F5               	movf	tablat,w,c
 20378  002760  D005               	bra	u7940
 20379  002762                     u7947:
 20380  002762  CFF6 FFE9          	movff	tblptrl,fsr0l
 20381  002766  CFF7 FFEA          	movff	tblptrh,fsr0h
 20382  00276A  50EF               	movf	indf0,w,c
 20383  00276C                     u7940:
 20384  00276C  0900               	iorlw	0
 20385  00276E  A4D8               	btfss	status,2,c
 20386  002770  D7E4               	goto	l1642
 20387  002772                     u7950:
 20388                           
 20389                           ;doprnt.c: 757: if(width > len)
 20390                           
 20391                           ;doprnt.c: 750: dostring:
 20392  002772  0100               	movlb	0	; () banked
 20393  002774  517E               	movf	__doprnt@width& (0+255),w,b
 20394  002776  5D7A               	subwf	__doprnt@len& (0+255),w,b
 20395  002778  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20396  00277A  597B               	subwfb	(__doprnt@len+1)& (0+255),w,b
 20397  00277C  B0D8               	btfsc	status,0,c
 20398  00277E  D005               	goto	l1645
 20399                           
 20400                           ; BSR set to: 0
 20401                           ;doprnt.c: 758: width -= len;
 20402  002780  517A               	movf	__doprnt@len& (0+255),w,b
 20403  002782  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20404  002784  517B               	movf	(__doprnt@len+1)& (0+255),w,b
 20405  002786  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20406  002788  D037               	goto	l1650
 20407  00278A                     l1645:
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;doprnt.c: 759: else
 20411                           ;doprnt.c: 760: width = 0;
 20412                           
 20413                           ; BSR set to: 0
 20414  00278A  0E00               	movlw	0
 20415  00278C  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20416  00278E  0E00               	movlw	0
 20417  002790  6F7E               	movwf	__doprnt@width& (0+255),b
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;doprnt.c: 764: while(width--)
 20421  002792  D032               	goto	l1650
 20422  002794                     l6392:
 20423                           
 20424                           ; BSR set to: 0
 20425                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20426  002794  EE20 F002          	lfsr	2,2
 20427  002798  516C               	movf	__doprnt@pb& (0+255),w,b
 20428  00279A  26D9               	addwf	fsr2l,f,c
 20429  00279C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20430  00279E  22DA               	addwfc	fsr2h,f,c
 20431  0027A0  50DE               	movf	postinc2,w,c
 20432  0027A2  10DE               	iorwf	postinc2,w,c
 20433  0027A4  B4D8               	btfsc	status,2,c
 20434  0027A6  D013               	goto	l1649
 20435                           
 20436                           ; BSR set to: 0
 20437  0027A8  EE20 F002          	lfsr	2,2
 20438  0027AC  516C               	movf	__doprnt@pb& (0+255),w,b
 20439  0027AE  26D9               	addwf	fsr2l,f,c
 20440  0027B0  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20441  0027B2  22DA               	addwfc	fsr2h,f,c
 20442  0027B4  D801               	call	u7988
 20443  0027B6  D020               	goto	l1650
 20444  0027B8                     u7988:
 20445  0027B8  0005               	push	
 20446  0027BA  6EFA               	movwf	pclath,c
 20447  0027BC  50DE               	movf	postinc2,w,c
 20448  0027BE  6EFD               	movwf	tosl,c
 20449  0027C0  50DE               	movf	postinc2,w,c
 20450  0027C2  6EFE               	movwf	tosh,c
 20451  0027C4  50F8               	movf	tblptru,w,c
 20452  0027C6  6EFF               	movwf	tosu,c
 20453  0027C8  50FA               	movf	pclath,w,c
 20454  0027CA  0E20               	movlw	32
 20455  0027CC  0012               	return		;indir
 20456  0027CE                     l1649:
 20457  0027CE  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20458  0027D2  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20459  0027D6  CFDE F072          	movff	postinc2,??__doprnt
 20460  0027DA  CFDD F073          	movff	postdec2,??__doprnt+1
 20461  0027DE  C072  FFD9         	movff	??__doprnt,fsr2l
 20462  0027E2  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20463  0027E6  0E20               	movlw	32
 20464  0027E8  6EDF               	movwf	indf2,c
 20465  0027EA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20466  0027EE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20467  0027F2  2ADE               	incf	postinc2,f,c
 20468  0027F4  0E00               	movlw	0
 20469  0027F6  22DD               	addwfc	postdec2,f,c
 20470  0027F8                     l1650:
 20471  0027F8  0100               	movlb	0	; () banked
 20472  0027FA  077E               	decf	__doprnt@width& (0+255),f,b
 20473  0027FC  A0D8               	btfss	status,0,c
 20474  0027FE  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20475  002800  297E               	incf	__doprnt@width& (0+255),w,b
 20476  002802  E1C8               	bnz	l6392
 20477  002804  297F               	incf	(__doprnt@width+1)& (0+255),w,b
 20478  002806  B4D8               	btfsc	status,2,c
 20479  002808  D058               	goto	l1655
 20480  00280A  D7C4               	goto	l1648
 20481  00280C                     l6402:
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 20485  00280C  EE20 F002          	lfsr	2,2
 20486  002810  516C               	movf	__doprnt@pb& (0+255),w,b
 20487  002812  26D9               	addwf	fsr2l,f,c
 20488  002814  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20489  002816  22DA               	addwfc	fsr2h,f,c
 20490  002818  50DE               	movf	postinc2,w,c
 20491  00281A  10DE               	iorwf	postinc2,w,c
 20492  00281C  B4D8               	btfsc	status,2,c
 20493  00281E  D026               	goto	l1654
 20494                           
 20495                           ; BSR set to: 0
 20496  002820  EE20 F002          	lfsr	2,2
 20497  002824  516C               	movf	__doprnt@pb& (0+255),w,b
 20498  002826  26D9               	addwf	fsr2l,f,c
 20499  002828  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20500  00282A  22DA               	addwfc	fsr2h,f,c
 20501  00282C  D801               	call	u8018
 20502  00282E  D01A               	goto	u8019
 20503  002830                     u8018:
 20504  002830  0005               	push	
 20505  002832  6EFA               	movwf	pclath,c
 20506  002834  50DE               	movf	postinc2,w,c
 20507  002836  6EFD               	movwf	tosl,c
 20508  002838  50DE               	movf	postinc2,w,c
 20509  00283A  6EFE               	movwf	tosh,c
 20510  00283C  50F8               	movf	tblptru,w,c
 20511  00283E  6EFF               	movwf	tosu,c
 20512  002840  50FA               	movf	pclath,w,c
 20513  002842  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20514  002846  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20515  00284A  6AF8               	clrf	tblptru,c
 20516  00284C  0E07               	movlw	(high __ramtop+-1)
 20517  00284E  64F7               	cpfsgt	tblptrh,c
 20518  002850  D003               	bra	u8027
 20519  002852  0008               	tblrd		*
 20520  002854  50F5               	movf	tablat,w,c
 20521  002856  D005               	bra	u8020
 20522  002858                     u8027:
 20523  002858  CFF6 FFE9          	movff	tblptrl,fsr0l
 20524  00285C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20525  002860  50EF               	movf	indf0,w,c
 20526  002862                     u8020:
 20527  002862  0012               	return		;indir
 20528  002864                     u8019:
 20529  002864  0100               	movlb	0	; () banked
 20530  002866  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20531  002868  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20532  00286A  D027               	goto	l1655
 20533  00286C                     l1654:
 20534                           
 20535                           ; BSR set to: 0
 20536                           
 20537                           ; BSR set to: 0
 20538  00286C  C07C  FFF6         	movff	__doprnt@cp,tblptrl
 20539  002870  C07D  FFF7         	movff	__doprnt@cp+1,tblptrh
 20540  002874  6AF8               	clrf	tblptru,c
 20541  002876  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20542  00287A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20543  00287E  CFDE F072          	movff	postinc2,??__doprnt
 20544  002882  CFDD F073          	movff	postdec2,??__doprnt+1
 20545  002886  C072  FFD9         	movff	??__doprnt,fsr2l
 20546  00288A  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20547  00288E  0E07               	movlw	(high __ramtop+-1)
 20548  002890  64F7               	cpfsgt	tblptrh,c
 20549  002892  D003               	bra	u8037
 20550  002894  0008               	tblrd		*
 20551  002896  50F5               	movf	tablat,w,c
 20552  002898  D005               	bra	u8030
 20553  00289A                     u8037:
 20554  00289A  CFF6 FFE9          	movff	tblptrl,fsr0l
 20555  00289E  CFF7 FFEA          	movff	tblptrh,fsr0h
 20556  0028A2  50EF               	movf	indf0,w,c
 20557  0028A4                     u8030:
 20558  0028A4  6EDF               	movwf	indf2,c
 20559  0028A6  0100               	movlb	0	; () banked
 20560  0028A8  4B7C               	infsnz	__doprnt@cp& (0+255),f,b
 20561  0028AA  2B7D               	incf	(__doprnt@cp+1)& (0+255),f,b
 20562                           
 20563                           ; BSR set to: 0
 20564  0028AC  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20565  0028B0  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20566  0028B4  2ADE               	incf	postinc2,f,c
 20567  0028B6  0E00               	movlw	0
 20568  0028B8  22DD               	addwfc	postdec2,f,c
 20569  0028BA                     l1655:
 20570                           
 20571                           ; BSR set to: 0
 20572                           
 20573                           ; BSR set to: 0
 20574                           
 20575                           ; BSR set to: 0
 20576  0028BA  077A               	decf	__doprnt@len& (0+255),f,b
 20577  0028BC  A0D8               	btfss	status,0,c
 20578  0028BE  077B               	decf	(__doprnt@len+1)& (0+255),f,b
 20579  0028C0  297A               	incf	__doprnt@len& (0+255),w,b
 20580  0028C2  E1A4               	bnz	l6402
 20581  0028C4  297B               	incf	(__doprnt@len+1)& (0+255),w,b
 20582  0028C6  B4D8               	btfsc	status,2,c
 20583  0028C8  D163               	goto	u8210
 20584  0028CA  D7A0               	goto	l1653
 20585  0028CC                     
 20586                           ; BSR set to: 0
 20587                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20588                           
 20589                           ; BSR set to: 0
 20590  0028CC  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20591  0028D0  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20592  0028D4  CFDF F072          	movff	indf2,??__doprnt
 20593  0028D8  0E02               	movlw	2
 20594  0028DA  26DE               	addwf	postinc2,f,c
 20595  0028DC  CFDF F073          	movff	indf2,??__doprnt+1
 20596  0028E0  0E00               	movlw	0
 20597  0028E2  22DD               	addwfc	postdec2,f,c
 20598  0028E4  C072  FFD9         	movff	??__doprnt,fsr2l
 20599  0028E8  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20600  0028EC  50DF               	movf	indf2,w,c
 20601  0028EE  6F80               	movwf	__doprnt@c& (0+255),b
 20602  0028F0                     
 20603                           ; BSR set to: 0
 20604                           ;doprnt.c: 805: cp = (char *)&c;
 20605                           
 20606                           ; BSR set to: 0
 20607  0028F0  0E80               	movlw	low __doprnt@c
 20608  0028F2  6F7C               	movwf	__doprnt@cp& (0+255),b
 20609  0028F4  0E00               	movlw	high __doprnt@c
 20610  0028F6  6F7D               	movwf	(__doprnt@cp+1)& (0+255),b
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;doprnt.c: 806: len = 1;
 20614  0028F8  0E00               	movlw	0
 20615  0028FA  6F7B               	movwf	(__doprnt@len+1)& (0+255),b
 20616  0028FC  0E01               	movlw	1
 20617  0028FE  6F7A               	movwf	__doprnt@len& (0+255),b
 20618                           
 20619                           ;doprnt.c: 807: goto dostring;
 20620  002900  D738               	goto	u7950
 20621  002902                     l1633:
 20622                           
 20623                           ; BSR set to: 0
 20624  002902  C06E  FFF6         	movff	__doprnt@f,tblptrl
 20625  002906  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 20626  00290A  0100               	movlb	0	; () banked
 20627  00290C  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 20628  00290E  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 20629  002910                     	if	0	;tblptru may be non-zero
 20630  002910                     	endif
 20631  002910                     	if	0	;tblptru may be non-zero
 20632  002910                     	endif
 20633  002910  0008               	tblrd		*
 20634  002912  CFF5 F080          	movff	tablat,__doprnt@c
 20635  002916  5180               	movf	__doprnt@c& (0+255),w,b
 20636                           
 20637                           ; Switch size 1, requested type "space"
 20638                           ; Number of cases is 5, Range of values is 0 to 115
 20639                           ; switch strategies available:
 20640                           ; Name         Instructions Cycles
 20641                           ; simple_byte           16     9 (average)
 20642                           ;	Chosen strategy is simple_byte
 20643  002918  0A00               	xorlw	0	; case 0
 20644  00291A  B4D8               	btfsc	status,2,c
 20645  00291C  D146               	goto	u8220
 20646  00291E  0A63               	xorlw	99	; case 99
 20647  002920  B4D8               	btfsc	status,2,c
 20648  002922  D7D4               	goto	l1657
 20649  002924  0A07               	xorlw	7	; case 100
 20650  002926  B4D8               	btfsc	status,2,c
 20651  002928  D007               	goto	l1638
 20652  00292A  0A0D               	xorlw	13	; case 105
 20653  00292C  B4D8               	btfsc	status,2,c
 20654  00292E  D004               	goto	l1638
 20655  002930  0A1A               	xorlw	26	; case 115
 20656  002932  B4D8               	btfsc	status,2,c
 20657  002934  D6E0               	goto	l1639
 20658  002936  D7DC               	goto	l1658
 20659  002938                     l1638:
 20660                           
 20661                           ;doprnt.c: 1253: {
 20662                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20663                           
 20664                           ; BSR set to: 0
 20665  002938  C070  FFD9         	movff	__doprnt@ap,fsr2l
 20666  00293C  C071  FFDA         	movff	__doprnt@ap+1,fsr2h
 20667  002940  CFDF F072          	movff	indf2,??__doprnt
 20668  002944  0E02               	movlw	2
 20669  002946  26DE               	addwf	postinc2,f,c
 20670  002948  CFDF F073          	movff	indf2,??__doprnt+1
 20671  00294C  0E00               	movlw	0
 20672  00294E  22DD               	addwfc	postdec2,f,c
 20673  002950  C072  FFD9         	movff	??__doprnt,fsr2l
 20674  002954  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20675  002958  CFDE F078          	movff	postinc2,__doprnt@val
 20676  00295C  CFDD F079          	movff	postdec2,__doprnt@val+1
 20677                           
 20678                           ;doprnt.c: 1261: if((int)val < 0) {
 20679  002960  0100               	movlb	0	; () banked
 20680  002962  AF79               	btfss	(__doprnt@val+1)& (0+255),7,b
 20681  002964  D006               	goto	l1659
 20682                           
 20683                           ; BSR set to: 0
 20684                           ;doprnt.c: 1262: flag |= 0x03;
 20685  002966  0E03               	movlw	3
 20686  002968  1377               	iorwf	__doprnt@flag& (0+255),f,b
 20687                           
 20688                           ; BSR set to: 0
 20689                           ;doprnt.c: 1263: val = -val;
 20690  00296A  6D78               	negf	__doprnt@val& (0+255),b
 20691  00296C  1F79               	comf	(__doprnt@val+1)& (0+255),f,b
 20692  00296E  B0D8               	btfsc	status,0,c
 20693  002970  2B79               	incf	(__doprnt@val+1)& (0+255),f,b
 20694  002972                     l1659:
 20695                           
 20696                           ; BSR set to: 0
 20697                           ;doprnt.c: 1264: }
 20698                           ;doprnt.c: 1266: }
 20699                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20700                           
 20701                           ; BSR set to: 0
 20702  002972  0E01               	movlw	1
 20703  002974  6F80               	movwf	__doprnt@c& (0+255),b
 20704  002976                     l6436:
 20705                           
 20706                           ; BSR set to: 0
 20707  002976  0E05               	movlw	5
 20708  002978  1980               	xorwf	__doprnt@c& (0+255),w,b
 20709  00297A  B4D8               	btfsc	status,2,c
 20710  00297C  D012               	goto	u8080
 20711                           
 20712                           ; BSR set to: 0
 20713                           ;doprnt.c: 1306: if(val < dpowers[c])
 20714                           
 20715                           ; BSR set to: 0
 20716                           
 20717                           ; BSR set to: 0
 20718  00297E  5180               	movf	__doprnt@c& (0+255),w,b
 20719  002980  0D02               	mullw	2
 20720  002982  0E65               	movlw	low _dpowers
 20721  002984  24F3               	addwf	prodl,w,c
 20722  002986  6EF6               	movwf	tblptrl,c
 20723  002988  0E78               	movlw	high _dpowers
 20724  00298A  20F4               	addwfc	prodh,w,c
 20725  00298C  6EF7               	movwf	tblptrh,c
 20726  00298E                     	if	0	;There are less than 3 active tblptr bytes
 20727  00298E                     	endif
 20728  00298E  0009               	tblrd		*+
 20729  002990  50F5               	movf	tablat,w,c
 20730  002992  5D78               	subwf	__doprnt@val& (0+255),w,b
 20731  002994  0009               	tblrd		*+
 20732  002996  50F5               	movf	tablat,w,c
 20733  002998  5979               	subwfb	(__doprnt@val+1)& (0+255),w,b
 20734  00299A  A0D8               	btfss	status,0,c
 20735  00299C  D002               	goto	u8080
 20736                           
 20737                           ; BSR set to: 0
 20738                           
 20739                           ; BSR set to: 0
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;doprnt.c: 1307: break;
 20743  00299E  2B80               	incf	__doprnt@c& (0+255),f,b
 20744  0029A0  D7EA               	goto	l6436
 20745  0029A2                     u8080:
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;doprnt.c: 1345: if(width && flag & 0x03)
 20749                           
 20750                           ; BSR set to: 0
 20751  0029A2  517E               	movf	__doprnt@width& (0+255),w,b
 20752  0029A4  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20753  0029A6  B4D8               	btfsc	status,2,c
 20754  0029A8  D009               	goto	l1663
 20755                           
 20756                           ; BSR set to: 0
 20757  0029AA  C077  F072         	movff	__doprnt@flag,??__doprnt
 20758  0029AE  0E03               	movlw	3
 20759  0029B0  1772               	andwf	??__doprnt& (0+255),f,b
 20760  0029B2  B4D8               	btfsc	status,2,c
 20761  0029B4  D003               	goto	l1663
 20762                           
 20763                           ; BSR set to: 0
 20764                           ;doprnt.c: 1346: width--;
 20765  0029B6  077E               	decf	__doprnt@width& (0+255),f,b
 20766  0029B8  A0D8               	btfss	status,0,c
 20767  0029BA  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20768  0029BC                     l1663:
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;doprnt.c: 1381: if(width > c)
 20772                           
 20773                           ; BSR set to: 0
 20774  0029BC  0E80               	movlw	128
 20775  0029BE  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20776  0029C0  0E7F               	movlw	127
 20777  0029C2  6F72               	movwf	??__doprnt& (0+255),b
 20778  0029C4  517E               	movf	__doprnt@width& (0+255),w,b
 20779  0029C6  5D80               	subwf	__doprnt@c& (0+255),w,b
 20780  0029C8  517F               	movf	(__doprnt@width+1)& (0+255),w,b
 20781  0029CA  0A80               	xorlw	128
 20782  0029CC  5972               	subwfb	??__doprnt& (0+255),w,b
 20783  0029CE  B0D8               	btfsc	status,0,c
 20784  0029D0  D007               	goto	l1664
 20785                           
 20786                           ; BSR set to: 0
 20787                           ;doprnt.c: 1382: width -= c;
 20788  0029D2  5180               	movf	__doprnt@c& (0+255),w,b
 20789  0029D4  5F7E               	subwf	__doprnt@width& (0+255),f,b
 20790  0029D6  0E00               	movlw	0
 20791  0029D8  BF80               	btfsc	__doprnt@c& (0+255),7,b
 20792  0029DA  0EFF               	movlw	255
 20793  0029DC  5B7F               	subwfb	(__doprnt@width+1)& (0+255),f,b
 20794  0029DE  D004               	goto	l1665
 20795  0029E0                     l1664:
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;doprnt.c: 1383: else
 20799                           ;doprnt.c: 1384: width = 0;
 20800                           
 20801                           ; BSR set to: 0
 20802  0029E0  0E00               	movlw	0
 20803  0029E2  6F7F               	movwf	(__doprnt@width+1)& (0+255),b
 20804  0029E4  0E00               	movlw	0
 20805  0029E6  6F7E               	movwf	__doprnt@width& (0+255),b
 20806  0029E8                     l1665:
 20807                           
 20808                           ; BSR set to: 0
 20809                           ;doprnt.c: 1422: {
 20810                           ;doprnt.c: 1424: if(width
 20811                           ;doprnt.c: 1428: )
 20812                           
 20813                           ; BSR set to: 0
 20814  0029E8  517E               	movf	__doprnt@width& (0+255),w,b
 20815  0029EA  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20816  0029EC  B4D8               	btfsc	status,2,c
 20817  0029EE  D03A               	goto	u8150
 20818  0029F0                     u8120:
 20819                           
 20820                           ; BSR set to: 0
 20821                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 20822                           
 20823                           ; BSR set to: 0
 20824                           
 20825                           ;doprnt.c: 1429: do
 20826  0029F0  EE20 F002          	lfsr	2,2
 20827  0029F4  516C               	movf	__doprnt@pb& (0+255),w,b
 20828  0029F6  26D9               	addwf	fsr2l,f,c
 20829  0029F8  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20830  0029FA  22DA               	addwfc	fsr2h,f,c
 20831  0029FC  50DE               	movf	postinc2,w,c
 20832  0029FE  10DE               	iorwf	postinc2,w,c
 20833  002A00  B4D8               	btfsc	status,2,c
 20834  002A02  D013               	goto	l1668
 20835                           
 20836                           ; BSR set to: 0
 20837  002A04  EE20 F002          	lfsr	2,2
 20838  002A08  516C               	movf	__doprnt@pb& (0+255),w,b
 20839  002A0A  26D9               	addwf	fsr2l,f,c
 20840  002A0C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20841  002A0E  22DA               	addwfc	fsr2h,f,c
 20842  002A10  D801               	call	u8148
 20843  002A12  D020               	goto	l1669
 20844  002A14                     u8148:
 20845  002A14  0005               	push	
 20846  002A16  6EFA               	movwf	pclath,c
 20847  002A18  50DE               	movf	postinc2,w,c
 20848  002A1A  6EFD               	movwf	tosl,c
 20849  002A1C  50DE               	movf	postinc2,w,c
 20850  002A1E  6EFE               	movwf	tosh,c
 20851  002A20  50F8               	movf	tblptru,w,c
 20852  002A22  6EFF               	movwf	tosu,c
 20853  002A24  50FA               	movf	pclath,w,c
 20854  002A26  0E20               	movlw	32
 20855  002A28  0012               	return		;indir
 20856  002A2A                     l1668:
 20857  002A2A  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20858  002A2E  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20859  002A32  CFDE F072          	movff	postinc2,??__doprnt
 20860  002A36  CFDD F073          	movff	postdec2,??__doprnt+1
 20861  002A3A  C072  FFD9         	movff	??__doprnt,fsr2l
 20862  002A3E  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20863  002A42  0E20               	movlw	32
 20864  002A44  6EDF               	movwf	indf2,c
 20865  002A46  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20866  002A4A  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20867  002A4E  2ADE               	incf	postinc2,f,c
 20868  002A50  0E00               	movlw	0
 20869  002A52  22DD               	addwfc	postdec2,f,c
 20870  002A54                     l1669:
 20871                           
 20872                           ;doprnt.c: 1431: while(--width);
 20873  002A54  0100               	movlb	0	; () banked
 20874  002A56  077E               	decf	__doprnt@width& (0+255),f,b
 20875  002A58  A0D8               	btfss	status,0,c
 20876  002A5A  077F               	decf	(__doprnt@width+1)& (0+255),f,b
 20877  002A5C  517E               	movf	__doprnt@width& (0+255),w,b
 20878  002A5E  117F               	iorwf	(__doprnt@width+1)& (0+255),w,b
 20879  002A60  A4D8               	btfss	status,2,c
 20880  002A62  D7C6               	goto	u8120
 20881  002A64                     u8150:
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;doprnt.c: 1438: if(flag & 0x03)
 20885                           
 20886                           ; BSR set to: 0
 20887                           
 20888                           ; BSR set to: 0
 20889  002A64  C077  F072         	movff	__doprnt@flag,??__doprnt
 20890  002A68  0E03               	movlw	3
 20891  002A6A  1772               	andwf	??__doprnt& (0+255),f,b
 20892  002A6C  B4D8               	btfsc	status,2,c
 20893  002A6E  D032               	goto	l1673
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 20897  002A70  EE20 F002          	lfsr	2,2
 20898  002A74  516C               	movf	__doprnt@pb& (0+255),w,b
 20899  002A76  26D9               	addwf	fsr2l,f,c
 20900  002A78  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20901  002A7A  22DA               	addwfc	fsr2h,f,c
 20902  002A7C  50DE               	movf	postinc2,w,c
 20903  002A7E  10DE               	iorwf	postinc2,w,c
 20904  002A80  B4D8               	btfsc	status,2,c
 20905  002A82  D013               	goto	l1672
 20906                           
 20907                           ; BSR set to: 0
 20908  002A84  EE20 F002          	lfsr	2,2
 20909  002A88  516C               	movf	__doprnt@pb& (0+255),w,b
 20910  002A8A  26D9               	addwf	fsr2l,f,c
 20911  002A8C  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20912  002A8E  22DA               	addwfc	fsr2h,f,c
 20913  002A90  D801               	call	u8188
 20914  002A92  D020               	goto	l1673
 20915  002A94                     u8188:
 20916  002A94  0005               	push	
 20917  002A96  6EFA               	movwf	pclath,c
 20918  002A98  50DE               	movf	postinc2,w,c
 20919  002A9A  6EFD               	movwf	tosl,c
 20920  002A9C  50DE               	movf	postinc2,w,c
 20921  002A9E  6EFE               	movwf	tosh,c
 20922  002AA0  50F8               	movf	tblptru,w,c
 20923  002AA2  6EFF               	movwf	tosu,c
 20924  002AA4  50FA               	movf	pclath,w,c
 20925  002AA6  0E2D               	movlw	45
 20926  002AA8  0012               	return		;indir
 20927  002AAA                     l1672:
 20928  002AAA  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20929  002AAE  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20930  002AB2  CFDE F072          	movff	postinc2,??__doprnt
 20931  002AB6  CFDD F073          	movff	postdec2,??__doprnt+1
 20932  002ABA  C072  FFD9         	movff	??__doprnt,fsr2l
 20933  002ABE  C073  FFDA         	movff	??__doprnt+1,fsr2h
 20934  002AC2  0E2D               	movlw	45
 20935  002AC4  6EDF               	movwf	indf2,c
 20936  002AC6  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 20937  002ACA  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 20938  002ACE  2ADE               	incf	postinc2,f,c
 20939  002AD0  0E00               	movlw	0
 20940  002AD2  22DD               	addwfc	postdec2,f,c
 20941  002AD4                     l1673:
 20942                           
 20943                           ;doprnt.c: 1469: }
 20944                           ;doprnt.c: 1472: prec = c;
 20945  002AD4  C080  F076         	movff	__doprnt@c,__doprnt@prec
 20946                           
 20947                           ;doprnt.c: 1474: while(prec--) {
 20948  002AD8  D056               	goto	l1677
 20949  002ADA                     
 20950                           ;doprnt.c: 1478: {
 20951                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20952  002ADA  0100               	movlb	0	; () banked
 20953  002ADC  5176               	movf	__doprnt@prec& (0+255),w,b
 20954  002ADE  0D02               	mullw	2
 20955  002AE0  0E65               	movlw	low _dpowers
 20956  002AE2  24F3               	addwf	prodl,w,c
 20957  002AE4  6EF6               	movwf	tblptrl,c
 20958  002AE6  0E78               	movlw	high _dpowers
 20959  002AE8  20F4               	addwfc	prodh,w,c
 20960  002AEA  6EF7               	movwf	tblptrh,c
 20961  002AEC                     	if	0	;There are less than 3 active tblptr bytes
 20962  002AEC                     	endif
 20963  002AEC  0009               	tblrd		*+
 20964  002AEE  CFF5 F062          	movff	tablat,___lwdiv@divisor
 20965  002AF2  000A               	tblrd		*-
 20966  002AF4  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 20967  002AF8  C078  F060         	movff	__doprnt@val,___lwdiv@dividend
 20968  002AFC  C079  F061         	movff	__doprnt@val+1,___lwdiv@dividend+1
 20969  002B00  EC2D  F02B         	call	___lwdiv
 20970  002B04  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 20971  002B08  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 20972  002B0C  0E00               	movlw	0
 20973  002B0E  0100               	movlb	0	; () banked
 20974  002B10  6F6A               	movwf	(___lwmod@divisor+1)& (0+255),b
 20975  002B12  0E0A               	movlw	10
 20976  002B14  6F69               	movwf	___lwmod@divisor& (0+255),b
 20977  002B16  ECEF  F02B         	call	___lwmod	;wreg free
 20978  002B1A  0100               	movlb	0	; () banked
 20979  002B1C  5167               	movf	?___lwmod& (0+255),w,b
 20980  002B1E  0F30               	addlw	48
 20981  002B20  6F80               	movwf	__doprnt@c& (0+255),b
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;doprnt.c: 1523: }
 20985                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 20986  002B22  EE20 F002          	lfsr	2,2
 20987  002B26  516C               	movf	__doprnt@pb& (0+255),w,b
 20988  002B28  26D9               	addwf	fsr2l,f,c
 20989  002B2A  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 20990  002B2C  22DA               	addwfc	fsr2h,f,c
 20991  002B2E  50DE               	movf	postinc2,w,c
 20992  002B30  10DE               	iorwf	postinc2,w,c
 20993  002B32  B4D8               	btfsc	status,2,c
 20994  002B34  D013               	goto	l1676
 20995                           
 20996                           ; BSR set to: 0
 20997  002B36  EE20 F002          	lfsr	2,2
 20998  002B3A  516C               	movf	__doprnt@pb& (0+255),w,b
 20999  002B3C  26D9               	addwf	fsr2l,f,c
 21000  002B3E  516D               	movf	(__doprnt@pb+1)& (0+255),w,b
 21001  002B40  22DA               	addwfc	fsr2h,f,c
 21002  002B42  D801               	call	u8208
 21003  002B44  D020               	goto	l1677
 21004  002B46                     u8208:
 21005  002B46  0005               	push	
 21006  002B48  6EFA               	movwf	pclath,c
 21007  002B4A  50DE               	movf	postinc2,w,c
 21008  002B4C  6EFD               	movwf	tosl,c
 21009  002B4E  50DE               	movf	postinc2,w,c
 21010  002B50  6EFE               	movwf	tosh,c
 21011  002B52  50F8               	movf	tblptru,w,c
 21012  002B54  6EFF               	movwf	tosu,c
 21013  002B56  50FA               	movf	pclath,w,c
 21014  002B58  5180               	movf	__doprnt@c& (0+255),w,b
 21015  002B5A  0012               	return		;indir
 21016  002B5C                     l1676:
 21017  002B5C  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21018  002B60  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21019  002B64  CFDE F072          	movff	postinc2,??__doprnt
 21020  002B68  CFDD F073          	movff	postdec2,??__doprnt+1
 21021  002B6C  C072  FFD9         	movff	??__doprnt,fsr2l
 21022  002B70  C073  FFDA         	movff	??__doprnt+1,fsr2h
 21023  002B74  C080  FFDF         	movff	__doprnt@c,indf2
 21024  002B78  C06C  FFD9         	movff	__doprnt@pb,fsr2l
 21025  002B7C  C06D  FFDA         	movff	__doprnt@pb+1,fsr2h
 21026  002B80  2ADE               	incf	postinc2,f,c
 21027  002B82  0E00               	movlw	0
 21028  002B84  22DD               	addwfc	postdec2,f,c
 21029  002B86                     l1677:
 21030  002B86  0100               	movlb	0	; () banked
 21031  002B88  0776               	decf	__doprnt@prec& (0+255),f,b
 21032  002B8A  2976               	incf	__doprnt@prec& (0+255),w,b
 21033  002B8C  A4D8               	btfss	status,2,c
 21034  002B8E  D7A5               	goto	l1675
 21035  002B90                     u8210:
 21036                           
 21037                           ; BSR set to: 0
 21038                           
 21039                           ; BSR set to: 0
 21040  002B90  C06E  FFF6         	movff	__doprnt@f,tblptrl
 21041  002B94  C06F  FFF7         	movff	__doprnt@f+1,tblptrh
 21042  002B98  0100               	movlb	0	; () banked
 21043  002B9A  4B6E               	infsnz	__doprnt@f& (0+255),f,b
 21044  002B9C  2B6F               	incf	(__doprnt@f+1)& (0+255),f,b
 21045  002B9E                     	if	0	;tblptru may be non-zero
 21046  002B9E                     	endif
 21047  002B9E                     	if	0	;tblptru may be non-zero
 21048  002B9E                     	endif
 21049  002B9E  0008               	tblrd		*
 21050  002BA0  CFF5 F080          	movff	tablat,__doprnt@c
 21051  002BA4  5180               	movf	__doprnt@c& (0+255),w,b
 21052  002BA6  A4D8               	btfss	status,2,c
 21053  002BA8  D527               	goto	l1626
 21054  002BAA                     u8220:
 21055                           
 21056                           ;doprnt.c: 1540: return 0;
 21057                           
 21058                           ; BSR set to: 0
 21059                           
 21060                           ;doprnt.c: 1525: }
 21061                           ;doprnt.c: 1533: }
 21062                           ;doprnt.c: 1535: alldone:
 21063                           
 21064                           ; BSR set to: 0
 21065  002BAA  0E00               	movlw	0
 21066  002BAC  0100               	movlb	0	; () banked
 21067  002BAE  6F6D               	movwf	(?__doprnt+1)& (0+255),b
 21068  002BB0  0E00               	movlw	0
 21069  002BB2  6F6C               	movwf	?__doprnt& (0+255),b
 21070  002BB4  0012               	return	
 21071  002BB6                     __end_of__doprnt:
 21072                           	opt stack 0
 21073                           tosu	equ	0xFFF
 21074                           tosh	equ	0xFFE
 21075                           tosl	equ	0xFFD
 21076                           pclath	equ	0xFFA
 21077                           tblptru	equ	0xFF8
 21078                           tblptrh	equ	0xFF7
 21079                           tblptrl	equ	0xFF6
 21080                           tablat	equ	0xFF5
 21081                           prodh	equ	0xFF4
 21082                           prodl	equ	0xFF3
 21083                           intcon	equ	0xFF2
 21084                           intcon2	equ	0xFF1
 21085                           intcon3	equ	0xFF0
 21086                           indf0	equ	0xFEF
 21087                           postinc0	equ	0xFEE
 21088                           fsr0h	equ	0xFEA
 21089                           fsr0l	equ	0xFE9
 21090                           wreg	equ	0xFE8
 21091                           indf1	equ	0xFE7
 21092                           postinc1	equ	0xFE6
 21093                           postdec1	equ	0xFE5
 21094                           plusw1	equ	0xFE3
 21095                           fsr1h	equ	0xFE2
 21096                           fsr1l	equ	0xFE1
 21097                           indf2	equ	0xFDF
 21098                           postinc2	equ	0xFDE
 21099                           postdec2	equ	0xFDD
 21100                           plusw2	equ	0xFDB
 21101                           fsr2h	equ	0xFDA
 21102                           fsr2l	equ	0xFD9
 21103                           status	equ	0xFD8
 21104                           
 21105 ;; *************** function _putch *****************
 21106 ;; Defined at:
 21107 ;;		line 35 in file "src/USART.h"
 21108 ;; Parameters:    Size  Location     Type
 21109 ;;  c               1    wreg     unsigned char 
 21110 ;; Auto vars:     Size  Location     Type
 21111 ;;  c               1    0[BANK0 ] unsigned char 
 21112 ;; Return value:  Size  Location     Type
 21113 ;;                  1    wreg      void 
 21114 ;; Registers used:
 21115 ;;		wreg
 21116 ;; Tracked objects:
 21117 ;;		On entry : 0/0
 21118 ;;		On exit  : 0/0
 21119 ;;		Unchanged: 0/0
 21120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21121 ;;      Params:         0       0       0       0       0       0       0       0       0
 21122 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21123 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21124 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21125 ;;Total ram usage:        1 bytes
 21126 ;; Hardware stack levels used:    1
 21127 ;; Hardware stack levels required when called:    6
 21128 ;; This function calls:
 21129 ;;		Nothing
 21130 ;; This function is called by:
 21131 ;;		_printf
 21132 ;;		__doprnt
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           
 21136                           	psect	text39
 21137  005C12                     __ptext39:
 21138                           	opt stack 0
 21139  005C12                     _putch:
 21140                           	opt stack 22
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;incstack = 0
 21144                           ;putch@c stored from wreg
 21145  005C12  0100               	movlb	0	; () banked
 21146  005C14  6F60               	movwf	putch@c& (0+255),b
 21147  005C16                     
 21148                           ;USART.h: 37: while (!TXSTAbits.TRMT);
 21149  005C16  A2AC               	btfss	4012,1,c	;volatile
 21150  005C18  D7FE               	goto	l6240
 21151                           
 21152                           ;USART.h: 38: TXREG = c;
 21153  005C1A  C060  FFAD         	movff	putch@c,4013	;volatile
 21154  005C1E  0012               	return		;funcret
 21155  005C20                     __end_of_putch:
 21156                           	opt stack 0
 21157                           tosu	equ	0xFFF
 21158                           tosh	equ	0xFFE
 21159                           tosl	equ	0xFFD
 21160                           pclath	equ	0xFFA
 21161                           tblptru	equ	0xFF8
 21162                           tblptrh	equ	0xFF7
 21163                           tblptrl	equ	0xFF6
 21164                           tablat	equ	0xFF5
 21165                           prodh	equ	0xFF4
 21166                           prodl	equ	0xFF3
 21167                           intcon	equ	0xFF2
 21168                           intcon2	equ	0xFF1
 21169                           intcon3	equ	0xFF0
 21170                           indf0	equ	0xFEF
 21171                           postinc0	equ	0xFEE
 21172                           fsr0h	equ	0xFEA
 21173                           fsr0l	equ	0xFE9
 21174                           wreg	equ	0xFE8
 21175                           indf1	equ	0xFE7
 21176                           postinc1	equ	0xFE6
 21177                           postdec1	equ	0xFE5
 21178                           plusw1	equ	0xFE3
 21179                           fsr1h	equ	0xFE2
 21180                           fsr1l	equ	0xFE1
 21181                           indf2	equ	0xFDF
 21182                           postinc2	equ	0xFDE
 21183                           postdec2	equ	0xFDD
 21184                           plusw2	equ	0xFDB
 21185                           fsr2h	equ	0xFDA
 21186                           fsr2l	equ	0xFD9
 21187                           status	equ	0xFD8
 21188                           
 21189 ;; *************** function _isdigit *****************
 21190 ;; Defined at:
 21191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\isdigit.c"
 21192 ;; Parameters:    Size  Location     Type
 21193 ;;  c               1    wreg     unsigned char 
 21194 ;; Auto vars:     Size  Location     Type
 21195 ;;  c               1    2[BANK0 ] unsigned char 
 21196 ;; Return value:  Size  Location     Type
 21197 ;;		None               void
 21198 ;; Registers used:
 21199 ;;		wreg, status,2, status,0
 21200 ;; Tracked objects:
 21201 ;;		On entry : 0/0
 21202 ;;		On exit  : 0/0
 21203 ;;		Unchanged: 0/0
 21204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21205 ;;      Params:         0       0       0       0       0       0       0       0       0
 21206 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21207 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21208 ;;      Totals:         0       3       0       0       0       0       0       0       0
 21209 ;;Total ram usage:        3 bytes
 21210 ;; Hardware stack levels used:    1
 21211 ;; Hardware stack levels required when called:    6
 21212 ;; This function calls:
 21213 ;;		Nothing
 21214 ;; This function is called by:
 21215 ;;		__doprnt
 21216 ;;		_atoi
 21217 ;; This function uses a non-reentrant model
 21218 ;;
 21219                           
 21220                           	psect	text40
 21221  005B74                     __ptext40:
 21222                           	opt stack 0
 21223  005B74                     _isdigit:
 21224                           	opt stack 22
 21225                           
 21226                           ;incstack = 0
 21227                           ;isdigit@c stored from wreg
 21228  005B74  0100               	movlb	0	; () banked
 21229  005B76  6F62               	movwf	isdigit@c& (0+255),b
 21230  005B78  0E00               	movlw	0
 21231  005B7A  0100               	movlb	0	; () banked
 21232  005B7C  6F61               	movwf	_isdigit$2055& (0+255),b
 21233                           
 21234                           ; BSR set to: 0
 21235  005B7E  0E3A               	movlw	58
 21236  005B80  6162               	cpfslt	isdigit@c& (0+255),b
 21237  005B82  D005               	goto	l2025
 21238                           
 21239                           ; BSR set to: 0
 21240  005B84  0E2F               	movlw	47
 21241  005B86  6562               	cpfsgt	isdigit@c& (0+255),b
 21242  005B88  D002               	goto	l2025
 21243                           
 21244                           ; BSR set to: 0
 21245  005B8A  0E01               	movlw	1
 21246  005B8C  6F61               	movwf	_isdigit$2055& (0+255),b
 21247  005B8E                     l2025:
 21248                           
 21249                           ; BSR set to: 0
 21250                           
 21251                           ; BSR set to: 0
 21252  005B8E  C061  F060         	movff	_isdigit$2055,??_isdigit
 21253  005B92  3160               	rrcf	??_isdigit& (0+255),w,b
 21254  005B94  0012               	return	
 21255  005B96                     __end_of_isdigit:
 21256                           	opt stack 0
 21257                           tosu	equ	0xFFF
 21258                           tosh	equ	0xFFE
 21259                           tosl	equ	0xFFD
 21260                           pclath	equ	0xFFA
 21261                           tblptru	equ	0xFF8
 21262                           tblptrh	equ	0xFF7
 21263                           tblptrl	equ	0xFF6
 21264                           tablat	equ	0xFF5
 21265                           prodh	equ	0xFF4
 21266                           prodl	equ	0xFF3
 21267                           intcon	equ	0xFF2
 21268                           intcon2	equ	0xFF1
 21269                           intcon3	equ	0xFF0
 21270                           indf0	equ	0xFEF
 21271                           postinc0	equ	0xFEE
 21272                           fsr0h	equ	0xFEA
 21273                           fsr0l	equ	0xFE9
 21274                           wreg	equ	0xFE8
 21275                           indf1	equ	0xFE7
 21276                           postinc1	equ	0xFE6
 21277                           postdec1	equ	0xFE5
 21278                           plusw1	equ	0xFE3
 21279                           fsr1h	equ	0xFE2
 21280                           fsr1l	equ	0xFE1
 21281                           indf2	equ	0xFDF
 21282                           postinc2	equ	0xFDE
 21283                           postdec2	equ	0xFDD
 21284                           plusw2	equ	0xFDB
 21285                           fsr2h	equ	0xFDA
 21286                           fsr2l	equ	0xFD9
 21287                           status	equ	0xFD8
 21288                           
 21289 ;; *************** function ___wmul *****************
 21290 ;; Defined at:
 21291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 21292 ;; Parameters:    Size  Location     Type
 21293 ;;  multiplier      2    0[BANK0 ] unsigned int 
 21294 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 21295 ;; Auto vars:     Size  Location     Type
 21296 ;;  product         2    4[BANK0 ] unsigned int 
 21297 ;; Return value:  Size  Location     Type
 21298 ;;                  2    0[BANK0 ] unsigned int 
 21299 ;; Registers used:
 21300 ;;		wreg, status,2, status,0, prodl, prodh
 21301 ;; Tracked objects:
 21302 ;;		On entry : 0/0
 21303 ;;		On exit  : 0/0
 21304 ;;		Unchanged: 0/0
 21305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21306 ;;      Params:         0       4       0       0       0       0       0       0       0
 21307 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21308 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21309 ;;      Totals:         0       6       0       0       0       0       0       0       0
 21310 ;;Total ram usage:        6 bytes
 21311 ;; Hardware stack levels used:    1
 21312 ;; Hardware stack levels required when called:    6
 21313 ;; This function calls:
 21314 ;;		Nothing
 21315 ;; This function is called by:
 21316 ;;		_enviaDadosWifi
 21317 ;;		_main
 21318 ;;		__doprnt
 21319 ;;		_atoi
 21320 ;; This function uses a non-reentrant model
 21321 ;;
 21322                           
 21323                           	psect	text41
 21324  005A8C                     __ptext41:
 21325                           	opt stack 0
 21326  005A8C                     ___wmul:
 21327                           	opt stack 22
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;incstack = 0
 21331  005A8C  0100               	movlb	0	; () banked
 21332  005A8E  5160               	movf	___wmul@multiplier& (0+255),w,b
 21333  005A90  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21334  005A92  CFF3 F064          	movff	prodl,___wmul@product
 21335  005A96  CFF4 F065          	movff	prodh,___wmul@product+1
 21336  005A9A  5160               	movf	___wmul@multiplier& (0+255),w,b
 21337  005A9C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 21338  005A9E  50F3               	movf	prodl,w,c
 21339  005AA0  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21340  005AA2  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 21341  005AA4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 21342  005AA6  50F3               	movf	prodl,w,c
 21343  005AA8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 21344                           
 21345                           ; BSR set to: 0
 21346  005AAA  C064  F060         	movff	___wmul@product,?___wmul
 21347  005AAE  C065  F061         	movff	___wmul@product+1,?___wmul+1
 21348  005AB2  0012               	return	
 21349  005AB4                     __end_of___wmul:
 21350                           	opt stack 0
 21351                           tosu	equ	0xFFF
 21352                           tosh	equ	0xFFE
 21353                           tosl	equ	0xFFD
 21354                           pclath	equ	0xFFA
 21355                           tblptru	equ	0xFF8
 21356                           tblptrh	equ	0xFF7
 21357                           tblptrl	equ	0xFF6
 21358                           tablat	equ	0xFF5
 21359                           prodh	equ	0xFF4
 21360                           prodl	equ	0xFF3
 21361                           intcon	equ	0xFF2
 21362                           intcon2	equ	0xFF1
 21363                           intcon3	equ	0xFF0
 21364                           indf0	equ	0xFEF
 21365                           postinc0	equ	0xFEE
 21366                           fsr0h	equ	0xFEA
 21367                           fsr0l	equ	0xFE9
 21368                           wreg	equ	0xFE8
 21369                           indf1	equ	0xFE7
 21370                           postinc1	equ	0xFE6
 21371                           postdec1	equ	0xFE5
 21372                           plusw1	equ	0xFE3
 21373                           fsr1h	equ	0xFE2
 21374                           fsr1l	equ	0xFE1
 21375                           indf2	equ	0xFDF
 21376                           postinc2	equ	0xFDE
 21377                           postdec2	equ	0xFDD
 21378                           plusw2	equ	0xFDB
 21379                           fsr2h	equ	0xFDA
 21380                           fsr2l	equ	0xFD9
 21381                           status	equ	0xFD8
 21382                           
 21383 ;; *************** function ___lwmod *****************
 21384 ;; Defined at:
 21385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 21386 ;; Parameters:    Size  Location     Type
 21387 ;;  dividend        2    7[BANK0 ] unsigned int 
 21388 ;;  divisor         2    9[BANK0 ] unsigned int 
 21389 ;; Auto vars:     Size  Location     Type
 21390 ;;  counter         1   11[BANK0 ] unsigned char 
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  2    7[BANK0 ] unsigned int 
 21393 ;; Registers used:
 21394 ;;		wreg, status,2, status,0
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/0
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21400 ;;      Params:         0       4       0       0       0       0       0       0       0
 21401 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21403 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21404 ;;Total ram usage:        5 bytes
 21405 ;; Hardware stack levels used:    1
 21406 ;; Hardware stack levels required when called:    6
 21407 ;; This function calls:
 21408 ;;		Nothing
 21409 ;; This function is called by:
 21410 ;;		__doprnt
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text42
 21415  0057DE                     __ptext42:
 21416                           	opt stack 0
 21417  0057DE                     ___lwmod:
 21418                           	opt stack 22
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;incstack = 0
 21422  0057DE  0100               	movlb	0	; () banked
 21423  0057E0  5169               	movf	___lwmod@divisor& (0+255),w,b
 21424  0057E2  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21425  0057E4  B4D8               	btfsc	status,2,c
 21426  0057E6  D018               	goto	l2119
 21427                           
 21428                           ; BSR set to: 0
 21429  0057E8  0E01               	movlw	1
 21430  0057EA  6F6B               	movwf	___lwmod@counter& (0+255),b
 21431  0057EC  D004               	goto	l2114
 21432  0057EE                     
 21433                           ; BSR set to: 0
 21434                           
 21435                           ; BSR set to: 0
 21436  0057EE  90D8               	bcf	status,0,c
 21437  0057F0  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 21438  0057F2  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21439  0057F4  2B6B               	incf	___lwmod@counter& (0+255),f,b
 21440  0057F6                     l2114:
 21441                           
 21442                           ; BSR set to: 0
 21443                           
 21444                           ; BSR set to: 0
 21445  0057F6  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21446  0057F8  D7FA               	goto	l2115
 21447  0057FA                     u7800:
 21448                           
 21449                           ; BSR set to: 0
 21450                           
 21451                           ; BSR set to: 0
 21452                           
 21453                           ; BSR set to: 0
 21454  0057FA  5169               	movf	___lwmod@divisor& (0+255),w,b
 21455  0057FC  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 21456  0057FE  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21457  005800  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21458  005802  A0D8               	btfss	status,0,c
 21459  005804  D004               	goto	l2118
 21460                           
 21461                           ; BSR set to: 0
 21462  005806  5169               	movf	___lwmod@divisor& (0+255),w,b
 21463  005808  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 21464  00580A  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21465  00580C  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21466  00580E                     l2118:
 21467                           
 21468                           ; BSR set to: 0
 21469                           
 21470                           ; BSR set to: 0
 21471  00580E  90D8               	bcf	status,0,c
 21472  005810  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21473  005812  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 21474                           
 21475                           ; BSR set to: 0
 21476  005814  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 21477  005816  D7F1               	goto	u7800
 21478  005818                     l2119:
 21479                           
 21480                           ; BSR set to: 0
 21481                           
 21482                           ; BSR set to: 0
 21483  005818  C067  F067         	movff	___lwmod@dividend,?___lwmod
 21484  00581C  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 21485                           
 21486                           ; BSR set to: 0
 21487  005820  0012               	return		;funcret
 21488  005822                     __end_of___lwmod:
 21489                           	opt stack 0
 21490                           tosu	equ	0xFFF
 21491                           tosh	equ	0xFFE
 21492                           tosl	equ	0xFFD
 21493                           pclath	equ	0xFFA
 21494                           tblptru	equ	0xFF8
 21495                           tblptrh	equ	0xFF7
 21496                           tblptrl	equ	0xFF6
 21497                           tablat	equ	0xFF5
 21498                           prodh	equ	0xFF4
 21499                           prodl	equ	0xFF3
 21500                           intcon	equ	0xFF2
 21501                           intcon2	equ	0xFF1
 21502                           intcon3	equ	0xFF0
 21503                           indf0	equ	0xFEF
 21504                           postinc0	equ	0xFEE
 21505                           fsr0h	equ	0xFEA
 21506                           fsr0l	equ	0xFE9
 21507                           wreg	equ	0xFE8
 21508                           indf1	equ	0xFE7
 21509                           postinc1	equ	0xFE6
 21510                           postdec1	equ	0xFE5
 21511                           plusw1	equ	0xFE3
 21512                           fsr1h	equ	0xFE2
 21513                           fsr1l	equ	0xFE1
 21514                           indf2	equ	0xFDF
 21515                           postinc2	equ	0xFDE
 21516                           postdec2	equ	0xFDD
 21517                           plusw2	equ	0xFDB
 21518                           fsr2h	equ	0xFDA
 21519                           fsr2l	equ	0xFD9
 21520                           status	equ	0xFD8
 21521                           
 21522 ;; *************** function ___lwdiv *****************
 21523 ;; Defined at:
 21524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 21525 ;; Parameters:    Size  Location     Type
 21526 ;;  dividend        2    0[BANK0 ] unsigned int 
 21527 ;;  divisor         2    2[BANK0 ] unsigned int 
 21528 ;; Auto vars:     Size  Location     Type
 21529 ;;  quotient        2    4[BANK0 ] unsigned int 
 21530 ;;  counter         1    6[BANK0 ] unsigned char 
 21531 ;; Return value:  Size  Location     Type
 21532 ;;                  2    0[BANK0 ] unsigned int 
 21533 ;; Registers used:
 21534 ;;		wreg, status,2, status,0
 21535 ;; Tracked objects:
 21536 ;;		On entry : 0/0
 21537 ;;		On exit  : 0/0
 21538 ;;		Unchanged: 0/0
 21539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21540 ;;      Params:         0       4       0       0       0       0       0       0       0
 21541 ;;      Locals:         0       3       0       0       0       0       0       0       0
 21542 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21543 ;;      Totals:         0       7       0       0       0       0       0       0       0
 21544 ;;Total ram usage:        7 bytes
 21545 ;; Hardware stack levels used:    1
 21546 ;; Hardware stack levels required when called:    6
 21547 ;; This function calls:
 21548 ;;		Nothing
 21549 ;; This function is called by:
 21550 ;;		__doprnt
 21551 ;; This function uses a non-reentrant model
 21552 ;;
 21553                           
 21554                           	psect	text43
 21555  00565A                     __ptext43:
 21556                           	opt stack 0
 21557  00565A                     ___lwdiv:
 21558                           	opt stack 22
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;incstack = 0
 21562  00565A  0E00               	movlw	0
 21563  00565C  0100               	movlb	0	; () banked
 21564  00565E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21565  005660  0E00               	movlw	0
 21566  005662  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21567                           
 21568                           ; BSR set to: 0
 21569  005664  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21570  005666  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21571  005668  B4D8               	btfsc	status,2,c
 21572  00566A  D01C               	goto	l2109
 21573                           
 21574                           ; BSR set to: 0
 21575  00566C  0E01               	movlw	1
 21576  00566E  6F66               	movwf	___lwdiv@counter& (0+255),b
 21577  005670  D004               	goto	l2104
 21578  005672                     
 21579                           ; BSR set to: 0
 21580                           
 21581                           ; BSR set to: 0
 21582  005672  90D8               	bcf	status,0,c
 21583  005674  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21584  005676  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21585  005678  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21586  00567A                     l2104:
 21587                           
 21588                           ; BSR set to: 0
 21589                           
 21590                           ; BSR set to: 0
 21591  00567A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21592  00567C  D7FA               	goto	l2105
 21593  00567E                     u7770:
 21594                           
 21595                           ; BSR set to: 0
 21596                           
 21597                           ; BSR set to: 0
 21598                           
 21599                           ; BSR set to: 0
 21600  00567E  90D8               	bcf	status,0,c
 21601  005680  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21602  005682  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21603                           
 21604                           ; BSR set to: 0
 21605  005684  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21606  005686  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21607  005688  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21608  00568A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21609  00568C  A0D8               	btfss	status,0,c
 21610  00568E  D005               	goto	l2108
 21611                           
 21612                           ; BSR set to: 0
 21613  005690  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21614  005692  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21615  005694  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21616  005696  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21617                           
 21618                           ; BSR set to: 0
 21619  005698  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21620  00569A                     l2108:
 21621                           
 21622                           ; BSR set to: 0
 21623                           
 21624                           ; BSR set to: 0
 21625  00569A  90D8               	bcf	status,0,c
 21626  00569C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21627  00569E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21628                           
 21629                           ; BSR set to: 0
 21630  0056A0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21631  0056A2  D7ED               	goto	u7770
 21632  0056A4                     l2109:
 21633                           
 21634                           ; BSR set to: 0
 21635                           
 21636                           ; BSR set to: 0
 21637  0056A4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21638  0056A8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21639                           
 21640                           ; BSR set to: 0
 21641  0056AC  0012               	return		;funcret
 21642  0056AE                     __end_of___lwdiv:
 21643                           	opt stack 0
 21644                           tosu	equ	0xFFF
 21645                           tosh	equ	0xFFE
 21646                           tosl	equ	0xFFD
 21647                           pclath	equ	0xFFA
 21648                           tblptru	equ	0xFF8
 21649                           tblptrh	equ	0xFF7
 21650                           tblptrl	equ	0xFF6
 21651                           tablat	equ	0xFF5
 21652                           prodh	equ	0xFF4
 21653                           prodl	equ	0xFF3
 21654                           intcon	equ	0xFF2
 21655                           intcon2	equ	0xFF1
 21656                           intcon3	equ	0xFF0
 21657                           indf0	equ	0xFEF
 21658                           postinc0	equ	0xFEE
 21659                           fsr0h	equ	0xFEA
 21660                           fsr0l	equ	0xFE9
 21661                           wreg	equ	0xFE8
 21662                           indf1	equ	0xFE7
 21663                           postinc1	equ	0xFE6
 21664                           postdec1	equ	0xFE5
 21665                           plusw1	equ	0xFE3
 21666                           fsr1h	equ	0xFE2
 21667                           fsr1l	equ	0xFE1
 21668                           indf2	equ	0xFDF
 21669                           postinc2	equ	0xFDE
 21670                           postdec2	equ	0xFDD
 21671                           plusw2	equ	0xFDB
 21672                           fsr2h	equ	0xFDA
 21673                           fsr2l	equ	0xFD9
 21674                           status	equ	0xFD8
 21675                           
 21676 ;; *************** function _findBufferSerial *****************
 21677 ;; Defined at:
 21678 ;;		line 33 in file "src/serial.c"
 21679 ;; Parameters:    Size  Location     Type
 21680 ;;  key             2   20[BANK0 ] PTR unsigned char 
 21681 ;;		 -> STR_79(3), STR_76(7), STR_75(3), STR_72(5), 
 21682 ;;		 -> STR_67(2), STR_64(3), STR_61(2), STR_60(2), 
 21683 ;;		 -> STR_55(5), STR_54(3), STR_51(3), STR_40(3), 
 21684 ;;		 -> STR_30(7), STR_24(3), STR_21(3), STR_18(3), 
 21685 ;;		 -> STR_15(3), STR_12(3), 
 21686 ;; Auto vars:     Size  Location     Type
 21687 ;;		None
 21688 ;; Return value:  Size  Location     Type
 21689 ;;                  1    wreg      unsigned char 
 21690 ;; Registers used:
 21691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21692 ;; Tracked objects:
 21693 ;;		On entry : 0/0
 21694 ;;		On exit  : 0/0
 21695 ;;		Unchanged: 0/0
 21696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21697 ;;      Params:         0       2       0       0       0       0       0       0       0
 21698 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21699 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21700 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21701 ;;Total ram usage:        2 bytes
 21702 ;; Hardware stack levels used:    1
 21703 ;; Hardware stack levels required when called:    8
 21704 ;; This function calls:
 21705 ;;		_strstr
 21706 ;; This function is called by:
 21707 ;;		_alterarDadosConexaoConfigWifi
 21708 ;;		_enviaDadosWifi
 21709 ;; This function uses a non-reentrant model
 21710 ;;
 21711                           
 21712                           	psect	text44
 21713  005AB4                     __ptext44:
 21714                           	opt stack 0
 21715  005AB4                     _findBufferSerial:
 21716                           	opt stack 21
 21717                           
 21718                           ;serial.c: 34: return strstr(bufferSerial, key) != (0);
 21719                           
 21720                           ; BSR set to: 0
 21721                           ;incstack = 0
 21722  005AB4  0E69               	movlw	low _bufferSerial
 21723  005AB6  0100               	movlb	0	; () banked
 21724  005AB8  6F6F               	movwf	strstr@s1& (0+255),b
 21725  005ABA  0E02               	movlw	high _bufferSerial
 21726  005ABC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 21727  005ABE  C074  F071         	movff	findBufferSerial@key,strstr@s2
 21728  005AC2  C075  F072         	movff	findBufferSerial@key+1,strstr@s2+1
 21729  005AC6  EC73  F026         	call	_strstr
 21730  005ACA  0100               	movlb	0	; () banked
 21731  005ACC  516F               	movf	?_strstr& (0+255),w,b
 21732  005ACE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 21733  005AD0  B4D8               	btfsc	status,2,c
 21734  005AD2  D002               	goto	u11600
 21735  005AD4  0E01               	movlw	1
 21736  005AD6  0012               	return	
 21737  005AD8                     u11600:
 21738  005AD8  0E00               	movlw	0
 21739  005ADA  0012               	return	
 21740  005ADC                     __end_of_findBufferSerial:
 21741                           	opt stack 0
 21742                           tosu	equ	0xFFF
 21743                           tosh	equ	0xFFE
 21744                           tosl	equ	0xFFD
 21745                           pclath	equ	0xFFA
 21746                           tblptru	equ	0xFF8
 21747                           tblptrh	equ	0xFF7
 21748                           tblptrl	equ	0xFF6
 21749                           tablat	equ	0xFF5
 21750                           prodh	equ	0xFF4
 21751                           prodl	equ	0xFF3
 21752                           intcon	equ	0xFF2
 21753                           intcon2	equ	0xFF1
 21754                           intcon3	equ	0xFF0
 21755                           indf0	equ	0xFEF
 21756                           postinc0	equ	0xFEE
 21757                           fsr0h	equ	0xFEA
 21758                           fsr0l	equ	0xFE9
 21759                           wreg	equ	0xFE8
 21760                           indf1	equ	0xFE7
 21761                           postinc1	equ	0xFE6
 21762                           postdec1	equ	0xFE5
 21763                           plusw1	equ	0xFE3
 21764                           fsr1h	equ	0xFE2
 21765                           fsr1l	equ	0xFE1
 21766                           indf2	equ	0xFDF
 21767                           postinc2	equ	0xFDE
 21768                           postdec2	equ	0xFDD
 21769                           plusw2	equ	0xFDB
 21770                           fsr2h	equ	0xFDA
 21771                           fsr2l	equ	0xFD9
 21772                           status	equ	0xFD8
 21773                           
 21774 ;; *************** function _strstr *****************
 21775 ;; Defined at:
 21776 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strstr.c"
 21777 ;; Parameters:    Size  Location     Type
 21778 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21779 ;;		 -> STR_133(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 21780 ;;		 -> bufferSerial(100), 
 21781 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21782 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), STR_77(7), 
 21783 ;;		 -> STR_76(7), STR_75(3), STR_73(4), STR_72(5), 
 21784 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 21785 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 21786 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 21787 ;;		 -> STR_51(3), STR_49(4), STR_40(3), STR_38(3), 
 21788 ;;		 -> STR_34(4), STR_33(2), STR_31(4), STR_30(7), 
 21789 ;;		 -> STR_25(7), STR_24(3), STR_22(4), STR_21(3), 
 21790 ;;		 -> STR_19(4), STR_18(3), STR_16(4), STR_15(3), 
 21791 ;;		 -> STR_13(4), STR_12(3), STR_10(4), 
 21792 ;; Auto vars:     Size  Location     Type
 21793 ;;		None
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  2   15[BANK0 ] PTR unsigned char 
 21796 ;; Registers used:
 21797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 0/0
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21803 ;;      Params:         0       4       0       0       0       0       0       0       0
 21804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21805 ;;      Temps:          0       1       0       0       0       0       0       0       0
 21806 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21807 ;;Total ram usage:        5 bytes
 21808 ;; Hardware stack levels used:    1
 21809 ;; Hardware stack levels required when called:    7
 21810 ;; This function calls:
 21811 ;;		_strchr
 21812 ;;		_strlen
 21813 ;;		_strncmp
 21814 ;; This function is called by:
 21815 ;;		_alterarDadosConexaoConfigWifi
 21816 ;;		_getStringJSON
 21817 ;;		_setKeyStartReceiveSerial
 21818 ;;		_findBufferSerial
 21819 ;;		_getIntJSON
 21820 ;; This function uses a non-reentrant model
 21821 ;;
 21822                           
 21823                           	psect	text45
 21824  004CE6                     __ptext45:
 21825                           	opt stack 0
 21826  004CE6                     _strstr:
 21827                           	opt stack 21
 21828                           
 21829                           ; BSR set to: 0
 21830                           ;incstack = 0
 21831  004CE6  D03F               	goto	l2282
 21832  004CE8  C06F  F066         	movff	strstr@s1,strncmp@s1
 21833  004CEC  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21834  004CF0  C071  F068         	movff	strstr@s2,strncmp@s2
 21835  004CF4  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21836  004CF8  C071  F060         	movff	strstr@s2,strlen@s
 21837  004CFC  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21838  004D00  EC02  F02B         	call	_strlen	;wreg free
 21839  004D04  C060  F06A         	movff	?_strlen,strncmp@len
 21840  004D08  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21841  004D0C  EC45  F024         	call	_strncmp	;wreg free
 21842  004D10  0100               	movlb	0	; () banked
 21843  004D12  5166               	movf	?_strncmp& (0+255),w,b
 21844  004D14  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21845  004D16  A4D8               	btfss	status,2,c
 21846  004D18  D005               	goto	l2284
 21847                           
 21848                           ; BSR set to: 0
 21849  004D1A  C06F  F06F         	movff	strstr@s1,?_strstr
 21850  004D1E  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21851                           
 21852                           ; BSR set to: 0
 21853  004D22  0012               	return	
 21854  004D24                     l2284:
 21855                           
 21856                           ; BSR set to: 0
 21857                           
 21858                           ; BSR set to: 0
 21859  004D24  0E01               	movlw	1
 21860  004D26  256F               	addwf	strstr@s1& (0+255),w,b
 21861  004D28  6F60               	movwf	strchr@ptr& (0+255),b
 21862  004D2A  0E00               	movlw	0
 21863  004D2C  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21864  004D2E  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21865  004D30  C071  FFF6         	movff	strstr@s2,tblptrl
 21866  004D34  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21867  004D38  6AF8               	clrf	tblptru,c
 21868  004D3A  0E07               	movlw	(high __ramtop+-1)
 21869  004D3C  64F7               	cpfsgt	tblptrh,c
 21870  004D3E  D003               	bra	u8407
 21871  004D40  0008               	tblrd		*
 21872  004D42  50F5               	movf	tablat,w,c
 21873  004D44  D005               	bra	u8400
 21874  004D46                     u8407:
 21875  004D46  CFF6 FFE9          	movff	tblptrl,fsr0l
 21876  004D4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21877  004D4E  50EF               	movf	indf0,w,c
 21878  004D50                     u8400:
 21879  004D50  0100               	movlb	0	; () banked
 21880  004D52  6F73               	movwf	??_strstr& (0+255),b
 21881  004D54  5173               	movf	??_strstr& (0+255),w,b
 21882  004D56  6F62               	movwf	strchr@chr& (0+255),b
 21883  004D58  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21884  004D5A  EC24  F02A         	call	_strchr	;wreg free
 21885  004D5E  C060  F06F         	movff	?_strchr,strstr@s1
 21886  004D62  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21887  004D66                     l2282:
 21888  004D66  0100               	movlb	0	; () banked
 21889  004D68  516F               	movf	strstr@s1& (0+255),w,b
 21890  004D6A  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21891  004D6C  B4D8               	btfsc	status,2,c
 21892  004D6E  D013               	goto	u8430
 21893                           
 21894                           ; BSR set to: 0
 21895  004D70  C06F  FFF6         	movff	strstr@s1,tblptrl
 21896  004D74  C070  FFF7         	movff	strstr@s1+1,tblptrh
 21897  004D78  6AF8               	clrf	tblptru,c
 21898  004D7A  0E07               	movlw	(high __ramtop+-1)
 21899  004D7C  64F7               	cpfsgt	tblptrh,c
 21900  004D7E  D003               	bra	u8427
 21901  004D80  0008               	tblrd		*
 21902  004D82  50F5               	movf	tablat,w,c
 21903  004D84  D005               	bra	u8420
 21904  004D86                     u8427:
 21905  004D86  CFF6 FFE9          	movff	tblptrl,fsr0l
 21906  004D8A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21907  004D8E  50EF               	movf	indf0,w,c
 21908  004D90                     u8420:
 21909  004D90  0900               	iorlw	0
 21910  004D92  A4D8               	btfss	status,2,c
 21911  004D94  D7A9               	goto	l2283
 21912  004D96                     u8430:
 21913  004D96  0E00               	movlw	0
 21914  004D98  0100               	movlb	0	; () banked
 21915  004D9A  6F6F               	movwf	?_strstr& (0+255),b
 21916  004D9C  0E00               	movlw	0
 21917  004D9E  6F70               	movwf	(?_strstr+1)& (0+255),b
 21918  004DA0  0012               	return	
 21919  004DA2                     __end_of_strstr:
 21920                           	opt stack 0
 21921                           tosu	equ	0xFFF
 21922                           tosh	equ	0xFFE
 21923                           tosl	equ	0xFFD
 21924                           pclath	equ	0xFFA
 21925                           tblptru	equ	0xFF8
 21926                           tblptrh	equ	0xFF7
 21927                           tblptrl	equ	0xFF6
 21928                           tablat	equ	0xFF5
 21929                           prodh	equ	0xFF4
 21930                           prodl	equ	0xFF3
 21931                           intcon	equ	0xFF2
 21932                           intcon2	equ	0xFF1
 21933                           intcon3	equ	0xFF0
 21934                           indf0	equ	0xFEF
 21935                           postinc0	equ	0xFEE
 21936                           fsr0h	equ	0xFEA
 21937                           fsr0l	equ	0xFE9
 21938                           wreg	equ	0xFE8
 21939                           indf1	equ	0xFE7
 21940                           postinc1	equ	0xFE6
 21941                           postdec1	equ	0xFE5
 21942                           plusw1	equ	0xFE3
 21943                           fsr1h	equ	0xFE2
 21944                           fsr1l	equ	0xFE1
 21945                           indf2	equ	0xFDF
 21946                           postinc2	equ	0xFDE
 21947                           postdec2	equ	0xFDD
 21948                           plusw2	equ	0xFDB
 21949                           fsr2h	equ	0xFDA
 21950                           fsr2l	equ	0xFD9
 21951                           status	equ	0xFD8
 21952                           
 21953 ;; *************** function _strncmp *****************
 21954 ;; Defined at:
 21955 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strncmp.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21958 ;;		 -> STR_133(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 21959 ;;		 -> bufferSerial(100), 
 21960 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21961 ;;		 -> getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), STR_77(7), 
 21962 ;;		 -> STR_76(7), STR_75(3), STR_73(4), STR_72(5), 
 21963 ;;		 -> STR_68(4), STR_67(2), STR_65(4), STR_64(3), 
 21964 ;;		 -> STR_62(4), STR_61(2), STR_60(2), STR_58(4), 
 21965 ;;		 -> STR_56(4), STR_55(5), STR_54(3), STR_52(4), 
 21966 ;;		 -> STR_51(3), STR_49(4), STR_40(3), STR_38(3), 
 21967 ;;		 -> STR_34(4), STR_33(2), STR_31(4), STR_30(7), 
 21968 ;;		 -> STR_25(7), STR_24(3), STR_22(4), STR_21(3), 
 21969 ;;		 -> STR_19(4), STR_18(3), STR_16(4), STR_15(3), 
 21970 ;;		 -> STR_13(4), STR_12(3), STR_10(4), 
 21971 ;;  len             2   10[BANK0 ] unsigned int 
 21972 ;; Auto vars:     Size  Location     Type
 21973 ;;		None
 21974 ;; Return value:  Size  Location     Type
 21975 ;;                  2    6[BANK0 ] int 
 21976 ;; Registers used:
 21977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21978 ;; Tracked objects:
 21979 ;;		On entry : 0/0
 21980 ;;		On exit  : 0/0
 21981 ;;		Unchanged: 0/0
 21982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21983 ;;      Params:         0       6       0       0       0       0       0       0       0
 21984 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21985 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21986 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21987 ;;Total ram usage:        9 bytes
 21988 ;; Hardware stack levels used:    1
 21989 ;; Hardware stack levels required when called:    6
 21990 ;; This function calls:
 21991 ;;		Nothing
 21992 ;; This function is called by:
 21993 ;;		_strstr
 21994 ;; This function uses a non-reentrant model
 21995 ;;
 21996                           
 21997                           	psect	text46
 21998  00488A                     __ptext46:
 21999                           	opt stack 0
 22000  00488A                     _strncmp:
 22001                           	opt stack 21
 22002                           
 22003                           ; BSR set to: 0
 22004                           ;incstack = 0
 22005  00488A  D06D               	goto	l2316
 22006  00488C                     l6504:
 22007  00488C  C066  FFF6         	movff	strncmp@s1,tblptrl
 22008  004890  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22009  004894  6AF8               	clrf	tblptru,c
 22010  004896  0E07               	movlw	(high __ramtop+-1)
 22011  004898  64F7               	cpfsgt	tblptrh,c
 22012  00489A  D003               	bra	u8237
 22013  00489C  0008               	tblrd		*
 22014  00489E  50F5               	movf	tablat,w,c
 22015  0048A0  D005               	bra	u8230
 22016  0048A2                     u8237:
 22017  0048A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22018  0048A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22019  0048AA  50EF               	movf	indf0,w,c
 22020  0048AC                     u8230:
 22021  0048AC  0900               	iorlw	0
 22022  0048AE  B4D8               	btfsc	status,2,c
 22023  0048B0  D025               	goto	u8260
 22024  0048B2  C068  FFF6         	movff	strncmp@s2,tblptrl
 22025  0048B6  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22026  0048BA  6AF8               	clrf	tblptru,c
 22027  0048BC  0E07               	movlw	(high __ramtop+-1)
 22028  0048BE  64F7               	cpfsgt	tblptrh,c
 22029  0048C0  D003               	bra	u8257
 22030  0048C2  0008               	tblrd		*
 22031  0048C4  50F5               	movf	tablat,w,c
 22032  0048C6  D005               	bra	u8250
 22033  0048C8                     u8257:
 22034  0048C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 22035  0048CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 22036  0048D0  50EF               	movf	indf0,w,c
 22037  0048D2                     u8250:
 22038  0048D2  0100               	movlb	0	; () banked
 22039  0048D4  6F6C               	movwf	??_strncmp& (0+255),b
 22040  0048D6  C066  FFF6         	movff	strncmp@s1,tblptrl
 22041  0048DA  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22042  0048DE  6AF8               	clrf	tblptru,c
 22043  0048E0  0E07               	movlw	(high __ramtop+-1)
 22044  0048E2  64F7               	cpfsgt	tblptrh,c
 22045  0048E4  D003               	bra	u8267
 22046  0048E6  0008               	tblrd		*
 22047  0048E8  50F5               	movf	tablat,w,c
 22048  0048EA  D005               	bra	u8265
 22049  0048EC                     u8267:
 22050  0048EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 22051  0048F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 22052  0048F4  50EF               	movf	indf0,w,c
 22053  0048F6                     u8265:
 22054  0048F6  196C               	xorwf	??_strncmp& (0+255),w,b
 22055  0048F8  B4D8               	btfsc	status,2,c
 22056  0048FA  D030               	goto	l2318
 22057  0048FC                     u8260:
 22058  0048FC  C068  FFF6         	movff	strncmp@s2,tblptrl
 22059  004900  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 22060  004904  6AF8               	clrf	tblptru,c
 22061  004906  0E07               	movlw	(high __ramtop+-1)
 22062  004908  64F7               	cpfsgt	tblptrh,c
 22063  00490A  D003               	bra	u8277
 22064  00490C  0008               	tblrd		*
 22065  00490E  50F5               	movf	tablat,w,c
 22066  004910  D005               	bra	u8270
 22067  004912                     u8277:
 22068  004912  CFF6 FFE9          	movff	tblptrl,fsr0l
 22069  004916  CFF7 FFEA          	movff	tblptrh,fsr0h
 22070  00491A  50EF               	movf	indf0,w,c
 22071  00491C                     u8270:
 22072  00491C  0100               	movlb	0	; () banked
 22073  00491E  6F6C               	movwf	??_strncmp& (0+255),b
 22074  004920  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 22075  004922  1F6C               	comf	??_strncmp& (0+255),f,b
 22076  004924  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 22077  004926  4B6C               	infsnz	??_strncmp& (0+255),f,b
 22078  004928  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 22079  00492A  C066  FFF6         	movff	strncmp@s1,tblptrl
 22080  00492E  C067  FFF7         	movff	strncmp@s1+1,tblptrh
 22081  004932  6AF8               	clrf	tblptru,c
 22082  004934  0E07               	movlw	(high __ramtop+-1)
 22083  004936  64F7               	cpfsgt	tblptrh,c
 22084  004938  D003               	bra	u8287
 22085  00493A  0008               	tblrd		*
 22086  00493C  50F5               	movf	tablat,w,c
 22087  00493E  D005               	bra	u8280
 22088  004940                     u8287:
 22089  004940  CFF6 FFE9          	movff	tblptrl,fsr0l
 22090  004944  CFF7 FFEA          	movff	tblptrh,fsr0h
 22091  004948  50EF               	movf	indf0,w,c
 22092  00494A                     u8280:
 22093  00494A  0100               	movlb	0	; () banked
 22094  00494C  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 22095  00494E  516E               	movf	(??_strncmp+2)& (0+255),w,b
 22096  004950  256C               	addwf	??_strncmp& (0+255),w,b
 22097  004952  6F66               	movwf	?_strncmp& (0+255),b
 22098  004954  0E00               	movlw	0
 22099  004956  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 22100  004958  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22101                           
 22102                           ; BSR set to: 0
 22103  00495A  0012               	return	
 22104  00495C                     l2318:
 22105                           
 22106                           ; BSR set to: 0
 22107  00495C  0100               	movlb	0	; () banked
 22108  00495E  4B66               	infsnz	strncmp@s1& (0+255),f,b
 22109  004960  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 22110  004962  4B68               	infsnz	strncmp@s2& (0+255),f,b
 22111  004964  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 22112  004966                     l2316:
 22113                           
 22114                           ; BSR set to: 0
 22115  004966  0100               	movlb	0	; () banked
 22116  004968  076A               	decf	strncmp@len& (0+255),f,b
 22117  00496A  A0D8               	btfss	status,0,c
 22118  00496C  076B               	decf	(strncmp@len+1)& (0+255),f,b
 22119  00496E  296A               	incf	strncmp@len& (0+255),w,b
 22120  004970  E18D               	bnz	l6504
 22121  004972  296B               	incf	(strncmp@len+1)& (0+255),w,b
 22122  004974  A4D8               	btfss	status,2,c
 22123  004976  D78A               	goto	l2317
 22124                           
 22125                           ; BSR set to: 0
 22126                           
 22127                           ; BSR set to: 0
 22128  004978  0E00               	movlw	0
 22129  00497A  6F67               	movwf	(?_strncmp+1)& (0+255),b
 22130  00497C  0E00               	movlw	0
 22131  00497E  6F66               	movwf	?_strncmp& (0+255),b
 22132  004980  0012               	return	
 22133  004982                     __end_of_strncmp:
 22134                           	opt stack 0
 22135                           tosu	equ	0xFFF
 22136                           tosh	equ	0xFFE
 22137                           tosl	equ	0xFFD
 22138                           pclath	equ	0xFFA
 22139                           tblptru	equ	0xFF8
 22140                           tblptrh	equ	0xFF7
 22141                           tblptrl	equ	0xFF6
 22142                           tablat	equ	0xFF5
 22143                           prodh	equ	0xFF4
 22144                           prodl	equ	0xFF3
 22145                           intcon	equ	0xFF2
 22146                           intcon2	equ	0xFF1
 22147                           intcon3	equ	0xFF0
 22148                           indf0	equ	0xFEF
 22149                           postinc0	equ	0xFEE
 22150                           fsr0h	equ	0xFEA
 22151                           fsr0l	equ	0xFE9
 22152                           wreg	equ	0xFE8
 22153                           indf1	equ	0xFE7
 22154                           postinc1	equ	0xFE6
 22155                           postdec1	equ	0xFE5
 22156                           plusw1	equ	0xFE3
 22157                           fsr1h	equ	0xFE2
 22158                           fsr1l	equ	0xFE1
 22159                           indf2	equ	0xFDF
 22160                           postinc2	equ	0xFDE
 22161                           postdec2	equ	0xFDD
 22162                           plusw2	equ	0xFDB
 22163                           fsr2h	equ	0xFDA
 22164                           fsr2l	equ	0xFD9
 22165                           status	equ	0xFD8
 22166                           
 22167 ;; *************** function _strlen *****************
 22168 ;; Defined at:
 22169 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 22170 ;; Parameters:    Size  Location     Type
 22171 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 22172 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), 
 22173 ;;		 -> STR_77(7), STR_76(7), STR_75(3), STR_73(4), 
 22174 ;;		 -> STR_72(5), enviaDadosWifi@AUX(15), STR_68(4), STR_67(2), 
 22175 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 22176 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 22177 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 22178 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 22179 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 22180 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 22181 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 22182 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 22183 ;; Auto vars:     Size  Location     Type
 22184 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 22185 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), 
 22186 ;;		 -> STR_77(7), STR_76(7), STR_75(3), STR_73(4), 
 22187 ;;		 -> STR_72(5), enviaDadosWifi@AUX(15), STR_68(4), STR_67(2), 
 22188 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 22189 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 22190 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 22191 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 22192 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 22193 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 22194 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 22195 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 22196 ;; Return value:  Size  Location     Type
 22197 ;;                  2    0[BANK0 ] unsigned int 
 22198 ;; Registers used:
 22199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22200 ;; Tracked objects:
 22201 ;;		On entry : 0/0
 22202 ;;		On exit  : 0/0
 22203 ;;		Unchanged: 0/0
 22204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22205 ;;      Params:         0       2       0       0       0       0       0       0       0
 22206 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22207 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22208 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22209 ;;Total ram usage:        6 bytes
 22210 ;; Hardware stack levels used:    1
 22211 ;; Hardware stack levels required when called:    6
 22212 ;; This function calls:
 22213 ;;		Nothing
 22214 ;; This function is called by:
 22215 ;;		_alterarDadosConexaoConfigWifi
 22216 ;;		_enviaDadosWifi
 22217 ;;		_getStringJSON
 22218 ;;		_strstr
 22219 ;;		_getIntJSON
 22220 ;; This function uses a non-reentrant model
 22221 ;;
 22222                           
 22223                           	psect	text47
 22224  005604                     __ptext47:
 22225                           	opt stack 0
 22226  005604                     _strlen:
 22227                           	opt stack 23
 22228                           
 22229                           ; BSR set to: 0
 22230                           ;incstack = 0
 22231  005604  C060  F064         	movff	strlen@s,strlen@cp
 22232  005608  C061  F065         	movff	strlen@s+1,strlen@cp+1
 22233  00560C  D003               	goto	l2270
 22234  00560E  0100               	movlb	0	; () banked
 22235  005610  4B64               	infsnz	strlen@cp& (0+255),f,b
 22236  005612  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 22237  005614                     l2270:
 22238                           
 22239                           ; BSR set to: 0
 22240  005614  C064  FFF6         	movff	strlen@cp,tblptrl
 22241  005618  C065  FFF7         	movff	strlen@cp+1,tblptrh
 22242  00561C  6AF8               	clrf	tblptru,c
 22243  00561E  0E07               	movlw	(high __ramtop+-1)
 22244  005620  64F7               	cpfsgt	tblptrh,c
 22245  005622  D003               	bra	u7847
 22246  005624  0008               	tblrd		*
 22247  005626  50F5               	movf	tablat,w,c
 22248  005628  D005               	bra	u7840
 22249  00562A                     u7847:
 22250  00562A  CFF6 FFE9          	movff	tblptrl,fsr0l
 22251  00562E  CFF7 FFEA          	movff	tblptrh,fsr0h
 22252  005632  50EF               	movf	indf0,w,c
 22253  005634                     u7840:
 22254  005634  0900               	iorlw	0
 22255  005636  A4D8               	btfss	status,2,c
 22256  005638  D7EA               	goto	l2271
 22257  00563A  C060  F062         	movff	strlen@s,??_strlen
 22258  00563E  C061  F063         	movff	strlen@s+1,??_strlen+1
 22259  005642  0100               	movlb	0	; () banked
 22260  005644  1F62               	comf	??_strlen& (0+255),f,b
 22261  005646  1F63               	comf	(??_strlen+1)& (0+255),f,b
 22262  005648  4B62               	infsnz	??_strlen& (0+255),f,b
 22263  00564A  2B63               	incf	(??_strlen+1)& (0+255),f,b
 22264  00564C  5164               	movf	strlen@cp& (0+255),w,b
 22265  00564E  2562               	addwf	??_strlen& (0+255),w,b
 22266  005650  6F60               	movwf	?_strlen& (0+255),b
 22267  005652  5165               	movf	(strlen@cp+1)& (0+255),w,b
 22268  005654  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 22269  005656  6F61               	movwf	(?_strlen+1)& (0+255),b
 22270  005658  0012               	return	
 22271  00565A                     __end_of_strlen:
 22272                           	opt stack 0
 22273                           tosu	equ	0xFFF
 22274                           tosh	equ	0xFFE
 22275                           tosl	equ	0xFFD
 22276                           pclath	equ	0xFFA
 22277                           tblptru	equ	0xFF8
 22278                           tblptrh	equ	0xFF7
 22279                           tblptrl	equ	0xFF6
 22280                           tablat	equ	0xFF5
 22281                           prodh	equ	0xFF4
 22282                           prodl	equ	0xFF3
 22283                           intcon	equ	0xFF2
 22284                           intcon2	equ	0xFF1
 22285                           intcon3	equ	0xFF0
 22286                           indf0	equ	0xFEF
 22287                           postinc0	equ	0xFEE
 22288                           fsr0h	equ	0xFEA
 22289                           fsr0l	equ	0xFE9
 22290                           wreg	equ	0xFE8
 22291                           indf1	equ	0xFE7
 22292                           postinc1	equ	0xFE6
 22293                           postdec1	equ	0xFE5
 22294                           plusw1	equ	0xFE3
 22295                           fsr1h	equ	0xFE2
 22296                           fsr1l	equ	0xFE1
 22297                           indf2	equ	0xFDF
 22298                           postinc2	equ	0xFDE
 22299                           postdec2	equ	0xFDD
 22300                           plusw2	equ	0xFDB
 22301                           fsr2h	equ	0xFDA
 22302                           fsr2l	equ	0xFD9
 22303                           status	equ	0xFD8
 22304                           
 22305 ;; *************** function _strchr *****************
 22306 ;; Defined at:
 22307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strchr.c"
 22308 ;; Parameters:    Size  Location     Type
 22309 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 22310 ;;		 -> STR_133(4), getStringJSON@attr(20), getIntJSON@attr(20), NULL(0), 
 22311 ;;		 -> bufferSerial(100), 
 22312 ;;  chr             2    2[BANK0 ] int 
 22313 ;; Auto vars:     Size  Location     Type
 22314 ;;		None
 22315 ;; Return value:  Size  Location     Type
 22316 ;;                  2    0[BANK0 ] PTR unsigned char 
 22317 ;; Registers used:
 22318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/0
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22324 ;;      Params:         0       4       0       0       0       0       0       0       0
 22325 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22326 ;;      Temps:          0       2       0       0       0       0       0       0       0
 22327 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22328 ;;Total ram usage:        6 bytes
 22329 ;; Hardware stack levels used:    1
 22330 ;; Hardware stack levels required when called:    6
 22331 ;; This function calls:
 22332 ;;		Nothing
 22333 ;; This function is called by:
 22334 ;;		_strstr
 22335 ;; This function uses a non-reentrant model
 22336 ;;
 22337                           
 22338                           	psect	text48
 22339  005448                     __ptext48:
 22340                           	opt stack 0
 22341  005448                     _strchr:
 22342                           	opt stack 21
 22343                           
 22344                           ; BSR set to: 0
 22345                           ;incstack = 0
 22346  005448  C060  FFF6         	movff	strchr@ptr,tblptrl
 22347  00544C  C061  FFF7         	movff	strchr@ptr+1,tblptrh
 22348  005450  6AF8               	clrf	tblptru,c
 22349  005452  0E07               	movlw	(high __ramtop+-1)
 22350  005454  64F7               	cpfsgt	tblptrh,c
 22351  005456  D003               	bra	u8307
 22352  005458  0008               	tblrd		*
 22353  00545A  50F5               	movf	tablat,w,c
 22354  00545C  D005               	bra	u8300
 22355  00545E                     u8307:
 22356  00545E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22357  005462  CFF7 FFEA          	movff	tblptrh,fsr0h
 22358  005466  50EF               	movf	indf0,w,c
 22359  005468                     u8300:
 22360  005468  0100               	movlb	0	; () banked
 22361  00546A  1962               	xorwf	strchr@chr& (0+255),w,b
 22362  00546C  A4D8               	btfss	status,2,c
 22363  00546E  D005               	goto	l2311
 22364                           
 22365                           ; BSR set to: 0
 22366  005470  C060  F060         	movff	strchr@ptr,?_strchr
 22367  005474  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 22368                           
 22369                           ; BSR set to: 0
 22370  005478  0012               	return	
 22371  00547A                     l2311:
 22372                           
 22373                           ; BSR set to: 0
 22374                           
 22375                           ; BSR set to: 0
 22376  00547A  5160               	movf	strchr@ptr& (0+255),w,b
 22377  00547C  6F64               	movwf	??_strchr& (0+255),b
 22378  00547E  5161               	movf	(strchr@ptr+1)& (0+255),w,b
 22379  005480  6F65               	movwf	(??_strchr+1)& (0+255),b
 22380  005482  4B60               	infsnz	strchr@ptr& (0+255),f,b
 22381  005484  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 22382  005486  C064  FFF6         	movff	??_strchr,tblptrl
 22383  00548A  C065  FFF7         	movff	??_strchr+1,tblptrh
 22384  00548E  6AF8               	clrf	tblptru,c
 22385  005490  0E07               	movlw	(high __ramtop+-1)
 22386  005492  64F7               	cpfsgt	tblptrh,c
 22387  005494  D003               	bra	u8327
 22388  005496  0008               	tblrd		*
 22389  005498  50F5               	movf	tablat,w,c
 22390  00549A  D005               	bra	u8320
 22391  00549C                     u8327:
 22392  00549C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22393  0054A0  CFF7 FFEA          	movff	tblptrh,fsr0h
 22394  0054A4  50EF               	movf	indf0,w,c
 22395  0054A6                     u8320:
 22396  0054A6  0900               	iorlw	0
 22397  0054A8  A4D8               	btfss	status,2,c
 22398  0054AA  D7CE               	goto	_strchr
 22399  0054AC  0E00               	movlw	0
 22400  0054AE  0100               	movlb	0	; () banked
 22401  0054B0  6F60               	movwf	?_strchr& (0+255),b
 22402  0054B2  0E00               	movlw	0
 22403  0054B4  6F61               	movwf	(?_strchr+1)& (0+255),b
 22404  0054B6  0012               	return	
 22405  0054B8                     __end_of_strchr:
 22406                           	opt stack 0
 22407                           tosu	equ	0xFFF
 22408                           tosh	equ	0xFFE
 22409                           tosl	equ	0xFFD
 22410                           pclath	equ	0xFFA
 22411                           tblptru	equ	0xFF8
 22412                           tblptrh	equ	0xFF7
 22413                           tblptrl	equ	0xFF6
 22414                           tablat	equ	0xFF5
 22415                           prodh	equ	0xFF4
 22416                           prodl	equ	0xFF3
 22417                           intcon	equ	0xFF2
 22418                           intcon2	equ	0xFF1
 22419                           intcon3	equ	0xFF0
 22420                           indf0	equ	0xFEF
 22421                           postinc0	equ	0xFEE
 22422                           fsr0h	equ	0xFEA
 22423                           fsr0l	equ	0xFE9
 22424                           wreg	equ	0xFE8
 22425                           indf1	equ	0xFE7
 22426                           postinc1	equ	0xFE6
 22427                           postdec1	equ	0xFE5
 22428                           plusw1	equ	0xFE3
 22429                           fsr1h	equ	0xFE2
 22430                           fsr1l	equ	0xFE1
 22431                           indf2	equ	0xFDF
 22432                           postinc2	equ	0xFDE
 22433                           postdec2	equ	0xFDD
 22434                           plusw2	equ	0xFDB
 22435                           fsr2h	equ	0xFDA
 22436                           fsr2l	equ	0xFD9
 22437                           status	equ	0xFD8
 22438                           
 22439 ;; *************** function _atualizaLCD *****************
 22440 ;; Defined at:
 22441 ;;		line 159 in file "src/lcd.h"
 22442 ;; Parameters:    Size  Location     Type
 22443 ;;  line1           2    8[BANK0 ] PTR unsigned char 
 22444 ;;		 -> line1(21), 
 22445 ;;  line2           2   10[BANK0 ] PTR unsigned char 
 22446 ;;		 -> line2(21), 
 22447 ;;  line3           2   12[BANK0 ] PTR unsigned char 
 22448 ;;		 -> line3(21), 
 22449 ;;  line4           2   14[BANK0 ] PTR unsigned char 
 22450 ;;		 -> line4(21), 
 22451 ;; Auto vars:     Size  Location     Type
 22452 ;;  i               1   16[BANK0 ] unsigned char 
 22453 ;; Return value:  Size  Location     Type
 22454 ;;                  1    wreg      void 
 22455 ;; Registers used:
 22456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22457 ;; Tracked objects:
 22458 ;;		On entry : 0/0
 22459 ;;		On exit  : 0/0
 22460 ;;		Unchanged: 0/0
 22461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22462 ;;      Params:         0       8       0       0       0       0       0       0       0
 22463 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22464 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22465 ;;      Totals:         0       9       0       0       0       0       0       0       0
 22466 ;;Total ram usage:        9 bytes
 22467 ;; Hardware stack levels used:    1
 22468 ;; Hardware stack levels required when called:    9
 22469 ;; This function calls:
 22470 ;;		_Lcd_Set_Cursor
 22471 ;;		_Lcd_Write_String
 22472 ;; This function is called by:
 22473 ;;		_alterarDadosConexaoConfigWifi
 22474 ;;		_main
 22475 ;; This function uses a non-reentrant model
 22476 ;;
 22477                           
 22478                           	psect	text49
 22479  004B60                     __ptext49:
 22480                           	opt stack 0
 22481  004B60                     _atualizaLCD:
 22482                           	opt stack 21
 22483                           
 22484                           ;lcd.h: 162: Lcd_Set_Cursor(1, 1);
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;incstack = 0
 22488  004B60  0E01               	movlw	1
 22489  004B62  0100               	movlb	0	; () banked
 22490  004B64  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22491  004B66  0E01               	movlw	1
 22492  004B68  ECD1  F026         	call	_Lcd_Set_Cursor
 22493                           
 22494                           ;lcd.h: 163: Lcd_Write_String(line1);
 22495  004B6C  C068  F064         	movff	atualizaLCD@line1,Lcd_Write_String@a
 22496  004B70  C069  F065         	movff	atualizaLCD@line1+1,Lcd_Write_String@a+1
 22497  004B74  EC03  F02D         	call	_Lcd_Write_String	;wreg free
 22498                           
 22499                           ;lcd.h: 164: Lcd_Set_Cursor(2, 1);
 22500  004B78  0E01               	movlw	1
 22501  004B7A  0100               	movlb	0	; () banked
 22502  004B7C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22503  004B7E  0E02               	movlw	2
 22504  004B80  ECD1  F026         	call	_Lcd_Set_Cursor
 22505                           
 22506                           ;lcd.h: 165: Lcd_Write_String(line2);
 22507  004B84  C06A  F064         	movff	atualizaLCD@line2,Lcd_Write_String@a
 22508  004B88  C06B  F065         	movff	atualizaLCD@line2+1,Lcd_Write_String@a+1
 22509  004B8C  EC03  F02D         	call	_Lcd_Write_String	;wreg free
 22510                           
 22511                           ;lcd.h: 166: Lcd_Set_Cursor(3, 0);
 22512  004B90  0E00               	movlw	0
 22513  004B92  0100               	movlb	0	; () banked
 22514  004B94  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22515  004B96  0E03               	movlw	3
 22516  004B98  ECD1  F026         	call	_Lcd_Set_Cursor
 22517                           
 22518                           ;lcd.h: 167: Lcd_Write_String(line3);
 22519  004B9C  C06C  F064         	movff	atualizaLCD@line3,Lcd_Write_String@a
 22520  004BA0  C06D  F065         	movff	atualizaLCD@line3+1,Lcd_Write_String@a+1
 22521  004BA4  EC03  F02D         	call	_Lcd_Write_String	;wreg free
 22522                           
 22523                           ;lcd.h: 168: Lcd_Set_Cursor(4, 0);
 22524  004BA8  0E00               	movlw	0
 22525  004BAA  0100               	movlb	0	; () banked
 22526  004BAC  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 22527  004BAE  0E04               	movlw	4
 22528  004BB0  ECD1  F026         	call	_Lcd_Set_Cursor
 22529                           
 22530                           ;lcd.h: 169: Lcd_Write_String(line4);
 22531  004BB4  C06E  F064         	movff	atualizaLCD@line4,Lcd_Write_String@a
 22532  004BB8  C06F  F065         	movff	atualizaLCD@line4+1,Lcd_Write_String@a+1
 22533  004BBC  EC03  F02D         	call	_Lcd_Write_String	;wreg free
 22534                           
 22535                           ;lcd.h: 171: char i = 0;
 22536  004BC0  0E00               	movlw	0
 22537  004BC2  0100               	movlb	0	; () banked
 22538  004BC4  6F70               	movwf	atualizaLCD@i& (0+255),b
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;lcd.h: 172: for (i = 0; i < 20; i++) {
 22542  004BC6  0E00               	movlw	0
 22543  004BC8  6F70               	movwf	atualizaLCD@i& (0+255),b
 22544  004BCA                     l6704:
 22545                           
 22546                           ; BSR set to: 0
 22547  004BCA  0E13               	movlw	19
 22548  004BCC  6570               	cpfsgt	atualizaLCD@i& (0+255),b
 22549  004BCE  D001               	goto	l268
 22550  004BD0  0012               	return	
 22551  004BD2                     l268:
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;lcd.h: 173: line1[i] = ' ';
 22555                           
 22556                           ; BSR set to: 0
 22557  004BD2  5170               	movf	atualizaLCD@i& (0+255),w,b
 22558  004BD4  0D01               	mullw	1
 22559  004BD6  50F3               	movf	prodl,w,c
 22560  004BD8  2568               	addwf	atualizaLCD@line1& (0+255),w,b
 22561  004BDA  6ED9               	movwf	fsr2l,c
 22562  004BDC  50F4               	movf	prodh,w,c
 22563  004BDE  2169               	addwfc	(atualizaLCD@line1+1)& (0+255),w,b
 22564  004BE0  6EDA               	movwf	fsr2h,c
 22565  004BE2  0E20               	movlw	32
 22566  004BE4  6EDF               	movwf	indf2,c
 22567                           
 22568                           ;lcd.h: 174: line2[i] = ' ';
 22569  004BE6  5170               	movf	atualizaLCD@i& (0+255),w,b
 22570  004BE8  0D01               	mullw	1
 22571  004BEA  50F3               	movf	prodl,w,c
 22572  004BEC  256A               	addwf	atualizaLCD@line2& (0+255),w,b
 22573  004BEE  6ED9               	movwf	fsr2l,c
 22574  004BF0  50F4               	movf	prodh,w,c
 22575  004BF2  216B               	addwfc	(atualizaLCD@line2+1)& (0+255),w,b
 22576  004BF4  6EDA               	movwf	fsr2h,c
 22577  004BF6  0E20               	movlw	32
 22578  004BF8  6EDF               	movwf	indf2,c
 22579                           
 22580                           ;lcd.h: 175: line3[i] = ' ';
 22581  004BFA  5170               	movf	atualizaLCD@i& (0+255),w,b
 22582  004BFC  0D01               	mullw	1
 22583  004BFE  50F3               	movf	prodl,w,c
 22584  004C00  256C               	addwf	atualizaLCD@line3& (0+255),w,b
 22585  004C02  6ED9               	movwf	fsr2l,c
 22586  004C04  50F4               	movf	prodh,w,c
 22587  004C06  216D               	addwfc	(atualizaLCD@line3+1)& (0+255),w,b
 22588  004C08  6EDA               	movwf	fsr2h,c
 22589  004C0A  0E20               	movlw	32
 22590  004C0C  6EDF               	movwf	indf2,c
 22591                           
 22592                           ;lcd.h: 176: line4[i] = ' ';
 22593  004C0E  5170               	movf	atualizaLCD@i& (0+255),w,b
 22594  004C10  0D01               	mullw	1
 22595  004C12  50F3               	movf	prodl,w,c
 22596  004C14  256E               	addwf	atualizaLCD@line4& (0+255),w,b
 22597  004C16  6ED9               	movwf	fsr2l,c
 22598  004C18  50F4               	movf	prodh,w,c
 22599  004C1A  216F               	addwfc	(atualizaLCD@line4+1)& (0+255),w,b
 22600  004C1C  6EDA               	movwf	fsr2h,c
 22601  004C1E  0E20               	movlw	32
 22602  004C20  6EDF               	movwf	indf2,c
 22603                           
 22604                           ; BSR set to: 0
 22605  004C22  2B70               	incf	atualizaLCD@i& (0+255),f,b
 22606  004C24  D7D2               	goto	l6704
 22607  004C26                     __end_of_atualizaLCD:
 22608                           	opt stack 0
 22609                           tosu	equ	0xFFF
 22610                           tosh	equ	0xFFE
 22611                           tosl	equ	0xFFD
 22612                           pclath	equ	0xFFA
 22613                           tblptru	equ	0xFF8
 22614                           tblptrh	equ	0xFF7
 22615                           tblptrl	equ	0xFF6
 22616                           tablat	equ	0xFF5
 22617                           prodh	equ	0xFF4
 22618                           prodl	equ	0xFF3
 22619                           intcon	equ	0xFF2
 22620                           intcon2	equ	0xFF1
 22621                           intcon3	equ	0xFF0
 22622                           indf0	equ	0xFEF
 22623                           postinc0	equ	0xFEE
 22624                           fsr0h	equ	0xFEA
 22625                           fsr0l	equ	0xFE9
 22626                           wreg	equ	0xFE8
 22627                           indf1	equ	0xFE7
 22628                           postinc1	equ	0xFE6
 22629                           postdec1	equ	0xFE5
 22630                           plusw1	equ	0xFE3
 22631                           fsr1h	equ	0xFE2
 22632                           fsr1l	equ	0xFE1
 22633                           indf2	equ	0xFDF
 22634                           postinc2	equ	0xFDE
 22635                           postdec2	equ	0xFDD
 22636                           plusw2	equ	0xFDB
 22637                           fsr2h	equ	0xFDA
 22638                           fsr2l	equ	0xFD9
 22639                           status	equ	0xFD8
 22640                           
 22641 ;; *************** function _Lcd_Write_String *****************
 22642 ;; Defined at:
 22643 ;;		line 137 in file "src/lcd.h"
 22644 ;; Parameters:    Size  Location     Type
 22645 ;;  a               2    4[BANK0 ] PTR unsigned char 
 22646 ;;		 -> line4(21), line3(21), line2(21), line1(21), 
 22647 ;; Auto vars:     Size  Location     Type
 22648 ;;  i               1    6[BANK0 ] unsigned char 
 22649 ;; Return value:  Size  Location     Type
 22650 ;;                  1    wreg      void 
 22651 ;; Registers used:
 22652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22653 ;; Tracked objects:
 22654 ;;		On entry : 0/0
 22655 ;;		On exit  : 0/0
 22656 ;;		Unchanged: 0/0
 22657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22658 ;;      Params:         0       2       0       0       0       0       0       0       0
 22659 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22660 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22661 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22662 ;;Total ram usage:        3 bytes
 22663 ;; Hardware stack levels used:    1
 22664 ;; Hardware stack levels required when called:    8
 22665 ;; This function calls:
 22666 ;;		_Lcd_Write_Char
 22667 ;; This function is called by:
 22668 ;;		_atualizaLCD
 22669 ;; This function uses a non-reentrant model
 22670 ;;
 22671                           
 22672                           	psect	text50
 22673  005A06                     __ptext50:
 22674                           	opt stack 0
 22675  005A06                     _Lcd_Write_String:
 22676                           	opt stack 21
 22677                           
 22678                           ;lcd.h: 138: unsigned char i = 0;
 22679                           
 22680                           ; BSR set to: 0
 22681                           ;incstack = 0
 22682  005A06  0E00               	movlw	0
 22683  005A08  0100               	movlb	0	; () banked
 22684  005A0A  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22685                           
 22686                           ;lcd.h: 140: for (i = 0; i < 20; i++) {
 22687  005A0C  0E00               	movlw	0
 22688  005A0E  6F66               	movwf	Lcd_Write_String@i& (0+255),b
 22689  005A10                     l6600:
 22690                           
 22691                           ; BSR set to: 0
 22692  005A10  0E13               	movlw	19
 22693  005A12  6566               	cpfsgt	Lcd_Write_String@i& (0+255),b
 22694  005A14  D001               	goto	l263
 22695  005A16  0012               	return	
 22696  005A18                     l263:
 22697                           
 22698                           ; BSR set to: 0
 22699                           ;lcd.h: 141: Lcd_Write_Char(a[i]);
 22700                           
 22701                           ; BSR set to: 0
 22702  005A18  5166               	movf	Lcd_Write_String@i& (0+255),w,b
 22703  005A1A  0D01               	mullw	1
 22704  005A1C  50F3               	movf	prodl,w,c
 22705  005A1E  2564               	addwf	Lcd_Write_String@a& (0+255),w,b
 22706  005A20  6ED9               	movwf	fsr2l,c
 22707  005A22  50F4               	movf	prodh,w,c
 22708  005A24  2165               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 22709  005A26  6EDA               	movwf	fsr2h,c
 22710  005A28  50DF               	movf	indf2,w,c
 22711  005A2A  EC32  F02C         	call	_Lcd_Write_Char
 22712  005A2E  0100               	movlb	0	; () banked
 22713  005A30  2B66               	incf	Lcd_Write_String@i& (0+255),f,b
 22714  005A32  D7EE               	goto	l6600
 22715  005A34                     __end_of_Lcd_Write_String:
 22716                           	opt stack 0
 22717                           tosu	equ	0xFFF
 22718                           tosh	equ	0xFFE
 22719                           tosl	equ	0xFFD
 22720                           pclath	equ	0xFFA
 22721                           tblptru	equ	0xFF8
 22722                           tblptrh	equ	0xFF7
 22723                           tblptrl	equ	0xFF6
 22724                           tablat	equ	0xFF5
 22725                           prodh	equ	0xFF4
 22726                           prodl	equ	0xFF3
 22727                           intcon	equ	0xFF2
 22728                           intcon2	equ	0xFF1
 22729                           intcon3	equ	0xFF0
 22730                           indf0	equ	0xFEF
 22731                           postinc0	equ	0xFEE
 22732                           fsr0h	equ	0xFEA
 22733                           fsr0l	equ	0xFE9
 22734                           wreg	equ	0xFE8
 22735                           indf1	equ	0xFE7
 22736                           postinc1	equ	0xFE6
 22737                           postdec1	equ	0xFE5
 22738                           plusw1	equ	0xFE3
 22739                           fsr1h	equ	0xFE2
 22740                           fsr1l	equ	0xFE1
 22741                           indf2	equ	0xFDF
 22742                           postinc2	equ	0xFDE
 22743                           postdec2	equ	0xFDD
 22744                           plusw2	equ	0xFDB
 22745                           fsr2h	equ	0xFDA
 22746                           fsr2l	equ	0xFD9
 22747                           status	equ	0xFD8
 22748                           
 22749 ;; *************** function _Lcd_Write_Char *****************
 22750 ;; Defined at:
 22751 ;;		line 122 in file "src/lcd.h"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;  a               1    wreg     unsigned char 
 22754 ;; Auto vars:     Size  Location     Type
 22755 ;;  a               1    3[BANK0 ] unsigned char 
 22756 ;;  y               1    2[BANK0 ] unsigned char 
 22757 ;;  tempp           1    1[BANK0 ] unsigned char 
 22758 ;; Return value:  Size  Location     Type
 22759 ;;                  1    wreg      void 
 22760 ;; Registers used:
 22761 ;;		wreg, status,2, status,0, cstack
 22762 ;; Tracked objects:
 22763 ;;		On entry : 0/0
 22764 ;;		On exit  : 0/0
 22765 ;;		Unchanged: 0/0
 22766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22767 ;;      Params:         0       0       0       0       0       0       0       0       0
 22768 ;;      Locals:         0       3       0       0       0       0       0       0       0
 22769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22770 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22771 ;;Total ram usage:        3 bytes
 22772 ;; Hardware stack levels used:    1
 22773 ;; Hardware stack levels required when called:    7
 22774 ;; This function calls:
 22775 ;;		_Lcd_Port
 22776 ;; This function is called by:
 22777 ;;		_Lcd_Write_String
 22778 ;;		_criaCaracteresCGRAM
 22779 ;; This function uses a non-reentrant model
 22780 ;;
 22781                           
 22782                           	psect	text51
 22783  005864                     __ptext51:
 22784                           	opt stack 0
 22785  005864                     _Lcd_Write_Char:
 22786                           	opt stack 22
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;incstack = 0
 22790                           ;Lcd_Write_Char@a stored from wreg
 22791  005864  0100               	movlb	0	; () banked
 22792  005866  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 22793                           
 22794                           ;lcd.h: 123: char tempp, y;
 22795                           ;lcd.h: 124: tempp = a & 0x0F;
 22796  005868  0100               	movlb	0	; () banked
 22797  00586A  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22798  00586C  0B0F               	andlw	15
 22799  00586E  6F61               	movwf	Lcd_Write_Char@tempp& (0+255),b
 22800                           
 22801                           ;lcd.h: 125: y = a & 0xF0;
 22802  005870  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 22803  005872  0BF0               	andlw	240
 22804  005874  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 22805                           
 22806                           ; BSR set to: 0
 22807                           ;lcd.h: 126: PORTDbits.RD2 = 1;
 22808  005876  8483               	bsf	3971,2,c	;volatile
 22809                           
 22810                           ; BSR set to: 0
 22811                           ;lcd.h: 127: Lcd_Port(y >> 4);
 22812  005878  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 22813  00587A  0B0F               	andlw	15
 22814  00587C  ECEB  F02C         	call	_Lcd_Port
 22815                           
 22816                           ;lcd.h: 128: PORTDbits.RD3 = 1;
 22817  005880  8683               	bsf	3971,3,c	;volatile
 22818                           
 22819                           ;lcd.h: 129: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22820  005882  0E1A               	movlw	26
 22821  005884                     u15467:
 22822  005884  2EE8               	decfsz	wreg,f,c
 22823  005886  D7FE               	bra	u15467
 22824  005888  D000               	nop2	
 22825                           
 22826                           ;lcd.h: 130: PORTDbits.RD3 = 0;
 22827  00588A  9683               	bcf	3971,3,c	;volatile
 22828                           
 22829                           ;lcd.h: 131: Lcd_Port(tempp);
 22830  00588C  0100               	movlb	0	; () banked
 22831  00588E  5161               	movf	Lcd_Write_Char@tempp& (0+255),w,b
 22832  005890  ECEB  F02C         	call	_Lcd_Port
 22833                           
 22834                           ;lcd.h: 132: PORTDbits.RD3 = 1;
 22835  005894  8683               	bsf	3971,3,c	;volatile
 22836                           
 22837                           ;lcd.h: 133: _delay((unsigned long)((40)*(8000000/4000000.0)));
 22838  005896  0E1A               	movlw	26
 22839  005898                     u15477:
 22840  005898  2EE8               	decfsz	wreg,f,c
 22841  00589A  D7FE               	bra	u15477
 22842  00589C  D000               	nop2	
 22843                           
 22844                           ;lcd.h: 134: PORTDbits.RD3 = 0;
 22845  00589E  9683               	bcf	3971,3,c	;volatile
 22846  0058A0  0012               	return		;funcret
 22847  0058A2                     __end_of_Lcd_Write_Char:
 22848                           	opt stack 0
 22849                           tosu	equ	0xFFF
 22850                           tosh	equ	0xFFE
 22851                           tosl	equ	0xFFD
 22852                           pclath	equ	0xFFA
 22853                           tblptru	equ	0xFF8
 22854                           tblptrh	equ	0xFF7
 22855                           tblptrl	equ	0xFF6
 22856                           tablat	equ	0xFF5
 22857                           prodh	equ	0xFF4
 22858                           prodl	equ	0xFF3
 22859                           intcon	equ	0xFF2
 22860                           intcon2	equ	0xFF1
 22861                           intcon3	equ	0xFF0
 22862                           indf0	equ	0xFEF
 22863                           postinc0	equ	0xFEE
 22864                           fsr0h	equ	0xFEA
 22865                           fsr0l	equ	0xFE9
 22866                           wreg	equ	0xFE8
 22867                           indf1	equ	0xFE7
 22868                           postinc1	equ	0xFE6
 22869                           postdec1	equ	0xFE5
 22870                           plusw1	equ	0xFE3
 22871                           fsr1h	equ	0xFE2
 22872                           fsr1l	equ	0xFE1
 22873                           indf2	equ	0xFDF
 22874                           postinc2	equ	0xFDE
 22875                           postdec2	equ	0xFDD
 22876                           plusw2	equ	0xFDB
 22877                           fsr2h	equ	0xFDA
 22878                           fsr2l	equ	0xFD9
 22879                           status	equ	0xFD8
 22880                           
 22881 ;; *************** function _Lcd_Set_Cursor *****************
 22882 ;; Defined at:
 22883 ;;		line 87 in file "src/lcd.h"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  a               1    wreg     unsigned char 
 22886 ;;  b               1    3[BANK0 ] unsigned char 
 22887 ;; Auto vars:     Size  Location     Type
 22888 ;;  a               1    4[BANK0 ] unsigned char 
 22889 ;;  temp            1    7[BANK0 ] unsigned char 
 22890 ;;  y               1    6[BANK0 ] unsigned char 
 22891 ;;  z               1    5[BANK0 ] unsigned char 
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  1    wreg      void 
 22894 ;; Registers used:
 22895 ;;		wreg, status,2, status,0, cstack
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22901 ;;      Params:         0       1       0       0       0       0       0       0       0
 22902 ;;      Locals:         0       4       0       0       0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22904 ;;      Totals:         0       5       0       0       0       0       0       0       0
 22905 ;;Total ram usage:        5 bytes
 22906 ;; Hardware stack levels used:    1
 22907 ;; Hardware stack levels required when called:    8
 22908 ;; This function calls:
 22909 ;;		_Lcd_Cmd
 22910 ;; This function is called by:
 22911 ;;		_atualizaLCD
 22912 ;; This function uses a non-reentrant model
 22913 ;;
 22914                           
 22915                           	psect	text52
 22916  004DA2                     __ptext52:
 22917                           	opt stack 0
 22918  004DA2                     _Lcd_Set_Cursor:
 22919                           	opt stack 21
 22920                           
 22921                           ;incstack = 0
 22922                           ;Lcd_Set_Cursor@a stored from wreg
 22923  004DA2  0100               	movlb	0	; () banked
 22924  004DA4  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 22925                           
 22926                           ;lcd.h: 88: char temp, z, y;
 22927                           ;lcd.h: 89: switch (a) {
 22928  004DA6  D048               	goto	l250
 22929  004DA8                     
 22930                           ;lcd.h: 91: temp = 0x80 + b - 1;
 22931  004DA8  0100               	movlb	0	; () banked
 22932  004DAA  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22933  004DAC  0F7F               	addlw	127
 22934  004DAE  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22935                           
 22936                           ;lcd.h: 92: z = temp >> 4;
 22937  004DB0  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22938  004DB2  0B0F               	andlw	15
 22939  004DB4  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22940                           
 22941                           ;lcd.h: 93: y = temp & 0x0F;
 22942  004DB6  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22943  004DB8  0B0F               	andlw	15
 22944  004DBA  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22945                           
 22946                           ; BSR set to: 0
 22947                           ;lcd.h: 94: Lcd_Cmd(z);
 22948  004DBC  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22949  004DBE  EC95  F02D         	call	_Lcd_Cmd
 22950                           
 22951                           ;lcd.h: 95: Lcd_Cmd(y);
 22952  004DC2  0100               	movlb	0	; () banked
 22953  004DC4  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22954  004DC6  EC95  F02D         	call	_Lcd_Cmd
 22955                           
 22956                           ;lcd.h: 96: break;
 22957  004DCA  0012               	return	
 22958  004DCC                     
 22959                           ;lcd.h: 98: temp = 0xC0 + b - 1;
 22960  004DCC  0100               	movlb	0	; () banked
 22961  004DCE  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22962  004DD0  0FBF               	addlw	191
 22963  004DD2  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22964                           
 22965                           ;lcd.h: 99: z = temp >> 4;
 22966  004DD4  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22967  004DD6  0B0F               	andlw	15
 22968  004DD8  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22969                           
 22970                           ;lcd.h: 100: y = temp & 0x0F;
 22971  004DDA  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 22972  004DDC  0B0F               	andlw	15
 22973  004DDE  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;lcd.h: 101: Lcd_Cmd(z);
 22977  004DE0  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 22978  004DE2  EC95  F02D         	call	_Lcd_Cmd
 22979                           
 22980                           ;lcd.h: 102: Lcd_Cmd(y);
 22981  004DE6  0100               	movlb	0	; () banked
 22982  004DE8  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 22983  004DEA  EC95  F02D         	call	_Lcd_Cmd
 22984                           
 22985                           ;lcd.h: 103: break;
 22986  004DEE  0012               	return	
 22987  004DF0                     
 22988                           ;lcd.h: 105: temp = 0x94 + b;
 22989  004DF0  0100               	movlb	0	; () banked
 22990  004DF2  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 22991  004DF4  0F94               	addlw	148
 22992  004DF6  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 22993                           
 22994                           ;lcd.h: 106: z = temp >> 4;
 22995  004DF8  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 22996  004DFA  0B0F               	andlw	15
 22997  004DFC  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 22998                           
 22999                           ;lcd.h: 107: y = temp & 0x0F;
 23000  004DFE  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23001  004E00  0B0F               	andlw	15
 23002  004E02  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;lcd.h: 108: Lcd_Cmd(z);
 23006  004E04  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23007  004E06  EC95  F02D         	call	_Lcd_Cmd
 23008                           
 23009                           ;lcd.h: 109: Lcd_Cmd(y);
 23010  004E0A  0100               	movlb	0	; () banked
 23011  004E0C  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23012  004E0E  EC95  F02D         	call	_Lcd_Cmd
 23013                           
 23014                           ;lcd.h: 110: break;
 23015  004E12  0012               	return	
 23016  004E14                     
 23017                           ;lcd.h: 112: temp = 0xD4 + b;
 23018  004E14  0100               	movlb	0	; () banked
 23019  004E16  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 23020  004E18  0FD4               	addlw	212
 23021  004E1A  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 23022                           
 23023                           ;lcd.h: 113: z = temp >> 4;
 23024  004E1C  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 23025  004E1E  0B0F               	andlw	15
 23026  004E20  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 23027                           
 23028                           ;lcd.h: 114: y = temp & 0x0F;
 23029  004E22  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 23030  004E24  0B0F               	andlw	15
 23031  004E26  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 23032                           
 23033                           ; BSR set to: 0
 23034                           ;lcd.h: 115: Lcd_Cmd(z);
 23035  004E28  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 23036  004E2A  EC95  F02D         	call	_Lcd_Cmd
 23037                           
 23038                           ;lcd.h: 116: Lcd_Cmd(y);
 23039  004E2E  0100               	movlb	0	; () banked
 23040  004E30  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 23041  004E32  EC95  F02D         	call	_Lcd_Cmd
 23042                           
 23043                           ;lcd.h: 119: }
 23044                           
 23045                           ;lcd.h: 118: default:return;
 23046                           
 23047                           ;lcd.h: 117: break;
 23048  004E36  0012               	return	
 23049  004E38                     l250:
 23050  004E38  0100               	movlb	0	; () banked
 23051  004E3A  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 23052                           
 23053                           ; Switch size 1, requested type "space"
 23054                           ; Number of cases is 4, Range of values is 1 to 4
 23055                           ; switch strategies available:
 23056                           ; Name         Instructions Cycles
 23057                           ; simple_byte           13     7 (average)
 23058                           ;	Chosen strategy is simple_byte
 23059  004E3C  0A01               	xorlw	1	; case 1
 23060  004E3E  B4D8               	btfsc	status,2,c
 23061  004E40  D7B3               	goto	l251
 23062  004E42  0A03               	xorlw	3	; case 2
 23063  004E44  B4D8               	btfsc	status,2,c
 23064  004E46  D7C2               	goto	l253
 23065  004E48  0A01               	xorlw	1	; case 3
 23066  004E4A  B4D8               	btfsc	status,2,c
 23067  004E4C  D7D1               	goto	l254
 23068  004E4E  0A07               	xorlw	7	; case 4
 23069  004E50  A4D8               	btfss	status,2,c
 23070  004E52  0012               	return	
 23071  004E54  D7DF               	goto	l255
 23072  004E56                     __end_of_Lcd_Set_Cursor:
 23073                           	opt stack 0
 23074                           tosu	equ	0xFFF
 23075                           tosh	equ	0xFFE
 23076                           tosl	equ	0xFFD
 23077                           pclath	equ	0xFFA
 23078                           tblptru	equ	0xFF8
 23079                           tblptrh	equ	0xFF7
 23080                           tblptrl	equ	0xFF6
 23081                           tablat	equ	0xFF5
 23082                           prodh	equ	0xFF4
 23083                           prodl	equ	0xFF3
 23084                           intcon	equ	0xFF2
 23085                           intcon2	equ	0xFF1
 23086                           intcon3	equ	0xFF0
 23087                           indf0	equ	0xFEF
 23088                           postinc0	equ	0xFEE
 23089                           fsr0h	equ	0xFEA
 23090                           fsr0l	equ	0xFE9
 23091                           wreg	equ	0xFE8
 23092                           indf1	equ	0xFE7
 23093                           postinc1	equ	0xFE6
 23094                           postdec1	equ	0xFE5
 23095                           plusw1	equ	0xFE3
 23096                           fsr1h	equ	0xFE2
 23097                           fsr1l	equ	0xFE1
 23098                           indf2	equ	0xFDF
 23099                           postinc2	equ	0xFDE
 23100                           postdec2	equ	0xFDD
 23101                           plusw2	equ	0xFDB
 23102                           fsr2h	equ	0xFDA
 23103                           fsr2l	equ	0xFD9
 23104                           status	equ	0xFD8
 23105                           
 23106 ;; *************** function _UART_Init *****************
 23107 ;; Defined at:
 23108 ;;		line 9 in file "src/USART.h"
 23109 ;; Parameters:    Size  Location     Type
 23110 ;;		None
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;		None
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      void 
 23115 ;; Registers used:
 23116 ;;		wreg, status,2
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/0
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23122 ;;      Params:         0       0       0       0       0       0       0       0       0
 23123 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23125 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23126 ;;Total ram usage:        0 bytes
 23127 ;; Hardware stack levels used:    1
 23128 ;; Hardware stack levels required when called:    6
 23129 ;; This function calls:
 23130 ;;		Nothing
 23131 ;; This function is called by:
 23132 ;;		_main
 23133 ;; This function uses a non-reentrant model
 23134 ;;
 23135                           
 23136                           	psect	text53
 23137  005BD0                     __ptext53:
 23138                           	opt stack 0
 23139  005BD0                     _UART_Init:
 23140                           	opt stack 24
 23141                           
 23142                           ;USART.h: 10: TRISCbits.TRISC6 = 0;
 23143                           
 23144                           ;incstack = 0
 23145  005BD0  9C94               	bcf	3988,6,c	;volatile
 23146                           
 23147                           ;USART.h: 11: TRISCbits.TRISC7 = 1;
 23148  005BD2  8E94               	bsf	3988,7,c	;volatile
 23149                           
 23150                           ;USART.h: 14: TXSTAbits.TXEN = 1;
 23151  005BD4  8AAC               	bsf	4012,5,c	;volatile
 23152                           
 23153                           ;USART.h: 15: TXSTAbits.BRGH = 1;
 23154  005BD6  84AC               	bsf	4012,2,c	;volatile
 23155                           
 23156                           ;USART.h: 16: TXSTAbits.SYNC = 0;
 23157  005BD8  98AC               	bcf	4012,4,c	;volatile
 23158                           
 23159                           ;USART.h: 19: RCSTAbits.SPEN = 1;
 23160  005BDA  8EAB               	bsf	4011,7,c	;volatile
 23161                           
 23162                           ;USART.h: 20: RCSTAbits.CREN = 1;
 23163  005BDC  88AB               	bsf	4011,4,c	;volatile
 23164                           
 23165                           ;USART.h: 25: SPBRG = 25;
 23166  005BDE  0E19               	movlw	25
 23167  005BE0  6EAF               	movwf	4015,c	;volatile
 23168                           
 23169                           ;USART.h: 28: INTCONbits.GIE = 1;
 23170  005BE2  8EF2               	bsf	intcon,7,c	;volatile
 23171                           
 23172                           ;USART.h: 29: INTCONbits.PEIE = 1;
 23173  005BE4  8CF2               	bsf	intcon,6,c	;volatile
 23174                           
 23175                           ;USART.h: 31: PIR1bits.RCIF = 0;
 23176  005BE6  9A9E               	bcf	3998,5,c	;volatile
 23177                           
 23178                           ;USART.h: 32: PIE1bits.RCIE = 1;
 23179  005BE8  8A9D               	bsf	3997,5,c	;volatile
 23180  005BEA  0012               	return		;funcret
 23181  005BEC                     __end_of_UART_Init:
 23182                           	opt stack 0
 23183                           tosu	equ	0xFFF
 23184                           tosh	equ	0xFFE
 23185                           tosl	equ	0xFFD
 23186                           pclath	equ	0xFFA
 23187                           tblptru	equ	0xFF8
 23188                           tblptrh	equ	0xFF7
 23189                           tblptrl	equ	0xFF6
 23190                           tablat	equ	0xFF5
 23191                           prodh	equ	0xFF4
 23192                           prodl	equ	0xFF3
 23193                           intcon	equ	0xFF2
 23194                           intcon2	equ	0xFF1
 23195                           intcon3	equ	0xFF0
 23196                           indf0	equ	0xFEF
 23197                           postinc0	equ	0xFEE
 23198                           fsr0h	equ	0xFEA
 23199                           fsr0l	equ	0xFE9
 23200                           wreg	equ	0xFE8
 23201                           indf1	equ	0xFE7
 23202                           postinc1	equ	0xFE6
 23203                           postdec1	equ	0xFE5
 23204                           plusw1	equ	0xFE3
 23205                           fsr1h	equ	0xFE2
 23206                           fsr1l	equ	0xFE1
 23207                           indf2	equ	0xFDF
 23208                           postinc2	equ	0xFDE
 23209                           postdec2	equ	0xFDD
 23210                           plusw2	equ	0xFDB
 23211                           fsr2h	equ	0xFDA
 23212                           fsr2l	equ	0xFD9
 23213                           status	equ	0xFD8
 23214                           
 23215 ;; *************** function _Lcd_Init *****************
 23216 ;; Defined at:
 23217 ;;		line 17 in file "src/lcd.h"
 23218 ;; Parameters:    Size  Location     Type
 23219 ;;		None
 23220 ;; Auto vars:     Size  Location     Type
 23221 ;;		None
 23222 ;; Return value:  Size  Location     Type
 23223 ;;                  1    wreg      void 
 23224 ;; Registers used:
 23225 ;;		wreg, status,2, cstack
 23226 ;; Tracked objects:
 23227 ;;		On entry : 0/0
 23228 ;;		On exit  : 0/0
 23229 ;;		Unchanged: 0/0
 23230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23231 ;;      Params:         0       0       0       0       0       0       0       0       0
 23232 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23233 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23234 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23235 ;;Total ram usage:        1 bytes
 23236 ;; Hardware stack levels used:    1
 23237 ;; Hardware stack levels required when called:    8
 23238 ;; This function calls:
 23239 ;;		_Lcd_Cmd
 23240 ;;		_Lcd_Port
 23241 ;; This function is called by:
 23242 ;;		_main
 23243 ;; This function uses a non-reentrant model
 23244 ;;
 23245                           
 23246                           	psect	text54
 23247  005340                     __ptext54:
 23248                           	opt stack 0
 23249  005340                     _Lcd_Init:
 23250                           	opt stack 22
 23251                           
 23252                           ;lcd.h: 21: TRISDbits.RD7 = 0;
 23253                           
 23254                           ;incstack = 0
 23255  005340  9E95               	bcf	3989,7,c	;volatile
 23256                           
 23257                           ;lcd.h: 22: TRISDbits.RD6 = 0;
 23258  005342  9C95               	bcf	3989,6,c	;volatile
 23259                           
 23260                           ;lcd.h: 23: TRISDbits.RD5 = 0;
 23261  005344  9A95               	bcf	3989,5,c	;volatile
 23262                           
 23263                           ;lcd.h: 24: TRISDbits.RD4 = 0;
 23264  005346  9895               	bcf	3989,4,c	;volatile
 23265                           
 23266                           ;lcd.h: 25: TRISDbits.RD3 = 0;
 23267  005348  9695               	bcf	3989,3,c	;volatile
 23268                           
 23269                           ;lcd.h: 26: TRISDbits.RD2 = 0;
 23270  00534A  9495               	bcf	3989,2,c	;volatile
 23271                           
 23272                           ;lcd.h: 35: Lcd_Port(0x00);
 23273  00534C  0E00               	movlw	0
 23274  00534E  ECEB  F02C         	call	_Lcd_Port
 23275                           
 23276                           ;lcd.h: 36: _delay((unsigned long)((20)*(8000000/4000.0)));
 23277  005352  0E34               	movlw	52
 23278  005354  0100               	movlb	0	; () banked
 23279  005356  6F63               	movwf	??_Lcd_Init& (0+255),b
 23280  005358  0EF1               	movlw	241
 23281  00535A                     u15487:
 23282  00535A  2EE8               	decfsz	wreg,f,c
 23283  00535C  D7FE               	bra	u15487
 23284  00535E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23285  005360  D7FC               	bra	u15487
 23286  005362  D000               	nop2	
 23287                           
 23288                           ;lcd.h: 37: Lcd_Cmd(0x03);
 23289  005364  0E03               	movlw	3
 23290  005366  EC95  F02D         	call	_Lcd_Cmd
 23291                           
 23292                           ;lcd.h: 38: _delay((unsigned long)((5)*(8000000/4000.0)));
 23293  00536A  0E0D               	movlw	13
 23294  00536C  0100               	movlb	0	; () banked
 23295  00536E  6F63               	movwf	??_Lcd_Init& (0+255),b
 23296  005370  0EFB               	movlw	251
 23297  005372                     u15497:
 23298  005372  2EE8               	decfsz	wreg,f,c
 23299  005374  D7FE               	bra	u15497
 23300  005376  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23301  005378  D7FC               	bra	u15497
 23302  00537A  D000               	nop2	
 23303                           
 23304                           ;lcd.h: 39: Lcd_Cmd(0x03);
 23305  00537C  0E03               	movlw	3
 23306  00537E  EC95  F02D         	call	_Lcd_Cmd
 23307                           
 23308                           ;lcd.h: 40: _delay((unsigned long)((11)*(8000000/4000.0)));
 23309  005382  0E1D               	movlw	29
 23310  005384  0100               	movlb	0	; () banked
 23311  005386  6F63               	movwf	??_Lcd_Init& (0+255),b
 23312  005388  0E91               	movlw	145
 23313  00538A                     u15507:
 23314  00538A  2EE8               	decfsz	wreg,f,c
 23315  00538C  D7FE               	bra	u15507
 23316  00538E  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 23317  005390  D7FC               	bra	u15507
 23318                           
 23319                           ;lcd.h: 41: Lcd_Cmd(0x03);
 23320  005392  0E03               	movlw	3
 23321  005394  EC95  F02D         	call	_Lcd_Cmd
 23322                           
 23323                           ;lcd.h: 43: Lcd_Cmd(0x02);
 23324  005398  0E02               	movlw	2
 23325  00539A  EC95  F02D         	call	_Lcd_Cmd
 23326                           
 23327                           ;lcd.h: 44: Lcd_Cmd(0x02);
 23328  00539E  0E02               	movlw	2
 23329  0053A0  EC95  F02D         	call	_Lcd_Cmd
 23330                           
 23331                           ;lcd.h: 45: Lcd_Cmd(0x08);
 23332  0053A4  0E08               	movlw	8
 23333  0053A6  EC95  F02D         	call	_Lcd_Cmd
 23334                           
 23335                           ;lcd.h: 46: Lcd_Cmd(0x00);
 23336  0053AA  0E00               	movlw	0
 23337  0053AC  EC95  F02D         	call	_Lcd_Cmd
 23338                           
 23339                           ;lcd.h: 47: Lcd_Cmd(0x0C);
 23340  0053B0  0E0C               	movlw	12
 23341  0053B2  EC95  F02D         	call	_Lcd_Cmd
 23342                           
 23343                           ;lcd.h: 48: Lcd_Cmd(0x00);
 23344  0053B6  0E00               	movlw	0
 23345  0053B8  EC95  F02D         	call	_Lcd_Cmd
 23346                           
 23347                           ;lcd.h: 49: Lcd_Cmd(0x06);
 23348  0053BC  0E06               	movlw	6
 23349  0053BE  EC95  F02D         	call	_Lcd_Cmd
 23350  0053C2  0012               	return		;funcret
 23351  0053C4                     __end_of_Lcd_Init:
 23352                           	opt stack 0
 23353                           tosu	equ	0xFFF
 23354                           tosh	equ	0xFFE
 23355                           tosl	equ	0xFFD
 23356                           pclath	equ	0xFFA
 23357                           tblptru	equ	0xFF8
 23358                           tblptrh	equ	0xFF7
 23359                           tblptrl	equ	0xFF6
 23360                           tablat	equ	0xFF5
 23361                           prodh	equ	0xFF4
 23362                           prodl	equ	0xFF3
 23363                           intcon	equ	0xFF2
 23364                           intcon2	equ	0xFF1
 23365                           intcon3	equ	0xFF0
 23366                           indf0	equ	0xFEF
 23367                           postinc0	equ	0xFEE
 23368                           fsr0h	equ	0xFEA
 23369                           fsr0l	equ	0xFE9
 23370                           wreg	equ	0xFE8
 23371                           indf1	equ	0xFE7
 23372                           postinc1	equ	0xFE6
 23373                           postdec1	equ	0xFE5
 23374                           plusw1	equ	0xFE3
 23375                           fsr1h	equ	0xFE2
 23376                           fsr1l	equ	0xFE1
 23377                           indf2	equ	0xFDF
 23378                           postinc2	equ	0xFDE
 23379                           postdec2	equ	0xFDD
 23380                           plusw2	equ	0xFDB
 23381                           fsr2h	equ	0xFDA
 23382                           fsr2l	equ	0xFD9
 23383                           status	equ	0xFD8
 23384                           
 23385 ;; *************** function _Lcd_Clear *****************
 23386 ;; Defined at:
 23387 ;;		line 82 in file "src/lcd.h"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;		None
 23390 ;; Auto vars:     Size  Location     Type
 23391 ;;		None
 23392 ;; Return value:  Size  Location     Type
 23393 ;;                  1    wreg      void 
 23394 ;; Registers used:
 23395 ;;		wreg, status,2, cstack
 23396 ;; Tracked objects:
 23397 ;;		On entry : 0/0
 23398 ;;		On exit  : 0/0
 23399 ;;		Unchanged: 0/0
 23400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23401 ;;      Params:         0       0       0       0       0       0       0       0       0
 23402 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23403 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23404 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23405 ;;Total ram usage:        0 bytes
 23406 ;; Hardware stack levels used:    1
 23407 ;; Hardware stack levels required when called:    8
 23408 ;; This function calls:
 23409 ;;		_Lcd_Cmd
 23410 ;; This function is called by:
 23411 ;;		_main
 23412 ;; This function uses a non-reentrant model
 23413 ;;
 23414                           
 23415                           	psect	text55
 23416  005C20                     __ptext55:
 23417                           	opt stack 0
 23418  005C20                     _Lcd_Clear:
 23419                           	opt stack 22
 23420                           
 23421                           ;lcd.h: 83: Lcd_Cmd(0);
 23422                           
 23423                           ;incstack = 0
 23424  005C20  0E00               	movlw	0
 23425  005C22  EC95  F02D         	call	_Lcd_Cmd
 23426                           
 23427                           ;lcd.h: 84: Lcd_Cmd(1);
 23428  005C26  0E01               	movlw	1
 23429  005C28  EC95  F02D         	call	_Lcd_Cmd
 23430  005C2C  0012               	return		;funcret
 23431  005C2E                     __end_of_Lcd_Clear:
 23432                           	opt stack 0
 23433                           tosu	equ	0xFFF
 23434                           tosh	equ	0xFFE
 23435                           tosl	equ	0xFFD
 23436                           pclath	equ	0xFFA
 23437                           tblptru	equ	0xFF8
 23438                           tblptrh	equ	0xFF7
 23439                           tblptrl	equ	0xFF6
 23440                           tablat	equ	0xFF5
 23441                           prodh	equ	0xFF4
 23442                           prodl	equ	0xFF3
 23443                           intcon	equ	0xFF2
 23444                           intcon2	equ	0xFF1
 23445                           intcon3	equ	0xFF0
 23446                           indf0	equ	0xFEF
 23447                           postinc0	equ	0xFEE
 23448                           fsr0h	equ	0xFEA
 23449                           fsr0l	equ	0xFE9
 23450                           wreg	equ	0xFE8
 23451                           indf1	equ	0xFE7
 23452                           postinc1	equ	0xFE6
 23453                           postdec1	equ	0xFE5
 23454                           plusw1	equ	0xFE3
 23455                           fsr1h	equ	0xFE2
 23456                           fsr1l	equ	0xFE1
 23457                           indf2	equ	0xFDF
 23458                           postinc2	equ	0xFDE
 23459                           postdec2	equ	0xFDD
 23460                           plusw2	equ	0xFDB
 23461                           fsr2h	equ	0xFDA
 23462                           fsr2l	equ	0xFD9
 23463                           status	equ	0xFD8
 23464                           
 23465 ;; *************** function _Lcd_Cmd *****************
 23466 ;; Defined at:
 23467 ;;		line 74 in file "src/lcd.h"
 23468 ;; Parameters:    Size  Location     Type
 23469 ;;  a               1    wreg     unsigned char 
 23470 ;; Auto vars:     Size  Location     Type
 23471 ;;  a               1    2[BANK0 ] unsigned char 
 23472 ;; Return value:  Size  Location     Type
 23473 ;;                  1    wreg      void 
 23474 ;; Registers used:
 23475 ;;		wreg, status,2, cstack
 23476 ;; Tracked objects:
 23477 ;;		On entry : 0/0
 23478 ;;		On exit  : 0/0
 23479 ;;		Unchanged: 0/0
 23480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23481 ;;      Params:         0       0       0       0       0       0       0       0       0
 23482 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23483 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23484 ;;      Totals:         0       2       0       0       0       0       0       0       0
 23485 ;;Total ram usage:        2 bytes
 23486 ;; Hardware stack levels used:    1
 23487 ;; Hardware stack levels required when called:    7
 23488 ;; This function calls:
 23489 ;;		_Lcd_Port
 23490 ;; This function is called by:
 23491 ;;		_Lcd_Init
 23492 ;;		_Lcd_Clear
 23493 ;;		_Lcd_Set_Cursor
 23494 ;;		_criaCaracteresCGRAM
 23495 ;; This function uses a non-reentrant model
 23496 ;;
 23497                           
 23498                           	psect	text56
 23499  005B2A                     __ptext56:
 23500                           	opt stack 0
 23501  005B2A                     _Lcd_Cmd:
 23502                           	opt stack 22
 23503                           
 23504                           ;incstack = 0
 23505                           ;Lcd_Cmd@a stored from wreg
 23506  005B2A  0100               	movlb	0	; () banked
 23507  005B2C  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 23508                           
 23509                           ;lcd.h: 75: PORTDbits.RD2 = 0;
 23510  005B2E  9483               	bcf	3971,2,c	;volatile
 23511                           
 23512                           ;lcd.h: 76: Lcd_Port(a);
 23513  005B30  0100               	movlb	0	; () banked
 23514  005B32  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 23515  005B34  ECEB  F02C         	call	_Lcd_Port
 23516                           
 23517                           ;lcd.h: 77: PORTDbits.RD3 = 1;
 23518  005B38  8683               	bsf	3971,3,c	;volatile
 23519                           
 23520                           ;lcd.h: 78: _delay((unsigned long)((4)*(8000000/4000.0)));
 23521  005B3A  0E0B               	movlw	11
 23522  005B3C  0100               	movlb	0	; () banked
 23523  005B3E  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 23524  005B40  0E62               	movlw	98
 23525  005B42                     u15517:
 23526  005B42  2EE8               	decfsz	wreg,f,c
 23527  005B44  D7FE               	bra	u15517
 23528  005B46  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 23529  005B48  D7FC               	bra	u15517
 23530  005B4A  F000               	nop	
 23531                           
 23532                           ;lcd.h: 79: PORTDbits.RD3 = 0;
 23533  005B4C  9683               	bcf	3971,3,c	;volatile
 23534  005B4E  0012               	return		;funcret
 23535  005B50                     __end_of_Lcd_Cmd:
 23536                           	opt stack 0
 23537                           tosu	equ	0xFFF
 23538                           tosh	equ	0xFFE
 23539                           tosl	equ	0xFFD
 23540                           pclath	equ	0xFFA
 23541                           tblptru	equ	0xFF8
 23542                           tblptrh	equ	0xFF7
 23543                           tblptrl	equ	0xFF6
 23544                           tablat	equ	0xFF5
 23545                           prodh	equ	0xFF4
 23546                           prodl	equ	0xFF3
 23547                           intcon	equ	0xFF2
 23548                           intcon2	equ	0xFF1
 23549                           intcon3	equ	0xFF0
 23550                           indf0	equ	0xFEF
 23551                           postinc0	equ	0xFEE
 23552                           fsr0h	equ	0xFEA
 23553                           fsr0l	equ	0xFE9
 23554                           wreg	equ	0xFE8
 23555                           indf1	equ	0xFE7
 23556                           postinc1	equ	0xFE6
 23557                           postdec1	equ	0xFE5
 23558                           plusw1	equ	0xFE3
 23559                           fsr1h	equ	0xFE2
 23560                           fsr1l	equ	0xFE1
 23561                           indf2	equ	0xFDF
 23562                           postinc2	equ	0xFDE
 23563                           postdec2	equ	0xFDD
 23564                           plusw2	equ	0xFDB
 23565                           fsr2h	equ	0xFDA
 23566                           fsr2l	equ	0xFD9
 23567                           status	equ	0xFD8
 23568                           
 23569 ;; *************** function _Lcd_Port *****************
 23570 ;; Defined at:
 23571 ;;		line 52 in file "src/lcd.h"
 23572 ;; Parameters:    Size  Location     Type
 23573 ;;  a               1    wreg     unsigned char 
 23574 ;; Auto vars:     Size  Location     Type
 23575 ;;  a               1    0[BANK0 ] unsigned char 
 23576 ;; Return value:  Size  Location     Type
 23577 ;;                  1    wreg      void 
 23578 ;; Registers used:
 23579 ;;		wreg
 23580 ;; Tracked objects:
 23581 ;;		On entry : 0/0
 23582 ;;		On exit  : 0/0
 23583 ;;		Unchanged: 0/0
 23584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23585 ;;      Params:         0       0       0       0       0       0       0       0       0
 23586 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23588 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23589 ;;Total ram usage:        1 bytes
 23590 ;; Hardware stack levels used:    1
 23591 ;; Hardware stack levels required when called:    6
 23592 ;; This function calls:
 23593 ;;		Nothing
 23594 ;; This function is called by:
 23595 ;;		_Lcd_Init
 23596 ;;		_Lcd_Cmd
 23597 ;;		_Lcd_Write_Char
 23598 ;; This function uses a non-reentrant model
 23599 ;;
 23600                           
 23601                           	psect	text57
 23602  0059D6                     __ptext57:
 23603                           	opt stack 0
 23604  0059D6                     _Lcd_Port:
 23605                           	opt stack 22
 23606                           
 23607                           ;incstack = 0
 23608                           ;Lcd_Port@a stored from wreg
 23609  0059D6  0100               	movlb	0	; () banked
 23610  0059D8  6F60               	movwf	Lcd_Port@a& (0+255),b
 23611                           
 23612                           ;lcd.h: 53: if (a & 1)
 23613  0059DA  0100               	movlb	0	; () banked
 23614  0059DC  A160               	btfss	Lcd_Port@a& (0+255),0,b
 23615  0059DE  D002               	goto	l233
 23616                           
 23617                           ; BSR set to: 0
 23618                           ;lcd.h: 54: PORTDbits.RD4 = 1;
 23619  0059E0  8883               	bsf	3971,4,c	;volatile
 23620  0059E2  D001               	goto	l234
 23621  0059E4                     l233:
 23622                           
 23623                           ; BSR set to: 0
 23624                           ;lcd.h: 55: else
 23625                           ;lcd.h: 56: PORTDbits.RD4 = 0;
 23626  0059E4  9883               	bcf	3971,4,c	;volatile
 23627  0059E6                     l234:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;lcd.h: 58: if (a & 2)
 23631                           
 23632                           ; BSR set to: 0
 23633  0059E6  A360               	btfss	Lcd_Port@a& (0+255),1,b
 23634  0059E8  D002               	goto	l235
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;lcd.h: 59: PORTDbits.RD5 = 1;
 23638  0059EA  8A83               	bsf	3971,5,c	;volatile
 23639  0059EC  D001               	goto	l236
 23640  0059EE                     l235:
 23641                           
 23642                           ; BSR set to: 0
 23643                           ;lcd.h: 60: else
 23644                           ;lcd.h: 61: PORTDbits.RD5 = 0;
 23645  0059EE  9A83               	bcf	3971,5,c	;volatile
 23646  0059F0                     l236:
 23647                           
 23648                           ; BSR set to: 0
 23649                           ;lcd.h: 63: if (a & 4)
 23650                           
 23651                           ; BSR set to: 0
 23652  0059F0  A560               	btfss	Lcd_Port@a& (0+255),2,b
 23653  0059F2  D002               	goto	l237
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;lcd.h: 64: PORTDbits.RD6 = 1;
 23657  0059F4  8C83               	bsf	3971,6,c	;volatile
 23658  0059F6  D001               	goto	l238
 23659  0059F8                     l237:
 23660                           
 23661                           ; BSR set to: 0
 23662                           ;lcd.h: 65: else
 23663                           ;lcd.h: 66: PORTDbits.RD6 = 0;
 23664  0059F8  9C83               	bcf	3971,6,c	;volatile
 23665  0059FA                     l238:
 23666                           
 23667                           ; BSR set to: 0
 23668                           ;lcd.h: 68: if (a & 8)
 23669                           
 23670                           ; BSR set to: 0
 23671  0059FA  A760               	btfss	Lcd_Port@a& (0+255),3,b
 23672  0059FC  D002               	goto	l239
 23673                           
 23674                           ; BSR set to: 0
 23675                           ;lcd.h: 69: PORTDbits.RD7 = 1;
 23676  0059FE  8E83               	bsf	3971,7,c	;volatile
 23677  005A00  0012               	return	
 23678  005A02                     l239:
 23679                           
 23680                           ; BSR set to: 0
 23681                           ;lcd.h: 70: else
 23682                           ;lcd.h: 71: PORTDbits.RD7 = 0;
 23683  005A02  9E83               	bcf	3971,7,c	;volatile
 23684  005A04  0012               	return	
 23685  005A06                     __end_of_Lcd_Port:
 23686                           	opt stack 0
 23687                           tosu	equ	0xFFF
 23688                           tosh	equ	0xFFE
 23689                           tosl	equ	0xFFD
 23690                           pclath	equ	0xFFA
 23691                           tblptru	equ	0xFF8
 23692                           tblptrh	equ	0xFF7
 23693                           tblptrl	equ	0xFF6
 23694                           tablat	equ	0xFF5
 23695                           prodh	equ	0xFF4
 23696                           prodl	equ	0xFF3
 23697                           intcon	equ	0xFF2
 23698                           intcon2	equ	0xFF1
 23699                           intcon3	equ	0xFF0
 23700                           indf0	equ	0xFEF
 23701                           postinc0	equ	0xFEE
 23702                           fsr0h	equ	0xFEA
 23703                           fsr0l	equ	0xFE9
 23704                           wreg	equ	0xFE8
 23705                           indf1	equ	0xFE7
 23706                           postinc1	equ	0xFE6
 23707                           postdec1	equ	0xFE5
 23708                           plusw1	equ	0xFE3
 23709                           fsr1h	equ	0xFE2
 23710                           fsr1l	equ	0xFE1
 23711                           indf2	equ	0xFDF
 23712                           postinc2	equ	0xFDE
 23713                           postdec2	equ	0xFDD
 23714                           plusw2	equ	0xFDB
 23715                           fsr2h	equ	0xFDA
 23716                           fsr2l	equ	0xFD9
 23717                           status	equ	0xFD8
 23718                           
 23719 ;; *************** function _I2C_Master_Init *****************
 23720 ;; Defined at:
 23721 ;;		line 11 in file "src/I2C.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;  c               4   13[BANK0 ] const unsigned long 
 23724 ;; Auto vars:     Size  Location     Type
 23725 ;;		None
 23726 ;; Return value:  Size  Location     Type
 23727 ;;                  1    wreg      void 
 23728 ;; Registers used:
 23729 ;;		wreg, status,2, status,0, cstack
 23730 ;; Tracked objects:
 23731 ;;		On entry : 0/0
 23732 ;;		On exit  : 0/0
 23733 ;;		Unchanged: 0/0
 23734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23735 ;;      Params:         0       4       0       0       0       0       0       0       0
 23736 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23737 ;;      Temps:          0       4       0       0       0       0       0       0       0
 23738 ;;      Totals:         0       8       0       0       0       0       0       0       0
 23739 ;;Total ram usage:        8 bytes
 23740 ;; Hardware stack levels used:    1
 23741 ;; Hardware stack levels required when called:    7
 23742 ;; This function calls:
 23743 ;;		___lldiv
 23744 ;; This function is called by:
 23745 ;;		_main
 23746 ;; This function uses a non-reentrant model
 23747 ;;
 23748                           
 23749                           	psect	text58
 23750  0054B8                     __ptext58:
 23751                           	opt stack 0
 23752  0054B8                     _I2C_Master_Init:
 23753                           	opt stack 23
 23754                           
 23755                           ;I2C.c: 12: TRISBbits.RB0 = 1;
 23756                           
 23757                           ; BSR set to: 0
 23758                           ;incstack = 0
 23759  0054B8  8093               	bsf	3987,0,c	;volatile
 23760                           
 23761                           ;I2C.c: 13: TRISBbits.RB1 = 1;
 23762  0054BA  8293               	bsf	3987,1,c	;volatile
 23763                           
 23764                           ;I2C.c: 14: SSPCON1 = 0x28;
 23765  0054BC  0E28               	movlw	40
 23766  0054BE  6EC6               	movwf	4038,c	;volatile
 23767                           
 23768                           ;I2C.c: 15: SSPCON2 = 0x0;
 23769  0054C0  0E00               	movlw	0
 23770  0054C2  6EC5               	movwf	4037,c	;volatile
 23771                           
 23772                           ;I2C.c: 16: SSPADD = (8000000 / (4 * c)) - 1;
 23773  0054C4  0E00               	movlw	0
 23774  0054C6  0100               	movlb	0	; () banked
 23775  0054C8  6F60               	movwf	___lldiv@dividend& (0+255),b
 23776  0054CA  0E12               	movlw	18
 23777  0054CC  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 23778  0054CE  0E7A               	movlw	122
 23779  0054D0  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 23780  0054D2  0E00               	movlw	0
 23781  0054D4  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 23782  0054D6  C06D  F071         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 23783  0054DA  C06E  F072         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 23784  0054DE  C06F  F073         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 23785  0054E2  C070  F074         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 23786  0054E6  0E02               	movlw	2
 23787  0054E8                     u14155:
 23788  0054E8  90D8               	bcf	status,0,c
 23789  0054EA  3771               	rlcf	??_I2C_Master_Init& (0+255),f,b
 23790  0054EC  3772               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 23791  0054EE  3773               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 23792  0054F0  3774               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 23793  0054F2  2EE8               	decfsz	wreg,f,c
 23794  0054F4  D7F9               	goto	u14155
 23795  0054F6  C071  F064         	movff	??_I2C_Master_Init,___lldiv@divisor
 23796  0054FA  C072  F065         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 23797  0054FE  C073  F066         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 23798  005502  C074  F067         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 23799  005506  ECE2  F029         	call	___lldiv	;wreg free
 23800  00550A  0100               	movlb	0	; () banked
 23801  00550C  0560               	decf	?___lldiv& (0+255),w,b
 23802  00550E  6EC8               	movwf	4040,c	;volatile
 23803                           
 23804                           ; BSR set to: 0
 23805                           ;I2C.c: 17: SSPSTAT = 0;
 23806  005510  0E00               	movlw	0
 23807  005512  6EC7               	movwf	4039,c	;volatile
 23808                           
 23809                           ; BSR set to: 0
 23810                           ;I2C.c: 18: _delay((unsigned long)((50)*(8000000/4000.0)));
 23811  005514  0E82               	movlw	130
 23812  005516  0100               	movlb	0	; () banked
 23813  005518  6F71               	movwf	??_I2C_Master_Init& (0+255),b
 23814  00551A  0EDD               	movlw	221
 23815  00551C                     u15527:
 23816  00551C  2EE8               	decfsz	wreg,f,c
 23817  00551E  D7FE               	bra	u15527
 23818  005520  2F71               	decfsz	??_I2C_Master_Init& (0+255),f,b
 23819  005522  D7FC               	bra	u15527
 23820  005524  D000               	nop2	
 23821  005526  0012               	return		;funcret
 23822  005528                     __end_of_I2C_Master_Init:
 23823                           	opt stack 0
 23824                           tosu	equ	0xFFF
 23825                           tosh	equ	0xFFE
 23826                           tosl	equ	0xFFD
 23827                           pclath	equ	0xFFA
 23828                           tblptru	equ	0xFF8
 23829                           tblptrh	equ	0xFF7
 23830                           tblptrl	equ	0xFF6
 23831                           tablat	equ	0xFF5
 23832                           prodh	equ	0xFF4
 23833                           prodl	equ	0xFF3
 23834                           intcon	equ	0xFF2
 23835                           intcon2	equ	0xFF1
 23836                           intcon3	equ	0xFF0
 23837                           indf0	equ	0xFEF
 23838                           postinc0	equ	0xFEE
 23839                           fsr0h	equ	0xFEA
 23840                           fsr0l	equ	0xFE9
 23841                           wreg	equ	0xFE8
 23842                           indf1	equ	0xFE7
 23843                           postinc1	equ	0xFE6
 23844                           postdec1	equ	0xFE5
 23845                           plusw1	equ	0xFE3
 23846                           fsr1h	equ	0xFE2
 23847                           fsr1l	equ	0xFE1
 23848                           indf2	equ	0xFDF
 23849                           postinc2	equ	0xFDE
 23850                           postdec2	equ	0xFDD
 23851                           plusw2	equ	0xFDB
 23852                           fsr2h	equ	0xFDA
 23853                           fsr2l	equ	0xFD9
 23854                           status	equ	0xFD8
 23855                           
 23856 ;; *************** function ___lldiv *****************
 23857 ;; Defined at:
 23858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 23859 ;; Parameters:    Size  Location     Type
 23860 ;;  dividend        4    0[BANK0 ] unsigned long 
 23861 ;;  divisor         4    4[BANK0 ] unsigned long 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  quotient        4    8[BANK0 ] unsigned long 
 23864 ;;  counter         1   12[BANK0 ] unsigned char 
 23865 ;; Return value:  Size  Location     Type
 23866 ;;                  4    0[BANK0 ] unsigned long 
 23867 ;; Registers used:
 23868 ;;		wreg, status,2, status,0
 23869 ;; Tracked objects:
 23870 ;;		On entry : 0/0
 23871 ;;		On exit  : 0/0
 23872 ;;		Unchanged: 0/0
 23873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23874 ;;      Params:         0       8       0       0       0       0       0       0       0
 23875 ;;      Locals:         0       5       0       0       0       0       0       0       0
 23876 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23877 ;;      Totals:         0      13       0       0       0       0       0       0       0
 23878 ;;Total ram usage:       13 bytes
 23879 ;; Hardware stack levels used:    1
 23880 ;; Hardware stack levels required when called:    6
 23881 ;; This function calls:
 23882 ;;		Nothing
 23883 ;; This function is called by:
 23884 ;;		_I2C_Master_Init
 23885 ;; This function uses a non-reentrant model
 23886 ;;
 23887                           
 23888                           	psect	text59
 23889  0053C4                     __ptext59:
 23890                           	opt stack 0
 23891  0053C4                     ___lldiv:
 23892                           	opt stack 23
 23893                           
 23894                           ;incstack = 0
 23895  0053C4  0E00               	movlw	0
 23896  0053C6  0100               	movlb	0	; () banked
 23897  0053C8  6F68               	movwf	___lldiv@quotient& (0+255),b
 23898  0053CA  0E00               	movlw	0
 23899  0053CC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 23900  0053CE  0E00               	movlw	0
 23901  0053D0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 23902  0053D2  0E00               	movlw	0
 23903  0053D4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 23904                           
 23905                           ; BSR set to: 0
 23906  0053D6  5164               	movf	___lldiv@divisor& (0+255),w,b
 23907  0053D8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 23908  0053DA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 23909  0053DC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 23910  0053DE  B4D8               	btfsc	status,2,c
 23911  0053E0  D02A               	goto	l2056
 23912                           
 23913                           ; BSR set to: 0
 23914  0053E2  0E01               	movlw	1
 23915  0053E4  6F6C               	movwf	___lldiv@counter& (0+255),b
 23916  0053E6  D006               	goto	l2051
 23917  0053E8                     
 23918                           ; BSR set to: 0
 23919                           
 23920                           ; BSR set to: 0
 23921  0053E8  90D8               	bcf	status,0,c
 23922  0053EA  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 23923  0053EC  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 23924  0053EE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 23925  0053F0  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 23926  0053F2  2B6C               	incf	___lldiv@counter& (0+255),f,b
 23927  0053F4                     l2051:
 23928                           
 23929                           ; BSR set to: 0
 23930                           
 23931                           ; BSR set to: 0
 23932  0053F4  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 23933  0053F6  D7F8               	goto	l2052
 23934  0053F8                     u12300:
 23935                           
 23936                           ; BSR set to: 0
 23937                           
 23938                           ; BSR set to: 0
 23939                           
 23940                           ; BSR set to: 0
 23941  0053F8  90D8               	bcf	status,0,c
 23942  0053FA  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 23943  0053FC  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 23944  0053FE  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 23945  005400  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 23946                           
 23947                           ; BSR set to: 0
 23948  005402  5164               	movf	___lldiv@divisor& (0+255),w,b
 23949  005404  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 23950  005406  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23951  005408  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 23952  00540A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23953  00540C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 23954  00540E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23955  005410  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 23956  005412  A0D8               	btfss	status,0,c
 23957  005414  D009               	goto	l2055
 23958                           
 23959                           ; BSR set to: 0
 23960  005416  5164               	movf	___lldiv@divisor& (0+255),w,b
 23961  005418  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 23962  00541A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 23963  00541C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 23964  00541E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 23965  005420  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 23966  005422  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 23967  005424  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 23968                           
 23969                           ; BSR set to: 0
 23970  005426  8168               	bsf	___lldiv@quotient& (0+255),0,b
 23971  005428                     l2055:
 23972                           
 23973                           ; BSR set to: 0
 23974                           
 23975                           ; BSR set to: 0
 23976  005428  90D8               	bcf	status,0,c
 23977  00542A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 23978  00542C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 23979  00542E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 23980  005430  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 23981                           
 23982                           ; BSR set to: 0
 23983  005432  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 23984  005434  D7E1               	goto	u12300
 23985  005436                     l2056:
 23986                           
 23987                           ; BSR set to: 0
 23988                           
 23989                           ; BSR set to: 0
 23990  005436  C068  F060         	movff	___lldiv@quotient,?___lldiv
 23991  00543A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 23992  00543E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 23993  005442  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 23994                           
 23995                           ; BSR set to: 0
 23996  005446  0012               	return		;funcret
 23997  005448                     __end_of___lldiv:
 23998                           	opt stack 0
 23999                           tosu	equ	0xFFF
 24000                           tosh	equ	0xFFE
 24001                           tosl	equ	0xFFD
 24002                           pclath	equ	0xFFA
 24003                           tblptru	equ	0xFF8
 24004                           tblptrh	equ	0xFF7
 24005                           tblptrl	equ	0xFF6
 24006                           tablat	equ	0xFF5
 24007                           prodh	equ	0xFF4
 24008                           prodl	equ	0xFF3
 24009                           intcon	equ	0xFF2
 24010                           intcon2	equ	0xFF1
 24011                           intcon3	equ	0xFF0
 24012                           indf0	equ	0xFEF
 24013                           postinc0	equ	0xFEE
 24014                           fsr0h	equ	0xFEA
 24015                           fsr0l	equ	0xFE9
 24016                           wreg	equ	0xFE8
 24017                           indf1	equ	0xFE7
 24018                           postinc1	equ	0xFE6
 24019                           postdec1	equ	0xFE5
 24020                           plusw1	equ	0xFE3
 24021                           fsr1h	equ	0xFE2
 24022                           fsr1l	equ	0xFE1
 24023                           indf2	equ	0xFDF
 24024                           postinc2	equ	0xFDE
 24025                           postdec2	equ	0xFDD
 24026                           plusw2	equ	0xFDB
 24027                           fsr2h	equ	0xFDA
 24028                           fsr2l	equ	0xFD9
 24029                           status	equ	0xFD8
 24030                           
 24031 ;; *************** function _TIMER0 *****************
 24032 ;; Defined at:
 24033 ;;		line 16 in file "src/main.c"
 24034 ;; Parameters:    Size  Location     Type
 24035 ;;		None
 24036 ;; Auto vars:     Size  Location     Type
 24037 ;;  c               1   47[COMRAM] unsigned char 
 24038 ;; Return value:  Size  Location     Type
 24039 ;;                  1    wreg      void 
 24040 ;; Registers used:
 24041 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24042 ;; Tracked objects:
 24043 ;;		On entry : 0/0
 24044 ;;		On exit  : 0/0
 24045 ;;		Unchanged: 0/0
 24046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24047 ;;      Params:         0       0       0       0       0       0       0       0       0
 24048 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24049 ;;      Temps:         18       0       0       0       0       0       0       0       0
 24050 ;;      Totals:        19       0       0       0       0       0       0       0       0
 24051 ;;Total ram usage:       19 bytes
 24052 ;; Hardware stack levels used:    1
 24053 ;; Hardware stack levels required when called:    5
 24054 ;; This function calls:
 24055 ;;		_readButtons
 24056 ;;		_receiveByteSerial
 24057 ;;		_timer
 24058 ;; This function is called by:
 24059 ;;		Interrupt level 2
 24060 ;; This function uses a non-reentrant model
 24061 ;;
 24062                           
 24063                           	psect	intcode
 24064  000008                     __pintcode:
 24065                           	opt stack 0
 24066  000008                     _TIMER0:
 24067                           	opt stack 20
 24068                           
 24069                           ; BSR set to: 0
 24070                           ;incstack = 0
 24071  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24072  00000A  ED13  F026         	call	int_func,f	;refresh shadow registers
 24073                           tosu	equ	0xFFF
 24074                           tosh	equ	0xFFE
 24075                           tosl	equ	0xFFD
 24076                           pclath	equ	0xFFA
 24077                           tblptru	equ	0xFF8
 24078                           tblptrh	equ	0xFF7
 24079                           tblptrl	equ	0xFF6
 24080                           tablat	equ	0xFF5
 24081                           prodh	equ	0xFF4
 24082                           prodl	equ	0xFF3
 24083                           intcon	equ	0xFF2
 24084                           intcon2	equ	0xFF1
 24085                           intcon3	equ	0xFF0
 24086                           indf0	equ	0xFEF
 24087                           postinc0	equ	0xFEE
 24088                           fsr0h	equ	0xFEA
 24089                           fsr0l	equ	0xFE9
 24090                           wreg	equ	0xFE8
 24091                           indf1	equ	0xFE7
 24092                           postinc1	equ	0xFE6
 24093                           postdec1	equ	0xFE5
 24094                           plusw1	equ	0xFE3
 24095                           fsr1h	equ	0xFE2
 24096                           fsr1l	equ	0xFE1
 24097                           indf2	equ	0xFDF
 24098                           postinc2	equ	0xFDE
 24099                           postdec2	equ	0xFDD
 24100                           plusw2	equ	0xFDB
 24101                           fsr2h	equ	0xFDA
 24102                           fsr2l	equ	0xFD9
 24103                           status	equ	0xFD8
 24104                           
 24105                           	psect	intcode_body
 24106  004C26                     __pintcode_body:
 24107                           	opt stack 20
 24108  004C26                     int_func:
 24109                           	opt stack 20
 24110  004C26  0006               	pop		; remove dummy address from shadow register refresh
 24111  004C28  CFFA F01E          	movff	pclath,??_TIMER0
 24112  004C2C  CFFB F01F          	movff	pclatu,??_TIMER0+1
 24113  004C30  CFE9 F020          	movff	fsr0l,??_TIMER0+2
 24114  004C34  CFEA F021          	movff	fsr0h,??_TIMER0+3
 24115  004C38  CFE1 F022          	movff	fsr1l,??_TIMER0+4
 24116  004C3C  CFE2 F023          	movff	fsr1h,??_TIMER0+5
 24117  004C40  CFD9 F024          	movff	fsr2l,??_TIMER0+6
 24118  004C44  CFDA F025          	movff	fsr2h,??_TIMER0+7
 24119  004C48  CFF3 F026          	movff	prodl,??_TIMER0+8
 24120  004C4C  CFF4 F027          	movff	prodh,??_TIMER0+9
 24121  004C50  CFF6 F028          	movff	tblptrl,??_TIMER0+10
 24122  004C54  CFF7 F029          	movff	tblptrh,??_TIMER0+11
 24123  004C58  CFF8 F02A          	movff	tblptru,??_TIMER0+12
 24124  004C5C  CFF5 F02B          	movff	tablat,??_TIMER0+13
 24125  004C60  C05F  F02C         	movff	btemp,??_TIMER0+14
 24126  004C64  C060  F02D         	movff	btemp+1,??_TIMER0+15
 24127  004C68  C061  F02E         	movff	btemp+2,??_TIMER0+16
 24128  004C6C  C062  F02F         	movff	btemp+3,??_TIMER0+17
 24129                           
 24130                           ;main.c: 17: if (TMR0IF) {
 24131  004C70  A4F2               	btfss	intcon,2,c	;volatile
 24132  004C72  D007               	goto	i2l1261
 24133                           
 24134                           ;main.c: 18: TMR0IF = 0x00;
 24135  004C74  94F2               	bcf	intcon,2,c	;volatile
 24136                           
 24137                           ;main.c: 19: TMR0H = 0x3C;
 24138  004C76  0E3C               	movlw	60
 24139  004C78  6ED7               	movwf	4055,c	;volatile
 24140                           
 24141                           ;main.c: 20: TMR0L = 0xB0;
 24142  004C7A  0EB0               	movlw	176
 24143  004C7C  6ED6               	movwf	4054,c	;volatile
 24144                           
 24145                           ;main.c: 21: timer();
 24146  004C7E  EC9C  F01F         	call	_timer	;wreg free
 24147  004C82                     i2l1261:
 24148                           
 24149                           ;main.c: 22: }
 24150                           ;main.c: 23: if (RCIF) {
 24151  004C82  AA9E               	btfss	3998,5,c	;volatile
 24152  004C84  D005               	goto	i2l1262
 24153                           
 24154                           ;main.c: 24: char c = RCREG;
 24155  004C86  CFAE F030          	movff	4014,TIMER0@c	;volatile
 24156                           
 24157                           ;main.c: 25: receiveByteSerial(c);
 24158  004C8A  5030               	movf	TIMER0@c,w,c
 24159  004C8C  ECCB  F02A         	call	_receiveByteSerial
 24160  004C90                     i2l1262:
 24161                           
 24162                           ;main.c: 26: }
 24163                           ;main.c: 27: if (INT2IF) {
 24164  004C90  A2F0               	btfss	intcon3,1,c	;volatile
 24165  004C92  D003               	goto	i2l1263
 24166                           
 24167                           ;main.c: 28: INT2IF = 0;
 24168  004C94  92F0               	bcf	intcon3,1,c	;volatile
 24169                           
 24170                           ;main.c: 29: readButtons();
 24171  004C96  EC6E  F02D         	call	_readButtons	;wreg free
 24172  004C9A                     i2l1263:
 24173  004C9A  C02F  F062         	movff	??_TIMER0+17,btemp+3
 24174  004C9E  C02E  F061         	movff	??_TIMER0+16,btemp+2
 24175  004CA2  C02D  F060         	movff	??_TIMER0+15,btemp+1
 24176  004CA6  C02C  F05F         	movff	??_TIMER0+14,btemp
 24177  004CAA  C02B  FFF5         	movff	??_TIMER0+13,tablat
 24178  004CAE  C02A  FFF8         	movff	??_TIMER0+12,tblptru
 24179  004CB2  C029  FFF7         	movff	??_TIMER0+11,tblptrh
 24180  004CB6  C028  FFF6         	movff	??_TIMER0+10,tblptrl
 24181  004CBA  C027  FFF4         	movff	??_TIMER0+9,prodh
 24182  004CBE  C026  FFF3         	movff	??_TIMER0+8,prodl
 24183  004CC2  C025  FFDA         	movff	??_TIMER0+7,fsr2h
 24184  004CC6  C024  FFD9         	movff	??_TIMER0+6,fsr2l
 24185  004CCA  C023  FFE2         	movff	??_TIMER0+5,fsr1h
 24186  004CCE  C022  FFE1         	movff	??_TIMER0+4,fsr1l
 24187  004CD2  C021  FFEA         	movff	??_TIMER0+3,fsr0h
 24188  004CD6  C020  FFE9         	movff	??_TIMER0+2,fsr0l
 24189  004CDA  C01F  FFFB         	movff	??_TIMER0+1,pclatu
 24190  004CDE  C01E  FFFA         	movff	??_TIMER0,pclath
 24191  004CE2  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24192  004CE4  0011               	retfie		f
 24193  004CE6                     __end_of_TIMER0:
 24194                           	opt stack 0
 24195                           tosu	equ	0xFFF
 24196                           tosh	equ	0xFFE
 24197                           tosl	equ	0xFFD
 24198                           pclatu	equ	0xFFB
 24199                           pclath	equ	0xFFA
 24200                           tblptru	equ	0xFF8
 24201                           tblptrh	equ	0xFF7
 24202                           tblptrl	equ	0xFF6
 24203                           tablat	equ	0xFF5
 24204                           prodh	equ	0xFF4
 24205                           prodl	equ	0xFF3
 24206                           intcon	equ	0xFF2
 24207                           intcon2	equ	0xFF1
 24208                           intcon3	equ	0xFF0
 24209                           indf0	equ	0xFEF
 24210                           postinc0	equ	0xFEE
 24211                           fsr0h	equ	0xFEA
 24212                           fsr0l	equ	0xFE9
 24213                           wreg	equ	0xFE8
 24214                           indf1	equ	0xFE7
 24215                           postinc1	equ	0xFE6
 24216                           postdec1	equ	0xFE5
 24217                           plusw1	equ	0xFE3
 24218                           fsr1h	equ	0xFE2
 24219                           fsr1l	equ	0xFE1
 24220                           indf2	equ	0xFDF
 24221                           postinc2	equ	0xFDE
 24222                           postdec2	equ	0xFDD
 24223                           plusw2	equ	0xFDB
 24224                           fsr2h	equ	0xFDA
 24225                           fsr2l	equ	0xFD9
 24226                           status	equ	0xFD8
 24227                           
 24228 ;; *************** function _timer *****************
 24229 ;; Defined at:
 24230 ;;		line 39 in file "src/controle.h"
 24231 ;; Parameters:    Size  Location     Type
 24232 ;;		None
 24233 ;; Auto vars:     Size  Location     Type
 24234 ;;		None
 24235 ;; Return value:  Size  Location     Type
 24236 ;;                  1    wreg      void 
 24237 ;; Registers used:
 24238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24239 ;; Tracked objects:
 24240 ;;		On entry : 0/0
 24241 ;;		On exit  : 0/0
 24242 ;;		Unchanged: 0/0
 24243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24244 ;;      Params:         0       0       0       0       0       0       0       0       0
 24245 ;;      Locals:         6       0       0       0       0       0       0       0       0
 24246 ;;      Temps:          7       0       0       0       0       0       0       0       0
 24247 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24248 ;;Total ram usage:       13 bytes
 24249 ;; Hardware stack levels used:    1
 24250 ;; Hardware stack levels required when called:    4
 24251 ;; This function calls:
 24252 ;;		i2_setRangeValor
 24253 ;; This function is called by:
 24254 ;;		_TIMER0
 24255 ;; This function uses a non-reentrant model
 24256 ;;
 24257                           
 24258                           	psect	text61
 24259  003F38                     __ptext61:
 24260                           	opt stack 0
 24261  003F38                     _timer:
 24262                           	opt stack 20
 24263                           
 24264                           ;controle.h: 40: t_controle_flap = (t_controle_flap > 1) ? --t_controle_flap : 0;
 24265                           
 24266                           ;incstack = 0
 24267  003F38  5034               	movf	_t_controle_flap+1,w,c
 24268  003F3A  E109               	bnz	i2l8830
 24269  003F3C  0E02               	movlw	2
 24270  003F3E  5C33               	subwf	_t_controle_flap,w,c
 24271  003F40  B0D8               	btfsc	status,0,c
 24272  003F42  D005               	goto	i2l1098
 24273  003F44  0E00               	movlw	0
 24274  003F46  6E34               	movwf	_t_controle_flap+1,c
 24275  003F48  0E00               	movlw	0
 24276  003F4A  6E33               	movwf	_t_controle_flap,c
 24277  003F4C  D007               	goto	i2l1100
 24278  003F4E                     i2l1098:
 24279  003F4E                     i2l8830:
 24280  003F4E  0633               	decf	_t_controle_flap,f,c
 24281  003F50  A0D8               	btfss	status,0,c
 24282  003F52  0634               	decf	_t_controle_flap+1,f,c
 24283  003F54  C033  F033         	movff	_t_controle_flap,_t_controle_flap
 24284  003F58  C034  F034         	movff	_t_controle_flap+1,_t_controle_flap+1
 24285  003F5C                     i2l1100:
 24286                           
 24287                           ;controle.h: 41: t_controle_buzzer = (t_controle_buzzer > 1) ? --t_controle_buzzer : 0;
 24288  003F5C  0E02               	movlw	2
 24289  003F5E  6039               	cpfslt	_t_controle_buzzer,c
 24290  003F60  D005               	goto	i2l1102
 24291  003F62  0E00               	movlw	0
 24292  003F64  6E19               	movwf	_timer$1410+1,c
 24293  003F66  0E00               	movlw	0
 24294  003F68  6E18               	movwf	_timer$1410,c
 24295  003F6A  D004               	goto	i2l1104
 24296  003F6C                     i2l1102:
 24297  003F6C  0639               	decf	_t_controle_buzzer,f,c
 24298  003F6E  C039  F018         	movff	_t_controle_buzzer,_timer$1410
 24299  003F72  6A19               	clrf	_timer$1410+1,c
 24300  003F74                     i2l1104:
 24301  003F74  C018  F039         	movff	_timer$1410,_t_controle_buzzer
 24302                           
 24303                           ;controle.h: 42: t_controle_modo_seguranca = (t_controle_modo_seguranca > 1) ? --t_contr
      +                          ole_modo_seguranca : 0;
 24304  003F78  0101               	movlb	1	; () banked
 24305  003F7A  514D               	movf	(_t_controle_modo_seguranca+1)& (0+255),w,b
 24306  003F7C  E109               	bnz	i2l8844
 24307  003F7E  0E02               	movlw	2
 24308  003F80  5D4C               	subwf	_t_controle_modo_seguranca& (0+255),w,b
 24309  003F82  B0D8               	btfsc	status,0,c
 24310  003F84  D005               	goto	i2l1106
 24311                           
 24312                           ; BSR set to: 1
 24313  003F86  0E00               	movlw	0
 24314  003F88  6F4D               	movwf	(_t_controle_modo_seguranca+1)& (0+255),b
 24315  003F8A  0E00               	movlw	0
 24316  003F8C  6F4C               	movwf	_t_controle_modo_seguranca& (0+255),b
 24317  003F8E  D007               	goto	i2l1108
 24318  003F90                     i2l1106:
 24319  003F90                     i2l8844:
 24320                           
 24321                           ; BSR set to: 1
 24322  003F90  074C               	decf	_t_controle_modo_seguranca& (0+255),f,b
 24323  003F92  A0D8               	btfss	status,0,c
 24324  003F94  074D               	decf	(_t_controle_modo_seguranca+1)& (0+255),f,b
 24325  003F96  C14C  F14C         	movff	_t_controle_modo_seguranca,_t_controle_modo_seguranca
 24326  003F9A  C14D  F14D         	movff	_t_controle_modo_seguranca+1,_t_controle_modo_seguranca+1
 24327  003F9E                     i2l1108:
 24328                           
 24329                           ; BSR set to: 1
 24330                           ;controle.h: 43: t_leitura_adc = (t_leitura_adc > 1) ? --t_leitura_adc : 0;
 24331                           
 24332                           ; BSR set to: 1
 24333  003F9E  0E02               	movlw	2
 24334  003FA0  6036               	cpfslt	_t_leitura_adc,c
 24335  003FA2  D005               	goto	i2l1110
 24336                           
 24337                           ; BSR set to: 1
 24338  003FA4  0E00               	movlw	0
 24339  003FA6  6E1B               	movwf	_timer$1411+1,c
 24340  003FA8  0E00               	movlw	0
 24341  003FAA  6E1A               	movwf	_timer$1411,c
 24342  003FAC  D004               	goto	i2l1112
 24343  003FAE                     i2l1110:
 24344                           
 24345                           ; BSR set to: 1
 24346                           
 24347                           ; BSR set to: 1
 24348  003FAE  0636               	decf	_t_leitura_adc,f,c
 24349  003FB0  C036  F01A         	movff	_t_leitura_adc,_timer$1411
 24350  003FB4  6A1B               	clrf	_timer$1411+1,c
 24351  003FB6                     i2l1112:
 24352                           
 24353                           ; BSR set to: 1
 24354                           
 24355                           ; BSR set to: 1
 24356  003FB6  C01A  F036         	movff	_timer$1411,_t_leitura_adc
 24357                           
 24358                           ; BSR set to: 1
 24359                           ;controle.h: 47: if (t_controle_blink > 1) {
 24360  003FBA  0E01               	movlw	1
 24361  003FBC  6438               	cpfsgt	_t_controle_blink,c
 24362  003FBE  D002               	goto	i2l1113
 24363                           
 24364                           ; BSR set to: 1
 24365                           ;controle.h: 48: --t_controle_blink;
 24366  003FC0  0638               	decf	_t_controle_blink,f,c
 24367                           
 24368                           ;controle.h: 49: } else {
 24369  003FC2  D007               	goto	i2l1114
 24370  003FC4                     i2l1113:
 24371                           
 24372                           ; BSR set to: 1
 24373                           ;controle.h: 50: blinkk = ~blinkk;
 24374  003FC4  B45B               	btfsc	_blinkk/(0+8),_blinkk& (0+7),c
 24375  003FC6  D002               	goto	i2u1319_40
 24376  003FC8  845B               	bsf	_blinkk/(0+8),_blinkk& (0+7),c
 24377  003FCA  D001               	goto	i2u1320_45
 24378  003FCC                     i2u1319_40:
 24379  003FCC  945B               	bcf	_blinkk/(0+8),_blinkk& (0+7),c
 24380  003FCE                     i2u1320_45:
 24381                           
 24382                           ;controle.h: 51: t_controle_blink = 5;
 24383  003FCE  0E05               	movlw	5
 24384  003FD0  6E38               	movwf	_t_controle_blink,c
 24385  003FD2                     i2l1114:
 24386                           
 24387                           ;controle.h: 52: }
 24388                           ;controle.h: 54: base_sec++;
 24389  003FD2  2A4A               	incf	_base_sec,f,c
 24390                           
 24391                           ;controle.h: 55: if (base_sec > 9) {
 24392  003FD4  0E09               	movlw	9
 24393  003FD6  644A               	cpfsgt	_base_sec,c
 24394  003FD8  0012               	return	
 24395                           
 24396                           ;controle.h: 56: base_sec = 0;
 24397  003FDA  0E00               	movlw	0
 24398  003FDC  6E4A               	movwf	_base_sec,c
 24399                           
 24400                           ;controle.h: 57: sec++;
 24401  003FDE  2A48               	incf	_sec,f,c
 24402                           
 24403                           ;controle.h: 58: t_wifi_restart = (t_wifi_restart > 1) ? --t_wifi_restart : 0;
 24404  003FE0  0E02               	movlw	2
 24405  003FE2  603E               	cpfslt	_t_wifi_restart,c
 24406  003FE4  D005               	goto	i2l1117
 24407  003FE6  0E00               	movlw	0
 24408  003FE8  6E1D               	movwf	_timer$1412+1,c
 24409  003FEA  0E00               	movlw	0
 24410  003FEC  6E1C               	movwf	_timer$1412,c
 24411  003FEE  D004               	goto	i2l1119
 24412  003FF0                     i2l1117:
 24413  003FF0  063E               	decf	_t_wifi_restart,f,c
 24414  003FF2  C03E  F01C         	movff	_t_wifi_restart,_timer$1412
 24415  003FF6  6A1D               	clrf	_timer$1412+1,c
 24416  003FF8                     i2l1119:
 24417  003FF8  C01C  F03E         	movff	_timer$1412,_t_wifi_restart
 24418                           
 24419                           ;controle.h: 66: if (sec > 59) {
 24420  003FFC  0E3B               	movlw	59
 24421  003FFE  6448               	cpfsgt	_sec,c
 24422  004000  0012               	return	
 24423                           
 24424                           ;controle.h: 67: t_controle_religar_buzzer = (t_controle_religar_buzzer > 1) ? --t_contr
      +                          ole_religar_buzzer : 0;
 24425  004002  5032               	movf	_t_controle_religar_buzzer+1,w,c
 24426  004004  E109               	bnz	i2l8882
 24427  004006  0E02               	movlw	2
 24428  004008  5C31               	subwf	_t_controle_religar_buzzer,w,c
 24429  00400A  B0D8               	btfsc	status,0,c
 24430  00400C  D005               	goto	i2l1122
 24431  00400E  0E00               	movlw	0
 24432  004010  6E32               	movwf	_t_controle_religar_buzzer+1,c
 24433  004012  0E00               	movlw	0
 24434  004014  6E31               	movwf	_t_controle_religar_buzzer,c
 24435  004016  D007               	goto	i2l1124
 24436  004018                     i2l1122:
 24437  004018                     i2l8882:
 24438  004018  0631               	decf	_t_controle_religar_buzzer,f,c
 24439  00401A  A0D8               	btfss	status,0,c
 24440  00401C  0632               	decf	_t_controle_religar_buzzer+1,f,c
 24441  00401E  C031  F031         	movff	_t_controle_religar_buzzer,_t_controle_religar_buzzer
 24442  004022  C032  F032         	movff	_t_controle_religar_buzzer+1,_t_controle_religar_buzzer+1
 24443  004026                     i2l1124:
 24444                           
 24445                           ;controle.h: 68: t_controle_religar_ventoinha = (t_controle_religar_ventoinha > 1) ? --t
      +                          _controle_religar_ventoinha : 0;
 24446  004026  0101               	movlb	1	; () banked
 24447  004028  514F               	movf	(_t_controle_religar_ventoinha+1)& (0+255),w,b
 24448  00402A  E109               	bnz	i2l8888
 24449  00402C  0E02               	movlw	2
 24450  00402E  5D4E               	subwf	_t_controle_religar_ventoinha& (0+255),w,b
 24451  004030  B0D8               	btfsc	status,0,c
 24452  004032  D005               	goto	i2l1126
 24453                           
 24454                           ; BSR set to: 1
 24455  004034  0E00               	movlw	0
 24456  004036  6F4F               	movwf	(_t_controle_religar_ventoinha+1)& (0+255),b
 24457  004038  0E00               	movlw	0
 24458  00403A  6F4E               	movwf	_t_controle_religar_ventoinha& (0+255),b
 24459  00403C  D007               	goto	i2l1128
 24460  00403E                     i2l1126:
 24461  00403E                     i2l8888:
 24462                           
 24463                           ; BSR set to: 1
 24464  00403E  074E               	decf	_t_controle_religar_ventoinha& (0+255),f,b
 24465  004040  A0D8               	btfss	status,0,c
 24466  004042  074F               	decf	(_t_controle_religar_ventoinha+1)& (0+255),f,b
 24467  004044  C14E  F14E         	movff	_t_controle_religar_ventoinha,_t_controle_religar_ventoinha
 24468  004048  C14F  F14F         	movff	_t_controle_religar_ventoinha+1,_t_controle_religar_ventoinha+1
 24469  00404C                     i2l1128:
 24470                           
 24471                           ; BSR set to: 1
 24472                           ;controle.h: 72: if (tempajt != 100 && tempajt != 110 && tempajt != 133 && f_falta_energ
      +                          ia == 1) {
 24473                           
 24474                           ; BSR set to: 1
 24475  00404C  0E64               	movlw	100
 24476  00404E  0100               	movlb	0	; () banked
 24477  004050  19F4               	xorwf	_tempajt& (0+255),w,b
 24478  004052  B4D8               	btfsc	status,2,c
 24479  004054  D057               	goto	i2l1131
 24480                           
 24481                           ; BSR set to: 0
 24482  004056  0E6E               	movlw	110
 24483  004058  19F4               	xorwf	_tempajt& (0+255),w,b
 24484  00405A  B4D8               	btfsc	status,2,c
 24485  00405C  D053               	goto	i2l1131
 24486                           
 24487                           ; BSR set to: 0
 24488  00405E  0E85               	movlw	133
 24489  004060  19F4               	xorwf	_tempajt& (0+255),w,b
 24490  004062  B4D8               	btfsc	status,2,c
 24491  004064  D04F               	goto	i2l1131
 24492                           
 24493                           ; BSR set to: 0
 24494  004066  045E               	decf	_f_falta_energia,w,c
 24495  004068  A4D8               	btfss	status,2,c
 24496  00406A  D04C               	goto	i2l1131
 24497                           
 24498                           ; BSR set to: 0
 24499                           ;controle.h: 73: if ((((temp + h_subir_temp_automatica) >= tempajt) && ((temp - h_subir_
      +                          temp_automatica) <= tempajt)) && (tempajt < 150 && t_temp_automatica != 0) && trava_fase
      +                           == 0) {
 24500  00406C  51F4               	movf	_tempajt& (0+255),w,b
 24501  00406E  6E11               	movwf	??_timer& (0+255),c
 24502  004070  6A12               	clrf	(??_timer+1)& (0+255),c
 24503  004072  504F               	movf	_h_subir_temp_automatica,w,c
 24504  004074  C0FE  F013         	movff	_temp,??_timer+2
 24505  004078  6A14               	clrf	(??_timer+3)& (0+255),c
 24506  00407A  2613               	addwf	??_timer+2,f,c
 24507  00407C  0E00               	movlw	0
 24508  00407E  2214               	addwfc	??_timer+3,f,c
 24509  004080  5011               	movf	??_timer,w,c
 24510  004082  5C13               	subwf	??_timer+2,w,c
 24511  004084  5014               	movf	??_timer+3,w,c
 24512  004086  0A80               	xorlw	128
 24513  004088  6E15               	movwf	(??_timer+4)& (0+255),c
 24514  00408A  5012               	movf	??_timer+1,w,c
 24515  00408C  0A80               	xorlw	128
 24516  00408E  5815               	subwfb	(??_timer+4)& (0+255),w,c
 24517  004090  A0D8               	btfss	status,0,c
 24518  004092  D038               	goto	i2l1131
 24519                           
 24520                           ; BSR set to: 0
 24521  004094  504F               	movf	_h_subir_temp_automatica,w,c
 24522  004096  6E11               	movwf	??_timer& (0+255),c
 24523  004098  6A12               	clrf	(??_timer+1)& (0+255),c
 24524  00409A  1E11               	comf	??_timer,f,c
 24525  00409C  1E12               	comf	??_timer+1,f,c
 24526  00409E  4A11               	infsnz	??_timer,f,c
 24527  0040A0  2A12               	incf	??_timer+1,f,c
 24528  0040A2  51FE               	movf	_temp& (0+255),w,b
 24529  0040A4  6E13               	movwf	(??_timer+2)& (0+255),c
 24530  0040A6  6A14               	clrf	(??_timer+3)& (0+255),c
 24531  0040A8  5011               	movf	??_timer,w,c
 24532  0040AA  2613               	addwf	??_timer+2,f,c
 24533  0040AC  5012               	movf	??_timer+1,w,c
 24534  0040AE  2214               	addwfc	??_timer+3,f,c
 24535  0040B0  51F4               	movf	_tempajt& (0+255),w,b
 24536  0040B2  6E15               	movwf	(??_timer+4)& (0+255),c
 24537  0040B4  6A16               	clrf	(??_timer+5)& (0+255),c
 24538  0040B6  5013               	movf	??_timer+2,w,c
 24539  0040B8  5C15               	subwf	??_timer+4,w,c
 24540  0040BA  5016               	movf	??_timer+5,w,c
 24541  0040BC  0A80               	xorlw	128
 24542  0040BE  6E17               	movwf	(??_timer+6)& (0+255),c
 24543  0040C0  5014               	movf	??_timer+3,w,c
 24544  0040C2  0A80               	xorlw	128
 24545  0040C4  5817               	subwfb	(??_timer+6)& (0+255),w,c
 24546  0040C6  A0D8               	btfss	status,0,c
 24547  0040C8  D01D               	goto	i2l1131
 24548                           
 24549                           ; BSR set to: 0
 24550  0040CA  0E96               	movlw	150
 24551  0040CC  61F4               	cpfslt	_tempajt& (0+255),b
 24552  0040CE  D01A               	goto	i2l1131
 24553                           
 24554                           ; BSR set to: 0
 24555  0040D0  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24556  0040D2  B4D8               	btfsc	status,2,c
 24557  0040D4  D017               	goto	i2l1131
 24558                           
 24559                           ; BSR set to: 0
 24560  0040D6  51FB               	movf	_trava_fase& (0+255),w,b
 24561  0040D8  A4D8               	btfss	status,2,c
 24562  0040DA  D014               	goto	i2l1131
 24563                           
 24564                           ; BSR set to: 0
 24565                           ;controle.h: 75: t_controle_temp_automatica++;
 24566  0040DC  2A37               	incf	_t_controle_temp_automatica,f,c
 24567                           
 24568                           ; BSR set to: 0
 24569                           ;controle.h: 76: if (t_controle_temp_automatica >= t_temp_automatica) {
 24570  0040DE  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24571  0040E0  5C37               	subwf	_t_controle_temp_automatica,w,c
 24572  0040E2  A0D8               	btfss	status,0,c
 24573  0040E4  D00F               	goto	i2l1131
 24574                           
 24575                           ; BSR set to: 0
 24576                           ;controle.h: 77: setRangeValor('+', &tempajt, 85, 151, 1);
 24577  0040E6  0EF4               	movlw	low _tempajt
 24578  0040E8  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24579  0040EA  0E00               	movlw	high _tempajt
 24580  0040EC  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24581  0040EE  0E55               	movlw	85
 24582  0040F0  6E08               	movwf	i2setRangeValor@_min,c
 24583  0040F2  0E97               	movlw	151
 24584  0040F4  6E09               	movwf	i2setRangeValor@_max,c
 24585  0040F6  0E01               	movlw	1
 24586  0040F8  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24587  0040FA  0E2B               	movlw	43
 24588  0040FC  ECC3  F028         	call	i2_setRangeValor
 24589                           
 24590                           ;controle.h: 78: t_controle_temp_automatica = 0;
 24591  004100  0E00               	movlw	0
 24592  004102  6E37               	movwf	_t_controle_temp_automatica,c
 24593  004104                     i2l1131:
 24594                           
 24595                           ;controle.h: 79: }
 24596                           ;controle.h: 80: }
 24597                           ;controle.h: 81: }
 24598                           ;controle.h: 83: sec = 0;
 24599  004104  0E00               	movlw	0
 24600  004106  6E48               	movwf	_sec,c
 24601                           
 24602                           ;controle.h: 84: min++;
 24603  004108  2A47               	incf	_min,f,c
 24604                           
 24605                           ;controle.h: 85: if (min > 59) {
 24606  00410A  0E3B               	movlw	59
 24607  00410C  6447               	cpfsgt	_min,c
 24608  00410E  0012               	return	
 24609                           
 24610                           ;controle.h: 86: min = 0;
 24611  004110  0E00               	movlw	0
 24612  004112  6E47               	movwf	_min,c
 24613                           
 24614                           ;controle.h: 87: hor++;
 24615  004114  2A46               	incf	_hor,f,c
 24616                           
 24617                           ;controle.h: 90: if (trava_fase == 0 && t_temp_automatica != 0 && f_falta_energia == 1) 
      +                          {
 24618  004116  0100               	movlb	0	; () banked
 24619  004118  51FB               	movf	_trava_fase& (0+255),w,b
 24620  00411A  A4D8               	btfss	status,2,c
 24621  00411C  D062               	goto	i2l1142
 24622                           
 24623                           ; BSR set to: 0
 24624  00411E  51F9               	movf	_t_temp_automatica& (0+255),w,b
 24625  004120  B4D8               	btfsc	status,2,c
 24626  004122  D05F               	goto	i2l1142
 24627                           
 24628                           ; BSR set to: 0
 24629  004124  045E               	decf	_f_falta_energia,w,c
 24630  004126  A4D8               	btfss	status,2,c
 24631  004128  D05C               	goto	i2l1142
 24632                           
 24633                           ; BSR set to: 0
 24634                           ;controle.h: 91: if (tempajt == 100 && fase == 1) {
 24635  00412A  0E64               	movlw	100
 24636  00412C  19F4               	xorwf	_tempajt& (0+255),w,b
 24637  00412E  A4D8               	btfss	status,2,c
 24638  004130  D019               	goto	i2l1134
 24639                           
 24640                           ; BSR set to: 0
 24641  004132  05F6               	decf	_fase& (0+255),w,b
 24642  004134  A4D8               	btfss	status,2,c
 24643  004136  D016               	goto	i2l1134
 24644                           
 24645                           ; BSR set to: 0
 24646                           ;controle.h: 92: t_controle_fim_fases++;
 24647  004138  2A3A               	incf	_t_controle_fim_fases,f,c
 24648                           
 24649                           ; BSR set to: 0
 24650                           ;controle.h: 93: if (t_controle_fim_fases >= t_fim_fase1 && t_fim_fase1 != 0) {
 24651  00413A  5058               	movf	_t_fim_fase1,w,c
 24652  00413C  5C3A               	subwf	_t_controle_fim_fases,w,c
 24653  00413E  A0D8               	btfss	status,0,c
 24654  004140  D050               	goto	i2l1142
 24655                           
 24656                           ; BSR set to: 0
 24657  004142  5058               	movf	_t_fim_fase1,w,c
 24658  004144  B4D8               	btfsc	status,2,c
 24659  004146  D04D               	goto	i2l1142
 24660                           
 24661                           ; BSR set to: 0
 24662                           ;controle.h: 94: setRangeValor('+', &tempajt, 85, 151, 1);
 24663  004148  0EF4               	movlw	low _tempajt
 24664  00414A  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24665  00414C  0E00               	movlw	high _tempajt
 24666  00414E  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24667  004150  0E55               	movlw	85
 24668  004152  6E08               	movwf	i2setRangeValor@_min,c
 24669  004154  0E97               	movlw	151
 24670  004156  6E09               	movwf	i2setRangeValor@_max,c
 24671  004158  0E01               	movlw	1
 24672  00415A  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24673  00415C  0E2B               	movlw	43
 24674  00415E  ECC3  F028         	call	i2_setRangeValor
 24675  004162  D03D               	goto	i2l1140
 24676  004164                     i2l1134:
 24677  004164  0E6E               	movlw	110
 24678  004166  0100               	movlb	0	; () banked
 24679  004168  19F4               	xorwf	_tempajt& (0+255),w,b
 24680  00416A  A4D8               	btfss	status,2,c
 24681  00416C  D01A               	goto	i2l1137
 24682                           
 24683                           ; BSR set to: 0
 24684  00416E  0E02               	movlw	2
 24685  004170  19F6               	xorwf	_fase& (0+255),w,b
 24686  004172  A4D8               	btfss	status,2,c
 24687  004174  D016               	goto	i2l1137
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;controle.h: 98: t_controle_fim_fases++;
 24691  004176  2A3A               	incf	_t_controle_fim_fases,f,c
 24692                           
 24693                           ; BSR set to: 0
 24694                           ;controle.h: 99: if (t_controle_fim_fases >= t_fim_fase2 && t_fim_fase2 != 0) {
 24695  004178  5057               	movf	_t_fim_fase2,w,c
 24696  00417A  5C3A               	subwf	_t_controle_fim_fases,w,c
 24697  00417C  A0D8               	btfss	status,0,c
 24698  00417E  D031               	goto	i2l1142
 24699                           
 24700                           ; BSR set to: 0
 24701  004180  5057               	movf	_t_fim_fase2,w,c
 24702  004182  B4D8               	btfsc	status,2,c
 24703  004184  D02E               	goto	i2l1142
 24704                           
 24705                           ; BSR set to: 0
 24706                           ;controle.h: 100: setRangeValor('+', &tempajt, 85, 151, 1);
 24707  004186  0EF4               	movlw	low _tempajt
 24708  004188  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24709  00418A  0E00               	movlw	high _tempajt
 24710  00418C  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24711  00418E  0E55               	movlw	85
 24712  004190  6E08               	movwf	i2setRangeValor@_min,c
 24713  004192  0E97               	movlw	151
 24714  004194  6E09               	movwf	i2setRangeValor@_max,c
 24715  004196  0E01               	movlw	1
 24716  004198  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24717  00419A  0E2B               	movlw	43
 24718  00419C  ECC3  F028         	call	i2_setRangeValor
 24719  0041A0  D01E               	goto	i2l1140
 24720  0041A2                     i2l1137:
 24721  0041A2  0E85               	movlw	133
 24722  0041A4  0100               	movlb	0	; () banked
 24723  0041A6  19F4               	xorwf	_tempajt& (0+255),w,b
 24724  0041A8  A4D8               	btfss	status,2,c
 24725  0041AA  D019               	goto	i2l1140
 24726                           
 24727                           ; BSR set to: 0
 24728  0041AC  0E03               	movlw	3
 24729  0041AE  19F6               	xorwf	_fase& (0+255),w,b
 24730  0041B0  A4D8               	btfss	status,2,c
 24731  0041B2  D015               	goto	i2l1140
 24732                           
 24733                           ; BSR set to: 0
 24734                           ;controle.h: 104: t_controle_fim_fases++;
 24735  0041B4  2A3A               	incf	_t_controle_fim_fases,f,c
 24736                           
 24737                           ; BSR set to: 0
 24738                           ;controle.h: 105: if (t_controle_fim_fases >= t_fim_fase3 && t_fim_fase3 != 0) {
 24739  0041B6  5056               	movf	_t_fim_fase3,w,c
 24740  0041B8  5C3A               	subwf	_t_controle_fim_fases,w,c
 24741  0041BA  A0D8               	btfss	status,0,c
 24742  0041BC  D012               	goto	i2l1142
 24743                           
 24744                           ; BSR set to: 0
 24745  0041BE  5056               	movf	_t_fim_fase3,w,c
 24746  0041C0  B4D8               	btfsc	status,2,c
 24747  0041C2  D00F               	goto	i2l1142
 24748                           
 24749                           ; BSR set to: 0
 24750                           ;controle.h: 106: setRangeValor('+', &tempajt, 85, 151, 1);
 24751  0041C4  0EF4               	movlw	low _tempajt
 24752  0041C6  6E06               	movwf	i2setRangeValor@_var_ajt,c
 24753  0041C8  0E00               	movlw	high _tempajt
 24754  0041CA  6E07               	movwf	i2setRangeValor@_var_ajt+1,c
 24755  0041CC  0E55               	movlw	85
 24756  0041CE  6E08               	movwf	i2setRangeValor@_min,c
 24757  0041D0  0E97               	movlw	151
 24758  0041D2  6E09               	movwf	i2setRangeValor@_max,c
 24759  0041D4  0E01               	movlw	1
 24760  0041D6  6E0A               	movwf	i2setRangeValor@end_eeprom,c
 24761  0041D8  0E2B               	movlw	43
 24762  0041DA  ECC3  F028         	call	i2_setRangeValor
 24763  0041DE                     i2l1140:
 24764                           
 24765                           ;controle.h: 110: t_controle_fim_fases = 0;
 24766  0041DE  0E00               	movlw	0
 24767  0041E0  6E3A               	movwf	_t_controle_fim_fases,c
 24768  0041E2                     i2l1142:
 24769                           
 24770                           ;controle.h: 111: }
 24771                           ;controle.h: 112: }
 24772                           ;controle.h: 114: if (hor > 23) {
 24773  0041E2  0E17               	movlw	23
 24774  0041E4  6446               	cpfsgt	_hor,c
 24775  0041E6  0012               	return	
 24776                           
 24777                           ;controle.h: 115: hor = 0;
 24778  0041E8  0E00               	movlw	0
 24779  0041EA  6E46               	movwf	_hor,c
 24780  0041EC  0012               	return	
 24781  0041EE                     __end_of_timer:
 24782                           	opt stack 0
 24783                           tosu	equ	0xFFF
 24784                           tosh	equ	0xFFE
 24785                           tosl	equ	0xFFD
 24786                           pclatu	equ	0xFFB
 24787                           pclath	equ	0xFFA
 24788                           tblptru	equ	0xFF8
 24789                           tblptrh	equ	0xFF7
 24790                           tblptrl	equ	0xFF6
 24791                           tablat	equ	0xFF5
 24792                           prodh	equ	0xFF4
 24793                           prodl	equ	0xFF3
 24794                           intcon	equ	0xFF2
 24795                           intcon2	equ	0xFF1
 24796                           intcon3	equ	0xFF0
 24797                           indf0	equ	0xFEF
 24798                           postinc0	equ	0xFEE
 24799                           fsr0h	equ	0xFEA
 24800                           fsr0l	equ	0xFE9
 24801                           wreg	equ	0xFE8
 24802                           indf1	equ	0xFE7
 24803                           postinc1	equ	0xFE6
 24804                           postdec1	equ	0xFE5
 24805                           plusw1	equ	0xFE3
 24806                           fsr1h	equ	0xFE2
 24807                           fsr1l	equ	0xFE1
 24808                           indf2	equ	0xFDF
 24809                           postinc2	equ	0xFDE
 24810                           postdec2	equ	0xFDD
 24811                           plusw2	equ	0xFDB
 24812                           fsr2h	equ	0xFDA
 24813                           fsr2l	equ	0xFD9
 24814                           status	equ	0xFD8
 24815                           
 24816 ;; *************** function i2_setRangeValor *****************
 24817 ;; Defined at:
 24818 ;;		line 76 in file "src/FuncoesControlador.h"
 24819 ;; Parameters:    Size  Location     Type
 24820 ;;  _acao           1    wreg     unsigned char 
 24821 ;;  _var_ajt        2    5[COMRAM] PTR unsigned char 
 24822 ;;		 -> senha_desbloqueio_func(1), t_fim_fase3(1), t_fim_fase2(1), t_fim_fase1(1), 
 24823 ;;		 -> t_religar_ventoinha_automatica(1), h_subir_temp_automatica(1), wifi_habilita_alteracao(1), t_temp_automatica(1),
      + 
 24824 ;;		 -> t_buzzer_religar(1), t_flap_intervalo(1), t_flap_ligado(1), h_buzzer(1), 
 24825 ;;		 -> h_modo_seguranca(1), h_venotinha(1), h_flap(1), h_abafador(1), 
 24826 ;;		 -> wifi_SENHA(2), trava_fase(1), tipo_modo_trabalho(1), buzzer(1), 
 24827 ;;		 -> fornalha(1), tempajt(1), tipo_sensor_umidade(1), fase(1), 
 24828 ;;		 -> clima(1), 
 24829 ;;  _min            1    7[COMRAM] unsigned char 
 24830 ;;  _max            1    8[COMRAM] unsigned char 
 24831 ;;  end_eeprom      1    9[COMRAM] unsigned char 
 24832 ;; Auto vars:     Size  Location     Type
 24833 ;;  _acao           1   13[COMRAM] unsigned char 
 24834 ;;  setRangeValo    2   14[COMRAM] int 
 24835 ;; Return value:  Size  Location     Type
 24836 ;;                  1    wreg      void 
 24837 ;; Registers used:
 24838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24839 ;; Tracked objects:
 24840 ;;		On entry : 0/0
 24841 ;;		On exit  : 0/0
 24842 ;;		Unchanged: 0/0
 24843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24844 ;;      Params:         5       0       0       0       0       0       0       0       0
 24845 ;;      Locals:         3       0       0       0       0       0       0       0       0
 24846 ;;      Temps:          3       0       0       0       0       0       0       0       0
 24847 ;;      Totals:        11       0       0       0       0       0       0       0       0
 24848 ;;Total ram usage:       11 bytes
 24849 ;; Hardware stack levels used:    1
 24850 ;; Hardware stack levels required when called:    3
 24851 ;; This function calls:
 24852 ;;		i2_writeEEPROM_ext
 24853 ;; This function is called by:
 24854 ;;		_timer
 24855 ;; This function uses a non-reentrant model
 24856 ;;
 24857                           
 24858                           	psect	text62
 24859  005186                     __ptext62:
 24860                           	opt stack 0
 24861  005186                     i2_setRangeValor:
 24862                           	opt stack 20
 24863                           
 24864                           ;incstack = 0
 24865                           ;i2setRangeValor@_acao stored from wreg
 24866  005186  6E0E               	movwf	i2setRangeValor@_acao,c
 24867                           
 24868                           ;FuncoesControlador.h: 77: int _aux = *_var_ajt;
 24869  005188  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 24870  00518C  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 24871  005190  50DF               	movf	indf2,w,c
 24872  005192  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24873  005194  500B               	movf	??i2_setRangeValor,w,c
 24874  005196  6E0F               	movwf	i2setRangeValor@_aux,c
 24875  005198  6A10               	clrf	i2setRangeValor@_aux+1,c
 24876                           
 24877                           ;FuncoesControlador.h: 78: switch (_acao) {
 24878  00519A  D02C               	goto	i2l942
 24879  00519C                     
 24880                           ;FuncoesControlador.h: 80: _aux = (_aux >= _max) ? _min : ++_aux;
 24881  00519C  5009               	movf	i2setRangeValor@_max,w,c
 24882  00519E  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24883  0051A0  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 24884  0051A2  500B               	movf	??i2_setRangeValor,w,c
 24885  0051A4  5C0F               	subwf	i2setRangeValor@_aux,w,c
 24886  0051A6  5010               	movf	i2setRangeValor@_aux+1,w,c
 24887  0051A8  0A80               	xorlw	128
 24888  0051AA  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 24889  0051AC  500C               	movf	??i2_setRangeValor+1,w,c
 24890  0051AE  0A80               	xorlw	128
 24891  0051B0  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 24892  0051B2  B0D8               	btfsc	status,0,c
 24893  0051B4  D003               	goto	i2l945
 24894  0051B6  4A0F               	infsnz	i2setRangeValor@_aux,f,c
 24895  0051B8  2A10               	incf	i2setRangeValor@_aux+1,f,c
 24896  0051BA  D013               	goto	L30
 24897  0051BC                     i2l945:
 24898  0051BC  C008  F00F         	movff	i2setRangeValor@_min,i2setRangeValor@_aux
 24899  0051C0  D017               	goto	L31
 24900  0051C2                     
 24901                           ;FuncoesControlador.h: 83: _aux = (_aux <= _min) ? _max : --_aux;
 24902  0051C2  5008               	movf	i2setRangeValor@_min,w,c
 24903  0051C4  6E0B               	movwf	??i2_setRangeValor& (0+255),c
 24904  0051C6  6A0C               	clrf	(??i2_setRangeValor+1)& (0+255),c
 24905  0051C8  500F               	movf	i2setRangeValor@_aux,w,c
 24906  0051CA  5C0B               	subwf	??i2_setRangeValor,w,c
 24907  0051CC  500C               	movf	??i2_setRangeValor+1,w,c
 24908  0051CE  0A80               	xorlw	128
 24909  0051D0  6E0D               	movwf	(??i2_setRangeValor+2)& (0+255),c
 24910  0051D2  5010               	movf	i2setRangeValor@_aux+1,w,c
 24911  0051D4  0A80               	xorlw	128
 24912  0051D6  580D               	subwfb	(??i2_setRangeValor+2)& (0+255),w,c
 24913  0051D8  B0D8               	btfsc	status,0,c
 24914  0051DA  D008               	goto	i2l951
 24915  0051DC  060F               	decf	i2setRangeValor@_aux,f,c
 24916  0051DE  A0D8               	btfss	status,0,c
 24917  0051E0  0610               	decf	i2setRangeValor@_aux+1,f,c
 24918  0051E2                     L30:
 24919  0051E2  C00F  F00F         	movff	i2setRangeValor@_aux,i2setRangeValor@_aux
 24920  0051E6  C010  F010         	movff	i2setRangeValor@_aux+1,i2setRangeValor@_aux+1
 24921  0051EA  D00B               	goto	i2l948
 24922  0051EC                     i2l951:
 24923  0051EC  C009  F00F         	movff	i2setRangeValor@_max,i2setRangeValor@_aux
 24924  0051F0                     L31:
 24925  0051F0  6A10               	clrf	i2setRangeValor@_aux+1,c
 24926                           
 24927                           ;FuncoesControlador.h: 85: }
 24928                           
 24929                           ;FuncoesControlador.h: 84: break;
 24930  0051F2  D007               	goto	i2l948
 24931  0051F4                     i2l942:
 24932  0051F4  500E               	movf	i2setRangeValor@_acao,w,c
 24933                           
 24934                           ; Switch size 1, requested type "space"
 24935                           ; Number of cases is 2, Range of values is 43 to 45
 24936                           ; switch strategies available:
 24937                           ; Name         Instructions Cycles
 24938                           ; simple_byte            7     4 (average)
 24939                           ;	Chosen strategy is simple_byte
 24940  0051F6  0A2B               	xorlw	43	; case 43
 24941  0051F8  B4D8               	btfsc	status,2,c
 24942  0051FA  D7D0               	goto	i2l943
 24943  0051FC  0A06               	xorlw	6	; case 45
 24944  0051FE  B4D8               	btfsc	status,2,c
 24945  005200  D7E0               	goto	i2l949
 24946  005202                     i2l948:
 24947                           
 24948                           ;FuncoesControlador.h: 86: if (end_eeprom != 0) {
 24949  005202  500A               	movf	i2setRangeValor@end_eeprom,w,c
 24950  005204  B4D8               	btfsc	status,2,c
 24951  005206  D005               	goto	i2l954
 24952                           
 24953                           ;FuncoesControlador.h: 87: writeEEPROM_ext(end_eeprom, _aux);
 24954  005208  C00F  F004         	movff	i2setRangeValor@_aux,i2writeEEPROM_ext@data
 24955  00520C  500A               	movf	i2setRangeValor@end_eeprom,w,c
 24956  00520E  EC6D  F02C         	call	i2_writeEEPROM_ext
 24957  005212                     i2l954:
 24958                           
 24959                           ;FuncoesControlador.h: 88: }
 24960                           ;FuncoesControlador.h: 89: *_var_ajt = _aux;
 24961  005212  C006  FFD9         	movff	i2setRangeValor@_var_ajt,fsr2l
 24962  005216  C007  FFDA         	movff	i2setRangeValor@_var_ajt+1,fsr2h
 24963  00521A  C00F  FFDF         	movff	i2setRangeValor@_aux,indf2
 24964  00521E  0012               	return		;funcret
 24965  005220                     __end_ofi2_setRangeValor:
 24966                           	opt stack 0
 24967                           tosu	equ	0xFFF
 24968                           tosh	equ	0xFFE
 24969                           tosl	equ	0xFFD
 24970                           pclatu	equ	0xFFB
 24971                           pclath	equ	0xFFA
 24972                           tblptru	equ	0xFF8
 24973                           tblptrh	equ	0xFF7
 24974                           tblptrl	equ	0xFF6
 24975                           tablat	equ	0xFF5
 24976                           prodh	equ	0xFF4
 24977                           prodl	equ	0xFF3
 24978                           intcon	equ	0xFF2
 24979                           intcon2	equ	0xFF1
 24980                           intcon3	equ	0xFF0
 24981                           indf0	equ	0xFEF
 24982                           postinc0	equ	0xFEE
 24983                           fsr0h	equ	0xFEA
 24984                           fsr0l	equ	0xFE9
 24985                           wreg	equ	0xFE8
 24986                           indf1	equ	0xFE7
 24987                           postinc1	equ	0xFE6
 24988                           postdec1	equ	0xFE5
 24989                           plusw1	equ	0xFE3
 24990                           fsr1h	equ	0xFE2
 24991                           fsr1l	equ	0xFE1
 24992                           indf2	equ	0xFDF
 24993                           postinc2	equ	0xFDE
 24994                           postdec2	equ	0xFDD
 24995                           plusw2	equ	0xFDB
 24996                           fsr2h	equ	0xFDA
 24997                           fsr2l	equ	0xFD9
 24998                           status	equ	0xFD8
 24999                           
 25000 ;; *************** function i2_writeEEPROM_ext *****************
 25001 ;; Defined at:
 25002 ;;		line 14 in file "src/Eeprom_ext.h"
 25003 ;; Parameters:    Size  Location     Type
 25004 ;;  adress          1    wreg     unsigned char 
 25005 ;;  data            1    3[COMRAM] unsigned char 
 25006 ;; Auto vars:     Size  Location     Type
 25007 ;;  adress          1    4[COMRAM] unsigned char 
 25008 ;; Return value:  Size  Location     Type
 25009 ;;                  1    wreg      void 
 25010 ;; Registers used:
 25011 ;;		wreg, status,2, status,0, cstack
 25012 ;; Tracked objects:
 25013 ;;		On entry : 0/0
 25014 ;;		On exit  : 0/0
 25015 ;;		Unchanged: 0/0
 25016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25017 ;;      Params:         1       0       0       0       0       0       0       0       0
 25018 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25020 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25021 ;;Total ram usage:        2 bytes
 25022 ;; Hardware stack levels used:    1
 25023 ;; Hardware stack levels required when called:    2
 25024 ;; This function calls:
 25025 ;;		i2_I2C_Start
 25026 ;;		i2_I2C_Stop
 25027 ;;		i2_I2C_Write
 25028 ;;		i2_delay
 25029 ;; This function is called by:
 25030 ;;		i2_setRangeValor
 25031 ;; This function uses a non-reentrant model
 25032 ;;
 25033                           
 25034                           	psect	text63
 25035  0058DA                     __ptext63:
 25036                           	opt stack 0
 25037  0058DA                     i2_writeEEPROM_ext:
 25038                           	opt stack 20
 25039                           
 25040                           ;incstack = 0
 25041                           ;i2writeEEPROM_ext@adress stored from wreg
 25042  0058DA  6E05               	movwf	i2writeEEPROM_ext@adress,c
 25043                           
 25044                           ;Eeprom_ext.h: 16: I2C_Start();
 25045  0058DC  EC37  F02E         	call	i2_I2C_Start	;wreg free
 25046                           
 25047                           ;Eeprom_ext.h: 17: I2C_Write(0xA0);
 25048  0058E0  0E00               	movlw	0
 25049  0058E2  6E03               	movwf	i2I2C_Write@d+1,c
 25050  0058E4  0EA0               	movlw	160
 25051  0058E6  6E02               	movwf	i2I2C_Write@d,c
 25052  0058E8  EC22  F02E         	call	i2_I2C_Write	;wreg free
 25053                           
 25054                           ;Eeprom_ext.h: 19: I2C_Write(adress);
 25055  0058EC  C005  F002         	movff	i2writeEEPROM_ext@adress,i2I2C_Write@d
 25056  0058F0  6A03               	clrf	i2I2C_Write@d+1,c
 25057  0058F2  EC22  F02E         	call	i2_I2C_Write	;wreg free
 25058                           
 25059                           ;Eeprom_ext.h: 20: I2C_Write(data);
 25060  0058F6  C004  F002         	movff	i2writeEEPROM_ext@data,i2I2C_Write@d
 25061  0058FA  6A03               	clrf	i2I2C_Write@d+1,c
 25062  0058FC  EC22  F02E         	call	i2_I2C_Write	;wreg free
 25063                           
 25064                           ;Eeprom_ext.h: 21: I2C_Stop();
 25065  005900  EC33  F02E         	call	i2_I2C_Stop	;wreg free
 25066                           
 25067                           ;Eeprom_ext.h: 22: delay(105);
 25068  005904  0E00               	movlw	0
 25069  005906  6E02               	movwf	i2delay@x+1,c
 25070  005908  0E69               	movlw	105
 25071  00590A  6E01               	movwf	i2delay@x,c
 25072  00590C  ECA8  F02D         	call	i2_delay	;wreg free
 25073  005910  0012               	return		;funcret
 25074  005912                     __end_ofi2_writeEEPROM_ext:
 25075                           	opt stack 0
 25076                           tosu	equ	0xFFF
 25077                           tosh	equ	0xFFE
 25078                           tosl	equ	0xFFD
 25079                           pclatu	equ	0xFFB
 25080                           pclath	equ	0xFFA
 25081                           tblptru	equ	0xFF8
 25082                           tblptrh	equ	0xFF7
 25083                           tblptrl	equ	0xFF6
 25084                           tablat	equ	0xFF5
 25085                           prodh	equ	0xFF4
 25086                           prodl	equ	0xFF3
 25087                           intcon	equ	0xFF2
 25088                           intcon2	equ	0xFF1
 25089                           intcon3	equ	0xFF0
 25090                           indf0	equ	0xFEF
 25091                           postinc0	equ	0xFEE
 25092                           fsr0h	equ	0xFEA
 25093                           fsr0l	equ	0xFE9
 25094                           wreg	equ	0xFE8
 25095                           indf1	equ	0xFE7
 25096                           postinc1	equ	0xFE6
 25097                           postdec1	equ	0xFE5
 25098                           plusw1	equ	0xFE3
 25099                           fsr1h	equ	0xFE2
 25100                           fsr1l	equ	0xFE1
 25101                           indf2	equ	0xFDF
 25102                           postinc2	equ	0xFDE
 25103                           postdec2	equ	0xFDD
 25104                           plusw2	equ	0xFDB
 25105                           fsr2h	equ	0xFDA
 25106                           fsr2l	equ	0xFD9
 25107                           status	equ	0xFD8
 25108                           
 25109 ;; *************** function i2_delay *****************
 25110 ;; Defined at:
 25111 ;;		line 18 in file "src/function.c"
 25112 ;; Parameters:    Size  Location     Type
 25113 ;;  x               2    0[COMRAM] int 
 25114 ;; Auto vars:     Size  Location     Type
 25115 ;;		None
 25116 ;; Return value:  Size  Location     Type
 25117 ;;                  1    wreg      void 
 25118 ;; Registers used:
 25119 ;;		wreg, status,2, status,0
 25120 ;; Tracked objects:
 25121 ;;		On entry : 0/0
 25122 ;;		On exit  : 0/0
 25123 ;;		Unchanged: 0/0
 25124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25125 ;;      Params:         2       0       0       0       0       0       0       0       0
 25126 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25127 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25128 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25129 ;;Total ram usage:        3 bytes
 25130 ;; Hardware stack levels used:    1
 25131 ;; This function calls:
 25132 ;;		Nothing
 25133 ;; This function is called by:
 25134 ;;		i2_writeEEPROM_ext
 25135 ;; This function uses a non-reentrant model
 25136 ;;
 25137                           
 25138                           	psect	text64
 25139  005B50                     __ptext64:
 25140                           	opt stack 0
 25141  005B50                     i2_delay:
 25142                           	opt stack 21
 25143                           
 25144                           ;function.c: 19: while (x--) {
 25145                           
 25146                           ;incstack = 0
 25147  005B50  D008               	goto	i2l1477
 25148  005B52                     i2l6534:
 25149                           
 25150                           ;function.c: 20: _delay((unsigned long)((1000)*(8000000/4000000.0)));
 25151  005B52  0E03               	movlw	3
 25152  005B54  6E03               	movwf	??i2_delay& (0+255),c
 25153  005B56  0E98               	movlw	152
 25154  005B58                     i2u1553_47:
 25155  005B58  2EE8               	decfsz	wreg,f,c
 25156  005B5A  D7FE               	bra	i2u1553_47
 25157  005B5C  2E03               	decfsz	??i2_delay& (0+255),f,c
 25158  005B5E  D7FC               	bra	i2u1553_47
 25159  005B60  0004               	clrwdt		;# 
 25160  005B62                     i2l1477:
 25161  005B62  0601               	decf	i2delay@x,f,c
 25162  005B64  A0D8               	btfss	status,0,c
 25163  005B66  0602               	decf	i2delay@x+1,f,c
 25164  005B68  2801               	incf	i2delay@x,w,c
 25165  005B6A  E1F3               	bnz	i2l6534
 25166  005B6C  2802               	incf	i2delay@x+1,w,c
 25167  005B6E  B4D8               	btfsc	status,2,c
 25168  005B70  0012               	return	
 25169  005B72  D7EF               	goto	i2l1478
 25170  005B74                     __end_ofi2_delay:
 25171                           	opt stack 0
 25172                           tosu	equ	0xFFF
 25173                           tosh	equ	0xFFE
 25174                           tosl	equ	0xFFD
 25175                           pclatu	equ	0xFFB
 25176                           pclath	equ	0xFFA
 25177                           tblptru	equ	0xFF8
 25178                           tblptrh	equ	0xFF7
 25179                           tblptrl	equ	0xFF6
 25180                           tablat	equ	0xFF5
 25181                           prodh	equ	0xFF4
 25182                           prodl	equ	0xFF3
 25183                           intcon	equ	0xFF2
 25184                           intcon2	equ	0xFF1
 25185                           intcon3	equ	0xFF0
 25186                           indf0	equ	0xFEF
 25187                           postinc0	equ	0xFEE
 25188                           fsr0h	equ	0xFEA
 25189                           fsr0l	equ	0xFE9
 25190                           wreg	equ	0xFE8
 25191                           indf1	equ	0xFE7
 25192                           postinc1	equ	0xFE6
 25193                           postdec1	equ	0xFE5
 25194                           plusw1	equ	0xFE3
 25195                           fsr1h	equ	0xFE2
 25196                           fsr1l	equ	0xFE1
 25197                           indf2	equ	0xFDF
 25198                           postinc2	equ	0xFDE
 25199                           postdec2	equ	0xFDD
 25200                           plusw2	equ	0xFDB
 25201                           fsr2h	equ	0xFDA
 25202                           fsr2l	equ	0xFD9
 25203                           status	equ	0xFD8
 25204                           
 25205 ;; *************** function _receiveByteSerial *****************
 25206 ;; Defined at:
 25207 ;;		line 17 in file "src/serial.c"
 25208 ;; Parameters:    Size  Location     Type
 25209 ;;  byte            1    wreg     unsigned char 
 25210 ;; Auto vars:     Size  Location     Type
 25211 ;;  byte            1    8[COMRAM] unsigned char 
 25212 ;; Return value:  Size  Location     Type
 25213 ;;                  1    wreg      void 
 25214 ;; Registers used:
 25215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25216 ;; Tracked objects:
 25217 ;;		On entry : 0/0
 25218 ;;		On exit  : 0/0
 25219 ;;		Unchanged: 0/0
 25220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25221 ;;      Params:         0       0       0       0       0       0       0       0       0
 25222 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25223 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25224 ;;      Totals:         3       0       0       0       0       0       0       0       0
 25225 ;;Total ram usage:        3 bytes
 25226 ;; Hardware stack levels used:    1
 25227 ;; Hardware stack levels required when called:    1
 25228 ;; This function calls:
 25229 ;;		i2_strlen
 25230 ;; This function is called by:
 25231 ;;		_TIMER0
 25232 ;; This function uses a non-reentrant model
 25233 ;;
 25234                           
 25235                           	psect	text65
 25236  005596                     __ptext65:
 25237                           	opt stack 0
 25238  005596                     _receiveByteSerial:
 25239                           	opt stack 23
 25240                           
 25241                           ;incstack = 0
 25242                           ;receiveByteSerial@byte stored from wreg
 25243  005596  6E09               	movwf	receiveByteSerial@byte,c
 25244                           
 25245                           ;serial.c: 18: if (_BF_enable_receive) {
 25246  005598  5041               	movf	__BF_enable_receive,w,c
 25247  00559A  B4D8               	btfsc	status,2,c
 25248  00559C  D011               	goto	i2l1607
 25249                           
 25250                           ;serial.c: 19: bufferSerial[_BF_current++] = byte;
 25251  00559E  503F               	movf	__BF_current,w,c
 25252  0055A0  0D01               	mullw	1
 25253  0055A2  0E69               	movlw	low _bufferSerial
 25254  0055A4  24F3               	addwf	prodl,w,c
 25255  0055A6  6ED9               	movwf	fsr2l,c
 25256  0055A8  0E02               	movlw	high _bufferSerial
 25257  0055AA  20F4               	addwfc	prodh,w,c
 25258  0055AC  6EDA               	movwf	fsr2h,c
 25259  0055AE  C009  FFDF         	movff	receiveByteSerial@byte,indf2
 25260  0055B2  2A3F               	incf	__BF_current,f,c
 25261                           
 25262                           ;serial.c: 20: if (_BF_current >= 100) {
 25263  0055B4  0E63               	movlw	99
 25264  0055B6  643F               	cpfsgt	__BF_current,c
 25265  0055B8  0012               	return	
 25266                           
 25267                           ;serial.c: 21: _BF_current = 0;
 25268  0055BA  0E00               	movlw	0
 25269  0055BC  6E3F               	movwf	__BF_current,c
 25270                           
 25271                           ;serial.c: 22: }
 25272                           ;serial.c: 23: } else if (_BF_start[_BF_i_count] == byte) {
 25273  0055BE  0012               	return	
 25274  0055C0                     i2l1607:
 25275  0055C0  5040               	movf	__BF_i_count,w,c
 25276  0055C2  0D01               	mullw	1
 25277  0055C4  0ED8               	movlw	low __BF_start
 25278  0055C6  24F3               	addwf	prodl,w,c
 25279  0055C8  6ED9               	movwf	fsr2l,c
 25280  0055CA  0E01               	movlw	high __BF_start
 25281  0055CC  20F4               	addwfc	prodh,w,c
 25282  0055CE  6EDA               	movwf	fsr2h,c
 25283  0055D0  5009               	movf	receiveByteSerial@byte,w,c
 25284  0055D2  18DE               	xorwf	postinc2,w,c
 25285  0055D4  A4D8               	btfss	status,2,c
 25286  0055D6  D013               	goto	i2l1610
 25287                           
 25288                           ;serial.c: 24: _BF_i_count++;
 25289  0055D8  2A40               	incf	__BF_i_count,f,c
 25290                           
 25291                           ;serial.c: 25: if(_BF_i_count >= strlen(_BF_start)){
 25292  0055DA  0ED8               	movlw	low __BF_start
 25293  0055DC  6E01               	movwf	i2strlen@s,c
 25294  0055DE  0E01               	movlw	high __BF_start
 25295  0055E0  6E02               	movwf	i2strlen@s+1,c
 25296  0055E2  EC80  F02B         	call	i2_strlen	;wreg free
 25297  0055E6  5040               	movf	__BF_i_count,w,c
 25298  0055E8  6E07               	movwf	??_receiveByteSerial& (0+255),c
 25299  0055EA  6A08               	clrf	(??_receiveByteSerial+1)& (0+255),c
 25300  0055EC  5001               	movf	?i2_strlen,w,c
 25301  0055EE  5C07               	subwf	??_receiveByteSerial,w,c
 25302  0055F0  5002               	movf	?i2_strlen+1,w,c
 25303  0055F2  5808               	subwfb	??_receiveByteSerial+1,w,c
 25304  0055F4  A0D8               	btfss	status,0,c
 25305  0055F6  0012               	return	
 25306                           
 25307                           ;serial.c: 26: _BF_enable_receive = 1;
 25308  0055F8  0E01               	movlw	1
 25309  0055FA  6E41               	movwf	__BF_enable_receive,c
 25310                           
 25311                           ;serial.c: 27: }
 25312                           ;serial.c: 28: } else {
 25313  0055FC  0012               	return	
 25314  0055FE                     i2l1610:
 25315                           
 25316                           ;serial.c: 29: _BF_i_count = 0;
 25317  0055FE  0E00               	movlw	0
 25318  005600  6E40               	movwf	__BF_i_count,c
 25319  005602  0012               	return	
 25320  005604                     __end_of_receiveByteSerial:
 25321                           	opt stack 0
 25322                           tosu	equ	0xFFF
 25323                           tosh	equ	0xFFE
 25324                           tosl	equ	0xFFD
 25325                           pclatu	equ	0xFFB
 25326                           pclath	equ	0xFFA
 25327                           tblptru	equ	0xFF8
 25328                           tblptrh	equ	0xFF7
 25329                           tblptrl	equ	0xFF6
 25330                           tablat	equ	0xFF5
 25331                           prodh	equ	0xFF4
 25332                           prodl	equ	0xFF3
 25333                           intcon	equ	0xFF2
 25334                           intcon2	equ	0xFF1
 25335                           intcon3	equ	0xFF0
 25336                           indf0	equ	0xFEF
 25337                           postinc0	equ	0xFEE
 25338                           fsr0h	equ	0xFEA
 25339                           fsr0l	equ	0xFE9
 25340                           wreg	equ	0xFE8
 25341                           indf1	equ	0xFE7
 25342                           postinc1	equ	0xFE6
 25343                           postdec1	equ	0xFE5
 25344                           plusw1	equ	0xFE3
 25345                           fsr1h	equ	0xFE2
 25346                           fsr1l	equ	0xFE1
 25347                           indf2	equ	0xFDF
 25348                           postinc2	equ	0xFDE
 25349                           postdec2	equ	0xFDD
 25350                           plusw2	equ	0xFDB
 25351                           fsr2h	equ	0xFDA
 25352                           fsr2l	equ	0xFD9
 25353                           status	equ	0xFD8
 25354                           
 25355 ;; *************** function i2_strlen *****************
 25356 ;; Defined at:
 25357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\strlen.c"
 25358 ;; Parameters:    Size  Location     Type
 25359 ;;  s               2    0[COMRAM] PTR const unsigned char 
 25360 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), 
 25361 ;;		 -> STR_77(7), STR_76(7), STR_75(3), STR_73(4), 
 25362 ;;		 -> STR_72(5), enviaDadosWifi@AUX(15), STR_68(4), STR_67(2), 
 25363 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 25364 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 25365 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 25366 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 25367 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 25368 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 25369 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 25370 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 25371 ;; Auto vars:     Size  Location     Type
 25372 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
 25373 ;;		 -> _BF_start(10), getStringJSON@expected(20), getIntJSON@expected(20), STR_79(3), 
 25374 ;;		 -> STR_77(7), STR_76(7), STR_75(3), STR_73(4), 
 25375 ;;		 -> STR_72(5), enviaDadosWifi@AUX(15), STR_68(4), STR_67(2), 
 25376 ;;		 -> STR_65(4), STR_64(3), STR_62(4), STR_61(2), 
 25377 ;;		 -> STR_60(2), STR_58(4), STR_56(4), STR_55(5), 
 25378 ;;		 -> STR_54(3), STR_52(4), STR_51(3), STR_49(4), 
 25379 ;;		 -> wifi_MAC(12), ssid(15), STR_40(3), STR_38(3), 
 25380 ;;		 -> STR_34(4), STR_33(2), bufferSerial(100), STR_31(4), 
 25381 ;;		 -> STR_30(7), STR_25(7), STR_24(3), STR_22(4), 
 25382 ;;		 -> STR_21(3), STR_19(4), STR_18(3), STR_16(4), 
 25383 ;;		 -> STR_15(3), STR_13(4), STR_12(3), STR_10(4), 
 25384 ;; Return value:  Size  Location     Type
 25385 ;;                  2    0[COMRAM] unsigned int 
 25386 ;; Registers used:
 25387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 25388 ;; Tracked objects:
 25389 ;;		On entry : 0/0
 25390 ;;		On exit  : 0/0
 25391 ;;		Unchanged: 0/0
 25392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25393 ;;      Params:         2       0       0       0       0       0       0       0       0
 25394 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25395 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25396 ;;      Totals:         6       0       0       0       0       0       0       0       0
 25397 ;;Total ram usage:        6 bytes
 25398 ;; Hardware stack levels used:    1
 25399 ;; This function calls:
 25400 ;;		Nothing
 25401 ;; This function is called by:
 25402 ;;		_receiveByteSerial
 25403 ;; This function uses a non-reentrant model
 25404 ;;
 25405                           
 25406                           	psect	text66
 25407  005700                     __ptext66:
 25408                           	opt stack 0
 25409  005700                     i2_strlen:
 25410                           	opt stack 23
 25411                           
 25412                           ;incstack = 0
 25413  005700  C001  F005         	movff	i2strlen@s,i2strlen@cp
 25414  005704  C002  F006         	movff	i2strlen@s+1,i2strlen@cp+1
 25415  005708  D002               	goto	i2l2270
 25416  00570A  4A05               	infsnz	i2strlen@cp,f,c
 25417  00570C  2A06               	incf	i2strlen@cp+1,f,c
 25418  00570E                     i2l2270:
 25419  00570E  C005  FFF6         	movff	i2strlen@cp,tblptrl
 25420  005712  C006  FFF7         	movff	i2strlen@cp+1,tblptrh
 25421  005716  6AF8               	clrf	tblptru,c
 25422  005718  0E07               	movlw	(high __ramtop+-1)
 25423  00571A  64F7               	cpfsgt	tblptrh,c
 25424  00571C  D003               	bra	i2u1237_47
 25425  00571E  0008               	tblrd		*
 25426  005720  50F5               	movf	tablat,w,c
 25427  005722  D005               	bra	i2u1237_40
 25428  005724                     i2u1237_47:
 25429  005724  CFF6 FFE9          	movff	tblptrl,fsr0l
 25430  005728  CFF7 FFEA          	movff	tblptrh,fsr0h
 25431  00572C  50EF               	movf	indf0,w,c
 25432  00572E                     i2u1237_40:
 25433  00572E  0900               	iorlw	0
 25434  005730  A4D8               	btfss	status,2,c
 25435  005732  D7EB               	goto	i2l2271
 25436  005734  C001  F003         	movff	i2strlen@s,??i2_strlen
 25437  005738  C002  F004         	movff	i2strlen@s+1,??i2_strlen+1
 25438  00573C  1E03               	comf	??i2_strlen,f,c
 25439  00573E  1E04               	comf	??i2_strlen+1,f,c
 25440  005740  4A03               	infsnz	??i2_strlen,f,c
 25441  005742  2A04               	incf	??i2_strlen+1,f,c
 25442  005744  5005               	movf	i2strlen@cp,w,c
 25443  005746  2403               	addwf	??i2_strlen,w,c
 25444  005748  6E01               	movwf	?i2_strlen,c
 25445  00574A  5006               	movf	i2strlen@cp+1,w,c
 25446  00574C  2004               	addwfc	??i2_strlen+1,w,c
 25447  00574E  6E02               	movwf	?i2_strlen+1,c
 25448  005750  0012               	return	
 25449  005752                     __end_ofi2_strlen:
 25450                           	opt stack 0
 25451                           tosu	equ	0xFFF
 25452                           tosh	equ	0xFFE
 25453                           tosl	equ	0xFFD
 25454                           pclatu	equ	0xFFB
 25455                           pclath	equ	0xFFA
 25456                           tblptru	equ	0xFF8
 25457                           tblptrh	equ	0xFF7
 25458                           tblptrl	equ	0xFF6
 25459                           tablat	equ	0xFF5
 25460                           prodh	equ	0xFF4
 25461                           prodl	equ	0xFF3
 25462                           intcon	equ	0xFF2
 25463                           intcon2	equ	0xFF1
 25464                           intcon3	equ	0xFF0
 25465                           indf0	equ	0xFEF
 25466                           postinc0	equ	0xFEE
 25467                           fsr0h	equ	0xFEA
 25468                           fsr0l	equ	0xFE9
 25469                           wreg	equ	0xFE8
 25470                           indf1	equ	0xFE7
 25471                           postinc1	equ	0xFE6
 25472                           postdec1	equ	0xFE5
 25473                           plusw1	equ	0xFE3
 25474                           fsr1h	equ	0xFE2
 25475                           fsr1l	equ	0xFE1
 25476                           indf2	equ	0xFDF
 25477                           postinc2	equ	0xFDE
 25478                           postdec2	equ	0xFDD
 25479                           plusw2	equ	0xFDB
 25480                           fsr2h	equ	0xFDA
 25481                           fsr2l	equ	0xFD9
 25482                           status	equ	0xFD8
 25483                           
 25484 ;; *************** function _readButtons *****************
 25485 ;; Defined at:
 25486 ;;		line 19 in file "src/Teclado.h"
 25487 ;; Parameters:    Size  Location     Type
 25488 ;;		None
 25489 ;; Auto vars:     Size  Location     Type
 25490 ;;		None
 25491 ;; Return value:  Size  Location     Type
 25492 ;;                  1    wreg      void 
 25493 ;; Registers used:
 25494 ;;		wreg, status,2, status,0, cstack
 25495 ;; Tracked objects:
 25496 ;;		On entry : 0/0
 25497 ;;		On exit  : 0/0
 25498 ;;		Unchanged: 0/0
 25499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25500 ;;      Params:         0       0       0       0       0       0       0       0       0
 25501 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25503 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25504 ;;Total ram usage:        0 bytes
 25505 ;; Hardware stack levels used:    1
 25506 ;; Hardware stack levels required when called:    2
 25507 ;; This function calls:
 25508 ;;		i2_I2C_Read
 25509 ;;		i2_I2C_Start
 25510 ;;		i2_I2C_Stop
 25511 ;;		i2_I2C_Write
 25512 ;; This function is called by:
 25513 ;;		_TIMER0
 25514 ;; This function uses a non-reentrant model
 25515 ;;
 25516                           
 25517                           	psect	text67
 25518  005ADC                     __ptext67:
 25519                           	opt stack 0
 25520  005ADC                     _readButtons:
 25521                           	opt stack 22
 25522                           
 25523                           ;Teclado.h: 20: I2C_Start();
 25524                           
 25525                           ;incstack = 0
 25526  005ADC  EC37  F02E         	call	i2_I2C_Start	;wreg free
 25527                           
 25528                           ;Teclado.h: 21: I2C_Write(0x4F);
 25529  005AE0  0E00               	movlw	0
 25530  005AE2  6E03               	movwf	i2I2C_Write@d+1,c
 25531  005AE4  0E4F               	movlw	79
 25532  005AE6  6E02               	movwf	i2I2C_Write@d,c
 25533  005AE8  EC22  F02E         	call	i2_I2C_Write	;wreg free
 25534                           
 25535                           ;Teclado.h: 22: bt_flag = ~I2C_Read(0);
 25536  005AEC  0E00               	movlw	0
 25537  005AEE  6E03               	movwf	i2I2C_Read@a+1,c
 25538  005AF0  0E00               	movlw	0
 25539  005AF2  6E02               	movwf	i2I2C_Read@a,c
 25540  005AF4  EC1A  F02D         	call	i2_I2C_Read	;wreg free
 25541  005AF8  5002               	movf	?i2_I2C_Read,w,c
 25542  005AFA  0AFF               	xorlw	255
 25543  005AFC  6E42               	movwf	_bt_flag,c
 25544                           
 25545                           ;Teclado.h: 23: I2C_Stop();
 25546  005AFE  EC33  F02E         	call	i2_I2C_Stop	;wreg free
 25547  005B02  0012               	return		;funcret
 25548  005B04                     __end_of_readButtons:
 25549                           	opt stack 0
 25550                           tosu	equ	0xFFF
 25551                           tosh	equ	0xFFE
 25552                           tosl	equ	0xFFD
 25553                           pclatu	equ	0xFFB
 25554                           pclath	equ	0xFFA
 25555                           tblptru	equ	0xFF8
 25556                           tblptrh	equ	0xFF7
 25557                           tblptrl	equ	0xFF6
 25558                           tablat	equ	0xFF5
 25559                           prodh	equ	0xFF4
 25560                           prodl	equ	0xFF3
 25561                           intcon	equ	0xFF2
 25562                           intcon2	equ	0xFF1
 25563                           intcon3	equ	0xFF0
 25564                           indf0	equ	0xFEF
 25565                           postinc0	equ	0xFEE
 25566                           fsr0h	equ	0xFEA
 25567                           fsr0l	equ	0xFE9
 25568                           wreg	equ	0xFE8
 25569                           indf1	equ	0xFE7
 25570                           postinc1	equ	0xFE6
 25571                           postdec1	equ	0xFE5
 25572                           plusw1	equ	0xFE3
 25573                           fsr1h	equ	0xFE2
 25574                           fsr1l	equ	0xFE1
 25575                           indf2	equ	0xFDF
 25576                           postinc2	equ	0xFDE
 25577                           postdec2	equ	0xFDD
 25578                           plusw2	equ	0xFDB
 25579                           fsr2h	equ	0xFDA
 25580                           fsr2l	equ	0xFD9
 25581                           status	equ	0xFD8
 25582                           
 25583 ;; *************** function i2_I2C_Write *****************
 25584 ;; Defined at:
 25585 ;;		line 41 in file "src/I2C.c"
 25586 ;; Parameters:    Size  Location     Type
 25587 ;;  d               2    1[COMRAM] unsigned int 
 25588 ;; Auto vars:     Size  Location     Type
 25589 ;;		None
 25590 ;; Return value:  Size  Location     Type
 25591 ;;                  1    wreg      void 
 25592 ;; Registers used:
 25593 ;;		wreg, status,2, status,0, cstack
 25594 ;; Tracked objects:
 25595 ;;		On entry : 0/0
 25596 ;;		On exit  : 0/0
 25597 ;;		Unchanged: 0/0
 25598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25599 ;;      Params:         2       0       0       0       0       0       0       0       0
 25600 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25601 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25602 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25603 ;;Total ram usage:        2 bytes
 25604 ;; Hardware stack levels used:    1
 25605 ;; Hardware stack levels required when called:    1
 25606 ;; This function calls:
 25607 ;;		i2_I2C_Wait
 25608 ;; This function is called by:
 25609 ;;		_readButtons
 25610 ;;		i2_writeEEPROM_ext
 25611 ;; This function uses a non-reentrant model
 25612 ;;
 25613                           
 25614                           	psect	text68
 25615  005C44                     __ptext68:
 25616                           	opt stack 0
 25617  005C44                     i2_I2C_Write:
 25618                           	opt stack 20
 25619                           
 25620                           ;I2C.c: 42: I2C_Wait();
 25621                           
 25622                           ;incstack = 0
 25623  005C44  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25624                           
 25625                           ;I2C.c: 43: SSPBUF = d;
 25626  005C48  C002  FFC9         	movff	i2I2C_Write@d,4041	;volatile
 25627  005C4C  0012               	return		;funcret
 25628  005C4E                     __end_ofi2_I2C_Write:
 25629                           	opt stack 0
 25630                           tosu	equ	0xFFF
 25631                           tosh	equ	0xFFE
 25632                           tosl	equ	0xFFD
 25633                           pclatu	equ	0xFFB
 25634                           pclath	equ	0xFFA
 25635                           tblptru	equ	0xFF8
 25636                           tblptrh	equ	0xFF7
 25637                           tblptrl	equ	0xFF6
 25638                           tablat	equ	0xFF5
 25639                           prodh	equ	0xFF4
 25640                           prodl	equ	0xFF3
 25641                           intcon	equ	0xFF2
 25642                           intcon2	equ	0xFF1
 25643                           intcon3	equ	0xFF0
 25644                           indf0	equ	0xFEF
 25645                           postinc0	equ	0xFEE
 25646                           fsr0h	equ	0xFEA
 25647                           fsr0l	equ	0xFE9
 25648                           wreg	equ	0xFE8
 25649                           indf1	equ	0xFE7
 25650                           postinc1	equ	0xFE6
 25651                           postdec1	equ	0xFE5
 25652                           plusw1	equ	0xFE3
 25653                           fsr1h	equ	0xFE2
 25654                           fsr1l	equ	0xFE1
 25655                           indf2	equ	0xFDF
 25656                           postinc2	equ	0xFDE
 25657                           postdec2	equ	0xFDD
 25658                           plusw2	equ	0xFDB
 25659                           fsr2h	equ	0xFDA
 25660                           fsr2l	equ	0xFD9
 25661                           status	equ	0xFD8
 25662                           
 25663 ;; *************** function i2_I2C_Stop *****************
 25664 ;; Defined at:
 25665 ;;		line 35 in file "src/I2C.c"
 25666 ;; Parameters:    Size  Location     Type
 25667 ;;		None
 25668 ;; Auto vars:     Size  Location     Type
 25669 ;;		None
 25670 ;; Return value:  Size  Location     Type
 25671 ;;                  1    wreg      void 
 25672 ;; Registers used:
 25673 ;;		wreg, status,2, status,0, cstack
 25674 ;; Tracked objects:
 25675 ;;		On entry : 0/0
 25676 ;;		On exit  : 0/0
 25677 ;;		Unchanged: 0/0
 25678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25679 ;;      Params:         0       0       0       0       0       0       0       0       0
 25680 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25681 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25682 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25683 ;;Total ram usage:        0 bytes
 25684 ;; Hardware stack levels used:    1
 25685 ;; Hardware stack levels required when called:    1
 25686 ;; This function calls:
 25687 ;;		i2_I2C_Wait
 25688 ;; This function is called by:
 25689 ;;		_readButtons
 25690 ;;		i2_writeEEPROM_ext
 25691 ;; This function uses a non-reentrant model
 25692 ;;
 25693                           
 25694                           	psect	text69
 25695  005C66                     __ptext69:
 25696                           	opt stack 0
 25697  005C66                     i2_I2C_Stop:
 25698                           	opt stack 20
 25699                           
 25700                           ;I2C.c: 36: I2C_Wait();
 25701                           
 25702                           ;incstack = 0
 25703  005C66  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25704                           
 25705                           ;I2C.c: 37: PEN = 1;
 25706  005C6A  84C5               	bsf	4037,2,c	;volatile
 25707  005C6C  0012               	return		;funcret
 25708  005C6E                     __end_ofi2_I2C_Stop:
 25709                           	opt stack 0
 25710                           tosu	equ	0xFFF
 25711                           tosh	equ	0xFFE
 25712                           tosl	equ	0xFFD
 25713                           pclatu	equ	0xFFB
 25714                           pclath	equ	0xFFA
 25715                           tblptru	equ	0xFF8
 25716                           tblptrh	equ	0xFF7
 25717                           tblptrl	equ	0xFF6
 25718                           tablat	equ	0xFF5
 25719                           prodh	equ	0xFF4
 25720                           prodl	equ	0xFF3
 25721                           intcon	equ	0xFF2
 25722                           intcon2	equ	0xFF1
 25723                           intcon3	equ	0xFF0
 25724                           indf0	equ	0xFEF
 25725                           postinc0	equ	0xFEE
 25726                           fsr0h	equ	0xFEA
 25727                           fsr0l	equ	0xFE9
 25728                           wreg	equ	0xFE8
 25729                           indf1	equ	0xFE7
 25730                           postinc1	equ	0xFE6
 25731                           postdec1	equ	0xFE5
 25732                           plusw1	equ	0xFE3
 25733                           fsr1h	equ	0xFE2
 25734                           fsr1l	equ	0xFE1
 25735                           indf2	equ	0xFDF
 25736                           postinc2	equ	0xFDE
 25737                           postdec2	equ	0xFDD
 25738                           plusw2	equ	0xFDB
 25739                           fsr2h	equ	0xFDA
 25740                           fsr2l	equ	0xFD9
 25741                           status	equ	0xFD8
 25742                           
 25743 ;; *************** function i2_I2C_Start *****************
 25744 ;; Defined at:
 25745 ;;		line 25 in file "src/I2C.c"
 25746 ;; Parameters:    Size  Location     Type
 25747 ;;		None
 25748 ;; Auto vars:     Size  Location     Type
 25749 ;;		None
 25750 ;; Return value:  Size  Location     Type
 25751 ;;                  1    wreg      void 
 25752 ;; Registers used:
 25753 ;;		wreg, status,2, status,0, cstack
 25754 ;; Tracked objects:
 25755 ;;		On entry : 0/0
 25756 ;;		On exit  : 0/0
 25757 ;;		Unchanged: 0/0
 25758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25759 ;;      Params:         0       0       0       0       0       0       0       0       0
 25760 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25761 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25762 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25763 ;;Total ram usage:        0 bytes
 25764 ;; Hardware stack levels used:    1
 25765 ;; Hardware stack levels required when called:    1
 25766 ;; This function calls:
 25767 ;;		i2_I2C_Wait
 25768 ;; This function is called by:
 25769 ;;		_readButtons
 25770 ;;		i2_writeEEPROM_ext
 25771 ;; This function uses a non-reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text70
 25775  005C6E                     __ptext70:
 25776                           	opt stack 0
 25777  005C6E                     i2_I2C_Start:
 25778                           	opt stack 20
 25779                           
 25780                           ;I2C.c: 26: I2C_Wait();
 25781                           
 25782                           ;incstack = 0
 25783  005C6E  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25784                           
 25785                           ;I2C.c: 27: SEN = 1;
 25786  005C72  80C5               	bsf	4037,0,c	;volatile
 25787  005C74  0012               	return		;funcret
 25788  005C76                     __end_ofi2_I2C_Start:
 25789                           	opt stack 0
 25790                           tosu	equ	0xFFF
 25791                           tosh	equ	0xFFE
 25792                           tosl	equ	0xFFD
 25793                           pclatu	equ	0xFFB
 25794                           pclath	equ	0xFFA
 25795                           tblptru	equ	0xFF8
 25796                           tblptrh	equ	0xFF7
 25797                           tblptrl	equ	0xFF6
 25798                           tablat	equ	0xFF5
 25799                           prodh	equ	0xFF4
 25800                           prodl	equ	0xFF3
 25801                           intcon	equ	0xFF2
 25802                           intcon2	equ	0xFF1
 25803                           intcon3	equ	0xFF0
 25804                           indf0	equ	0xFEF
 25805                           postinc0	equ	0xFEE
 25806                           fsr0h	equ	0xFEA
 25807                           fsr0l	equ	0xFE9
 25808                           wreg	equ	0xFE8
 25809                           indf1	equ	0xFE7
 25810                           postinc1	equ	0xFE6
 25811                           postdec1	equ	0xFE5
 25812                           plusw1	equ	0xFE3
 25813                           fsr1h	equ	0xFE2
 25814                           fsr1l	equ	0xFE1
 25815                           indf2	equ	0xFDF
 25816                           postinc2	equ	0xFDE
 25817                           postdec2	equ	0xFDD
 25818                           plusw2	equ	0xFDB
 25819                           fsr2h	equ	0xFDA
 25820                           fsr2l	equ	0xFD9
 25821                           status	equ	0xFD8
 25822                           
 25823 ;; *************** function i2_I2C_Read *****************
 25824 ;; Defined at:
 25825 ;;		line 46 in file "src/I2C.c"
 25826 ;; Parameters:    Size  Location     Type
 25827 ;;  a               2    1[COMRAM] unsigned short 
 25828 ;; Auto vars:     Size  Location     Type
 25829 ;;  I2C_Read        2    3[COMRAM] unsigned short 
 25830 ;; Return value:  Size  Location     Type
 25831 ;;                  2    1[COMRAM] unsigned short 
 25832 ;; Registers used:
 25833 ;;		wreg, status,2, status,0, cstack
 25834 ;; Tracked objects:
 25835 ;;		On entry : 0/0
 25836 ;;		On exit  : 0/0
 25837 ;;		Unchanged: 0/0
 25838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25839 ;;      Params:         2       0       0       0       0       0       0       0       0
 25840 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25841 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25842 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25843 ;;Total ram usage:        4 bytes
 25844 ;; Hardware stack levels used:    1
 25845 ;; Hardware stack levels required when called:    1
 25846 ;; This function calls:
 25847 ;;		i2_I2C_Wait
 25848 ;; This function is called by:
 25849 ;;		_readButtons
 25850 ;; This function uses a non-reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text71
 25854  005A34                     __ptext71:
 25855                           	opt stack 0
 25856  005A34                     i2_I2C_Read:
 25857                           	opt stack 22
 25858                           
 25859                           ;I2C.c: 47: unsigned short temp;
 25860                           ;I2C.c: 48: I2C_Wait();
 25861                           
 25862                           ;incstack = 0
 25863  005A34  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25864                           
 25865                           ;I2C.c: 49: RCEN = 1;
 25866  005A38  86C5               	bsf	4037,3,c	;volatile
 25867                           
 25868                           ;I2C.c: 50: I2C_Wait();
 25869  005A3A  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25870                           
 25871                           ;I2C.c: 51: temp = SSPBUF;
 25872  005A3E  CFC9 F004          	movff	4041,i2I2C_Read@temp	;volatile
 25873  005A42  6A05               	clrf	i2I2C_Read@temp+1,c
 25874                           
 25875                           ;I2C.c: 52: I2C_Wait();
 25876  005A44  EC00  F02E         	call	i2_I2C_Wait	;wreg free
 25877                           
 25878                           ;I2C.c: 53: ACKDT = (a) ? 0 : 1;
 25879  005A48  5002               	movf	i2I2C_Read@a,w,c
 25880  005A4A  1003               	iorwf	i2I2C_Read@a+1,w,c
 25881  005A4C  A4D8               	btfss	status,2,c
 25882  005A4E  D002               	goto	i2u1235_40
 25883  005A50  8AC5               	bsf	4037,5,c	;volatile
 25884  005A52  D001               	goto	i2u1236_45
 25885  005A54                     i2u1235_40:
 25886  005A54  9AC5               	bcf	4037,5,c	;volatile
 25887  005A56                     i2u1236_45:
 25888                           
 25889                           ;I2C.c: 54: ACKEN = 1;
 25890  005A56  88C5               	bsf	4037,4,c	;volatile
 25891                           
 25892                           ;I2C.c: 55: return temp;
 25893  005A58  C004  F002         	movff	i2I2C_Read@temp,?i2_I2C_Read
 25894  005A5C  C005  F003         	movff	i2I2C_Read@temp+1,?i2_I2C_Read+1
 25895  005A60  0012               	return	
 25896  005A62                     __end_ofi2_I2C_Read:
 25897                           	opt stack 0
 25898                           tosu	equ	0xFFF
 25899                           tosh	equ	0xFFE
 25900                           tosl	equ	0xFFD
 25901                           pclatu	equ	0xFFB
 25902                           pclath	equ	0xFFA
 25903                           tblptru	equ	0xFF8
 25904                           tblptrh	equ	0xFF7
 25905                           tblptrl	equ	0xFF6
 25906                           tablat	equ	0xFF5
 25907                           prodh	equ	0xFF4
 25908                           prodl	equ	0xFF3
 25909                           intcon	equ	0xFF2
 25910                           intcon2	equ	0xFF1
 25911                           intcon3	equ	0xFF0
 25912                           indf0	equ	0xFEF
 25913                           postinc0	equ	0xFEE
 25914                           fsr0h	equ	0xFEA
 25915                           fsr0l	equ	0xFE9
 25916                           wreg	equ	0xFE8
 25917                           indf1	equ	0xFE7
 25918                           postinc1	equ	0xFE6
 25919                           postdec1	equ	0xFE5
 25920                           plusw1	equ	0xFE3
 25921                           fsr1h	equ	0xFE2
 25922                           fsr1l	equ	0xFE1
 25923                           indf2	equ	0xFDF
 25924                           postinc2	equ	0xFDE
 25925                           postdec2	equ	0xFDD
 25926                           plusw2	equ	0xFDB
 25927                           fsr2h	equ	0xFDA
 25928                           fsr2l	equ	0xFD9
 25929                           status	equ	0xFD8
 25930                           
 25931 ;; *************** function i2_I2C_Wait *****************
 25932 ;; Defined at:
 25933 ;;		line 21 in file "src/I2C.c"
 25934 ;; Parameters:    Size  Location     Type
 25935 ;;		None
 25936 ;; Auto vars:     Size  Location     Type
 25937 ;;		None
 25938 ;; Return value:  Size  Location     Type
 25939 ;;                  1    wreg      void 
 25940 ;; Registers used:
 25941 ;;		wreg, status,2, status,0
 25942 ;; Tracked objects:
 25943 ;;		On entry : 0/0
 25944 ;;		On exit  : 0/0
 25945 ;;		Unchanged: 0/0
 25946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25947 ;;      Params:         0       0       0       0       0       0       0       0       0
 25948 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25949 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25950 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25951 ;;Total ram usage:        1 bytes
 25952 ;; Hardware stack levels used:    1
 25953 ;; This function calls:
 25954 ;;		Nothing
 25955 ;; This function is called by:
 25956 ;;		i2_I2C_Start
 25957 ;;		i2_I2C_Stop
 25958 ;;		i2_I2C_Write
 25959 ;;		i2_I2C_Read
 25960 ;; This function uses a non-reentrant model
 25961 ;;
 25962                           
 25963                           	psect	text72
 25964  005C00                     __ptext72:
 25965                           	opt stack 0
 25966  005C00                     i2_I2C_Wait:
 25967                           	opt stack 20
 25968                           
 25969                           ;I2C.c: 22: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 25970                           
 25971                           ;incstack = 0
 25972  005C00  B4C7               	btfsc	4039,2,c	;volatile
 25973  005C02  D7FE               	goto	i2_I2C_Wait
 25974  005C04  CFC5 F001          	movff	4037,??i2_I2C_Wait	;volatile
 25975  005C08  0E1F               	movlw	31
 25976  005C0A  1601               	andwf	??i2_I2C_Wait,f,c
 25977  005C0C  B4D8               	btfsc	status,2,c
 25978  005C0E  0012               	return	
 25979  005C10  D7F7               	goto	i2_I2C_Wait
 25980  005C12                     __end_ofi2_I2C_Wait:
 25981                           	opt stack 0
 25982                           tosu	equ	0xFFF
 25983                           tosh	equ	0xFFE
 25984                           tosl	equ	0xFFD
 25985                           pclatu	equ	0xFFB
 25986                           pclath	equ	0xFFA
 25987                           tblptru	equ	0xFF8
 25988                           tblptrh	equ	0xFF7
 25989                           tblptrl	equ	0xFF6
 25990                           tablat	equ	0xFF5
 25991                           prodh	equ	0xFF4
 25992                           prodl	equ	0xFF3
 25993                           intcon	equ	0xFF2
 25994                           intcon2	equ	0xFF1
 25995                           intcon3	equ	0xFF0
 25996                           indf0	equ	0xFEF
 25997                           postinc0	equ	0xFEE
 25998                           fsr0h	equ	0xFEA
 25999                           fsr0l	equ	0xFE9
 26000                           wreg	equ	0xFE8
 26001                           indf1	equ	0xFE7
 26002                           postinc1	equ	0xFE6
 26003                           postdec1	equ	0xFE5
 26004                           plusw1	equ	0xFE3
 26005                           fsr1h	equ	0xFE2
 26006                           fsr1l	equ	0xFE1
 26007                           indf2	equ	0xFDF
 26008                           postinc2	equ	0xFDE
 26009                           postdec2	equ	0xFDD
 26010                           plusw2	equ	0xFDB
 26011                           fsr2h	equ	0xFDA
 26012                           fsr2l	equ	0xFD9
 26013                           status	equ	0xFD8
 26014                           tosu	equ	0xFFF
 26015                           tosh	equ	0xFFE
 26016                           tosl	equ	0xFFD
 26017                           pclatu	equ	0xFFB
 26018                           pclath	equ	0xFFA
 26019                           tblptru	equ	0xFF8
 26020                           tblptrh	equ	0xFF7
 26021                           tblptrl	equ	0xFF6
 26022                           tablat	equ	0xFF5
 26023                           prodh	equ	0xFF4
 26024                           prodl	equ	0xFF3
 26025                           intcon	equ	0xFF2
 26026                           intcon2	equ	0xFF1
 26027                           intcon3	equ	0xFF0
 26028                           indf0	equ	0xFEF
 26029                           postinc0	equ	0xFEE
 26030                           fsr0h	equ	0xFEA
 26031                           fsr0l	equ	0xFE9
 26032                           wreg	equ	0xFE8
 26033                           indf1	equ	0xFE7
 26034                           postinc1	equ	0xFE6
 26035                           postdec1	equ	0xFE5
 26036                           plusw1	equ	0xFE3
 26037                           fsr1h	equ	0xFE2
 26038                           fsr1l	equ	0xFE1
 26039                           indf2	equ	0xFDF
 26040                           postinc2	equ	0xFDE
 26041                           postdec2	equ	0xFDD
 26042                           plusw2	equ	0xFDB
 26043                           fsr2h	equ	0xFDA
 26044                           fsr2l	equ	0xFD9
 26045                           status	equ	0xFD8
 26046                           
 26047                           	psect	text73
 26048  000000                     __ptext73:
 26049                           	opt stack 0
 26050                           tosu	equ	0xFFF
 26051                           tosh	equ	0xFFE
 26052                           tosl	equ	0xFFD
 26053                           pclatu	equ	0xFFB
 26054                           pclath	equ	0xFFA
 26055                           tblptru	equ	0xFF8
 26056                           tblptrh	equ	0xFF7
 26057                           tblptrl	equ	0xFF6
 26058                           tablat	equ	0xFF5
 26059                           prodh	equ	0xFF4
 26060                           prodl	equ	0xFF3
 26061                           intcon	equ	0xFF2
 26062                           intcon2	equ	0xFF1
 26063                           intcon3	equ	0xFF0
 26064                           indf0	equ	0xFEF
 26065                           postinc0	equ	0xFEE
 26066                           fsr0h	equ	0xFEA
 26067                           fsr0l	equ	0xFE9
 26068                           wreg	equ	0xFE8
 26069                           indf1	equ	0xFE7
 26070                           postinc1	equ	0xFE6
 26071                           postdec1	equ	0xFE5
 26072                           plusw1	equ	0xFE3
 26073                           fsr1h	equ	0xFE2
 26074                           fsr1l	equ	0xFE1
 26075                           indf2	equ	0xFDF
 26076                           postinc2	equ	0xFDE
 26077                           postdec2	equ	0xFDD
 26078                           plusw2	equ	0xFDB
 26079                           fsr2h	equ	0xFDA
 26080                           fsr2l	equ	0xFD9
 26081                           status	equ	0xFD8
 26082                           
 26083                           	psect	rparam
 26084  0000                     tosu	equ	0xFFF
 26085                           tosh	equ	0xFFE
 26086                           tosl	equ	0xFFD
 26087                           pclatu	equ	0xFFB
 26088                           pclath	equ	0xFFA
 26089                           tblptru	equ	0xFF8
 26090                           tblptrh	equ	0xFF7
 26091                           tblptrl	equ	0xFF6
 26092                           tablat	equ	0xFF5
 26093                           prodh	equ	0xFF4
 26094                           prodl	equ	0xFF3
 26095                           intcon	equ	0xFF2
 26096                           intcon2	equ	0xFF1
 26097                           intcon3	equ	0xFF0
 26098                           indf0	equ	0xFEF
 26099                           postinc0	equ	0xFEE
 26100                           fsr0h	equ	0xFEA
 26101                           fsr0l	equ	0xFE9
 26102                           wreg	equ	0xFE8
 26103                           indf1	equ	0xFE7
 26104                           postinc1	equ	0xFE6
 26105                           postdec1	equ	0xFE5
 26106                           plusw1	equ	0xFE3
 26107                           fsr1h	equ	0xFE2
 26108                           fsr1l	equ	0xFE1
 26109                           indf2	equ	0xFDF
 26110                           postinc2	equ	0xFDE
 26111                           postdec2	equ	0xFDD
 26112                           plusw2	equ	0xFDB
 26113                           fsr2h	equ	0xFDA
 26114                           fsr2l	equ	0xFD9
 26115                           status	equ	0xFD8
 26116                           
 26117                           	psect	temp
 26118  00005F                     btemp:
 26119                           	opt stack 0
 26120  00005F                     	ds	1
 26121  0000                     int$flags	set	btemp
 26122  0000                     wtemp6	set	btemp+1
 26123                           tosu	equ	0xFFF
 26124                           tosh	equ	0xFFE
 26125                           tosl	equ	0xFFD
 26126                           pclatu	equ	0xFFB
 26127                           pclath	equ	0xFFA
 26128                           tblptru	equ	0xFF8
 26129                           tblptrh	equ	0xFF7
 26130                           tblptrl	equ	0xFF6
 26131                           tablat	equ	0xFF5
 26132                           prodh	equ	0xFF4
 26133                           prodl	equ	0xFF3
 26134                           intcon	equ	0xFF2
 26135                           intcon2	equ	0xFF1
 26136                           intcon3	equ	0xFF0
 26137                           indf0	equ	0xFEF
 26138                           postinc0	equ	0xFEE
 26139                           fsr0h	equ	0xFEA
 26140                           fsr0l	equ	0xFE9
 26141                           wreg	equ	0xFE8
 26142                           indf1	equ	0xFE7
 26143                           postinc1	equ	0xFE6
 26144                           postdec1	equ	0xFE5
 26145                           plusw1	equ	0xFE3
 26146                           fsr1h	equ	0xFE2
 26147                           fsr1l	equ	0xFE1
 26148                           indf2	equ	0xFDF
 26149                           postinc2	equ	0xFDE
 26150                           postdec2	equ	0xFDD
 26151                           plusw2	equ	0xFDB
 26152                           fsr2h	equ	0xFDA
 26153                           fsr2l	equ	0xFD9
 26154                           status	equ	0xFD8


Data Sizes:
    Strings     1936
    Constant    66
    Data        18
    BSS         487
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      94
    BANK0           160    147     160
    BANK1           256      0     242
    BANK2           256      0     205
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_79(CODE[3]), STR_77(CODE[7]), 
		 -> STR_76(CODE[7]), STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), 
		 -> STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_133(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_133(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_133(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 20
		 -> getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_79(CODE[3]), STR_77(CODE[7]), 
		 -> STR_76(CODE[7]), STR_75(CODE[3]), STR_73(CODE[4]), STR_72(CODE[5]), 
		 -> STR_68(CODE[4]), STR_67(CODE[2]), STR_65(CODE[4]), STR_64(CODE[3]), 
		 -> STR_62(CODE[4]), STR_61(CODE[2]), STR_60(CODE[2]), STR_58(CODE[4]), 
		 -> STR_56(CODE[4]), STR_55(CODE[5]), STR_54(CODE[3]), STR_52(CODE[4]), 
		 -> STR_51(CODE[3]), STR_49(CODE[4]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_31(CODE[4]), STR_30(CODE[7]), 
		 -> STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), STR_21(CODE[3]), 
		 -> STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), STR_15(CODE[3]), 
		 -> STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_133(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_79(CODE[3]), 
		 -> STR_77(CODE[7]), STR_76(CODE[7]), STR_75(CODE[3]), STR_73(CODE[4]), 
		 -> STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), ssid(BANK1[15]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), bufferSerial(BANK2[100]), STR_31(CODE[4]), 
		 -> STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), 
		 -> STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), 
		 -> STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 100
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getIntJSON@expected(COMRAM[20]), STR_79(CODE[3]), 
		 -> STR_77(CODE[7]), STR_76(CODE[7]), STR_75(CODE[3]), STR_73(CODE[4]), 
		 -> STR_72(CODE[5]), enviaDadosWifi@AUX(BANK0[15]), STR_68(CODE[4]), STR_67(CODE[2]), 
		 -> STR_65(CODE[4]), STR_64(CODE[3]), STR_62(CODE[4]), STR_61(CODE[2]), 
		 -> STR_60(CODE[2]), STR_58(CODE[4]), STR_56(CODE[4]), STR_55(CODE[5]), 
		 -> STR_54(CODE[3]), STR_52(CODE[4]), STR_51(CODE[3]), STR_49(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), ssid(BANK1[15]), STR_40(CODE[3]), STR_38(CODE[3]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), bufferSerial(BANK2[100]), STR_31(CODE[4]), 
		 -> STR_30(CODE[7]), STR_25(CODE[7]), STR_24(CODE[3]), STR_22(CODE[4]), 
		 -> STR_21(CODE[3]), STR_19(CODE[4]), STR_18(CODE[3]), STR_16(CODE[4]), 
		 -> STR_15(CODE[3]), STR_13(CODE[4]), STR_12(CODE[3]), STR_10(CODE[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_132(CODE[3]), STR_131(CODE[5]), STR_130(CODE[3]), STR_129(CODE[1]), 
		 -> STR_128(CODE[5]), STR_127(CODE[7]), STR_126(CODE[1]), STR_125(CODE[5]), 
		 -> STR_124(CODE[6]), STR_123(CODE[18]), STR_122(CODE[19]), STR_121(CODE[19]), 
		 -> STR_120(CODE[19]), STR_119(CODE[20]), STR_118(CODE[9]), STR_117(CODE[7]), 
		 -> STR_116(CODE[8]), STR_115(CODE[8]), STR_114(CODE[10]), STR_113(CODE[18]), 
		 -> STR_112(CODE[18]), STR_111(CODE[18]), STR_110(CODE[17]), STR_109(CODE[17]), 
		 -> STR_108(CODE[17]), STR_107(CODE[17]), STR_106(CODE[20]), STR_105(CODE[20]), 
		 -> STR_104(CODE[20]), STR_101(CODE[11]), STR_98(CODE[10]), STR_95(CODE[9]), 
		 -> STR_94(CODE[10]), STR_93(CODE[9]), STR_92(CODE[15]), STR_91(CODE[18]), 
		 -> STR_90(CODE[20]), STR_89(CODE[10]), STR_88(CODE[22]), STR_87(CODE[21]), 
		 -> STR_86(CODE[15]), STR_85(CODE[12]), STR_83(CODE[3]), STR_82(CODE[14]), 
		 -> STR_81(CODE[20]), STR_69(CODE[3]), STR_48(CODE[18]), STR_47(CODE[6]), 
		 -> STR_46(CODE[3]), STR_45(CODE[3]), STR_39(CODE[14]), STR_29(CODE[9]), 
		 -> STR_28(CODE[21]), STR_27(CODE[17]), STR_26(CODE[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), line4(BANK1[21]), 
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 575
		 -> STR_80(CODE[9]), STR_78(CODE[11]), STR_74(CODE[14]), STR_71(CODE[168]), 
		 -> STR_66(CODE[19]), STR_63(CODE[28]), STR_59(CODE[15]), STR_57(CODE[21]), 
		 -> STR_53(CODE[14]), STR_50(CODE[14]), STR_37(CODE[16]), STR_36(CODE[575]), 
		 -> STR_35(CODE[45]), STR_32(CODE[21]), STR_23(CODE[20]), STR_20(CODE[22]), 
		 -> STR_17(CODE[35]), STR_14(CODE[14]), STR_11(CODE[14]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    _doprnt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), printf@ap(BANK0[2]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_134(CODE[7]), _doprnt@c(BANK0[1]), 
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), STR_103(CODE[10]), STR_102(CODE[7]), 
		 -> STR_100(CODE[11]), STR_99(CODE[8]), STR_97(CODE[11]), STR_96(CODE[7]), 
		 -> STR_84(CODE[12]), STR_77(CODE[7]), STR_73(CODE[4]), STR_70(CODE[12]), 
		 -> enviaDadosWifi@AUX(BANK0[15]), STR_68(CODE[4]), STR_65(CODE[4]), STR_62(CODE[4]), 
		 -> STR_58(CODE[4]), STR_56(CODE[4]), STR_52(CODE[4]), STR_49(CODE[4]), 
		 -> wifi_MAC(BANK1[12]), STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[3]), 
		 -> senha(BANK1[15]), STR_41(CODE[3]), ssid(BANK1[15]), STR_38(CODE[3]), 
		 -> portServer(BANK1[4]), ipServer(BANK1[20]), STR_34(CODE[4]), NULL(NULL[0]), 
		 -> STR_31(CODE[4]), line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), 
		 -> line1(BANK1[21]), STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), 
		 -> STR_16(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[3]), 
		 -> STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[4]), 
		 -> STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), STR_1(CODE[11]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 575
		 -> STR_132(CODE[3]), STR_131(CODE[5]), STR_130(CODE[3]), STR_129(CODE[1]), 
		 -> STR_128(CODE[5]), STR_127(CODE[7]), STR_126(CODE[1]), STR_125(CODE[5]), 
		 -> STR_124(CODE[6]), STR_123(CODE[18]), STR_122(CODE[19]), STR_121(CODE[19]), 
		 -> STR_120(CODE[19]), STR_119(CODE[20]), STR_118(CODE[9]), STR_117(CODE[7]), 
		 -> STR_116(CODE[8]), STR_115(CODE[8]), STR_114(CODE[10]), STR_113(CODE[18]), 
		 -> STR_112(CODE[18]), STR_111(CODE[18]), STR_110(CODE[17]), STR_109(CODE[17]), 
		 -> STR_108(CODE[17]), STR_107(CODE[17]), STR_106(CODE[20]), STR_105(CODE[20]), 
		 -> STR_104(CODE[20]), STR_101(CODE[11]), STR_98(CODE[10]), STR_95(CODE[9]), 
		 -> STR_94(CODE[10]), STR_93(CODE[9]), STR_92(CODE[15]), STR_91(CODE[18]), 
		 -> STR_90(CODE[20]), STR_89(CODE[10]), STR_88(CODE[22]), STR_87(CODE[21]), 
		 -> STR_86(CODE[15]), STR_85(CODE[12]), STR_83(CODE[3]), STR_82(CODE[14]), 
		 -> STR_81(CODE[20]), STR_80(CODE[9]), STR_78(CODE[11]), STR_74(CODE[14]), 
		 -> STR_71(CODE[168]), STR_69(CODE[3]), STR_66(CODE[19]), STR_63(CODE[28]), 
		 -> STR_59(CODE[15]), STR_57(CODE[21]), STR_53(CODE[14]), STR_50(CODE[14]), 
		 -> STR_48(CODE[18]), STR_47(CODE[6]), STR_46(CODE[3]), STR_45(CODE[3]), 
		 -> STR_39(CODE[14]), STR_37(CODE[16]), STR_36(CODE[575]), STR_35(CODE[45]), 
		 -> STR_32(CODE[21]), STR_29(CODE[9]), STR_28(CODE[21]), STR_27(CODE[17]), 
		 -> STR_26(CODE[20]), STR_23(CODE[20]), STR_20(CODE[22]), STR_17(CODE[35]), 
		 -> STR_14(CODE[14]), STR_11(CODE[14]), 

    S1793__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1793__prbuf$ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb.ptr	PTR unsigned char  size(2) Largest target is 25
		 -> _BF_start(BANK1[10]), getStringJSON@expected(BANK0[20]), getStringJSON@attr(BANK0[20]), getStringJSON@res(BANK0[25]), 
		 -> getIntJSON@expected(COMRAM[20]), getIntJSON@attr(COMRAM[20]), enviaDadosWifi@AUX(BANK0[15]), senha(BANK1[15]), 
		 -> ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), NULL(NULL[0]), 
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    _doprnt@pb	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(BANK0[4]), printf@pb(BANK0[4]), 

    findBufferSerial@key	PTR unsigned char  size(2) Largest target is 7
		 -> STR_79(CODE[3]), STR_76(CODE[7]), STR_75(CODE[3]), STR_72(CODE[5]), 
		 -> STR_67(CODE[2]), STR_64(CODE[3]), STR_61(CODE[2]), STR_60(CODE[2]), 
		 -> STR_55(CODE[5]), STR_54(CODE[3]), STR_51(CODE[3]), STR_40(CODE[3]), 
		 -> STR_30(CODE[7]), STR_24(CODE[3]), STR_21(CODE[3]), STR_18(CODE[3]), 
		 -> STR_15(CODE[3]), STR_12(CODE[3]), 

    setKeyStartReceiveSerial@start	PTR unsigned char  size(2) Largest target is 7
		 -> STR_77(CODE[7]), STR_73(CODE[4]), STR_68(CODE[4]), STR_65(CODE[4]), 
		 -> STR_62(CODE[4]), STR_58(CODE[4]), STR_56(CODE[4]), STR_52(CODE[4]), 
		 -> STR_49(CODE[4]), STR_38(CODE[3]), STR_34(CODE[4]), STR_31(CODE[4]), 
		 -> STR_25(CODE[7]), STR_22(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), 
		 -> STR_13(CODE[4]), STR_10(CODE[4]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@ret	PTR unsigned char  size(2) Largest target is 20
		 -> senha(BANK1[15]), ssid(BANK1[15]), portServer(BANK1[4]), ipServer(BANK1[20]), 

    getStringJSON@buff	PTR unsigned char  size(2) Largest target is 100
		 -> bufferSerial(BANK2[100]), 

    getStringJSON@key	PTR unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[3]), STR_41(CODE[3]), 

    main$1652	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_103(CODE[10]), STR_102(CODE[7]), 

    main$1647	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_100(CODE[11]), STR_99(CODE[8]), 

    main$1642	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_97(CODE[11]), STR_96(CODE[7]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> STR_133(CODE[4]), getStringJSON@attr(BANK0[20]), getIntJSON@attr(COMRAM[20]), NULL(NULL[0]), 
		 -> bufferSerial(BANK2[100]), 

    setRangeValor@_var_ajt	PTR unsigned char  size(2) Largest target is 2
		 -> senha_desbloqueio_func(COMRAM[1]), t_fim_fase3(COMRAM[1]), t_fim_fase2(COMRAM[1]), t_fim_fase1(COMRAM[1]), 
		 -> t_religar_ventoinha_automatica(BANK0[1]), h_subir_temp_automatica(COMRAM[1]), wifi_habilita_alteracao(COMRAM[1]), t_temp_automatica(BANK0[1]), 
		 -> t_buzzer_religar(BANK0[1]), t_flap_intervalo(COMRAM[1]), t_flap_ligado(COMRAM[1]), h_buzzer(COMRAM[1]), 
		 -> h_modo_seguranca(BANK0[1]), h_venotinha(COMRAM[1]), h_flap(COMRAM[1]), h_abafador(COMRAM[1]), 
		 -> wifi_SENHA(COMRAM[2]), trava_fase(BANK0[1]), tipo_modo_trabalho(COMRAM[1]), buzzer(BANK0[1]), 
		 -> fornalha(COMRAM[1]), tempajt(BANK0[1]), tipo_sensor_umidade(BANK0[1]), fase(BANK0[1]), 
		 -> clima(BANK0[1]), 

    setUmidade@_clima	PTR unsigned char  size(2) Largest target is 1
		 -> clima(BANK0[1]), 

    setUmidade@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    setUmidade@_umdajt	PTR unsigned char  size(2) Largest target is 1
		 -> umidajt(BANK0[1]), 

    sp__climaAtual	PTR unsigned char  size(2) Largest target is 7
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[6]), 

    sp__faseAtual	PTR unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[4]), STR_4(CODE[10]), STR_3(CODE[11]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 

    faseAtual@_tempajt	PTR unsigned char  size(2) Largest target is 1
		 -> tempajt(BANK0[1]), 

    faseAtual@_fase	PTR unsigned char  size(2) Largest target is 1
		 -> fase(BANK0[1]), 

    blink@line	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 

    atualizaLCD@line4	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), 

    atualizaLCD@line3	PTR unsigned char  size(2) Largest target is 21
		 -> line3(BANK1[21]), 

    atualizaLCD@line2	PTR unsigned char  size(2) Largest target is 21
		 -> line2(BANK1[21]), 

    atualizaLCD@line1	PTR unsigned char  size(2) Largest target is 21
		 -> line1(BANK1[21]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> line4(BANK1[21]), line3(BANK1[21]), line2(BANK1[21]), line1(BANK1[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TIMER0 in COMRAM

    _TIMER0->_timer
    _timer->i2_setRangeValor
    i2_setRangeValor->i2_writeEEPROM_ext
    i2_writeEEPROM_ext->i2_I2C_Write
    i2_writeEEPROM_ext->i2_delay
    _receiveByteSerial->i2_strlen
    _readButtons->i2_I2C_Read
    i2_I2C_Write->i2_I2C_Wait
    i2_I2C_Stop->i2_I2C_Wait
    i2_I2C_Start->i2_I2C_Wait
    i2_I2C_Read->i2_I2C_Wait

Critical Paths under _main in BANK0

    _main->_alterarDadosConexaoConfigWifi
    _updateLeds->_I2C_Write
    _setUmidade->_tabelaUmidade
    _setRangeValor->_writeEEPROM_ext
    _readEEPROM_ext->_I2C_Read
    _I2C_Restart->_I2C_Wait
    _I2C_Read->_I2C_Wait
    _getSensors->___fttol
    ___lwtoft->_readADC
    ___fttol->___ftdiv
    ___ftmul->___lwtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    _enviaDadosWifi->_printf
    _criaCaracteresCGRAM->_Lcd_Write_Char
    _controle->_acaoFlap
    _acaoFlap->_setLed
    _alterarDadosConexaoConfigWifi->_getStringJSON
    _writeEEPROM_ext->_I2C_Write
    _writeEEPROM_ext->_delay
    _I2C_Write->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _setKeyStartReceiveSerial->_sprintf
    _printf->__doprnt
    _getStringJSON->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _findBufferSerial->_strstr
    _strstr->_strncmp
    _strncmp->_strlen
    _atualizaLCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  183816
                                            129 BANK0     18    18      0
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                          _UART_Init
                             ___wmul
      _alterarDadosConexaoConfigWifi
                        _atualizaLCD
                              _blink
                            _btPress
                         _climaAtual
                           _controle
                _criaCaracteresCGRAM
                              _delay
                     _enviaDadosWifi
                          _faseAtual
                         _getSensors
                             _printf
                     _readEEPROM_ext
                      _setRangeValor
                         _setUmidade
                            _sprintf
                         _updateLeds
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _updateLeds                                           0     0      0     680
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _setUmidade                                          18    12      6   11829
                                              8 BANK0     18    12      6
                      _tabelaUmidade
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (2) _tabelaUmidade                                        8     3      5    7163
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _setRangeValor                                       11     6      5   18905
                                              5 BANK0     11     6      5
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _readEEPROM_ext                                       2     2      0     896
                                              5 BANK0      2     2      0
                           _I2C_Read
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             4     2      2     171
                                              1 BANK0      4     2      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _getSensors                                          18    18      0   16953
                                             69 BANK0     18    18      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___fttol
                           ___lwtoft
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2      45
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2716
                                              9 BANK0      3     0      3
                           ___ftpack
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             54 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3374
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     896
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3632
                                             39 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5078
                                             27 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _faseAtual                                            7     3      4    1224
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviaDadosWifi                                      23    23      0   39626
                                             99 BANK0     23    23      0
                             ___wmul
                              _delay
                   _findBufferSerial
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _criaCaracteresCGRAM                                 64    64      0     521
                                              4 BANK0     64    64      0
                            _Lcd_Cmd
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _controle                                             7     7      0    3348
                                              8 BANK0      7     7      0
                           _acaoFlap
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _acaoFlap                                             6     2      4    2066
                                              2 BANK0      6     2      4
                             _setLed
 ---------------------------------------------------------------------------------
 (2) _setLed                                               2     1      1    1282
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _climaAtual                                           3     1      2      22
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _btPress                                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _blink                                                5     1      4    1025
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _alterarDadosConexaoConfigWifi                        1     1      0   63173
                                            128 BANK0      1     1      0
                        _atualizaLCD
                              _delay
                   _findBufferSerial
                      _getStringJSON
                             _printf
           _setKeyStartReceiveSerial
                            _sprintf
                             _strlen
                             _strstr
                    _writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (1) _writeEEPROM_ext                                      2     1      1    2570
                                              3 BANK0      2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2    1086
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     0      2     680
                                              1 BANK0      2     0      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _setKeyStartReceiveSerial                             2     0      2   15987
                                             49 BANK0      2     0      2
                             _memset
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6     324
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _printf                                              66     6     60    4992
                                             33 BANK0     66     6     60
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _getStringJSON                                       79    73      6   16559
                                             49 BANK0     79    73      6
                            _sprintf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16     6     10   11964
                                             33 BANK0     16     6     10
                            __doprnt
                         _climaAtual (ARG)
                          _faseAtual (ARG)
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             25    19      6    3420
                                             12 BANK0     21    15      6
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     743
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _findBufferSerial                                     2     0      2    3677
                                             20 BANK0      2     0      2
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     1      4    2287
                                             15 BANK0      5     1      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     362
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     748
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     240
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          9     1      8    2988
                                              8 BANK0      9     1      8
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     1      2     573
                                              4 BANK0      3     1      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     888
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TIMER0                                              19    19      0    1447
                                             29 COMRAM    19    19      0
                        _readButtons
                  _receiveByteSerial
                              _timer
 ---------------------------------------------------------------------------------
 (7) _timer                                               13    13      0    1067
                                             16 COMRAM    13    13      0
                    i2_setRangeValor
 ---------------------------------------------------------------------------------
 (8) i2_setRangeValor                                     11     6      5     995
                                              5 COMRAM    11     6      5
                  i2_writeEEPROM_ext
 ---------------------------------------------------------------------------------
 (9) i2_writeEEPROM_ext                                    2     1      1     244
                                              3 COMRAM     2     1      1
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
                            i2_delay
 ---------------------------------------------------------------------------------
 (10) i2_delay                                             3     1      2      48
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _receiveByteSerial                                    3     3      0     160
                                              6 COMRAM     3     3      0
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _readButtons                                          0     0      0     197
                         i2_I2C_Read
                        i2_I2C_Start
                         i2_I2C_Stop
                        i2_I2C_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Write                                         2     0      2     126
                                              1 COMRAM     2     0      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Stop                                          0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (10) i2_I2C_Start                                         0     0      0       0
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (8) i2_I2C_Read                                           4     2      2      71
                                              1 COMRAM     4     2      2
                         i2_I2C_Wait
 ---------------------------------------------------------------------------------
 (11) i2_I2C_Wait                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART_Init
   ___wmul
   _alterarDadosConexaoConfigWifi
     _atualizaLCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _getStringJSON
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strlen
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
     _strstr
       _strchr
       _strlen
       _strncmp
         _strlen (ARG)
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _atualizaLCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _blink
   _btPress
   _climaAtual
   _controle
     _acaoFlap
       _setLed
     _setLed
   _criaCaracteresCGRAM
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _delay
   _enviaDadosWifi
     ___wmul
     _delay
     _findBufferSerial
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
     _setKeyStartReceiveSerial
       _memset
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
         _climaAtual (ARG)
         _faseAtual (ARG)
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
       _climaAtual (ARG)
       _faseAtual (ARG)
     _strlen
   _faseAtual
   _getSensors
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___ftge
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _readADC (ARG)
       _readADC (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
               _readADC (ARG)
             _readADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
             _readADC (ARG)
           _readADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           _readADC (ARG)
         _readADC (ARG)
     ___lwtoft
       ___ftpack
       _readADC (ARG)
     _readADC
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
   _readEEPROM_ext
     _I2C_Read
       _I2C_Wait
     _I2C_Restart
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _setRangeValor
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _setUmidade
     _tabelaUmidade
     _writeEEPROM_ext
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _delay
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       ___wmul *
       _isdigit *
       _putch *
     _climaAtual (ARG)
     _faseAtual (ARG)
   _updateLeds
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
   _writeEEPROM_ext
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write
       _I2C_Wait
     _delay

 _TIMER0 (ROOT)
   _readButtons
     i2_I2C_Read
       i2_I2C_Wait
     i2_I2C_Start
       i2_I2C_Wait
     i2_I2C_Stop
       i2_I2C_Wait
     i2_I2C_Write
       i2_I2C_Wait
   _receiveByteSerial
     i2_strlen
   _timer
     i2_setRangeValor
       i2_writeEEPROM_ext
         i2_I2C_Start
           i2_I2C_Wait
         i2_I2C_Stop
           i2_I2C_Wait
         i2_I2C_Write
           i2_I2C_Wait
         i2_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CD       9       80.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     30      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BD      20        0.0%
DATA                 0      0     2BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Jul 15 09:03:16 2020

                       i2_setRangeValor 5186                       setRangeValor@_aux 006E  
                     setRangeValor@_max 0068                 __size_of_readEEPROM_ext 0052  
                     setRangeValor@_min 0067                      __size_of_I2C_Start 0008  
                   tabelaUmidade@_clima 0062                      __size_of_I2C_Write 000A  
                                    _GO 007E11                      setRangeValor@_acao 006D  
                    _tipo_modo_trabalho 0059                             __CFG_BOR$ON 000000  
                   ___wmul@multiplicand 0062                             __CFG_BORV$3 000000  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000                            __CFG_CP3$OFF 000000  
                          ___ftadd@exp1 0086                            ___ftadd@exp2 0085  
                          ___ftadd@sign 0084               __size_of_findBufferSerial 0028  
                           __CFG_WDT$ON 000000                                     l300 5BCC  
                                   l221 5BAA                                     l311 1662  
                                   l304 1C66                                     l233 59E4  
                                   l305 1C3C                                     l321 16A8  
                                   l313 1670                                     l234 59E6  
                                   l250 4E38                                     l410 1912  
                                   l306 1632                                     l235 59EE  
                                   l251 4DA8                                     l331 1702  
                                   l323 16B6                                     l315 167E  
                                   l307 1646                                     l236 59F0  
                                   l500 1BA0                                     l412 1936  
                                   l237 59F8                                     l253 4DCC  
                                   l333 1726                                     l325 16C4  
                                   l317 168C                                     l309 1654  
                                   l238 59FA                                     l254 4DF0  
                                   l510 1BF4                                     l239 5A02  
                                   l255 4E14                                     l263 5A18  
                                   l319 169A                                     l504 1BC4  
                                   l408 18F2                                     l281 4F72  
                                   l329 16E2                                     l514 1C0C  
                                   l506 1BDC                                     l450 1A30  
                                   l434 19C6                                     l283 4FA0  
                                   l275 4F4C                                     l268 4BD2  
                                   l436 19E6                                     l277 4F56  
                                   l525 25D8                                     l453 1A46  
                                   l278 4F62                                     l526 1C72  
                                   l518 1C24                                     l535 1CC0  
                                   l391 187C                                     l367 17F4  
                                   l288 596C                                     l800 23DC  
                                   l640 1F28                                     l480 1B04  
                                   l289 5956                                     l633 1EFC  
                                   l561 1D76                                     l537 1CE0  
                                   l369 1814                                     l810 242C  
                                   l802 23EC                                     l650 1F82  
                                   l642 1F38                                     l490 1B4C  
                                   l482 1B1C                                     l474 1AD0  
                                   l571 1DAC                                     l555 1D54  
                                   l900 4676                                     l820 247C  
                                   l812 243C                                     l804 23FC  
                                   l652 1FA8                                     l549 1D20  
                                   l910 5778                                     l638 25EE  
                                   l830 24CC                                     l822 248C  
                                   l814 244C                                     l806 240C  
                                   l670 2036                                     l662 1FE6  
                                   l654 1FB8                                     l646 1F52  
                                   l494 1B70                                     l486 1B34  
                                   l639 1F12                                     l840 251C  
                                   l832 24DC                                     l824 249C  
                                   l816 245C                                     l808 241C  
                                   l760 228E                                     l672 2046  
                                   l664 1FF6                                     l496 1B88  
                                   l920 46D6                                     l905 5782  
                                   l753 221E                                     l921 46F8  
                                   l906 5758                                     l850 256C  
                                   l842 252C                                     l834 24EC  
                                   l826 24AC                                     l818 246C  
                                   l770 22D6                                     l754 2234  
                                   l674 2056                                     l666 2006  
                                   l914 4770                                     l930 471C  
                                   l587 1E00                                     l923 46EC  
                                   l915 46B8                                     l908 5764  
                                   l852 257C                                     l844 253C  
                                   l836 24FC                                     l828 24BC  
                                   l780 233C                                     l772 22E6  
                                   l756 2244                                     l748 2202  
                                   l684 209A                                     l676 2066  
                                   l932 4724                                     l916 46DC  
                                   l909 576E                                     l933 4746  
                                   l925 46F4                                     l942 5024  
                                   l854 258C                                     l846 254C  
                                   l838 250C                                     l790 238C  
                                   l782 234C                                     l774 22F6  
                                   l766 22B6                                     l758 226A  
                                   l694 20D8                                     l678 2076  
                                   l926 4784                                     l918 46CE  
                                   l951 501C                                     l943 4FCC  
                                   l935 473A                                     l927 4704  
                                   l880 4580                                     l856 25B2  
                                   l848 255C                                     l792 239C  
                                   l784 235C                                     l776 2306  
                                   l768 22C6                                     l696 20E8  
                                   l688 20B4                                     l928 472A  
                                   l881 458A                                     l945 4FEC  
                                   l937 4742                                     l882 4594  
                                   l954 5042                                     l858 25C2  
                                   l794 23AC                                     l786 236C  
                                   l778 232C                                     l938 4752  
                                   l891 4614                                     l883 459E  
                                   l980 365C                                     l972 3610  
                                   l876 45C4                                     l948 5032  
                                   l796 23BC                                     l788 237C  
                                   l981 367C                                     l877 45A8  
                                   l949 4FF2                                     l990 3724  
                                   l886 462E                                     l878 4576  
                                   l798 23CC                                     l975 3AA8  
                                   l983 3694                                     l887 45E0  
                                   l992 374E                                     l984 36B4  
                                   l976 3620                                     l896 464A  
                                   l889 45FA                                     l994 37CC  
                                   l986 36CC                                     l978 3644  
                                   l898 4660                                     l995 37EC  
                                   l987 36EC                                     l997 3810  
                                   l989 3704                                     l998 3898  
                          __CFG_CPB$OFF 000000                                     _PEN 007E2A  
                          __CFG_CPD$OFF 000000                                     _SEN 007E28  
                                   _hor 0046                                     _min 0047  
                                   _sec 0048                             ?i2_I2C_Read 0002  
                           ?i2_I2C_Wait 0001                             ?i2_I2C_Stop 0001  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                            ?_atualizaLCD 0068  
                          __CFG_FOSC$HS 000000                    __size_of_I2C_Restart 0008  
                        getStringJSON@i 00DE                          getStringJSON@j 00DB  
                          __CFG_LVP$OFF 000000                            ___ftdiv@cntr 0090  
                          ___ftdiv@sign 0095                                    l1001 3A04  
                                  l1010 3AA2                                    l1003 3A50  
                                  l1005 3A7E                                    l1021 2C1E  
                                  l1013 2BC6                                    l1030 2CD6  
                                  l1022 2C3E                                    l1016 2F60  
                                  l1040 2D86                                    l1041 2DEC  
                                  l1017 2BE2                                    l1042 2DBE  
                                  l1034 2D06                                    l1026 2C6A  
                                  l2010 47C0                                    l1043 2DEA  
                                  l1035 2D36                                    l1027 2CAC  
                                  l1019 2C06                                    l1060 300C  
                                  l1052 2F5A                                    l1028 2CB0  
                                  l2012 4838                                    l1300 0502  
                                  l1061 3030                                    l1045 2EF0  
                                  l1037 2D4E                                    l2021 4878  
                                  l2013 4828                                    l1301 0518  
                                  l1150 52EC                                    l1054 30D6  
                                  l1038 2D6E                                    l1310 05DE  
                                  l1151 5302                                    l1063 304E  
                                  l1055 2FC4                                    l1047 2F08  
                                  l1311 0654                                    l1303 054C  
                                  l2104 567A                                    l1152 533A  
                                  l1048 2F28                                    l1224 34E4  
                                  l1232 3230                                    l1400 0F3E  
                                  l1312 0626                                    l2105 5672  
                                  l2025 5B8E                                    l1057 2FE4  
                                  l1241 3376                                    l1401 0F6C  
                                  l1305 065A                                    l2114 57F6  
                                  l1170 3D04                                    l1162 3C12  
                                  l1066 30AC                                    l2018 485C  
                                  l1234 323E                                    l1226 3112  
                                  l1410 1074                                    l1322 071A  
                                  l1306 0576                                    l2051 53F4  
                                  l2115 57EE                                    l1147 52CE  
                                  l1171 3CB6                                    l1059 30AE  
                                  l2019 4850                                    l1219 5160  
                                  l1235 336A                                    l1403 0F96  
                                  l1307 05B4                                    l2052 53E8  
                                  l2108 569A                                    l1180 3D0A  
                                  l1156 3B62                                    l1068 30D0  
                                  l1252 3500                                    l1244 3458  
                                  l1236 3286                                    l1228 311A  
                                  l1412 109E                                    l1404 0FC4  
                                  l1316 0A7A                                    l1340 09BE  
                                  l1332 0794                                    l1324 072A  
                                  l2109 56A4                                    l1149 52E0  
                                  l1181 3D20                                    l1173 3CC4  
                                  l1157 3B4A                                    l1245 3486  
                                  l1229 3136                                    l1421 11B2  
                                  l1413 10D2                                    l1341 09C4  
                                  l1317 066A                                    l2118 580E  
                                  l1174 3CC8                                    l1158 3B5E  
                                  l1254 358C                                    l1238 333C  
                                  l1430 12BA                                    l1422 11E0  
                                  l1406 0FEE                                    l1350 0AD0  
                                  l1342 0A30                                    l2055 5428  
                                  l2311 547A                                    l2119 5818  
                                  l1191 3DEA                                    l1183 3D36  
                                  l1167 3C62                                    l1247 34BC  
                                  l1431 12E8                                    l1415 10FC  
                                  l1407 101C                                    l1343 0E12  
                                  l1335 07D0                                    l1319 0696  
                                  l1271 0278                                    l2056 5436  
                                  l2128 59C2                                    l1176 3CFA  
                                  l1424 120A                                    l1416 1130  
                                  l1360 0C5C                                    l1352 0AFA  
                                  l1336 07FE                                    l1328 0760  
                                  l1280 0336                                    l2129 59B0  
                                  l1193 3E30                                    l1185 3DC2  
                                  l1169 3C82                                    l1249 34C8  
                                  l1441 149E                                    l1433 1312  
                                  l1425 1238                                    l1409 1046  
                                  l1337 0888                                    l1281 0366  
                                  l1273 02A4                                    l1434 1340  
                                  l1418 115A                                    l1346 0DA4  
                                  l1370 0D04                                    l1362 0C86  
                                  l1354 0B32                                    l1338 090E  
                                  l1195 3E7A                                    l1427 1262  
                                  l1419 1188                                    l1347 0A98  
                                  l1339 09A6                                    l2316 4966  
                                  l1196 3E92                                    l1188 3DC4  
                                  l1460 1500                                    l1444 1466  
                                  l1436 136A                                    l1428 1290  
                                  l1348 0DEA                                    l1380 0DA0  
                                  l1356 0B60                                    l1284 0A38  
                                  l1276 02E0                                    l2317 488C  
                                  l1197 3ED4                                    l1189 3DD8  
                                  l1461 152E                                    l1445 1410  
                                  l1357 0BC6                                    l1349 0A9C  
                                  l1293 043A                                    l1285 03B4  
                                  l1269 0230                                    l2270 5614  
                                  l2318 495C                                    l1446 1476  
                                  l1390 0E30                                    l1374 0D40  
                                  l1366 0CC8                                    l1286 03EC  
                                  l1278 032E                                    l2271 560E  
                                  l1631 2694                                    l1199 3F1E  
                                  l1455 15B6                                    l1463 1558  
                                  l1447 1418                                    l1391 0E64  
                                  l1359 0C28                                    l1287 040E  
                                  l1640 2730                                    l1464 1586  
                                  l1456 14A8                                    l1376 0D5C  
                                  l1633 2902                                    l1641 2740  
                                  l1457 14D6                                    l1449 1460  
                                  l1385 13FE                                    l1393 13CE  
                                  l1297 047C                                    l1289 041E  
                                  l2282 4D66                                    l1650 27F8  
                                  l1642 273A                                    l1626 25F8  
                                  l1570 437E                                    l1466 15B0  
                                  l1394 0E8E                                    l1378 0D7C  
                                  l2283 4CE8                                    l1627 2668  
                                  l1571 425E                                    l1459 15CC  
                                  l1395 0EBC                                    l2284 4D24  
                                  l1628 263C                                    l1572 42E8  
                                  l1653 280C                                    l1645 278A  
                                  l1477 5A78                                    l1469 15F6  
                                  l1389 1370                                    l1397 0EE6  
                                  l1638 2938                                    l1654 286C  
                                  l1478 5A64                                    l1910 4E80  
                                  l1398 0F14                                    l1663 29BC  
                                  l1655 28BA                                    l1639 26F6  
                                  l1575 430C                                    l1911 4E76  
                                  l1672 2AAA                                    l1664 29E0  
                                  l1648 2794                                    l1673 2AD4  
                                  l1665 29E8                                    l1657 28CC  
                                  l1649 27CE                                    l1577 4344  
                                  l1913 4EB4                                    l1658 28F0  
                                  l1578 4378                                    l1914 4E9E  
                                  l1675 2ADA                                    l1659 2972  
                                  l1676 2B5C                                    l1668 2A2A  
                                  l1916 4EDC                                    l1677 2B86  
                                  l1669 2A54                                    l1917 4ED2  
                                  l1941 43F4                                    l1950 4484  
                                  l1945 441E                                    l1955 447A  
                                  l1964 44B8                                    l1956 4470  
                                  l6220 52AE                                    l1965 44AE  
                                  l1974 4AA2                                    l1982 5252  
                                  l1967 44DC                                    l1983 5282  
                                  l1991 49D4                                    l6240 5C16  
                                  l1968 44F8                                    l1976 4ACA  
                                  l1992 4A06                                    l7104 1BC4  
                                  l7008 1A56                                    l1969 4528  
                                  l1977 4B08                                    l1993 4A16  
                                  l6402 280C                                    l1978 4B2E  
                                  l7050 1AD0                                    l1995 4A2E  
                                  l1996 4A3E                                    l1989 49AC  
                                  l7206 1D54                                    l7062 1B04  
                                  l6600 5A10                                    l6504 488C  
                                  l7144 1C82                                    l7162 1CC0  
                                  l6436 2976                                    l6612 5A64  
                                  l7404 1FA8                                    l8310 4F5A  
                                  l8302 4F44                                    l7086 1B70  
                                  l6704 4BCA                                    l6392 2794  
                                  l7600 2202                                    l7168 1CE0  
                                  l9202 34F8                                    l7442 2036  
                                  l6644 59B0                                    l9220 3584  
                                  l7612 2234                                    l7364 1EFC  
                                  l9150 327E                                    l9126 312E  
                                  l7622 226A                                    l7376 1F28  
                                  l6736 1646                                    l6922 18F2  
                                  l7628 228E                                    l6852 1814  
                                  l9166 336E                                    l7398 1F82  
                                  l6934 1936                                    l6846 17F4  
                                  l7824 25B2                                    l6928 1912  
                                  l6792 1726                                    l9408 029C  
                                  l7666 232C                                    l6970 19C6  
                                  l6786 1702                                    l8660 3A76  
                                  l8636 39FC                                    _ADON 007E10  
                                  l8648 3A48                                    l8816 30AC  
                                  l6976 19E6                                    l6888 188C  
                                  l9384 0228                                    l9396 0270  
                                  STR_1 7EC8                                    STR_2 7EA6  
                                  STR_3 7EBD                                    STR_4 7EFE  
                                  STR_5 7FDA                                    STR_6 7FBA  
                                  STR_7 7F91                                    STR_8 7FD5  
                                  STR_9 7FEC                                    u8020 2862  
                                  _RCIF 007CF5                                    _RCEN 007E2B  
                                  u8030 28A4                                    u8120 29F0  
                                  u8210 2B90                                    u8018 2830  
                                  u8027 2858                                    u8019 2864  
                                  u8300 5468                                    u8220 2BAA  
                                  u8037 289A                                    u8230 48AC  
                                  u8150 2A64                                    u9030 187A  
                                  u8320 54A6                                    u8400 4D50  
                                  u8208 2B46                                    u8080 29A2  
                                  u9120 18E2                                    u8250 48D2  
                                  u8307 545E                                    u8260 48FC  
                                  u8420 4D90                                    u8148 2A14  
                                  u8500 4EE6                                    u9300 19D6  
                                  u9140 1902                                    u8237 48A2  
                                  u8270 491C                                    u8430 4D96  
                                  u8327 549C                                    u8407 4D46  
                                  u8280 494A                                    u7800 57FA  
                                  u9160 1922                                    u8265 48F6  
                                  u8257 48C8                                    u8610 166C  
                                  u8267 48EC                                    u8427 4D86  
                                  u8188 2A94                                    u8460 4E68  
                                  u9500 1AC0                                    u8700 16F2  
                                  u8620 167A                                    u8277 4912  
                                  u8550 5936                                    u8630 1688  
                                  u8287 4940                                    u7840 5634  
                                  u9280 19B2                                    u8720 1712  
                                  u8640 1696                                    u7770 567E  
                                  u9610 1B48                                    u9290 19C2  
                                  u8650 16A4                                    u7940 276C  
                                  u7908 2626                                    u9620 1B5C  
                                  u9540 1AF4                                    u9380 1A2C  
                                  u8900 17E4                                    u8660 16B2  
                                  u8580 1642                                    u8565 5938  
                                  u7950 2772                                    u9710 1BD8  
                                  u9630 1B6C                                    u9390 1A44  
                                  u8670 16C0                                    u8590 1650  
                                  u7847 562A                                    u8920 1804  
                                  u9730 1BF0                                    u9650 1B84  
                                  u9570 1B18                                    u7947 2762  
                                  u9750 1C08                                    u9670 1B9C  
                                  u9590 1B30                                    u9840 1CB0  
                                  u9680 1BB0                                    u9770 1C20  
                                  u9690 1BC0                                    u7988 27B8  
                                  u9860 1CD0                                    u9780 1C38  
                                  u9960 1D44                                    _RSEN 007E29  
                       _f_wifi_processo 003D                                    __led 005C  
                     ?_Lcd_Write_String 0064                                    __sec 0150  
                                  _fase 00F6                                    _main 0012  
                                  _leds 0043                            ___ftpack@arg 0060  
                                  _menu 00FD                            ___ftpack@exp 0063  
                                  _temp 00FE                        __end_of_I2C_Read 5944  
                                  _umid 005D                                    fsr0h 000FEA  
                                  _ssid 01C9                                    fsr1h 000FE2  
                                  indf0 000FEF                                    fsr2h 000FDA  
                                  fsr0l 000FE9                                    indf1 000FE7  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 005F  
                      __end_of_I2C_Wait 5C00                        __end_of_I2C_Stop 5C5E  
                          ?i2_I2C_Start 0001                                    prodh 000FF4  
                                  prodl 000FF3                            ?i2_I2C_Write 0002  
                       __end_ofi2_delay 5B74                                    start 000E  
                    ??_Lcd_Write_String 0066                           __CFG_IESO$OFF 000000  
                       ??_getStringJSON 0097                         __end_of_Lcd_Cmd 5B50  
                         __CFG_MCLRE$ON 000000                            ___ftmul@cntr 0079  
                          ___param_bank 000000                            ___ftmul@sign 007A  
            __size_of_receiveByteSerial 006E                            ___fttol@exp1 00A4  
                          ___fttol@lval 00A0                        ?_I2C_Master_Init 006D  
                         __CFG_PLLDIV$1 000000                            ?_readButtons 0001  
                        __CFG_CCP2MX$ON 000000                                   ?_main 0001  
                                 _ACKEN 007E2C                                   _ACKDT 007E2D  
                       __end_of___ftadd 454E                                   STR_10 7FE2  
                                 STR_11 7E56                                   STR_12 7FEF  
                                 STR_20 7BC2                                   STR_21 7FEF  
                                 STR_13 7FE2                                   STR_22 7FE2  
                                 STR_30 7FAD                                   STR_14 7E48  
                                 STR_15 7FEF                                   STR_31 7FE2  
                                 STR_23 7C42                                   STR_24 7FEF  
                                 STR_16 7FE2                                   STR_40 7FE9  
                                 STR_32 7C03                                   STR_33 7C7C  
                                 STR_41 7FF5                                   STR_25 7FAD  
                                 STR_17 7B83                                   STR_18 7FEF  
                                 STR_34 7FE2                                   STR_42 7FF8  
                                 STR_50 7E3A                                   STR_26 7CCE  
                                 STR_51 7FEF                                   STR_19 7FE2  
                                 STR_43 7FF2                                   STR_27 7D9A  
                                 STR_35 7B56                                   STR_52 7FE2  
                                 STR_44 7FB1                                   STR_60 7FFB  
                                 STR_28 7C18                                   STR_36 786F  
                                 STR_45 7F0F                                   STR_61 7FFD  
                                 STR_29 7F39                                   STR_53 7E2C  
                                 STR_37 7DEF                                   STR_54 7FEF  
                                 STR_62 7FE2                                   STR_46 7F0F  
                                 STR_38 7FE6                                   STR_70 7E8E  
                                 STR_55 7FD0                                   STR_47 7FC0  
                                 STR_39 7E72                                   STR_63 7BA6  
                                 STR_71 7AAE                                   STR_64 7FEF  
                                 STR_56 7FE2                                   STR_72 7FCB  
                                 STR_80 7F30                                   STR_48 7D2E  
                                 STR_73 7FE2                                   STR_65 7FE2  
                                 STR_49 7FE2                                   STR_81 7CBA  
                                 STR_57 7BEE                                   STR_58 7FE2  
                                 STR_82 7E80                                   STR_74 7E64  
                                 STR_66 7CE2                                   STR_90 7C56  
                                 STR_67 7C7C                                   STR_75 7FEF  
                                 STR_83 7F0F                                   STR_59 7DFF  
                                 STR_91 7D40                                   STR_84 7E8E  
                                 STR_68 7FDE                                   STR_76 7F8A  
                                 STR_92 7E0E                                   STR_69 7F0F  
                                 STR_77 7F83                                   STR_93 7F4B  
                                 STR_85 7E9A                                   STR_94 7F08  
                                 STR_78 7EB2                                   STR_86 7E1D  
                                 STR_79 7FEF                                   STR_95 7F54  
                                 STR_87 7C2D                                   STR_96 7F98  
                                 STR_88 7BD8                                   STR_89 7F1C  
                                 STR_97 7ED3                                   STR_98 7F12  
                                 STR_99 7F5D                         __end_of___ftdiv 4B60  
                       __end_of___lldiv 5448                                   u11000 221C  
                                 u11010 222E                                   u11100 22C0  
                                 u11020 223E                                   u11110 22D0  
                                 u11030 2254                                   u12000 448C  
                                 u11120 22E0                                   u11040 2264  
                                 u10400 1F22                                   u11210 2376  
                                 u11130 22F0                                   u11050 227A  
                                 u10410 1F32                                   u11300 2406  
                                 u11220 2386                                   u11140 2300  
                       __end_of___ftmul 4A78                                   u12030 44C0  
                                 u11310 2416                                   u11230 2396  
                                 u11150 2316                                   u10430 1F4C  
                                 u11400 24A6                                   u11320 2426  
                                 u11240 23A6                                   u11160 2326  
                                 u10360 1EEC                                   _T0CON 000FD5  
                                 u12121 4994                                   u11410 24B6  
                                 u11330 2436                                   u11250 23B6  
                                 u11170 2336                                   u10450 1F6E  
                                 u12211 47A4                                   u12300 53F8  
                                 u11500 2546                                   u11420 24C6  
                                 u11340 2446                                   u11260 23C6  
                                 u11180 2346                                   u10700 20D2  
                                 u10540 1FF0                                   u12141 49BC  
                                 u12230 47DE                                   u11510 2556  
                                 u11430 24D6                                   u11350 2456  
                                 u11270 23D6                                   u10710 20E2  
                                 u10470 1F92                                   u10390 1F10  
                                 u12071 4A8A                                   u11600 5AD8  
                                 u12400 4F14                                   u13040 2F50  
                                 u11520 2566                                   u11440 24E6  
                                 u11360 2466                                   u10480 1FA2  
                                 u14010 33FA                                   u11530 2576  
                                 u11450 24F6                                   u11370 2476  
                                 u11290 23F6                                   u10570 2020  
                                 u12091 4AB2                                   u12235 47D6  
                                 u14100 35CA                                   u11540 2586  
                                 u11460 2506                                   u11380 2486  
                                 u10580 2030                                   u11621 4202  
                       __end_of___fttol 488A                                   u12270 4862  
                                 u11550 259C                                   u11470 2516  
                                 u11390 2496                                   u10670 20AE  
                                 u11631 4214                                   u11560 25AC  
                                 u11480 2526                                   u14200 026C  
                                 u11641 4226                                   u12450 4FAC  
                                 u11570 25BC                                   u11490 2536  
                                 u11900 43E6                                   u11820 5144  
                                 u14060 34AE                                   u11580 25D2  
                                 u14220 0298                                   u11814 5134  
                                 u11815 5130                                   u11760 531C  
                                 u13600 3BC8                                   u11808 5128  
                                 u14080 353E                                   u14240 02C4  
                                 u11930 4410                                   u10970 21F2  
                                 u14155 54E8                                   u11844 5154  
                                 u11861 43B2                                   u11845 5150  
                                 u12830 39F4                                   u13630 3C0E  
                                 u11838 5148                                   u11790 5124  
                                 u14510 0A92                                   u11871 43C6  
                                 u13800 3DA2                                   u11960 444E  
                                 u11785 5336                                   u13545 3B14  
                                 u12850 3A44                                   u11786 5338  
                                 u11778 5320                                   u13810 3DAE  
                                 u13547 3B16                                   u12940 2C66  
                                 u14620 0CAA                                   u12870 3A72  
                                 u13816 3DB0                                   u14640 0CE6  
                                 u13585 3B5A                                   u12890 3AA0  
                                 u12970 2CFE                                   u15507 538A  
                                 u13587 3B5C                                   u13940 31BA  
                                 u14740 0E22                                   u14660 0D22  
                                 u15517 5B42                                   u15437 5114  
                                 u15527 551C                                   u15447 4F2C  
                                 u15457 5A6C                                   u15467 5884  
                                 u15477 5898                                   u15487 535A  
                                 u15497 5372                         __end_of___lwdiv 56AE  
                       __end_of___lwmod 5822                                   i2l942 51F4  
                                 i2l951 51EC                                   i2l943 519C  
                                 i2l945 51BC                                   i2l954 5212  
                                 i2l948 5202                                   i2l949 51C2  
                                 _RCREG 000FAE                                   _TMR0H 000FD7  
                                 _TMR0L 000FD6                                   _SPBRG 000FAF  
                         __CFG_USBDIV$1 000000                         __end_of__doprnt 2BB6  
               __size_of_Lcd_Set_Cursor 00B4                                   _TXREG 000FAD  
                       _writeEEPROM_ext 5822                           __CFG_PWRT$OFF 000000  
                       __end_of_btPress 5BD0                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                           __BF_i_count 0040                           __CFG_WRT3$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_FCMEN$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                      __size_of_UART_Init 001C  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                         __end_of_readADC 5186  
                        __CFG_EBTRB$OFF 000000                                   _delay 5A62  
                                 _blink 5944                                   __temp 0121  
                                 _clima 00F5                                   __umid 0100  
                       __end_of_dpowers 786F                                   _line1 0191  
                                 _line2 017C                                   _line3 0167  
                                 _line4 0152                             __BF_current 003F  
                       __end_of_isdigit 5B96                                   _senha 01BA  
                         ___ftpack@sign 0064                _contador_fase_automatica 02D8  
                                 _timer 3F38                                   _putch 5C12  
                                 main@i 00F2                       __end_of_I2C_Start 5C66  
                        __pbitbssCOMRAM 02D8                       __end_of_I2C_Write 5C44  
                                 pclath 000FFA                   __end_of_setRangeValor 5050  
                                 tablat 000FF5                                   plusw1 000FE3  
                 setRangeValor@_var_ajt 0065                                   plusw2 000FDB  
                                 status 000FD8                 __end_ofi2_setRangeValor 5220  
      __end_of_setKeyStartReceiveSerial 5596                                   wtemp6 0060  
                       __end_of_sprintf 57DE                          setUmidade@_umd 0079  
                       __end_of_strncmp 4982                          __CFG_ICPRT$OFF 000000  
                      atualizaLCD@line1 0068                        atualizaLCD@line2 006A  
                      atualizaLCD@line3 006C                        atualizaLCD@line4 006E  
                 i2writeEEPROM_ext@data 0004                          __CFG_PBADEN$ON 000000  
                      __end_of_Lcd_Init 53C4                        __end_of_Lcd_Port 5A06  
                      __end_ofi2_strlen 5752                     __size_ofi2_I2C_Read 002E  
                   __size_ofi2_I2C_Wait 0012                         __initialization 5050  
                   __size_ofi2_I2C_Stop 0008                            __end_of_main 1624  
                      getStringJSON@key 0093                        getStringJSON@res 0099  
                      getStringJSON@ret 0095                        _ajuste_parametro 0044  
                                ??_main 00E1                           ___fttol@sign1 009F  
                          i2I2C_Write@d 0002                     _enviaDadosWifi$2516 00D4  
                    __size_of_Lcd_Clear 000E                           __activetblptr 000002  
                        _enviaDadosWifi 2BB6                              i2strlen@cp 0005  
                             I2C_Read@a 0061                      readEEPROM_ext@data 0066  
                                ?_delay 0060                                  ?_blink 0060  
                                _ADCON0 000FC2                                  _ADCON1 000FC1  
                                _ADCON2 000FC0                                  STR_100 7EDE  
                                STR_101 7EE9                                  STR_102 7F9F  
                                STR_110 7DDE                                  STR_103 7EF4  
                                STR_111 7D52                                  STR_112 7D64  
                                STR_120 7D08                                  STR_104 7C92  
                                STR_113 7D76                                  STR_121 7D1B  
                                STR_105 7C7E                                  STR_130 7F0F  
                                STR_114 7F26                                  STR_122 7CF5  
                                STR_106 7CA6                                  _ADRESH 000FC4  
                                STR_131 7FC6                                  STR_115 7F65  
                                STR_107 7DAB                                  STR_123 7D88  
                                STR_132 7F0F                                  STR_124 7FB4  
                                STR_116 7F6D                                  STR_108 7DBC  
                                STR_133 7FE2                                  STR_125 7FC6  
                                STR_117 7FA6                                  STR_109 7DCD  
                                STR_134 7F75                                  STR_118 7F42  
                                _ADRESL 000FC3                                  STR_127 7F7C  
                                STR_119 7C6A                                  STR_128 7FC6  
                                STR_129 7B82                                  ?_timer 0001  
                      __end_of_acaoFlap 5340                                  ?_putch 0001  
                      __end_of___ftpack 4F06         ??_alterarDadosConexaoConfigWifi 00E0  
                             ??i2_delay 0003                                  _INT2IF 007F81  
                                i2l1100 3F5C                                  i2l1110 3FAE  
                                i2l1102 3F6C                                  i2l1112 3FB6  
                                i2l1104 3F74                                  i2l1113 3FC4  
                                i2l1122 4018                                  i2l1114 3FD2  
                                i2l1106 3F90                                  i2l1131 4104  
                                i2l1140 41DE                                  i2l1124 4026  
                                i2l1108 3F9E                                  i2l1117 3FF0  
                                i2l1142 41E2                                  i2l1134 4164  
                                i2l1126 403E                                  i2l1119 3FF8  
                                i2l1128 404C                                  i2l1137 41A2  
                                i2l1261 4C82                                  i2l1262 4C90  
                                i2l1263 4C9A                                  i2l1610 55FE  
                                i2l1098 3F4E                                  i2l2270 570E  
                                i2l2271 570A                                  i2l1607 55C0  
                                i2l1477 5B62                                  i2l1478 5B52  
                                _INTCON 000FF2                                  i2l6534 5B52  
                                i2l8830 3F4E                                  i2l8844 3F90  
                                i2l8882 4018                                  i2l8888 403E  
                      __end_of___lwtoft 5B2A                               ??_Lcd_Cmd 0061  
                                _TIMER0 0008                                  _TMR0IF 007F92  
               __size_of_Lcd_Write_Char 003E                                  _SSPADD 000FC8  
                                _SSPBUF 000FC9                            atualizaLCD@i 0070  
                        __CFG_XINST$OFF 000000                       __end_of_UART_Init 5BEC  
                          readADC@canal 0068                                  ___ftge 5220  
                        _readEEPROM_ext 56AE                                  ___wmul 5A8C  
                             ??___ftadd 0081                          __CFG_STVREN$ON 000000  
                      __end_of_controle 3F38                               ??___ftdiv 008D  
                                _h_flap 0051                               ??___lldiv 0068  
                             ??___ftmul 0072                               ??___fttol 009A  
                                _blinkk 02DA                               ??___lwdiv 0064  
                             ??___lwmod 006B                 __end_of_writeEEPROM_ext 5864  
                             ??__doprnt 0072                                  _memset 59A6  
                                delay@x 0060                                  _buzzer 00FC  
                                clear_0 50B2                                  clear_1 50BE  
                                clear_2 50CA                                  clear_3 50D8  
                                _setLed 5B96                                  blink@i 0064  
                             ??_btPress 0060            _t_controle_religar_ventoinha 014E  
                          __doprnt@flag 0077                                  _printf 58A2  
                          __doprnt@prec 0076                        _findBufferSerial 5AB4  
                __end_of_enviaDadosWifi 30E6                                  _strchr 5448  
                                _strlen 5604                                  _strstr 4CE6  
                 ___ftmul@f3_as_product 0076                               ??_readADC 0062  
                          __pdataCOMRAM 005C                               ??_isdigit 0060  
                             ?_I2C_Read 0061                               ?_I2C_Wait 0001  
                             ?_I2C_Stop 0001                            acaoFlap@acao 0067  
                          __mediumconst 782C                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                                putch@c 0060                               ??_sprintf 008B  
                  __size_of_atualizaLCD 00C6                         setUmidade@_clim 0078  
                             ??_strncmp 006C                         Lcd_Set_Cursor@a 0064  
                       Lcd_Set_Cursor@b 0063                         Lcd_Set_Cursor@y 0066  
                       Lcd_Set_Cursor@z 0065                              __acao_flap 003C  
                            __accesstop 0060                 __end_of__initialization 50DE  
                            ___ftadd@f1 007B                              ___ftadd@f2 007E  
                      ?i2_setRangeValor 0006                              ___ftge@ff1 0060  
                            ___ftge@ff2 0063                    enviaDadosWifi@i_1393 00D9  
          __size_of_criaCaracteresCGRAM 00AC                       __end_of_Lcd_Clear 5C2E  
                      _h_modo_seguranca 00F7                           ___rparam_used 000001  
                            ___ftdiv@f1 0087                              ___ftdiv@f2 008A  
                            ___ftdiv@f3 0091                    getStringJSON@isValid 00DA  
                __end_of_readEEPROM_ext 5700                 _h_subir_temp_automatica 004F  
                       _getSensors$1514 00AB                         _getSensors$1516 00A5  
                            ___ftmul@f1 006C                         _getSensors$1518 00A8  
                            ___ftmul@f2 006F                         _getSensors$2517 00B0  
                  __size_ofi2_I2C_Start 0008                              ___fttol@f1 0096  
                  __size_ofi2_I2C_Write 000A                          __pcstackCOMRAM 0001  
                     getStringJSON@F290 022D                       getStringJSON@F292 0219  
                          __pidataBANK0 5C79                            __pidataBANK1 5C2E  
                     getStringJSON@F288 0200                           __end_of_delay 5A8C  
                         __end_of_blink 5976                           __end_of_timer 41EE  
                         __end_of_putch 5C20                      __size_of_faseAtual 013E  
                __size_of_tabelaUmidade 0FD2                       getStringJSON@find 00DD  
                     getStringJSON@buff 0091                       getStringJSON@attr 00C6  
                            ___lwtoft@c 0069                         ?_enviaDadosWifi 0001  
     __size_of_setKeyStartReceiveSerial 006E               ?_setKeyStartReceiveSerial 0091  
                  __size_of_readButtons 0028                          _Lcd_Set_Cursor 4DA2  
                          ??i2_I2C_Read 0004                              ??_I2C_Read 0063  
                          ??i2_I2C_Wait 0001                              ??_I2C_Wait 0060  
                          ??i2_I2C_Stop 0002                              ??_I2C_Stop 0061  
                 receiveByteSerial@byte 0009                               ?_Lcd_Init 0001  
                               ??_delay 0062                               ?_Lcd_Port 0001  
                            _h_abafador 0052                               ?i2_strlen 0001  
                            __doprnt@ap 0070                                 ??_blink 0064  
                            __doprnt@cp 007C                              __doprnt@pb 006C  
                 writeEEPROM_ext@adress 0064           setKeyStartReceiveSerial@start 0091  
                               ??_timer 0011                                 ??_putch 0060  
               i2setRangeValor@_var_ajt 0006                              __pbssBANK0 00F3  
                            __pbssBANK1 0100                              __pbssBANK2 0200  
                               ?_TIMER0 0001   __end_of_alterarDadosConexaoConfigWifi 3B06  
__size_of_alterarDadosConexaoConfigWifi 0508           _alterarDadosConexaoConfigWifi 35FE  
                   writeEEPROM_ext@data 0063                         ?_readEEPROM_ext 0001  
                               TIMER0@c 0030                      __end_ofi2_I2C_Read 5A62  
                          I2C_Read@temp 0063                      __end_ofi2_I2C_Wait 5C12  
                               ?___ftge 0060                      __end_ofi2_I2C_Stop 5C6E  
                            _climaAtual 5752                                 ?___wmul 0060  
                               ?_memset 0060                        ?_writeEEPROM_ext 0063  
                               ?_setLed 0060               __size_of_Lcd_Write_String 002E  
                             ?_acaoFlap 0062                               ?___ftpack 0060  
                __end_of_Lcd_Set_Cursor 4E56                              I2C_Write@d 0061  
                               ?_printf 0081                              _getSensors 30E6  
                               ?_strchr 0060                                 ?_strlen 0060  
                             ?___lwtoft 0069                                 ?_strstr 006F  
                         ??_I2C_Restart 0061                         __CFG_WDTPS$1024 000000  
                            ??_Lcd_Init 0063                              ??_Lcd_Port 0060  
                            ??i2_strlen 0003                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               i2_delay 5B50                               ?_controle 0001  
                         _tabelaUmidade 1624                         __CFG_VREGEN$OFF 000000  
                     __end_of_faseAtual 468C                          _Lcd_Write_Char 5864  
                acaoFlap@tempo_aguardar 0064                                 _Lcd_Cmd 5B2A  
                       __size_of_TIMER0 4CDE                               _I2C_Start 5C5E  
                        getIntJSON@F274 0142                          getIntJSON@F276 0255  
                        getIntJSON@F278 0241                               _I2C_Write 5C3A  
                               __Hparam 0000                                 __Lparam 0000  
                 __end_of_getStringJSON 43A0                         __size_of___ftge 0092  
                               ___ftadd 43A0                                 ___ftdiv 4A78  
                               ___lldiv 53C4                         __size_of___wmul 0028  
                               ___ftmul 4982                                 ___fttol 4792  
                               ___lwdiv 565A                                 ___lwmod 57DE  
                  i2setRangeValor@_acao 000E                                 __doprnt 25F6  
                               __pcinit 5050                              ??_acaoFlap 0066  
                            ??___ftpack 0065                         __size_of_memset 0030  
                               _btPress 5BB4                                 __ramtop 0800  
                       ?_Lcd_Set_Cursor 0063                         __size_of_setLed 001E  
                               _bt_flag 0042                                 __ptext0 0012  
                               __ptext1 5976                                 __ptext2 468C  
                               __ptext3 1624                                 __ptext4 4FB2  
                               __ptext5 56AE                                 __ptext6 5C4E  
                               __ptext7 5912                                 __ptext8 30E6  
                               __ptext9 50EC                 _wifi_habilita_alteracao 004E  
                        _t_wifi_restart 003E                         __size_of_printf 0038  
                            ??___lwtoft 006C                         __size_of_strchr 0070  
                               _readADC 50EC                         __size_of_strlen 0056  
                       __size_of_strstr 00BC                                 _dpowers 7865  
                               _isdigit 5B74               _t_controle_modo_seguranca 014C  
              __size_of_I2C_Master_Init 0070                                 _tempajt 00F4  
                         _t_flap_ligado 0055                                 _umidajt 00F3  
                               _sprintf 579A                           __doprnt@width 007E  
                   __end_of_I2C_Restart 5C56                  __end_of_Lcd_Write_Char 58A2  
                               _strncmp 488A                          __pintcode_body 4C26  
                  end_of_initialization 50DE                          ?_tabelaUmidade 0060  
                            ??_controle 0068                                 memset@c 0062  
                               memset@n 0064                                 memset@p 0066  
                         __Lmediumconst 782C                                 int_func 4C26  
              __end_of_findBufferSerial 5ADC                              _timer$1410 0018  
                            _timer$1411 001A                              _timer$1412 001C  
                            _setUmidade 468C                              blink@start 0062  
                             i2u1320_45 3FCE                               i2u1235_40 5A54  
                             i2u1236_45 5A56                               i2u1237_40 572E  
                            ?_I2C_Start 0001                               i2u1237_47 5724  
                             i2u1319_40 3FCC                              ?_I2C_Write 0061  
                             i2u1553_47 5B58                            _bufferSerial 0269  
                       ___lldiv@divisor 0064                         ___lldiv@counter 006C  
                             _RCSTAbits 000FAB                                 printf@f 0081  
              criaCaracteresCGRAM@F3900 782D                        I2C_Master_Init@c 006D  
                               postdec1 000FE5                                 postdec2 000FDD  
                           ?_climaAtual 0060          ?_alterarDadosConexaoConfigWifi 0001  
                               postinc0 000FEE                                 postinc1 000FE6  
                               postinc2 000FDE                               Lcd_Port@a 0060  
               setRangeValor@end_eeprom 0069                              _wifi_SENHA 004B  
                               strlen@s 0060                               _UART_Init 5BD0  
                      setUmidade@_clima 006C                               _PORTAbits 000F80  
                __size_of_setRangeValor 009E                               _PORTBbits 000F81  
                           ?_getSensors 0001                               _PORTCbits 000F82  
                             _PORTDbits 000F83                               _PORTEbits 000F84  
                            _portServer 01E2                     _criaCaracteresCGRAM 4F06  
                            _updateLeds 5976                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                             _TRISDbits 000F95                               _TRISEbits 000F96  
               i2writeEEPROM_ext@adress 0005                       __size_of_I2C_Read 0032  
                     tabelaUmidade@_umd 0067                       tabelaUmidade@_tmp 0060  
                     __size_of_I2C_Wait 0014                       __size_of_I2C_Stop 0008  
                            _trava_fase 00FB                      __BF_enable_receive 0041  
                      _t_flap_intervalo 0054                         ?_Lcd_Write_Char 0001  
                     Lcd_Write_String@a 0064                       Lcd_Write_String@i 0066  
                  _t_controle_fim_fases 003A                             ___ftdiv@exp 0094  
                  ?_criaCaracteresCGRAM 0001                               _TXSTAbits 000FAC  
                        __end_of_TIMER0 4CE6                               __BF_start 01D8  
                  criaCaracteresCGRAM@i 00A3                    criaCaracteresCGRAM@j 00A2  
                  criaCaracteresCGRAM@k 00A1               tabelaUmidade@_tipo_sensor 0064  
                 getStringJSON@expected 00B2                             ___ftmul@exp 0075  
                             _Lcd_Clear 5C20                        ??_enviaDadosWifi 00C3  
                         _t_leitura_adc 0036                          __end_of___ftge 52B2  
                        i2I2C_Read@temp 0004                          __end_of___wmul 5AB4  
                          _md_seguranca 02D9                        _Lcd_Write_String 5A06  
                            ?_UART_Init 0001                           __pidataCOMRAM 5C76  
                        __end_of_memset 59D6                          __end_of_setLed 5BB4  
                        __end_of_printf 58DA                             _I2C_Restart 5C4E  
                        __end_of_strchr 54B8                         _setUmidade$1300 0075  
                        __end_of_strlen 565A                         _setUmidade$1297 006F  
                       _setUmidade$1298 0071                         _setUmidade$1299 0073  
                        __end_of_strstr 4DA2                           ??_atualizaLCD 0070  
                   start_initialization 5050              _t_controle_temp_automatica 0037  
                           i2I2C_Read@a 0002                         ??_tabelaUmidade 0065  
                   __size_of_climaAtual 0048                       __size_of_Lcd_Init 0084  
                     __size_of_Lcd_Port 0030                       __size_ofi2_strlen 0052  
                             i2strlen@s 0001                        ??_readEEPROM_ext 0065  
                     ??_I2C_Master_Init 0071                                ??_TIMER0 001E  
                         _setRangeValor 4FB2                   ??_criaCaracteresCGRAM 0064  
                           ?_setUmidade 0068                           ??i2_I2C_Start 0002  
                           ??_I2C_Start 0061                           ??i2_I2C_Write 0004  
                   __size_of_getSensors 0518                             ??_I2C_Write 0063  
             _t_controle_religar_buzzer 0031                              ?_Lcd_Clear 0001  
                              ??___ftge 0066                                ??___wmul 0064  
              __size_ofi2_setRangeValor 009A                             __doprnt@len 007A  
                           __doprnt@val 0078                             __pdataBANK0 00FD  
                           __pdataBANK1 01E6                        __CFG_LPT1OSC$OFF 000000  
                         ??_readButtons 0006                         Lcd_Write_Char@a 0063  
                              ??_memset 0066                         Lcd_Write_Char@y 0062  
                              ??_setLed 0061                                ??_printf 00BD  
                     faseAtual@_tempajt 0062                                ??_strchr 0064  
                              ??_strlen 0062                                ??_strstr 0073  
                     __size_of_acaoFlap 008E                       __size_of___ftpack 00B0  
                           __pbssCOMRAM 0031                             ?_updateLeds 0001  
                     __size_of___lwtoft 0026                           __pcstackBANK0 0060  
                     _t_temp_automatica 00F9                            _isdigit$2055 0061  
                      _t_buzzer_religar 00FF                                ?i2_delay 0001  
                        ?_setRangeValor 0065                     __end_of_atualizaLCD 4C26  
                _senha_desbloqueio_func 004D                                ?_Lcd_Cmd 0001  
                             __doprnt@c 0080                               __doprnt@f 006E  
                            setLed@acao 0060                       __size_of_controle 0432  
              _criaCaracteresCGRAM$1229 009F                               _faseAtual 454E  
                             _main$1630 00E8                               _main$1642 00EC  
                             _main$1626 00E4                               _main$1635 00EA  
                             _main$1627 00E6                               _main$1652 00F0  
                             _main$2518 00E2                               _main$1647 00EE  
                      ___lwdiv@dividend 0060                        ??_Lcd_Set_Cursor 0064  
                             __pintcode 0008                           __pmediumconst 782C  
                              ?___ftadd 007B                                ?___ftdiv 0087  
                   __end_ofi2_I2C_Start 5C76                                ?___lldiv 0060  
                              ?___ftmul 006C                                ?___fttol 0096  
                   __end_ofi2_I2C_Write 5C4E                                ?___lwdiv 0060  
                              ?___lwmod 0067                _setKeyStartReceiveSerial 5528  
                              ?__doprnt 006C                     _tipo_sensor_umidade 00FA  
                           ??_UART_Init 0060                    readEEPROM_ext@adress 0065  
                              ?_btPress 0001                                ?_readADC 0060  
                             _media_adc 0035                     __size_of_setUmidade 0106  
                              ?_isdigit 0001                                _I2C_Read 5912  
                              _I2C_Wait 5BEC                                _I2C_Stop 5C56  
                   __end_of_readButtons 5B04                   acaoFlap@tempo_ativado 0062  
              __size_of_writeEEPROM_ext 0042                        ___lwdiv@quotient 0064  
                        __size_of_delay 002A                          __size_of_blink 0032  
                   i2setRangeValor@_aux 000F                     i2setRangeValor@_max 0009  
                   i2setRangeValor@_min 0008                                ?_sprintf 0081  
                              ?_strncmp 0066                          __size_of_timer 02B6  
                        __size_of_putch 000E                          ___wmul@product 0064  
                             btPress@bt 0060                                _LATAbits 000F89  
                              _LATBbits 000F8A                                _LATCbits 000F8B  
                              _LATDbits 000F8C                                _LATEbits 000F8D  
                     ?_findBufferSerial 0074                               _opcaomenu 0045  
                              _PIE1bits 000F9D                               blink@line 0060  
                       enviaDadosWifi@i 00D8                         enviaDadosWifi@j 00D6  
                           _h_venotinha 0053                              ?_faseAtual 0060  
                              Lcd_Cmd@a 0062                                _PIR1bits 000F9E  
                    ??_findBufferSerial 0076                     __size_of_updateLeds 0030  
                           ??_Lcd_Clear 0063                            ??_climaAtual 0062  
                          ??_getSensors 00A5                              _ADCON0bits 000FC2  
                     ___wmul@multiplier 0060                       ??i2_setRangeValor 000B  
                      ??_Lcd_Write_Char 0061                                i2delay@x 0001  
                           _atualizaLCD 4B60                                _Lcd_Init 5340  
                     i2_writeEEPROM_ext 58DA                                _Lcd_Port 59D6  
                              i2_strlen 5700                         ??_setRangeValor 006A  
        alterarDadosConexaoConfigWifi@i 00E0                             _INTCON2bits 000FF1  
                           _INTCON3bits 000FF0                  __size_of_getStringJSON 01B2  
                             copy_data0 5064                      ?i2_writeEEPROM_ext 0004  
                    __end_of_climaAtual 579A                            setUmidade@tp 006E  
              __end_of_Lcd_Write_String 5A34                         _f_falta_energia 005E  
                      __size_ofi2_delay 0024                        __size_of_Lcd_Cmd 0026  
                           i2_I2C_Start 5C6E                             i2_I2C_Write 5C44  
                    __end_of_getSensors 35FE                     ??i2_writeEEPROM_ext 0005  
                              __Hrparam 0000                                __Lrparam 0000  
                   findBufferSerial@key 0074                        __size_of___ftadd 01AE  
                      __size_of___ftdiv 00E8                        __size_of___lldiv 0084  
                      __size_of___ftmul 00F6                        __size_of___fttol 00F8  
                      __size_of___lwdiv 0054                        __size_of___lwmod 0044  
                           _readButtons 5ADC                                _acaoFlap 52B2  
                              ___ftpack 4E56                        __size_of__doprnt 05C0  
                        readADC@digital 0066                     Lcd_Write_Char@tempp 0061  
                      __size_of_btPress 001C                                ___lwtoft 5B04  
                          ?_I2C_Restart 0001                                _base_sec 004A  
                        getSensors@auxx 00AD                         _I2C_Master_Init 54B8  
                      __size_of_readADC 009A               __end_ofi2_writeEEPROM_ext 5912  
                             setLed@led 0061                        __size_of_isdigit 0022  
                       ___lwdiv@divisor 0062                         ___lwdiv@counter 0066  
                              _h_buzzer 0050                                __ptext10 5B04  
                              __ptext11 4792                                __ptext20 3B06  
                              __ptext12 4982                                __ptext21 52B2  
                              __ptext13 5220                                __ptext30 5C56  
                              __ptext22 5B96                                __ptext14 4A78  
                              __ptext31 5C5E                                __ptext23 5752  
                              __ptext15 43A0                                __ptext40 5B74  
                              __ptext32 5BEC                                __ptext24 5BB4  
                              __ptext16 4E56                                __ptext41 5A8C  
                              __ptext33 5528                                __ptext25 5944  
                              __ptext17 454E                                __ptext50 5A06  
                              __ptext42 57DE                                __ptext34 59A6  
                              __ptext26 35FE                                __ptext18 2BB6  
                              __ptext51 5864                                __ptext43 565A  
                              __ptext35 58A2                                __ptext27 5822  
                              __ptext19 4F06                                __ptext52 4DA2  
                              __ptext44 5AB4                                __ptext36 41EE  
                              __ptext28 5A62                                __ptext61 3F38  
                              __ptext53 5BD0                                __ptext45 4CE6  
                              __ptext37 579A                                __ptext29 5C3A  
                              __ptext70 5C6E                                __ptext62 5186  
                              __ptext54 5340                                __ptext46 488A  
                              __ptext38 25F6                                __ptext71 5A34  
                              __ptext63 58DA                                __ptext55 5C20  
                              __ptext47 5604                                __ptext39 5C12  
                              __ptext72 5C00                                __ptext64 5B50  
                              __ptext56 5B2A                                __ptext48 5448  
                              __ptext73 0000                                __ptext65 5596  
                              __ptext57 59D6                                __ptext49 4B60  
                              __ptext66 5700                                __ptext58 54B8  
                              __ptext67 5ADC                                __ptext59 53C4  
                              __ptext68 5C44                                __ptext69 5C66  
                              _lcd_rfsh 0151                                _ipServer 01A6  
             i2setRangeValor@end_eeprom 000A                        __size_of_sprintf 0044  
                _f_buzzer_falta_energia 003B                        __size_of_strncmp 00F8  
                              _controle 3B06                       ??_writeEEPROM_ext 0064  
                              _fornalha 005A                           __size_of_main 1612  
                          ??_setUmidade 006E                             _t_fim_fase1 0058  
                           _t_fim_fase2 0057                             _t_fim_fase3 0056  
                            strncmp@len 006A                             ??_faseAtual 0064  
                              blink@end 0063                          _wifi_conectado 0049  
                              _wifi_MAC 01E6                             faseAtual@tp 0065  
                              int$flags 005F                           _getStringJSON 41EE  
                     _receiveByteSerial 5596                   __CFG_CPUDIV$OSC1_PLL2 000000  
                    ?_receiveByteSerial 0001          _t_religar_ventoinha_automatica 00F8  
                            _INTCONbits 000FF2                              i2_I2C_Read 5A34  
                            i2_I2C_Wait 5C00                              i2_I2C_Stop 5C66  
                          ??_updateLeds 0063                      __end_of_setUmidade 4792  
                       faseAtual@_fasee 0064                                isdigit@c 0062  
                              memset@p1 0060                     ??_receiveByteSerial 0007  
           __end_of_criaCaracteresCGRAM 4FB2                       enviaDadosWifi@AUX 00C5  
                     enviaDadosWifi@men 00D7                   __end_of_tabelaUmidade 25F6  
                              intlevel2 0000                               sprintf@ap 008B  
      __end_ofcriaCaracteresCGRAM@F3900 7865                               sprintf@pb 008D  
                         getSensors@aux 00B4                               sprintf@wh 0081  
                       faseAtual@tmpajt 0066                               strchr@chr 0062  
                      ___lwmod@dividend 0067                               strchr@ptr 0060  
                      ___lldiv@dividend 0060                             climaAtual@c 0062  
            ??_setKeyStartReceiveSerial 0093                               strncmp@s1 0066  
                             strncmp@s2 0068            criaCaracteresCGRAM@character 0067  
                        ?_getStringJSON 0091               __end_of_receiveByteSerial 5604  
                    __end_of_updateLeds 59A6                                printf@ap 00BD  
                              printf@pb 00BF                       _t_controle_buzzer 0039  
               __end_of_I2C_Master_Init 5528                      Lcd_Set_Cursor@temp 0067  
                    setUmidade@_tempajt 006A                          faseAtual@_fase 0060  
                              sprintf@f 0083                        ___lldiv@quotient 0068  
                       ___lwmod@divisor 0069              __size_ofi2_writeEEPROM_ext 0038  
                              strlen@cp 0064                         ___lwmod@counter 006B  
               __size_of_enviaDadosWifi 0530                        _t_controle_blink 0038  
                              strstr@s1 006F                                strstr@s2 0071  
                     setUmidade@_umdajt 0068                       setUmidade@_tmpajt 0077  
                           getSensors@i 00B3                         _t_controle_flap 0033  
